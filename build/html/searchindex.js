Search.setIndex({"docnames": ["_autosummary/seldonian", "_autosummary/seldonian.RL", "_autosummary/seldonian.RL.Agents", "_autosummary/seldonian.RL.Agents.Agent", "_autosummary/seldonian.RL.Agents.Agent.Agent", "_autosummary/seldonian.RL.Agents.Bases", "_autosummary/seldonian.RL.Agents.Bases.Fourier", "_autosummary/seldonian.RL.Agents.Bases.Fourier.Fourier", "_autosummary/seldonian.RL.Agents.Discrete_Random_Agent", "_autosummary/seldonian.RL.Agents.Discrete_Random_Agent.Discrete_Random_Agent", "_autosummary/seldonian.RL.Agents.Function_Approximators", "_autosummary/seldonian.RL.Agents.Function_Approximators.Function_Approximator", "_autosummary/seldonian.RL.Agents.Function_Approximators.Function_Approximator.Function_Approximator", "_autosummary/seldonian.RL.Agents.Function_Approximators.Linear_FA", "_autosummary/seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_FA", "_autosummary/seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_state_action_value_FA", "_autosummary/seldonian.RL.Agents.Function_Approximators.Table", "_autosummary/seldonian.RL.Agents.Function_Approximators.Table.Q_Table", "_autosummary/seldonian.RL.Agents.Function_Approximators.Table.Table", "_autosummary/seldonian.RL.Agents.Function_Approximators.Table.construct_Q_Table_From_Env_Description", "_autosummary/seldonian.RL.Agents.Parameterized_non_learning_softmax_agent", "_autosummary/seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.Parameterized_non_learning_softmax_agent", "_autosummary/seldonian.RL.Agents.Policies", "_autosummary/seldonian.RL.Agents.Policies.Policy", "_autosummary/seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy", "_autosummary/seldonian.RL.Agents.Policies.Policy.Policy", "_autosummary/seldonian.RL.Agents.Policies.Softmax", "_autosummary/seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax", "_autosummary/seldonian.RL.Agents.Policies.Softmax.Softmax", "_autosummary/seldonian.RL.Agents.keyboard_gridworld", "_autosummary/seldonian.RL.Agents.keyboard_gridworld.Keyboard_gridworld", "_autosummary/seldonian.RL.Agents.mountain_car_rough_solution", "_autosummary/seldonian.RL.Agents.mountain_car_rough_solution.Mountain_car_rough_solution", "_autosummary/seldonian.RL.Env_Description", "_autosummary/seldonian.RL.Env_Description.Env_Description", "_autosummary/seldonian.RL.Env_Description.Env_Description.Env_Description", "_autosummary/seldonian.RL.Env_Description.Env_Description.check_space_type", "_autosummary/seldonian.RL.Env_Description.Spaces", "_autosummary/seldonian.RL.Env_Description.Spaces.Continuous_Space", "_autosummary/seldonian.RL.Env_Description.Spaces.Discrete_Space", "_autosummary/seldonian.RL.RL_generate_dataset_and_spec_file", "_autosummary/seldonian.RL.RL_generate_dataset_and_spec_file.get_constraint_string", "_autosummary/seldonian.RL.RL_generate_dataset_and_spec_file.get_env_kwargs", "_autosummary/seldonian.RL.RL_generate_dataset_and_spec_file.get_metadata_path", "_autosummary/seldonian.RL.RL_generate_dataset_and_spec_file.main", "_autosummary/seldonian.RL.RL_generate_dataset_and_spec_file.print_return_info", "_autosummary/seldonian.RL.RL_model", "_autosummary/seldonian.RL.RL_model.RL_model", "_autosummary/seldonian.RL.RL_runner", "_autosummary/seldonian.RL.RL_runner.create_agent", "_autosummary/seldonian.RL.RL_runner.create_env", "_autosummary/seldonian.RL.RL_runner.run_all_trials", "_autosummary/seldonian.RL.RL_runner.run_episode", "_autosummary/seldonian.RL.RL_runner.run_episode_from_dict", "_autosummary/seldonian.RL.RL_runner.run_trial", "_autosummary/seldonian.RL.RL_runner.run_trial_given_agent_and_env", "_autosummary/seldonian.RL.environments", "_autosummary/seldonian.RL.environments.Environment", "_autosummary/seldonian.RL.environments.Environment.Environment", "_autosummary/seldonian.RL.environments.gridworld", "_autosummary/seldonian.RL.environments.gridworld.Gridworld", "_autosummary/seldonian.RL.environments.mountaincar", "_autosummary/seldonian.RL.environments.mountaincar.Mountaincar", "_autosummary/seldonian.RL.environments.n_step_mountaincar", "_autosummary/seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar", "_autosummary/seldonian.RL.environments.simglucose_env", "_autosummary/seldonian.RL.environments.simglucose_env.Simglucose", "_autosummary/seldonian.RL.generate_mountaincar_episodes", "_autosummary/seldonian.RL.generate_mountaincar_episodes.main", "_autosummary/seldonian.RL.generate_simglucose_episodes", "_autosummary/seldonian.RL.generate_simglucose_episodes.get_max_obs", "_autosummary/seldonian.RL.generate_simglucose_episodes.main", "_autosummary/seldonian.RL.hyperparams_and_settings", "_autosummary/seldonian.RL.hyperparams_and_settings.define_hyperparameter_and_setting_dict", "_autosummary/seldonian.candidate_selection", "_autosummary/seldonian.candidate_selection.candidate_selection", "_autosummary/seldonian.candidate_selection.candidate_selection.CandidateSelection", "_autosummary/seldonian.dataset", "_autosummary/seldonian.dataset.DataSet", "_autosummary/seldonian.dataset.DataSetLoader", "_autosummary/seldonian.dataset.Episode", "_autosummary/seldonian.dataset.RLDataSet", "_autosummary/seldonian.dataset.SupervisedDataSet", "_autosummary/seldonian.models", "_autosummary/seldonian.models.models", "_autosummary/seldonian.models.models.BoundedLinearRegressionModel", "_autosummary/seldonian.models.models.ClassificationModel", "_autosummary/seldonian.models.models.DummyClassifierModel", "_autosummary/seldonian.models.models.LinearRegressionModel", "_autosummary/seldonian.models.models.LogisticRegressionModel", "_autosummary/seldonian.models.models.RandomClassifierModel", "_autosummary/seldonian.models.models.RegressionModel", "_autosummary/seldonian.models.models.SeldonianModel", "_autosummary/seldonian.models.models.SupervisedModel", "_autosummary/seldonian.models.objectives", "_autosummary/seldonian.models.objectives.False_Negative_Rate", "_autosummary/seldonian.models.objectives.False_Positive_Rate", "_autosummary/seldonian.models.objectives.IS_estimate", "_autosummary/seldonian.models.objectives.Mean_Error", "_autosummary/seldonian.models.objectives.Mean_Squared_Error", "_autosummary/seldonian.models.objectives.Negative_Rate", "_autosummary/seldonian.models.objectives.Positive_Rate", "_autosummary/seldonian.models.objectives.True_Negative_Rate", "_autosummary/seldonian.models.objectives.True_Positive_Rate", "_autosummary/seldonian.models.objectives.evaluate_statistic", "_autosummary/seldonian.models.objectives.gradient_Bounded_Squared_Error", "_autosummary/seldonian.models.objectives.gradient_Mean_Squared_Error", "_autosummary/seldonian.models.objectives.gradient_logistic_loss", "_autosummary/seldonian.models.objectives.logistic_loss", "_autosummary/seldonian.models.objectives.sample_from_statistic", "_autosummary/seldonian.models.objectives.vector_Error", "_autosummary/seldonian.models.objectives.vector_False_Negative_Rate", "_autosummary/seldonian.models.objectives.vector_False_Positive_Rate", "_autosummary/seldonian.models.objectives.vector_IS_estimate", "_autosummary/seldonian.models.objectives.vector_Negative_Rate", "_autosummary/seldonian.models.objectives.vector_Positive_Rate", "_autosummary/seldonian.models.objectives.vector_Squared_Error", "_autosummary/seldonian.models.objectives.vector_True_Negative_Rate", "_autosummary/seldonian.models.objectives.vector_True_Positive_Rate", "_autosummary/seldonian.models.objectives.vector_logistic_loss", "_autosummary/seldonian.optimizers", "_autosummary/seldonian.optimizers.gradient_descent", "_autosummary/seldonian.optimizers.gradient_descent.gradient_descent_adam", "_autosummary/seldonian.optimizers.gradient_descent.setup_gradients", "_autosummary/seldonian.parse_tree", "_autosummary/seldonian.parse_tree.nodes", "_autosummary/seldonian.parse_tree.nodes.BaseNode", "_autosummary/seldonian.parse_tree.nodes.CVaRSQeBaseNode", "_autosummary/seldonian.parse_tree.nodes.ConstantNode", "_autosummary/seldonian.parse_tree.nodes.InternalNode", "_autosummary/seldonian.parse_tree.nodes.MEDCustomBaseNode", "_autosummary/seldonian.parse_tree.nodes.Node", "_autosummary/seldonian.parse_tree.operators", "_autosummary/seldonian.parse_tree.parse_tree", "_autosummary/seldonian.parse_tree.parse_tree.ParseTree", "_autosummary/seldonian.parse_tree.parse_tree.make_parse_trees_from_constraints", "_autosummary/seldonian.safety_test", "_autosummary/seldonian.safety_test.safety_test", "_autosummary/seldonian.safety_test.safety_test.SafetyTest", "_autosummary/seldonian.seldonian_algorithm", "_autosummary/seldonian.seldonian_algorithm.SeldonianAlgorithm", "_autosummary/seldonian.spec", "_autosummary/seldonian.spec.RLSpec", "_autosummary/seldonian.spec.Spec", "_autosummary/seldonian.spec.SupervisedSpec", "_autosummary/seldonian.spec.createRLSpec", "_autosummary/seldonian.spec.createSupervisedSpec", "_autosummary/seldonian.utils", "_autosummary/seldonian.utils.RL_utils", "_autosummary/seldonian.utils.RL_utils.argmax_multi", "_autosummary/seldonian.utils.RL_utils.clamp", "_autosummary/seldonian.utils.RL_utils.error", "_autosummary/seldonian.utils.io_utils", "_autosummary/seldonian.utils.io_utils.dir_path", "_autosummary/seldonian.utils.io_utils.load_json", "_autosummary/seldonian.utils.io_utils.load_pickle", "_autosummary/seldonian.utils.io_utils.load_supervised_metadata", "_autosummary/seldonian.utils.io_utils.save_json", "_autosummary/seldonian.utils.io_utils.save_pickle", "_autosummary/seldonian.utils.plot_utils", "_autosummary/seldonian.utils.plot_utils.plot_gradient_descent", "_autosummary/seldonian.utils.stats_utils", "_autosummary/seldonian.utils.stats_utils.stddev", "_autosummary/seldonian.utils.stats_utils.tinv", "_autosummary/seldonian.utils.stats_utils.weighted_sum_gamma", "_autosummary/seldonian.utils.tutorial_utils", "_autosummary/seldonian.utils.tutorial_utils.generate_clipped_data", "_autosummary/seldonian.utils.tutorial_utils.generate_data", "_autosummary/seldonian.utils.tutorial_utils.make_synthetic_regression_dataset", "_autosummary/seldonian.warnings", "_autosummary/seldonian.warnings.custom_warnings", "_autosummary/seldonian.warnings.custom_warnings.custom_formatwarning", "api", "getting_started", "index", "overview"], "filenames": ["_autosummary/seldonian.rst", "_autosummary/seldonian.RL.rst", "_autosummary/seldonian.RL.Agents.rst", "_autosummary/seldonian.RL.Agents.Agent.rst", "_autosummary/seldonian.RL.Agents.Agent.Agent.rst", "_autosummary/seldonian.RL.Agents.Bases.rst", "_autosummary/seldonian.RL.Agents.Bases.Fourier.rst", "_autosummary/seldonian.RL.Agents.Bases.Fourier.Fourier.rst", "_autosummary/seldonian.RL.Agents.Discrete_Random_Agent.rst", "_autosummary/seldonian.RL.Agents.Discrete_Random_Agent.Discrete_Random_Agent.rst", "_autosummary/seldonian.RL.Agents.Function_Approximators.rst", "_autosummary/seldonian.RL.Agents.Function_Approximators.Function_Approximator.rst", "_autosummary/seldonian.RL.Agents.Function_Approximators.Function_Approximator.Function_Approximator.rst", "_autosummary/seldonian.RL.Agents.Function_Approximators.Linear_FA.rst", "_autosummary/seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_FA.rst", "_autosummary/seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_state_action_value_FA.rst", "_autosummary/seldonian.RL.Agents.Function_Approximators.Table.rst", "_autosummary/seldonian.RL.Agents.Function_Approximators.Table.Q_Table.rst", "_autosummary/seldonian.RL.Agents.Function_Approximators.Table.Table.rst", "_autosummary/seldonian.RL.Agents.Function_Approximators.Table.construct_Q_Table_From_Env_Description.rst", "_autosummary/seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.rst", "_autosummary/seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.Parameterized_non_learning_softmax_agent.rst", "_autosummary/seldonian.RL.Agents.Policies.rst", "_autosummary/seldonian.RL.Agents.Policies.Policy.rst", "_autosummary/seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy.rst", "_autosummary/seldonian.RL.Agents.Policies.Policy.Policy.rst", "_autosummary/seldonian.RL.Agents.Policies.Softmax.rst", "_autosummary/seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax.rst", "_autosummary/seldonian.RL.Agents.Policies.Softmax.Softmax.rst", "_autosummary/seldonian.RL.Agents.keyboard_gridworld.rst", "_autosummary/seldonian.RL.Agents.keyboard_gridworld.Keyboard_gridworld.rst", "_autosummary/seldonian.RL.Agents.mountain_car_rough_solution.rst", "_autosummary/seldonian.RL.Agents.mountain_car_rough_solution.Mountain_car_rough_solution.rst", "_autosummary/seldonian.RL.Env_Description.rst", "_autosummary/seldonian.RL.Env_Description.Env_Description.rst", "_autosummary/seldonian.RL.Env_Description.Env_Description.Env_Description.rst", "_autosummary/seldonian.RL.Env_Description.Env_Description.check_space_type.rst", "_autosummary/seldonian.RL.Env_Description.Spaces.rst", "_autosummary/seldonian.RL.Env_Description.Spaces.Continuous_Space.rst", "_autosummary/seldonian.RL.Env_Description.Spaces.Discrete_Space.rst", "_autosummary/seldonian.RL.RL_generate_dataset_and_spec_file.rst", "_autosummary/seldonian.RL.RL_generate_dataset_and_spec_file.get_constraint_string.rst", "_autosummary/seldonian.RL.RL_generate_dataset_and_spec_file.get_env_kwargs.rst", "_autosummary/seldonian.RL.RL_generate_dataset_and_spec_file.get_metadata_path.rst", "_autosummary/seldonian.RL.RL_generate_dataset_and_spec_file.main.rst", "_autosummary/seldonian.RL.RL_generate_dataset_and_spec_file.print_return_info.rst", "_autosummary/seldonian.RL.RL_model.rst", "_autosummary/seldonian.RL.RL_model.RL_model.rst", "_autosummary/seldonian.RL.RL_runner.rst", "_autosummary/seldonian.RL.RL_runner.create_agent.rst", "_autosummary/seldonian.RL.RL_runner.create_env.rst", "_autosummary/seldonian.RL.RL_runner.run_all_trials.rst", "_autosummary/seldonian.RL.RL_runner.run_episode.rst", "_autosummary/seldonian.RL.RL_runner.run_episode_from_dict.rst", "_autosummary/seldonian.RL.RL_runner.run_trial.rst", "_autosummary/seldonian.RL.RL_runner.run_trial_given_agent_and_env.rst", "_autosummary/seldonian.RL.environments.rst", "_autosummary/seldonian.RL.environments.Environment.rst", "_autosummary/seldonian.RL.environments.Environment.Environment.rst", "_autosummary/seldonian.RL.environments.gridworld.rst", "_autosummary/seldonian.RL.environments.gridworld.Gridworld.rst", "_autosummary/seldonian.RL.environments.mountaincar.rst", "_autosummary/seldonian.RL.environments.mountaincar.Mountaincar.rst", "_autosummary/seldonian.RL.environments.n_step_mountaincar.rst", "_autosummary/seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar.rst", "_autosummary/seldonian.RL.environments.simglucose_env.rst", "_autosummary/seldonian.RL.environments.simglucose_env.Simglucose.rst", "_autosummary/seldonian.RL.generate_mountaincar_episodes.rst", "_autosummary/seldonian.RL.generate_mountaincar_episodes.main.rst", "_autosummary/seldonian.RL.generate_simglucose_episodes.rst", "_autosummary/seldonian.RL.generate_simglucose_episodes.get_max_obs.rst", "_autosummary/seldonian.RL.generate_simglucose_episodes.main.rst", "_autosummary/seldonian.RL.hyperparams_and_settings.rst", "_autosummary/seldonian.RL.hyperparams_and_settings.define_hyperparameter_and_setting_dict.rst", "_autosummary/seldonian.candidate_selection.rst", "_autosummary/seldonian.candidate_selection.candidate_selection.rst", "_autosummary/seldonian.candidate_selection.candidate_selection.CandidateSelection.rst", "_autosummary/seldonian.dataset.rst", "_autosummary/seldonian.dataset.DataSet.rst", "_autosummary/seldonian.dataset.DataSetLoader.rst", "_autosummary/seldonian.dataset.Episode.rst", "_autosummary/seldonian.dataset.RLDataSet.rst", "_autosummary/seldonian.dataset.SupervisedDataSet.rst", "_autosummary/seldonian.models.rst", "_autosummary/seldonian.models.models.rst", "_autosummary/seldonian.models.models.BoundedLinearRegressionModel.rst", "_autosummary/seldonian.models.models.ClassificationModel.rst", "_autosummary/seldonian.models.models.DummyClassifierModel.rst", "_autosummary/seldonian.models.models.LinearRegressionModel.rst", "_autosummary/seldonian.models.models.LogisticRegressionModel.rst", "_autosummary/seldonian.models.models.RandomClassifierModel.rst", "_autosummary/seldonian.models.models.RegressionModel.rst", "_autosummary/seldonian.models.models.SeldonianModel.rst", "_autosummary/seldonian.models.models.SupervisedModel.rst", "_autosummary/seldonian.models.objectives.rst", "_autosummary/seldonian.models.objectives.False_Negative_Rate.rst", "_autosummary/seldonian.models.objectives.False_Positive_Rate.rst", "_autosummary/seldonian.models.objectives.IS_estimate.rst", "_autosummary/seldonian.models.objectives.Mean_Error.rst", "_autosummary/seldonian.models.objectives.Mean_Squared_Error.rst", "_autosummary/seldonian.models.objectives.Negative_Rate.rst", "_autosummary/seldonian.models.objectives.Positive_Rate.rst", "_autosummary/seldonian.models.objectives.True_Negative_Rate.rst", "_autosummary/seldonian.models.objectives.True_Positive_Rate.rst", "_autosummary/seldonian.models.objectives.evaluate_statistic.rst", "_autosummary/seldonian.models.objectives.gradient_Bounded_Squared_Error.rst", "_autosummary/seldonian.models.objectives.gradient_Mean_Squared_Error.rst", "_autosummary/seldonian.models.objectives.gradient_logistic_loss.rst", "_autosummary/seldonian.models.objectives.logistic_loss.rst", "_autosummary/seldonian.models.objectives.sample_from_statistic.rst", "_autosummary/seldonian.models.objectives.vector_Error.rst", "_autosummary/seldonian.models.objectives.vector_False_Negative_Rate.rst", "_autosummary/seldonian.models.objectives.vector_False_Positive_Rate.rst", "_autosummary/seldonian.models.objectives.vector_IS_estimate.rst", "_autosummary/seldonian.models.objectives.vector_Negative_Rate.rst", "_autosummary/seldonian.models.objectives.vector_Positive_Rate.rst", "_autosummary/seldonian.models.objectives.vector_Squared_Error.rst", "_autosummary/seldonian.models.objectives.vector_True_Negative_Rate.rst", "_autosummary/seldonian.models.objectives.vector_True_Positive_Rate.rst", "_autosummary/seldonian.models.objectives.vector_logistic_loss.rst", "_autosummary/seldonian.optimizers.rst", "_autosummary/seldonian.optimizers.gradient_descent.rst", "_autosummary/seldonian.optimizers.gradient_descent.gradient_descent_adam.rst", "_autosummary/seldonian.optimizers.gradient_descent.setup_gradients.rst", "_autosummary/seldonian.parse_tree.rst", "_autosummary/seldonian.parse_tree.nodes.rst", "_autosummary/seldonian.parse_tree.nodes.BaseNode.rst", "_autosummary/seldonian.parse_tree.nodes.CVaRSQeBaseNode.rst", "_autosummary/seldonian.parse_tree.nodes.ConstantNode.rst", "_autosummary/seldonian.parse_tree.nodes.InternalNode.rst", "_autosummary/seldonian.parse_tree.nodes.MEDCustomBaseNode.rst", "_autosummary/seldonian.parse_tree.nodes.Node.rst", "_autosummary/seldonian.parse_tree.operators.rst", "_autosummary/seldonian.parse_tree.parse_tree.rst", "_autosummary/seldonian.parse_tree.parse_tree.ParseTree.rst", "_autosummary/seldonian.parse_tree.parse_tree.make_parse_trees_from_constraints.rst", "_autosummary/seldonian.safety_test.rst", "_autosummary/seldonian.safety_test.safety_test.rst", "_autosummary/seldonian.safety_test.safety_test.SafetyTest.rst", "_autosummary/seldonian.seldonian_algorithm.rst", "_autosummary/seldonian.seldonian_algorithm.SeldonianAlgorithm.rst", "_autosummary/seldonian.spec.rst", "_autosummary/seldonian.spec.RLSpec.rst", "_autosummary/seldonian.spec.Spec.rst", "_autosummary/seldonian.spec.SupervisedSpec.rst", "_autosummary/seldonian.spec.createRLSpec.rst", "_autosummary/seldonian.spec.createSupervisedSpec.rst", "_autosummary/seldonian.utils.rst", "_autosummary/seldonian.utils.RL_utils.rst", "_autosummary/seldonian.utils.RL_utils.argmax_multi.rst", "_autosummary/seldonian.utils.RL_utils.clamp.rst", "_autosummary/seldonian.utils.RL_utils.error.rst", "_autosummary/seldonian.utils.io_utils.rst", "_autosummary/seldonian.utils.io_utils.dir_path.rst", "_autosummary/seldonian.utils.io_utils.load_json.rst", "_autosummary/seldonian.utils.io_utils.load_pickle.rst", "_autosummary/seldonian.utils.io_utils.load_supervised_metadata.rst", "_autosummary/seldonian.utils.io_utils.save_json.rst", "_autosummary/seldonian.utils.io_utils.save_pickle.rst", "_autosummary/seldonian.utils.plot_utils.rst", "_autosummary/seldonian.utils.plot_utils.plot_gradient_descent.rst", "_autosummary/seldonian.utils.stats_utils.rst", "_autosummary/seldonian.utils.stats_utils.stddev.rst", "_autosummary/seldonian.utils.stats_utils.tinv.rst", "_autosummary/seldonian.utils.stats_utils.weighted_sum_gamma.rst", "_autosummary/seldonian.utils.tutorial_utils.rst", "_autosummary/seldonian.utils.tutorial_utils.generate_clipped_data.rst", "_autosummary/seldonian.utils.tutorial_utils.generate_data.rst", "_autosummary/seldonian.utils.tutorial_utils.make_synthetic_regression_dataset.rst", "_autosummary/seldonian.warnings.rst", "_autosummary/seldonian.warnings.custom_warnings.rst", "_autosummary/seldonian.warnings.custom_warnings.custom_formatwarning.rst", "api.rst", "getting_started.rst", "index.rst", "overview.rst"], "titles": ["seldonian", "seldonian.RL", "seldonian.RL.Agents", "seldonian.RL.Agents.Agent", "seldonian.RL.Agents.Agent.Agent", "seldonian.RL.Agents.Bases", "seldonian.RL.Agents.Bases.Fourier", "seldonian.RL.Agents.Bases.Fourier.Fourier", "seldonian.RL.Agents.Discrete_Random_Agent", "seldonian.RL.Agents.Discrete_Random_Agent.Discrete_Random_Agent", "seldonian.RL.Agents.Function_Approximators", "seldonian.RL.Agents.Function_Approximators.Function_Approximator", "seldonian.RL.Agents.Function_Approximators.Function_Approximator.Function_Approximator", "seldonian.RL.Agents.Function_Approximators.Linear_FA", "seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_FA", "seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_state_action_value_FA", "seldonian.RL.Agents.Function_Approximators.Table", "seldonian.RL.Agents.Function_Approximators.Table.Q_Table", "seldonian.RL.Agents.Function_Approximators.Table.Table", "seldonian.RL.Agents.Function_Approximators.Table.construct_Q_Table_From_Env_Description", "seldonian.RL.Agents.Parameterized_non_learning_softmax_agent", "seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.Parameterized_non_learning_softmax_agent", "seldonian.RL.Agents.Policies", "seldonian.RL.Agents.Policies.Policy", "seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy", "seldonian.RL.Agents.Policies.Policy.Policy", "seldonian.RL.Agents.Policies.Softmax", "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax", "seldonian.RL.Agents.Policies.Softmax.Softmax", "seldonian.RL.Agents.keyboard_gridworld", "seldonian.RL.Agents.keyboard_gridworld.Keyboard_gridworld", "seldonian.RL.Agents.mountain_car_rough_solution", "seldonian.RL.Agents.mountain_car_rough_solution.Mountain_car_rough_solution", "seldonian.RL.Env_Description", "seldonian.RL.Env_Description.Env_Description", "seldonian.RL.Env_Description.Env_Description.Env_Description", "seldonian.RL.Env_Description.Env_Description.check_space_type", "seldonian.RL.Env_Description.Spaces", "seldonian.RL.Env_Description.Spaces.Continuous_Space", "seldonian.RL.Env_Description.Spaces.Discrete_Space", "seldonian.RL.RL_generate_dataset_and_spec_file", "seldonian.RL.RL_generate_dataset_and_spec_file.get_constraint_string", "seldonian.RL.RL_generate_dataset_and_spec_file.get_env_kwargs", "seldonian.RL.RL_generate_dataset_and_spec_file.get_metadata_path", "seldonian.RL.RL_generate_dataset_and_spec_file.main", "seldonian.RL.RL_generate_dataset_and_spec_file.print_return_info", "seldonian.RL.RL_model", "seldonian.RL.RL_model.RL_model", "seldonian.RL.RL_runner", "seldonian.RL.RL_runner.create_agent", "seldonian.RL.RL_runner.create_env", "seldonian.RL.RL_runner.run_all_trials", "seldonian.RL.RL_runner.run_episode", "seldonian.RL.RL_runner.run_episode_from_dict", "seldonian.RL.RL_runner.run_trial", "seldonian.RL.RL_runner.run_trial_given_agent_and_env", "seldonian.RL.environments", "seldonian.RL.environments.Environment", "seldonian.RL.environments.Environment.Environment", "seldonian.RL.environments.gridworld", "seldonian.RL.environments.gridworld.Gridworld", "seldonian.RL.environments.mountaincar", "seldonian.RL.environments.mountaincar.Mountaincar", "seldonian.RL.environments.n_step_mountaincar", "seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar", "seldonian.RL.environments.simglucose_env", "seldonian.RL.environments.simglucose_env.Simglucose", "seldonian.RL.generate_mountaincar_episodes", "seldonian.RL.generate_mountaincar_episodes.main", "seldonian.RL.generate_simglucose_episodes", "seldonian.RL.generate_simglucose_episodes.get_max_obs", "seldonian.RL.generate_simglucose_episodes.main", "seldonian.RL.hyperparams_and_settings", "seldonian.RL.hyperparams_and_settings.define_hyperparameter_and_setting_dict", "seldonian.candidate_selection", "seldonian.candidate_selection.candidate_selection", "seldonian.candidate_selection.candidate_selection.CandidateSelection", "seldonian.dataset", "seldonian.dataset.DataSet", "seldonian.dataset.DataSetLoader", "seldonian.dataset.Episode", "seldonian.dataset.RLDataSet", "seldonian.dataset.SupervisedDataSet", "seldonian.models", "seldonian.models.models", "seldonian.models.models.BoundedLinearRegressionModel", "seldonian.models.models.ClassificationModel", "seldonian.models.models.DummyClassifierModel", "seldonian.models.models.LinearRegressionModel", "seldonian.models.models.LogisticRegressionModel", "seldonian.models.models.RandomClassifierModel", "seldonian.models.models.RegressionModel", "seldonian.models.models.SeldonianModel", "seldonian.models.models.SupervisedModel", "seldonian.models.objectives", "seldonian.models.objectives.False_Negative_Rate", "seldonian.models.objectives.False_Positive_Rate", "seldonian.models.objectives.IS_estimate", "seldonian.models.objectives.Mean_Error", "seldonian.models.objectives.Mean_Squared_Error", "seldonian.models.objectives.Negative_Rate", "seldonian.models.objectives.Positive_Rate", "seldonian.models.objectives.True_Negative_Rate", "seldonian.models.objectives.True_Positive_Rate", "seldonian.models.objectives.evaluate_statistic", "seldonian.models.objectives.gradient_Bounded_Squared_Error", "seldonian.models.objectives.gradient_Mean_Squared_Error", "seldonian.models.objectives.gradient_logistic_loss", "seldonian.models.objectives.logistic_loss", "seldonian.models.objectives.sample_from_statistic", "seldonian.models.objectives.vector_Error", "seldonian.models.objectives.vector_False_Negative_Rate", "seldonian.models.objectives.vector_False_Positive_Rate", "seldonian.models.objectives.vector_IS_estimate", "seldonian.models.objectives.vector_Negative_Rate", "seldonian.models.objectives.vector_Positive_Rate", "seldonian.models.objectives.vector_Squared_Error", "seldonian.models.objectives.vector_True_Negative_Rate", "seldonian.models.objectives.vector_True_Positive_Rate", "seldonian.models.objectives.vector_logistic_loss", "seldonian.optimizers", "seldonian.optimizers.gradient_descent", "seldonian.optimizers.gradient_descent.gradient_descent_adam", "seldonian.optimizers.gradient_descent.setup_gradients", "seldonian.parse_tree", "seldonian.parse_tree.nodes", "seldonian.parse_tree.nodes.BaseNode", "seldonian.parse_tree.nodes.CVaRSQeBaseNode", "seldonian.parse_tree.nodes.ConstantNode", "seldonian.parse_tree.nodes.InternalNode", "seldonian.parse_tree.nodes.MEDCustomBaseNode", "seldonian.parse_tree.nodes.Node", "seldonian.parse_tree.operators", "seldonian.parse_tree.parse_tree", "seldonian.parse_tree.parse_tree.ParseTree", "seldonian.parse_tree.parse_tree.make_parse_trees_from_constraints", "seldonian.safety_test", "seldonian.safety_test.safety_test", "seldonian.safety_test.safety_test.SafetyTest", "seldonian.seldonian_algorithm", "seldonian.seldonian_algorithm.SeldonianAlgorithm", "seldonian.spec", "seldonian.spec.RLSpec", "seldonian.spec.Spec", "seldonian.spec.SupervisedSpec", "seldonian.spec.createRLSpec", "seldonian.spec.createSupervisedSpec", "seldonian.utils", "seldonian.utils.RL_utils", "seldonian.utils.RL_utils.argmax_multi", "seldonian.utils.RL_utils.clamp", "seldonian.utils.RL_utils.error", "seldonian.utils.io_utils", "seldonian.utils.io_utils.dir_path", "seldonian.utils.io_utils.load_json", "seldonian.utils.io_utils.load_pickle", "seldonian.utils.io_utils.load_supervised_metadata", "seldonian.utils.io_utils.save_json", "seldonian.utils.io_utils.save_pickle", "seldonian.utils.plot_utils", "seldonian.utils.plot_utils.plot_gradient_descent", "seldonian.utils.stats_utils", "seldonian.utils.stats_utils.stddev", "seldonian.utils.stats_utils.tinv", "seldonian.utils.stats_utils.weighted_sum_gamma", "seldonian.utils.tutorial_utils", "seldonian.utils.tutorial_utils.generate_clipped_data", "seldonian.utils.tutorial_utils.generate_data", "seldonian.utils.tutorial_utils.make_synthetic_regression_dataset", "seldonian.warnings", "seldonian.warnings.custom_warnings", "seldonian.warnings.custom_warnings.custom_formatwarning", "API", "Getting Started", "Seldonian Engine documentation", "Overview"], "terms": {"engin": [0, 132, 173, 175], "packag": [0, 175], "modul": [0, 1, 2, 5, 10, 22, 33, 56, 74, 75, 83, 84, 120, 124, 132, 133, 136, 137, 139, 141, 142, 147, 169, 171, 175], "class": [3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 37, 38, 39, 46, 47, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 100, 101, 102, 103, 122, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 137, 138, 139, 140, 141, 142, 143, 144, 175], "base": [4, 9, 12, 14, 15, 17, 18, 21, 24, 25, 27, 28, 30, 32, 35, 38, 39, 47, 58, 60, 62, 64, 66, 76, 78, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 91, 92, 93, 126, 127, 128, 129, 130, 131, 132, 134, 138, 140, 142, 143, 144, 174, 175], "object": [4, 7, 9, 12, 19, 21, 24, 25, 27, 28, 35, 38, 39, 44, 45, 58, 60, 76, 78, 79, 80, 81, 82, 92, 122, 126, 127, 130, 131, 134, 138, 140, 141, 142, 143, 144, 145, 146, 154, 155, 157, 158, 160, 174], "all": [4, 21, 24, 27, 28, 47, 58, 78, 82, 86, 91, 92, 93, 97, 131, 134, 138, 175], "overrid": [4, 58, 60, 62, 64, 66, 85, 126, 127, 130], "follow": [4, 175], "method": [4, 7, 9, 12, 14, 15, 17, 18, 21, 24, 25, 27, 28, 30, 32, 35, 38, 39, 47, 58, 60, 62, 64, 66, 76, 78, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 91, 92, 93, 122, 126, 127, 128, 129, 130, 131, 134, 138, 140, 142, 143, 144, 175], "child": [4, 58, 60, 62, 64, 66, 131, 132, 134, 175], "implement": [4, 21, 25, 58, 60, 62, 64, 66, 85, 87, 88, 89, 90, 122, 163, 175], "__init__": [4, 7, 9, 12, 14, 15, 17, 18, 21, 24, 25, 27, 28, 30, 32, 35, 38, 39, 47, 58, 60, 62, 64, 66, 76, 78, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 91, 92, 93, 126, 127, 128, 129, 130, 131, 134, 138, 140, 142, 143, 144], "__repr__": [4, 7, 9, 12, 14, 15, 17, 18, 21, 24, 25, 27, 28, 30, 32, 35, 38, 39, 47, 58, 60, 62, 64, 66, 76, 78, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 91, 92, 93, 126, 127, 128, 129, 130, 131, 134, 138, 140, 142, 143, 144], "return": [4, 7, 9, 12, 14, 15, 17, 18, 19, 21, 24, 25, 27, 28, 30, 32, 35, 38, 39, 41, 42, 43, 45, 47, 49, 50, 51, 52, 53, 54, 55, 58, 60, 62, 64, 66, 76, 78, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 126, 127, 130, 132, 134, 138, 140, 142, 143, 144, 160, 162, 163, 164, 175], "repr": [4, 7, 9, 12, 14, 15, 17, 18, 21, 24, 25, 27, 28, 30, 32, 35, 38, 39, 47, 58, 60, 62, 64, 66, 76, 78, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 91, 92, 93, 134, 138, 140, 142, 143, 144], "self": [4, 7, 9, 12, 14, 15, 17, 18, 21, 24, 25, 27, 28, 30, 32, 35, 38, 39, 47, 58, 60, 62, 64, 66, 76, 78, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 91, 92, 93, 134, 138, 140, 142, 143, 144], "choose_act": [4, 9, 21, 24, 25, 27, 28, 30, 32], "observ": [4, 9, 21, 24, 25, 27, 28, 30, 32, 35, 38, 39, 47, 58, 62, 64, 66, 80, 87, 89, 90, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 126, 127, 130, 175], "choos": [4, 9, 30, 32, 175], "an": [4, 9, 19, 21, 24, 25, 27, 28, 30, 32, 35, 49, 50, 54, 58, 60, 62, 64, 66, 126, 127, 131, 132, 142, 153, 154, 155, 157, 158, 164, 175], "action": [4, 9, 17, 21, 24, 25, 27, 28, 30, 32, 35, 38, 39, 47, 58, 60, 62, 64, 66, 79, 80, 175], "given": [4, 9, 17, 19, 21, 24, 25, 27, 28, 30, 32, 41, 42, 43, 47, 58, 60, 62, 64, 66, 76, 126, 127, 130, 134, 138, 140, 142, 143, 144, 175], "To": [4, 9, 30, 32, 173], "overridden": [4, 9, 25, 30, 32], "paramet": [4, 9, 12, 14, 15, 17, 18, 19, 21, 24, 25, 27, 28, 30, 32, 35, 36, 38, 39, 45, 47, 49, 50, 51, 52, 53, 54, 55, 58, 60, 62, 64, 66, 76, 78, 79, 80, 81, 82, 85, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 126, 127, 128, 129, 130, 131, 134, 138, 140, 142, 143, 144, 145, 146, 153, 154, 155, 157, 158, 160, 162, 163, 164, 166, 167, 175], "The": [4, 9, 14, 15, 17, 18, 21, 27, 28, 30, 32, 38, 60, 76, 78, 79, 82, 85, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 126, 127, 128, 129, 130, 131, 132, 134, 138, 140, 142, 143, 144, 146, 158, 160, 164, 166, 167, 174, 175], "current": [4, 9, 21, 24, 25, 27, 28, 30, 32, 58, 60, 62, 64, 66, 86, 175], "type": [4, 9, 19, 21, 24, 27, 28, 30, 32, 36, 47, 49, 50, 52, 53, 60, 76, 85, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 126, 127, 130, 134, 138, 140, 162, 163, 164, 175], "depend": [4, 9, 21, 24, 27, 28, 30, 32, 126, 127, 130, 175], "environ": [4, 9, 17, 18, 19, 21, 24, 27, 28, 30, 32, 35, 41, 42, 43, 47, 49, 50, 51, 52, 53, 54, 55, 142, 145, 174, 175], "get_prob_this_act": [4, 9, 21, 24, 25, 27, 28, 30, 32, 47], "get": [4, 9, 17, 21, 24, 25, 27, 28, 30, 32, 35, 38, 39, 47, 58, 60, 62, 64, 66, 76, 134, 138, 140, 174, 175], "probabl": [4, 9, 17, 21, 24, 25, 27, 28, 30, 32, 47, 80, 87, 89, 90, 95, 96, 100, 101, 102, 103, 111, 112, 114, 115, 117, 118, 127, 134, 163, 175], "provid": [4, 9, 30, 32, 35, 104, 109, 134, 140, 142, 143, 144, 175], "i": [4, 9, 21, 24, 27, 28, 30, 32, 38, 45, 51, 60, 76, 85, 95, 96, 97, 100, 101, 102, 103, 111, 112, 113, 114, 115, 117, 118, 122, 126, 127, 128, 129, 130, 131, 132, 134, 138, 140, 142, 143, 144, 153, 160, 173, 174, 175], "updat": [4, 9, 21, 25, 30, 32, 60], "next_observ": [4, 9, 21, 30, 32], "reward": [4, 9, 21, 30, 32, 45, 60, 79, 80, 132, 164, 175], "termin": [4, 9, 21, 30, 32, 58, 60, 62, 64, 66], "": [4, 9, 21, 30, 32, 35, 126, 127, 130, 134, 162, 163, 175], "accord": [4, 9, 21, 30, 32], "learn": [4, 9, 21, 30, 32, 76, 78, 79, 82, 84, 86, 91, 92, 93, 122, 126, 127, 130, 132, 134, 138, 144, 174, 175], "rule": [4, 9, 21, 30, 32], "overriden": [4, 9, 30, 32], "after": [4, 9, 21, 30, 32], "taken": [4, 9, 21, 30, 32, 35, 47], "take": [4, 9, 21, 24, 25, 30, 32, 47, 175], "bool": [4, 9, 21, 30, 32, 60, 76, 79, 131, 134, 138, 142, 143, 144, 145, 146, 160], "whether": [4, 9, 21, 24, 27, 28, 30, 32, 54, 60, 76, 79, 82, 131, 134, 138, 140, 142, 143, 144, 153, 160, 175], "hyperparam_and_setting_dict": [7, 21, 24, 27, 28], "env_desc": 7, "env_descript": [9, 14, 15, 19, 21, 24, 27, 28, 30, 60, 174], "act": 9, "discret": [9, 24, 27, 28, 35, 36, 39], "space": [9, 24, 27, 28, 35, 36, 60, 174], "pick": 9, "uniform": 9, "random": [9, 166, 167], "polici": [9, 21, 47, 54, 80, 132, 145, 174, 175], "capabl": [9, 18], "access": [9, 19, 21, 24, 27, 28, 35], "attribut": [9, 19, 21, 24, 27, 28, 35, 60, 81, 82, 134, 175], "function": [12, 14, 15, 16, 21, 24, 27, 28, 34, 40, 48, 60, 67, 69, 72, 76, 85, 94, 121, 122, 126, 132, 133, 134, 141, 142, 143, 144, 145, 146, 148, 152, 159, 160, 161, 163, 165, 170, 175], "approxim": [12, 14, 15, 21, 24, 27, 28], "set_new_param": [12, 14, 15, 17, 18, 21, 24, 25, 27, 28], "new_param": [12, 14, 15, 17, 18, 21, 24, 25, 27, 28, 47], "set": [12, 14, 15, 17, 18, 21, 24, 27, 28, 54, 124, 128, 140, 175], "new": [12, 14, 15, 17, 18, 58, 62, 64, 66, 132, 174, 175], "model": [12, 14, 15, 17, 18, 47, 76, 79, 122, 126, 127, 130, 138, 140, 142, 143, 144, 146, 174], "weight": [12, 14, 15, 17, 18, 21, 24, 27, 28, 47, 76, 85, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 126, 127, 130, 132, 134, 138, 140, 142, 143, 144, 164, 175], "basi": [14, 15, 24, 27, 28], "linear": [14, 15, 24, 27, 28, 85, 88], "us": [14, 15, 21, 27, 38, 39, 45, 47, 54, 58, 62, 64, 66, 76, 79, 85, 86, 88, 89, 91, 92, 93, 122, 126, 127, 130, 132, 134, 138, 140, 142, 143, 144, 146, 163, 164, 173, 175], "encod": [14, 15, 175], "featur": [14, 15, 79, 85, 87, 88, 89, 90, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 126, 127, 130, 175], "min_stat": [17, 18], "num_stat": [17, 18, 60], "num_act": 17, "A": [17, 19, 27, 47, 55, 58, 60, 62, 64, 66, 81, 113, 132, 134, 142, 143, 144, 153, 154, 155, 157, 158, 174], "q": [17, 19, 27], "contain": [17, 21, 25, 60, 76, 79, 82, 84, 97, 104, 109, 113, 122, 126, 127, 130, 132, 134, 138, 142, 143, 144, 146, 175], "transit": [17, 58, 60, 62, 64, 66], "int": [17, 18, 27, 39, 60, 76, 122, 126, 127, 130, 131, 134, 163, 166, 167], "smallest": [17, 18], "ob": [17, 18, 21, 24, 25, 27, 28, 35, 58, 60, 62, 64, 66, 79, 134], "number": [17, 18, 24, 27, 28, 35, 38, 39, 49, 50, 51, 54, 55, 60, 101, 122, 126, 127, 130, 134, 166, 167, 175], "total": [17, 18, 39, 134], "state": [17, 18, 21, 35, 60], "from_environment_state_to_0_indexed_st": [17, 18], "env_stat": [17, 18], "convert": [17, 18, 24, 27, 28], "0": [17, 18, 24, 27, 28, 38, 85, 90, 95, 96, 100, 101, 102, 103, 111, 112, 114, 115, 117, 118, 122, 126, 127, 130, 134, 138, 142, 143, 144, 145, 164, 166, 167, 175], "index": [17, 18, 24, 27, 28, 131, 164, 175], "you": [17, 18, 79, 134, 158, 160, 173, 174, 175], "want": [17, 18, 36, 79, 134, 158, 160, 173, 175], "get_action_values_given_st": [17, 24, 27, 28], "state_number_not_zero_index": 17, "possibl": [17, 21, 24, 27, 28, 35, 58, 60, 62, 64, 66, 127, 138, 175], "valu": [17, 27, 28, 39, 76, 110, 116, 122, 126, 127, 128, 130, 134, 138, 140, 175], "environment": 17, "specif": [17, 24, 27, 28, 49, 50, 140, 141, 142, 143, 144, 175], "arrai": [17, 21, 24, 27, 28, 38, 47, 76, 79, 119, 132, 164, 175], "get_action_values_given_zero_indexed_st": 17, "zero_indexed_state_numb": 17, "hold": [18, 78, 80, 81, 82], "reindex": 18, "creat": [19, 24, 27, 28, 44, 49, 50, 60, 79, 126, 127, 130, 134, 140, 145, 146, 175], "descript": [19, 24, 27, 28, 58, 60, 62, 64, 66, 175], "q_tabl": [19, 21, 174], "parametr": 21, "softmax": [21, 174, 175], "pi": [21, 80], "frac": 21, "e": [21, 45, 76, 78, 79, 81, 82, 104, 109, 122, 126, 127, 130, 134, 138, 142, 143, 144, 175], "p": [21, 163, 175], "sum_": 21, "addit": [21, 175], "info": 21, "about": [21, 122, 134, 175], "data": [21, 76, 79, 97, 126, 127, 130, 134, 138, 140, 142, 143, 144, 146, 157, 158, 162, 166, 167, 175], "gener": [21, 24, 28, 166, 167, 175], "variabl": [21, 38, 60, 126, 127, 128, 130, 131, 132, 134, 138, 142, 143, 144], "fa": 21, "select": [21, 24, 25, 27, 28, 74, 75, 76, 120, 122, 126, 127, 130, 138, 140, 142, 143, 144, 174], "get_action_valu": 21, "from": [21, 24, 27, 28, 49, 50, 79, 80, 85, 88, 124, 130, 133, 134, 140, 142, 154, 155, 156, 157, 175], "thi": [21, 47, 58, 60, 62, 64, 66, 86, 91, 92, 93, 100, 101, 105, 111, 112, 114, 115, 117, 118, 122, 126, 127, 130, 131, 134, 140, 142, 174, 175], "get_param": [21, 24, 25, 27, 28], "float": [21, 27, 28, 47, 60, 87, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 126, 127, 128, 130, 131, 134, 138, 140, 142, 143, 144, 146, 162, 163, 164, 166, 167, 175], "Not": [21, 132], "where": [24, 27, 55, 76, 122, 126, 127, 130, 134, 138, 140, 146, 160, 164, 175], "ar": [24, 27, 36, 38, 55, 76, 127, 132, 134, 138, 142, 143, 144, 164, 174, 175], "hyperparameter_and_setting_dict": [24, 27, 28, 49, 50, 51, 53, 54], "specifi": [24, 27, 28, 49, 50, 51, 54, 55, 132, 134, 175], "episod": [24, 27, 28, 44, 45, 49, 50, 51, 52, 53, 54, 55, 68, 70, 71, 79, 81, 97, 113, 174, 175], "per": [24, 27, 28, 49, 50, 51], "trial": [24, 27, 28, 44, 49, 50, 51, 54, 68, 71], "defin": [24, 25, 38, 127, 132, 175], "how": [24, 25, 134, 175], "construct_basis_and_linear_fa": [24, 27, 28], "dictionari": [24, 27, 28, 49, 50, 55, 122, 132, 156, 160, 175], "from_0_indexed_action_to_environment_act": [24, 27, 28], "action_0_index": [24, 27, 28], "env": [24, 27, 28, 42, 52, 53, 55], "from_environment_action_to_0_indexed_act": [24, 27, 28], "env_act": [24, 27, 28], "make_state_action_fa": [24, 27, 28], "contin": [24, 27, 28, 36], "four": [25, 175], "which": [25, 36, 51, 100, 126, 127, 129, 130, 132, 134, 142, 143, 144, 145, 175], "must": [25, 126, 175], "ani": [25, 76, 175], "both": [27, 134, 175], "faster": 27, "than": [27, 38, 55, 127, 134, 138, 175], "just": [27, 140], "becaus": [27, 134], "cach": [27, 134], "lookup": 27, "tabl": 27, "_arg": 27, "helper": [27, 60, 134], "acceler": 27, "calcul": [27, 60, 95, 96, 97, 98, 99, 100, 101, 102, 103, 108, 110, 111, 112, 113, 114, 115, 116, 119, 122, 126, 127, 130, 134, 138, 142, 143, 144, 164, 175], "_denom": 27, "choose_action_from_action_valu": [27, 28], "action_valu": [27, 28], "list": [27, 28, 45, 47, 51, 54, 55, 76, 78, 79, 80, 81, 82, 126, 127, 130, 132, 134, 138, 142, 143, 144, 145, 146, 175], "param": [27, 28, 101, 105], "get_action_probs_from_action_valu": [27, 28], "get_e_to_the_something_term": [27, 28], "exponenti": [27, 28, 122, 134], "obsertavt": [27, 28], "obserav": [27, 28], "discrete_action_polici": [28, 174], "observation_spac": 35, "action_spac": 35, "describ": [35, 60, 79], "conveni": [35, 134, 145, 146, 175], "continu": [35, 38], "made": 35, "get_min_act": 35, "first": [35, 82, 134, 174, 175], "get_min_st": 35, "get_num_act": 35, "get_num_observation_dim": 35, "dimens": [35, 38, 166, 167], "get_num_st": 35, "also": [35, 128, 129, 131, 134, 175], "call": [35, 126, 127, 130, 175], "here": [35, 132, 175], "desired_typ": 36, "valid": [36, 38, 134, 175], "ensur": [36, 175], "equival": [36, 126, 127, 130], "discrete_spac": [36, 174], "continous_spac": 36, "we": [36, 126, 127, 130, 134, 173, 175], "match": 36, "bound": [38, 76, 85, 105, 122, 126, 127, 128, 130, 131, 132, 134, 138, 142, 143, 144, 175], "np": 38, "ndarrai": [38, 76, 85, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 126, 127, 130, 138, 140, 162, 164], "shape": [38, 175], "num_dim": 38, "2": [38, 130, 157, 175], "min": [38, 39, 130, 175], "max": [38, 39, 175], "each": [38, 51, 80, 81, 87, 89, 90, 95, 96, 100, 101, 102, 103, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 126, 127, 130, 132, 134, 160, 175], "For": [38, 132, 175], "exampl": [38, 175], "3d": 38, "x": [38, 85, 87, 88, 89, 90, 95, 96, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 110, 111, 112, 114, 115, 116, 117, 118, 119, 130, 166, 167], "1": [38, 95, 96, 100, 101, 102, 103, 111, 112, 114, 115, 117, 118, 126, 127, 138, 142, 166, 167, 171, 175], "y": [38, 85, 88, 89, 95, 96, 98, 99, 102, 103, 105, 106, 107, 108, 110, 111, 112, 116, 117, 118, 119, 130, 166, 167], "5": [38, 90, 142, 143, 144, 175], "4": [38, 127, 132, 175], "z": [38, 127], "12": 38, "6": [38, 142, 144, 145, 175], "8": [38, 54, 175], "would": [38, 76, 122, 132, 142, 143, 144, 175], "check_bounds_valid": 38, "check": [38, 60, 134, 153], "format": [38, 79, 175], "maximum": [38, 39, 60, 127, 134, 138], "larger": [38, 127], "minimum": [38, 39, 127, 134, 138, 175], "get_num_dim": 38, "get_num_valu": 39, "env_nam": [41, 42, 43], "name": [41, 42, 43, 76, 78, 79, 81, 82, 104, 109, 122, 126, 127, 128, 129, 130, 131, 132, 134, 142, 143, 144, 175], "default": [41, 42, 79, 122, 131, 134, 142, 143, 144, 146, 175], "constraint": [41, 76, 122, 124, 132, 133, 134, 138, 142, 143, 144, 145, 146, 160, 174], "string": [41, 76, 128, 129, 131, 132, 134, 142, 143, 144, 145, 146, 174], "kwarg": [42, 47, 76, 78, 79, 81, 82, 122, 126, 127, 128, 129, 130, 134, 138, 145, 171], "path": [43, 146, 153, 160], "metadata": [43, 78, 79, 81, 82, 97, 122, 146, 156, 175], "file": [43, 79, 140, 145, 146, 154, 155, 156, 157, 158, 175], "run": [44, 51, 52, 53, 54, 55, 68, 71, 76, 77, 83, 122, 137, 138, 139, 140, 141, 142, 143, 144, 174], "rlspec": [44, 145, 174, 175], "save": [44, 68, 71, 145, 146, 158, 160, 175], "disk": [44, 68, 71, 76, 79], "print": [45, 58, 60, 62, 64, 66], "sum": [45, 95, 96, 100, 101, 102, 103, 164], "debug": [45, 58, 62, 64, 66, 122, 140], "env_kwarg": [47, 145, 175], "seldonianmodel": [47, 76, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 126, 127, 130, 138, 143, 144, 174], "parameter": [47, 175], "dict": [47, 51, 54, 104, 109, 122, 126, 127, 130, 132, 134, 142, 143, 144, 145, 160], "pertain": [47, 145], "gamma": [47, 60, 145, 164, 175], "discount": [47, 60, 145, 175], "factor": [47, 60, 145, 175], "singl": [47, 52, 53, 54, 134, 175], "pair": [47, 85, 88, 130, 175], "get_probs_from_observations_and_act": 47, "those": [47, 132], "agent": [49, 50, 51, 52, 53, 54, 55, 174], "mani": 51, "consist": [51, 54, 175], "same": [51, 130], "_i": [51, 175], "model_param": [53, 54], "none": [53, 54, 76, 79, 131, 142, 143, 144, 145], "parallel": 54, "fals": [54, 60, 76, 79, 82, 95, 96, 102, 103, 104, 111, 112, 122, 132, 134, 140, 142, 143, 144, 145, 146, 157, 158, 160, 168, 175], "n_worker": 54, "arbitrari": [54, 60], "befor": [54, 175], "process": [54, 140, 175], "cpu": 54, "num_episod": 55, "wrapper": [55, 76, 138, 140, 154, 155, 157, 158], "run_trial": [55, 174], "explic": 55, "rather": 55, "via": [55, 134, 175], "get_env_descript": [58, 60, 62, 64, 66], "get_observ": [58, 60, 62, 64, 66], "reset": [58, 60, 62, 64, 66, 134], "initi": [58, 60, 62, 64, 66, 76, 122, 134, 142, 143, 144], "start_visu": [58, 60, 62, 64, 66], "turn": [58, 60, 62, 64, 66], "visual": [58, 60, 62, 64, 66, 128, 129, 131, 134, 173, 175], "debugg": [58, 60, 62, 64, 66], "stop_visu": [58, 60, 62, 64, 66], "off": [58, 60, 62, 64, 66], "out": [58, 60, 62, 64, 66], "size": 60, "3": [60, 127, 166, 168, 175], "squar": [60, 98, 99, 105, 106, 116, 127, 132, 175], "grid": 60, "cell": 60, "side": [60, 134], "distinct": 60, "terminal_st": 60, "occupi": 60, "time": 60, "timestep": [60, 80, 175], "max_tim": 60, "allow": 60, "expect": [60, 126, 127, 130, 132], "create_env_descript": 60, "is_in_goal_st": 60, "goal": [60, 175], "true": [60, 102, 103, 117, 118, 126, 127, 130, 132, 138, 142, 143, 144, 146, 160, 168, 175], "go": [60, 175], "back": [60, 142, 143, 144], "between": [60, 95, 96, 100, 101, 102, 103, 111, 112, 114, 115, 117, 118, 130, 175], "reach": 60, "next": 60, "update_posit": 60, "posit": [60, 87, 89, 90, 95, 96, 100, 101, 102, 103, 104, 111, 112, 114, 115, 118, 127, 132, 134, 175], "inform": [60, 175], "candid": [74, 75, 76, 120, 122, 126, 127, 130, 138, 140, 142, 143, 144, 174], "candidate_dataset": 76, "n_safeti": [76, 127], "parse_tre": [76, 138, 142, 143, 144, 174, 175], "primary_object": [76, 122, 123, 138, 140, 142, 143, 144], "optimization_techniqu": [76, 142, 143, 144, 175], "barrier_funct": [76, 142, 143, 144, 175], "optim": [76, 140, 142, 143, 144, 174, 175], "powel": [76, 175], "initial_solut": 76, "regim": [76, 78, 79, 82, 132, 134, 135, 138, 175], "supervised_learn": [76, 78, 79, 82, 134, 135, 138, 175], "write_logfil": [76, 140], "dataset": [76, 97, 110, 116, 126, 127, 130, 138, 140, 142, 143, 144, 145, 146, 174], "length": [76, 127, 132], "safeti": [76, 122, 126, 127, 130, 136, 137, 138, 140, 142, 143, 144, 174], "when": [76, 95, 96, 102, 103, 126, 134, 160, 175], "predict": [76, 82, 85, 87, 88, 89, 90, 101, 111, 112, 117, 118, 175], "confid": [76, 126, 127, 130, 131, 134, 142, 143, 144, 145, 146, 175], "dure": [76, 79, 82, 132, 140, 142, 143, 144, 175], "parsetre": [76, 138, 142, 143, 174, 175], "pars": [76, 124, 126, 128, 129, 130, 131, 132, 133, 134, 138, 142, 143, 144, 173, 175], "tree": [76, 124, 126, 128, 129, 130, 131, 132, 133, 134, 138, 142, 143, 144, 173, 175], "behavior": [76, 80, 122, 124, 132, 133, 134, 138, 142, 143, 144, 174], "sole": [76, 122, 142, 143, 144], "absenc": [76, 122, 142, 143, 144], "loss": [76, 107, 108, 119, 122, 132, 142, 143, 144, 175], "str": [76, 78, 79, 81, 82, 104, 109, 122, 126, 127, 128, 129, 130, 131, 134, 138, 140, 142, 143, 144, 146, 153, 154, 155, 157, 158, 160], "g": [76, 78, 79, 81, 82, 104, 109, 122, 126, 127, 130, 134, 138, 142, 143, 144, 175], "gradient_desc": [76, 142, 143, 144, 174, 175], "numpi": [76, 85, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 126, 127, 130, 138, 140, 162, 164], "categori": [76, 78, 79, 82, 134, 138, 171], "machin": [76, 78, 79, 82, 84, 86, 91, 92, 93, 126, 127, 130, 134, 138, 174, 175], "algorithm": [76, 77, 78, 79, 82, 83, 130, 134, 138, 139, 140, 141, 142, 143, 144, 175], "reinforcement_learn": [76, 78, 79, 82, 134, 138, 175], "write": [76, 140, 175], "output": [76, 175], "evaluate_primary_object": [76, 138, 140], "theta": [76, 85, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 126, 127, 130, 138, 140, 175], "primari": [76, 122, 138, 140, 142, 143, 144, 160, 175], "fix": [76, 127, 138, 140, 175], "input": [76, 87, 90, 126, 127, 130, 153, 154, 157, 164, 175], "gradient": [76, 105, 106, 107, 122, 142, 143, 144, 160, 175], "descent": [76, 122, 160, 175], "get_constraint_upper_bound": 76, "upper": [76, 122, 126, 127, 128, 129, 130, 131, 134, 138, 175], "objective_with_barri": 76, "minimization_techniqu": 76, "barrier": [76, 175], "add": [76, 82, 134], "larg": 76, "penalti": 76, "violat": [76, 134, 175], "nsf": [76, 140, 175], "build": [77, 124, 133, 134, 141], "load": [77, 79, 154, 155, 156, 157, 175], "meta_inform": [78, 81, 82], "datafram": [78, 81, 82, 97, 113, 126, 127, 130, 134], "column": [78, 79, 82, 126, 127, 130, 134, 135, 175], "load_rl_dataset_from_csv": [79, 175], "filenam": [79, 154, 155, 156, 157, 158, 171, 175], "metadata_filenam": [79, 175], "rldataset": [79, 174, 175], "csv": [79, 175], "episode_index": 79, "probability_of_act": 79, "load_rl_dataset_from_episode_fil": [79, 175], "pickl": [79, 155, 158, 175], "load_supervised_dataset": [79, 175], "include_sensitive_column": [79, 82], "include_intercept_term": [79, 82, 168], "file_typ": 79, "superviseddataset": [79, 174, 175], "sensit": [79, 82, 175], "train": [79, 82, 85, 88, 89, 175], "pre": 79, "append": 79, "ones": [79, 82], "extens": 79, "rl": [80, 81, 134, 138, 142, 164, 174, 175], "o": 81, "r": [81, 107], "pi_b": 81, "df": 82, "label_column": [82, 175], "sensitive_column_nam": 82, "supervis": [82, 93, 132, 134, 144, 175], "panda": [82, 113, 130], "full": [82, 130, 160, 175], "target": 82, "label": [82, 85, 87, 88, 89, 90, 98, 99, 104, 105, 106, 107, 108, 109, 110, 111, 112, 116, 117, 118, 119, 126, 127, 130, 160, 175], "includ": [82, 134, 175], "main": [84, 133, 174], "linearregressionmodel": [85, 174, 175], "regress": [85, 88, 89, 91, 130, 132, 134, 135, 144, 175], "sever": [85, 127, 130, 175], "parent": [85, 86, 91, 92, 93, 127, 130], "assum": 85, "intercept": 85, "fit": [85, 88, 89, 175], "nxm": [85, 88], "nx1": [85, 88], "origin": 85, "squash": 85, "supervisedmodel": [86, 91, 174], "classif": [86, 132, 134, 144, 175], "librari": [86, 91, 92, 93, 122, 142, 174, 175], "onli": [86, 127, 138, 160, 175], "support": [86, 132, 175], "binari": 86, "classificationmodel": [87, 89, 90, 174, 175], "classifi": [87, 90], "alwai": [87, 90, 122, 126, 127, 130, 134, 175], "regardless": [87, 90, 175], "have": [87, 89, 90, 134, 175], "regressionmodel": [88, 174, 175], "logist": [89, 107, 108, 119, 132], "ha": [90, 132, 175], "prob": 90, "neg": [95, 96, 100, 102, 111, 112, 114, 117, 132, 134], "rate": [95, 96, 100, 101, 102, 103, 104, 111, 112, 114, 115, 117, 118, 122, 132, 134, 175], "whole": [95, 96, 98, 99, 100, 101, 102, 103, 104, 108, 134], "sampl": [95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 108, 109, 113, 119, 127, 162, 175], "being": [95, 96, 100, 101, 102, 103, 111, 112, 114, 115, 117, 118, 126], "fact": [95, 96, 102, 103], "wa": [95, 96, 102, 103, 130, 134, 175], "instanc": [95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119], "data_dict": [97, 104, 109, 113, 126, 127, 130], "unweight": [97, 113], "import": [97, 113, 122, 173, 175], "estim": [97, 113, 126, 127, 175], "over": [97, 98, 99, 104, 138, 175], "mean": [98, 99, 106, 110, 116, 130, 132, 175], "error": [98, 99, 105, 106, 110, 116, 127, 130, 132, 174, 175], "y_hat": 98, "normal": [101, 138, 142, 166, 167], "statistic_nam": [104, 109], "evalu": [104, 105, 109, 126, 127, 130, 134, 140], "statist": [104, 109, 126, 132, 142, 143, 144, 175], "fpr": [104, 109, 126, 132, 175], "analyt": 105, "rtype": 105, "w": 107, "t": [107, 126, 127, 130, 163], "perceptron": 107, "vector": [110, 113, 116, 122, 126, 127, 130, 162], "subject": [111, 112, 117, 118, 175], "actual": [111, 112, 117, 118, 127, 175], "ndarra": 119, "n_constraint": 122, "upper_bounds_funct": [122, 123], "theta_init": 122, "lambda_init": [122, 142, 143, 144], "alpha_theta": [122, 142, 143, 144], "05": [122, 126, 127, 130, 175], "alpha_lamb": [122, 142, 143, 144], "beta_veloc": [122, 142, 143, 144], "9": [122, 142, 143, 144, 164, 175], "beta_rmsprop": [122, 142, 143, 144], "num_it": [122, 142, 143, 144], "200": [122, 142, 143, 144], "gradient_librari": [122, 123, 142, 143, 144], "autograd": [122, 142, 143, 144], "verbos": [122, 142, 143, 144, 145, 146, 157, 158], "simultan": 122, "ascent": 122, "adam": [122, 142, 143, 144, 175], "lagrangian": [122, 175], "l": [122, 160, 175], "lambda": [122, 175], "f": [122, 130, 160, 175], "lagrang": [122, 160], "multipli": [122, 134, 160], "done": 122, "find": [122, 175], "saddl": 122, "point": [122, 130, 154, 155, 157, 166, 167, 175], "Being": 122, "part": [122, 175], "solut": [122, 134, 138, 140, 160, 175], "test": [122, 126, 127, 130, 136, 137, 138, 140, 142, 143, 144, 160, 174], "determin": [122, 134], "No": [122, 175], "found": [122, 138, 140, 175], "term": 122, "decai": 122, "veloc": 122, "rmsprop": 122, "iter": [122, 130, 175], "comput": [122, 130, 134, 142, 143, 144], "automat": 122, "lower": [126, 127, 128, 129, 130, 131, 134], "inf": [126, 127, 129, 130], "conditional_column": [126, 127, 130], "leaf": [126, 128, 129, 138], "measur": [126, 132, 134, 175], "condit": [126, 127, 130, 134], "node_typ": [126, 128], "equal": [126, 134, 135, 138, 175], "base_nod": 126, "delta": [126, 127, 130, 134, 135, 145, 146, 175], "share": [126, 127, 130], "put": [126, 127, 130], "measure_function_nam": 126, "repres": [126, 128, 129, 132, 134, 175], "measure_funct": [126, 175], "oper": [126, 129, 174, 175], "calculate_bound": [126, 127, 130], "bound_method": [126, 127, 130, 142, 143, 144], "calculate_data_forbound": [126, 127, 130], "prepar": [126, 127], "calculate_valu": [126, 127, 130], "etc": [126, 129, 130], "compute_hc_lowerbound": [126, 127, 130], "datas": [126, 127, 130], "high": [126, 127, 130], "level": [126, 127, 130, 134, 175], "compute_hc_upper_and_lowerbound": [126, 127, 130], "compute_hc_upperbound": [126, 127, 130], "independ": [126, 127, 130, 175], "mask_datafram": [126, 127, 130], "mask": [126, 127, 130], "joint": [126, 127, 130], "AND": [126, 127, 130], "predict_hc_lowerbound": [126, 127, 130], "pass": [126, 127, 130, 134, 138, 140, 145, 175], "predict_hc_upper_and_lowerbound": [126, 127, 130], "predict_hc_upperbound": [126, 127, 130], "zhat": [126, 127, 130], "unbias": [126, 127], "basenod": [127, 130, 174], "custom": [127, 130, 132, 175], "cvar_alpha": 127, "alpha": 127, "definit": [127, 175], "consid": 127, "least": [127, 175], "var_alpha": 127, "largest": 127, "100": 127, "thoma": [127, 130], "miller": 127, "2019": [127, 130], "http": [127, 130, 163], "peopl": 127, "c": 127, "umass": 127, "edu": 127, "pthoma": 127, "paper": 127, "thomas2019": 127, "pdf": 127, "see": [127, 130, 142, 143, 144, 174, 175], "theorem": 127, "threshold": [127, 145, 146], "cvar": 127, "sort": 127, "b": [127, 132, 134], "n_candid": 127, "constant": [128, 134, 164, 175], "constant_nod": 128, "represent": [128, 129, 131, 132], "what": [128, 129, 131, 174], "displai": [128, 129, 131, 134, 160], "insid": [128, 129, 131], "box": [128, 129, 131, 175], "graph": [128, 129, 131, 134, 173], "intern": [129, 175], "non": 129, "These": [129, 175], "perform": [129, 132, 175], "wise": 130, "differ": [130, 175], "male": [130, 175], "femal": [130, 175], "present": [130, 134], "et": 130, "al": 130, "www": [130, 163], "scienc": 130, "org": 130, "stoken": 130, "author": 130, "token": 130, "st": 130, "119": 130, "figur": [130, 160, 175], "precalculate_data": 130, "preconfigur": 130, "so": [130, 134, 175], "doe": [130, 134, 174], "need": [130, 131, 134, 141, 175], "recalcul": 130, "through": [130, 134], "up": [130, 134, 175], "y_i": 130, "y_hat_i": 130, "m": [130, 134, 175], "y_j": 130, "y_hat_j": 130, "There": [130, 134, 175], "mai": [130, 153, 175], "row": [130, 175], "n_male": 130, "n_femal": 130, "left": [131, 134, 175], "right": [131, 134, 175], "will_lower_bound": 131, "will_upper_bound": 131, "global": 132, "construct": [132, 175], "measure_functions_dict": 132, "sub_regim": [132, 134, 135, 144, 175], "appear": [132, 134, 175], "recogn": 132, "special": [132, 175], "organ": 132, "sub": [132, 134, 175], "refer": [132, 175], "pr": [132, 134, 175], "nr": 132, "tpr": [132, 175], "fnr": 132, "tnr": 132, "logistic_loss": [132, 174], "mean_error": [132, 134, 174], "mean_squared_error": [132, 174, 175], "reinforc": [132, 175], "j_pi_new": [132, 175], "custom_base_node_dict": 132, "map": 132, "node": [132, 134, 138, 174, 175], "op_mapp": 132, "ast": [132, 134], "thei": [132, 175], "not_supported_op_mapp": 132, "bounds_required_dict": 132, "requir": [132, 134, 143, 173, 175], "If": [132, 134, 142, 143, 144, 173, 174, 175], "two": [132, 134, 175], "children": [132, 134], "boolean": [132, 175], "like": [132, 134, 175], "need_a_low": 132, "need_a_upp": 132, "need_b_low": 132, "need_b_upp": 132, "one": [132, 134, 142, 143, 144, 175], "can": [134, 175], "ml": [134, 175], "user": [134, 175], "appropri": 134, "root": [134, 138], "assign": 134, "built": [134, 142, 143, 144, 175], "constraint_str": [134, 135, 145, 146], "express": [134, 175], "n_node": 134, "n_base_nod": 134, "more": [134, 175], "onc": [134, 175], "contribut": 134, "base_node_dict": 134, "keep": 134, "track": 134, "uniqu": 134, "been": [134, 175], "alreadi": [134, 175], "help": [134, 163], "handl": 134, "case": [134, 175], "duplic": 134, "node_fonts": 134, "fontsiz": 134, "graphviz": [134, 173], "available_measure_funct": 134, "_ab": 134, "absolut": [134, 175], "interv": [134, 138], "tupl": [134, 140, 175], "_add": 134, "_assign_bounds_help": 134, "lower_need": 134, "upper_need": 134, "travers": 134, "_assign_deltas_help": 134, "weight_method": 134, "_ast2pt_nod": 134, "ast_nod": 134, "_ast_tree_help": 134, "make": [134, 160, 175], "recurs": 134, "_div": 134, "divid": 134, "_evaluator_help": 134, "_exp": 134, "_max": 134, "_min": 134, "_mult": 134, "_pow": 134, "pow": 134, "_preprocess_constraint_str": 134, "inequ": [134, 175], "move": 134, "everyth": 134, "final": 134, "form": [134, 175], "some": [134, 175], "sure": 134, "mathemat": [134, 175], "written": [134, 175], "python": [134, 163, 173, 175], "syntax": 134, "_propagate_valu": 134, "propag": [134, 138], "_propagator_help": 134, "_protect_nan": 134, "bound_typ": 134, "nan": 134, "infin": 134, "postit": 134, "_sub": 134, "subract": 134, "assign_bounds_need": 134, "breadth": 134, "search": 134, "decid": 134, "eventu": 134, "necessari": [134, 175], "end": [134, 175], "care": 134, "assign_delta": 134, "split": [134, 175], "among": 134, "build_tre": 134, "delta_weight_method": [134, 135], "create_from_ast": 134, "structur": 134, "evaluate_constraint": 134, "itself": 134, "postord": 134, "logic": 134, "make_viz": 134, "titl": 134, "diagram": 134, "top": [134, 175], "make_viz_help": 134, "edg": 134, "digraph": 134, "propagate_bound": 134, "reset_base_node_dict": 134, "reset_data": 134, "less": [134, 138, 175], "frequent": 134, "safety_dataset": 138, "normalize_return": [138, 142], "relev": [138, 160], "min_return": 138, "max_return": 138, "loop": 138, "spec": [140, 174], "introspect": 140, "complet": [140, 174, 175], "candidate_select": [140, 174], "branch": 140, "either": [140, 175], "safety_test": [140, 174, 175], "result": [140, 175], "write_cs_logfil": [140, 175], "log": [140, 175], "passed_safeti": [140, 175], "indic": [140, 175], "run_safety_test": 140, "candidate_solut": 140, "other": [140, 175], "frac_data_in_safeti": [142, 143, 144, 145], "initial_solution_fn": [142, 143, 144, 145], "base_node_bound_method_dict": [142, 143, 144], "use_builtin_primary_gradient_fn": [142, 143, 144, 145], "custom_primary_gradient_fn": [142, 143, 144], "optimization_hyperparam": [142, 143, 144, 175], "005": [142, 143, 144], "95": [142, 143, 144], "hyper_search": [142, 143, 144], "regularization_hyperparam": [142, 143, 144], "rl_model": [142, 145, 174, 175], "fraction": [142, 143, 144], "remain": [142, 143, 144], "rl_environment_obj": 142, "exist": [142, 143, 144], "fall": [142, 143, 144], "builtin": [142, 143, 144], "ttest": [142, 143, 144], "hyperparamet": [142, 143, 144, 175], "regular": [142, 143, 144], "usable_opt_dict": [142, 143, 144], "show": [142, 143, 144, 160, 175], "accept": [142, 143, 144, 175], "techniqu": [142, 143, 144, 175], "save_dir": [145, 146], "pkl": [145, 146, 175], "directori": [145, 146, 153, 175], "flag": [145, 146, 175], "control": [145, 146, 175], "metadata_pth": 146, "supervisedspec": [146, 174, 175], "array_in": 149, "val_in": 150, "min_val": 150, "max_val": 150, "output_str": 151, "json": [154, 156, 157, 175], "indent": 157, "abl": 158, "primary_objective_nam": [160, 175], "savenam": 160, "png": 160, "evolut": [160, 175], "plot": [160, 175], "ii": 160, "lambda_i": [160, 175], "iii": 160, "g_i": [160, 175], "iv": 160, "lagranian": 160, "sum_i": 160, "n": [160, 175], "plt": 160, "v": 162, "standard": [162, 166, 167], "deviat": [162, 166, 167], "bessel": 162, "correct": 162, "nu": 163, "invers": [163, 175], "student": 163, "cdf": 163, "degre": 163, "freedom": 163, "correspond": [163, 175], "matlab": 163, "mathwork": 163, "com": 163, "stat": 163, "html": 163, "arr": 164, "num_point": [166, 167, 168], "loc_x": [166, 167, 168], "loc_i": [166, 167, 168], "sigma_x": [166, 167, 168], "sigma_i": [166, 167, 168], "clip_min": [166, 168], "clip_max": [166, 168], "2d": [166, 167], "center": [166, 167], "distribut": [166, 167], "clip": 168, "msg": 171, "lineno": 171, "arg": 171, "seldonian": [173, 175], "pip": 173, "Then": 173, "system": 173, "wide": 173, "recommend": 173, "welcom": 174, "core": 174, "toolkit": [174, 175], "sourc": 174, "code": [174, 175], "host": 174, "github": 174, "overview": 174, "interfac": 174, "sa": 174, "do": 174, "start": [174, 175], "instal": 174, "tutori": [174, 175], "api": [174, 175], "fourier": 174, "discrete_random_ag": 174, "function_approxim": 174, "linear_fa": 174, "linear_state_action_value_fa": 174, "construct_q_table_from_env_descript": 174, "parameterized_non_learning_softmax_ag": 174, "discretesoftmax": [174, 175], "keyboard_gridworld": 174, "mountain_car_rough_solut": 174, "check_space_typ": 174, "continuous_spac": 174, "rl_generate_dataset_and_spec_fil": 174, "get_constraint_str": 174, "get_env_kwarg": 174, "get_metadata_path": 174, "print_return_info": 174, "rl_runner": 174, "create_ag": 174, "create_env": 174, "run_all_tri": 174, "run_episod": 174, "run_episode_from_dict": 174, "run_trial_given_agent_and_env": 174, "gridworld": 174, "mountaincar": 174, "n_step_mountaincar": 174, "simglucose_env": 174, "simglucos": 174, "generate_mountaincar_episod": 174, "generate_simglucose_episod": 174, "get_max_ob": 174, "hyperparams_and_set": 174, "define_hyperparameter_and_setting_dict": 174, "candidateselect": [174, 175], "datasetload": [174, 175], "boundedlinearregressionmodel": 174, "dummyclassifiermodel": 174, "logisticregressionmodel": [174, 175], "randomclassifiermodel": 174, "false_negative_r": 174, "false_positive_r": 174, "is_estim": 174, "negative_r": 174, "positive_r": 174, "true_negative_r": 174, "true_positive_r": 174, "evaluate_statist": 174, "gradient_bounded_squared_error": 174, "gradient_mean_squared_error": 174, "gradient_logistic_loss": 174, "sample_from_statist": 174, "vector_error": 174, "vector_false_negative_r": 174, "vector_false_positive_r": 174, "vector_is_estim": 174, "vector_negative_r": 174, "vector_positive_r": 174, "vector_squared_error": 174, "vector_true_negative_r": 174, "vector_true_positive_r": 174, "vector_logistic_loss": 174, "gradient_descent_adam": 174, "setup_gradi": 174, "cvarsqebasenod": 174, "constantnod": 174, "internalnod": 174, "medcustombasenod": 174, "make_parse_trees_from_constraint": 174, "safetytest": [174, 175], "seldonian_algorithm": [174, 175], "seldonianalgorithm": [174, 175], "createrlspec": [174, 175], "createsupervisedspec": [174, 175], "util": [174, 175], "rl_util": 174, "argmax_multi": 174, "clamp": 174, "io_util": [174, 175], "dir_path": 174, "load_json": 174, "load_pickl": [174, 175], "load_supervised_metadata": 174, "save_json": 174, "save_pickl": 174, "plot_util": [174, 175], "plot_gradient_desc": [174, 175], "stats_util": 174, "stddev": 174, "tinv": 174, "weighted_sum_gamma": 174, "tutorial_util": 174, "generate_clipped_data": 174, "generate_data": 174, "make_synthetic_regression_dataset": 174, "warn": 174, "custom_warn": 174, "custom_formatwarn": 174, "document": 175, "detail": 175, "homepag": 175, "In": 175, "page": 175, "few": 175, "hand": 175, "illustr": 175, "simul": 175, "realist": 175, "most": 175, "piec": 175, "One": 175, "cover": 175, "note": 175, "could": 175, "unifi": 175, "work": 175, "pattern": 175, "inherit": 175, "concept": 175, "conceptu": 175, "enforc": 175, "develop": 175, "design": 175, "applic": 175, "command": 175, "line": 175, "graphic": 175, "short": 175, "underli": 175, "discuss": 175, "below": 175, "well": 175, "manual": 175, "loader": 175, "comma": 175, "separ": 175, "header": 175, "categor": 175, "numer": 175, "might": 175, "look": 175, "622": 175, "491": 175, "56": 175, "439": 175, "93": 175, "707": 175, "64": 175, "663": 175, "65": 175, "557": 175, "09": 175, "711": 175, "37": 175, "731": 175, "31": 175, "509": 175, "33333": 175, "538": 175, "490": 175, "58": 175, "406": 175, "59": 175, "529": 175, "532": 175, "28": 175, "447": 175, "23": 175, "527": 175, "379": 175, "14": 175, "488": 175, "98333": 175, "455": 175, "18": 175, "440": 175, "570": 175, "86": 175, "417": 175, "54": 175, "453": 175, "53": 175, "425": 175, "87": 175, "475": 175, "63": 175, "476": 175, "11": 175, "407": 175, "15": 175, "97333": 175, "756": 175, "91": 175, "679": 175, "62": 175, "531": 175, "583": 175, "534": 175, "42": 175, "521": 175, "592": 175, "41": 175, "783": 175, "76": 175, "588": 175, "26": 175, "53333": 175, "hot": 175, "last": 175, "option": 175, "10": 175, "integ": 175, "25": 175, "second": 175, "should": 175, "partit": 175, "order": 175, "intention": 175, "exclud": 175, "kei": 175, "your": 175, "problem": 175, "try": 175, "sensitive_column": 175, "biggest": 175, "essenti": 175, "wrap": 175, "scikit": 175, "linearregress": 175, "unless": 175, "own": 175, "know": 175, "best": 175, "though": 175, "chosen": 175, "explicitli": 175, "thing": 175, "extend": 175, "provi": 175, "py": 175, "_": 175, "directli": 175, "often": 175, "five": 175, "math": 175, "nativ": 175, "ab": 175, "exp": 175, "239": 175, "trigger": 175, "open": 175, "ad": 175, "quantiti": 175, "It": 175, "someth": 175, "wai": 175, "wrote": 175, "instruct": 175, "recal": 175, "leq": 175, "satisfi": 175, "howev": 175, "cumbersom": 175, "symbol": 175, "interpret": 175, "ident": 175, "themselv": 175, "tri": 175, "basic": 175, "plain": 175, "english": 175, "88": 175, "greater": 175, "commonli": 175, "fair": 175, "filter": 175, "atr1": 175, "atr2": 175, "placehold": 175, "parenthes": 175, "surround": 175, "statement": 175, "let": 175, "sai": 175, "r1": 175, "r2": 175, "stand": 175, "race": 175, "demograph": 175, "pariti": 175, "toler": 175, "ratio": 175, "dispar": 175, "impact": 175, "anoth": 175, "permit": 175, "belong": 175, "bundl": 175, "shown": 175, "block": 175, "At": 175, "broad": 175, "scope": 175, "throught": 175, "now": 175, "happen": 175, "even": 175, "small": 175, "black": 175, "cost": 175, "forc": 175, "toward": 175, "feasibl": 175, "cg": 175, "nelder": 175, "mead": 175, "bfg": 175, "cma": 175, "scipi": 175, "minim": 175, "solver": 175, "covari": 175, "matrix": 175, "adapt": 175, "strategi": 175, "kkt": 175, "situat": 175, "contraint": 175, "conflict": 175, "vanilla": 175, "oscil": 175, "boundari": 175, "dampen": 175, "momentum": 175, "our": 175, "mitig": 175, "far": 175, "hat": 175, "mathcal": 175, "ran": 175, "convent": 175, "candidate_selection_log": 175, "increas": 175, "overwritten": 175, "log_fil": 175, "candidate_selection_log0": 175, "cs_dict": 175, "produc": 175, "1500": 175, "red": 175, "area": 175, "middl": 175, "region": 175, "dot": 175, "multipl": 175, "its": 175, "subplot": 175, "repeat": 175, "deem": 175, "assembl": 175, "interact": 175}, "objects": {"": [[0, 0, 0, "-", "seldonian"]], "seldonian": [[1, 0, 0, "-", "RL"], [74, 0, 0, "-", "candidate_selection"], [77, 0, 0, "-", "dataset"], [83, 0, 0, "-", "models"], [120, 0, 0, "-", "optimizers"], [124, 0, 0, "-", "parse_tree"], [136, 0, 0, "-", "safety_test"], [139, 0, 0, "-", "seldonian_algorithm"], [141, 0, 0, "-", "spec"], [147, 0, 0, "-", "utils"], [169, 0, 0, "-", "warnings"]], "seldonian.RL": [[2, 0, 0, "-", "Agents"], [33, 0, 0, "-", "Env_Description"], [40, 0, 0, "-", "RL_generate_dataset_and_spec_file"], [46, 0, 0, "-", "RL_model"], [48, 0, 0, "-", "RL_runner"], [56, 0, 0, "-", "environments"], [67, 0, 0, "-", "generate_mountaincar_episodes"], [69, 0, 0, "-", "generate_simglucose_episodes"], [72, 0, 0, "-", "hyperparams_and_settings"]], "seldonian.RL.Agents": [[3, 0, 0, "-", "Agent"], [5, 0, 0, "-", "Bases"], [8, 0, 0, "-", "Discrete_Random_Agent"], [10, 0, 0, "-", "Function_Approximators"], [20, 0, 0, "-", "Parameterized_non_learning_softmax_agent"], [22, 0, 0, "-", "Policies"], [29, 0, 0, "-", "keyboard_gridworld"], [31, 0, 0, "-", "mountain_car_rough_solution"]], "seldonian.RL.Agents.Agent": [[4, 1, 1, "", "Agent"]], "seldonian.RL.Agents.Agent.Agent": [[4, 2, 1, "", "__init__"], [4, 2, 1, "", "__repr__"], [4, 2, 1, "", "choose_action"], [4, 2, 1, "", "get_prob_this_action"], [4, 2, 1, "", "update"]], "seldonian.RL.Agents.Bases": [[6, 0, 0, "-", "Fourier"]], "seldonian.RL.Agents.Bases.Fourier": [[7, 1, 1, "", "Fourier"]], "seldonian.RL.Agents.Bases.Fourier.Fourier": [[7, 2, 1, "", "__init__"], [7, 2, 1, "", "__repr__"]], "seldonian.RL.Agents.Discrete_Random_Agent": [[9, 1, 1, "", "Discrete_Random_Agent"]], "seldonian.RL.Agents.Discrete_Random_Agent.Discrete_Random_Agent": [[9, 2, 1, "", "__init__"], [9, 2, 1, "", "__repr__"], [9, 2, 1, "", "choose_action"], [9, 2, 1, "", "get_prob_this_action"], [9, 2, 1, "", "update"]], "seldonian.RL.Agents.Function_Approximators": [[11, 0, 0, "-", "Function_Approximator"], [13, 0, 0, "-", "Linear_FA"], [16, 0, 0, "-", "Table"]], "seldonian.RL.Agents.Function_Approximators.Function_Approximator": [[12, 1, 1, "", "Function_Approximator"]], "seldonian.RL.Agents.Function_Approximators.Function_Approximator.Function_Approximator": [[12, 2, 1, "", "__init__"], [12, 2, 1, "", "__repr__"], [12, 2, 1, "", "set_new_params"]], "seldonian.RL.Agents.Function_Approximators.Linear_FA": [[14, 1, 1, "", "Linear_FA"], [15, 1, 1, "", "Linear_state_action_value_FA"]], "seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_FA": [[14, 2, 1, "", "__init__"], [14, 2, 1, "", "__repr__"], [14, 2, 1, "", "set_new_params"]], "seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_state_action_value_FA": [[15, 2, 1, "", "__init__"], [15, 2, 1, "", "__repr__"], [15, 2, 1, "", "set_new_params"]], "seldonian.RL.Agents.Function_Approximators.Table": [[17, 1, 1, "", "Q_Table"], [18, 1, 1, "", "Table"], [19, 3, 1, "", "construct_Q_Table_From_Env_Description"]], "seldonian.RL.Agents.Function_Approximators.Table.Q_Table": [[17, 2, 1, "", "__init__"], [17, 2, 1, "", "__repr__"], [17, 2, 1, "", "from_environment_state_to_0_indexed_state"], [17, 2, 1, "", "get_action_values_given_state"], [17, 2, 1, "", "get_action_values_given_zero_indexed_state"], [17, 2, 1, "", "set_new_params"]], "seldonian.RL.Agents.Function_Approximators.Table.Table": [[18, 2, 1, "", "__init__"], [18, 2, 1, "", "__repr__"], [18, 2, 1, "", "from_environment_state_to_0_indexed_state"], [18, 2, 1, "", "set_new_params"]], "seldonian.RL.Agents.Parameterized_non_learning_softmax_agent": [[21, 1, 1, "", "Parameterized_non_learning_softmax_agent"]], "seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.Parameterized_non_learning_softmax_agent": [[21, 2, 1, "", "__init__"], [21, 2, 1, "", "__repr__"], [21, 2, 1, "", "choose_action"], [21, 2, 1, "", "get_action_values"], [21, 2, 1, "", "get_params"], [21, 2, 1, "", "get_prob_this_action"], [21, 2, 1, "", "set_new_params"], [21, 2, 1, "", "update"]], "seldonian.RL.Agents.Policies": [[23, 0, 0, "-", "Policy"], [26, 0, 0, "-", "Softmax"]], "seldonian.RL.Agents.Policies.Policy": [[24, 1, 1, "", "Discrete_Action_Policy"], [25, 1, 1, "", "Policy"]], "seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy": [[24, 2, 1, "", "__init__"], [24, 2, 1, "", "__repr__"], [24, 2, 1, "", "choose_action"], [24, 2, 1, "", "construct_basis_and_linear_FA"], [24, 2, 1, "", "from_0_indexed_action_to_environment_action"], [24, 2, 1, "", "from_environment_action_to_0_indexed_action"], [24, 2, 1, "", "get_action_values_given_state"], [24, 2, 1, "", "get_params"], [24, 2, 1, "", "get_prob_this_action"], [24, 2, 1, "", "make_state_action_FA"], [24, 2, 1, "", "set_new_params"]], "seldonian.RL.Agents.Policies.Policy.Policy": [[25, 2, 1, "", "__init__"], [25, 2, 1, "", "__repr__"], [25, 2, 1, "", "choose_action"], [25, 2, 1, "", "get_params"], [25, 2, 1, "", "get_prob_this_action"], [25, 2, 1, "", "set_new_params"]], "seldonian.RL.Agents.Policies.Softmax": [[27, 1, 1, "", "DiscreteSoftmax"], [28, 1, 1, "", "Softmax"]], "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax": [[27, 2, 1, "", "__init__"], [27, 2, 1, "", "__repr__"], [27, 2, 1, "", "_arg"], [27, 2, 1, "", "_denom"], [27, 2, 1, "", "choose_action"], [27, 2, 1, "", "choose_action_from_action_values"], [27, 2, 1, "", "construct_basis_and_linear_FA"], [27, 2, 1, "", "from_0_indexed_action_to_environment_action"], [27, 2, 1, "", "from_environment_action_to_0_indexed_action"], [27, 2, 1, "", "get_action_probs_from_action_values"], [27, 2, 1, "", "get_action_values_given_state"], [27, 2, 1, "", "get_e_to_the_something_terms"], [27, 2, 1, "", "get_params"], [27, 2, 1, "", "get_prob_this_action"], [27, 2, 1, "", "make_state_action_FA"], [27, 2, 1, "", "set_new_params"]], "seldonian.RL.Agents.Policies.Softmax.Softmax": [[28, 2, 1, "", "__init__"], [28, 2, 1, "", "__repr__"], [28, 2, 1, "", "choose_action"], [28, 2, 1, "", "choose_action_from_action_values"], [28, 2, 1, "", "construct_basis_and_linear_FA"], [28, 2, 1, "", "from_0_indexed_action_to_environment_action"], [28, 2, 1, "", "from_environment_action_to_0_indexed_action"], [28, 2, 1, "", "get_action_probs_from_action_values"], [28, 2, 1, "", "get_action_values_given_state"], [28, 2, 1, "", "get_e_to_the_something_terms"], [28, 2, 1, "", "get_params"], [28, 2, 1, "", "get_prob_this_action"], [28, 2, 1, "", "make_state_action_FA"], [28, 2, 1, "", "set_new_params"]], "seldonian.RL.Agents.keyboard_gridworld": [[30, 1, 1, "", "Keyboard_gridworld"]], "seldonian.RL.Agents.keyboard_gridworld.Keyboard_gridworld": [[30, 2, 1, "", "__init__"], [30, 2, 1, "", "__repr__"], [30, 2, 1, "", "choose_action"], [30, 2, 1, "", "get_prob_this_action"], [30, 2, 1, "", "update"]], "seldonian.RL.Agents.mountain_car_rough_solution": [[32, 1, 1, "", "Mountain_car_rough_solution"]], "seldonian.RL.Agents.mountain_car_rough_solution.Mountain_car_rough_solution": [[32, 2, 1, "", "__init__"], [32, 2, 1, "", "__repr__"], [32, 2, 1, "", "choose_action"], [32, 2, 1, "", "get_prob_this_action"], [32, 2, 1, "", "update"]], "seldonian.RL.Env_Description": [[34, 0, 0, "-", "Env_Description"], [37, 0, 0, "-", "Spaces"]], "seldonian.RL.Env_Description.Env_Description": [[35, 1, 1, "", "Env_Description"], [36, 3, 1, "", "check_space_type"]], "seldonian.RL.Env_Description.Env_Description.Env_Description": [[35, 2, 1, "", "__init__"], [35, 2, 1, "", "__repr__"], [35, 2, 1, "", "get_min_action"], [35, 2, 1, "", "get_min_state"], [35, 2, 1, "", "get_num_actions"], [35, 2, 1, "", "get_num_observation_dims"], [35, 2, 1, "", "get_num_states"]], "seldonian.RL.Env_Description.Spaces": [[38, 1, 1, "", "Continuous_Space"], [39, 1, 1, "", "Discrete_Space"]], "seldonian.RL.Env_Description.Spaces.Continuous_Space": [[38, 2, 1, "", "__init__"], [38, 2, 1, "", "__repr__"], [38, 2, 1, "", "check_bounds_valid"], [38, 2, 1, "", "get_num_dims"]], "seldonian.RL.Env_Description.Spaces.Discrete_Space": [[39, 2, 1, "", "__init__"], [39, 2, 1, "", "__repr__"], [39, 2, 1, "", "get_num_values"]], "seldonian.RL.RL_generate_dataset_and_spec_file": [[41, 3, 1, "", "get_constraint_string"], [42, 3, 1, "", "get_env_kwargs"], [43, 3, 1, "", "get_metadata_path"], [44, 3, 1, "", "main"], [45, 3, 1, "", "print_return_info"]], "seldonian.RL.RL_model": [[47, 1, 1, "", "RL_model"]], "seldonian.RL.RL_model.RL_model": [[47, 2, 1, "", "__init__"], [47, 2, 1, "", "__repr__"], [47, 2, 1, "", "get_prob_this_action"], [47, 2, 1, "", "get_probs_from_observations_and_actions"]], "seldonian.RL.RL_runner": [[49, 3, 1, "", "create_agent"], [50, 3, 1, "", "create_env"], [51, 3, 1, "", "run_all_trials"], [52, 3, 1, "", "run_episode"], [53, 3, 1, "", "run_episode_from_dict"], [54, 3, 1, "", "run_trial"], [55, 3, 1, "", "run_trial_given_agent_and_env"]], "seldonian.RL.environments": [[57, 0, 0, "-", "Environment"], [59, 0, 0, "-", "gridworld"], [61, 0, 0, "-", "mountaincar"], [63, 0, 0, "-", "n_step_mountaincar"], [65, 0, 0, "-", "simglucose_env"]], "seldonian.RL.environments.Environment": [[58, 1, 1, "", "Environment"]], "seldonian.RL.environments.Environment.Environment": [[58, 2, 1, "", "__init__"], [58, 2, 1, "", "__repr__"], [58, 2, 1, "", "get_env_description"], [58, 2, 1, "", "get_observation"], [58, 2, 1, "", "reset"], [58, 2, 1, "", "start_visualizing"], [58, 2, 1, "", "stop_visualizing"], [58, 2, 1, "", "terminated"], [58, 2, 1, "", "transition"], [58, 2, 1, "", "visualize"]], "seldonian.RL.environments.gridworld": [[60, 1, 1, "", "Gridworld"]], "seldonian.RL.environments.gridworld.Gridworld": [[60, 2, 1, "", "__init__"], [60, 2, 1, "", "__repr__"], [60, 2, 1, "", "create_env_description"], [60, 2, 1, "", "get_env_description"], [60, 2, 1, "", "get_observation"], [60, 2, 1, "", "is_in_goal_state"], [60, 2, 1, "", "reset"], [60, 2, 1, "", "start_visualizing"], [60, 2, 1, "", "stop_visualizing"], [60, 2, 1, "", "terminated"], [60, 2, 1, "", "transition"], [60, 2, 1, "", "update_position"], [60, 2, 1, "", "visualize"]], "seldonian.RL.environments.mountaincar": [[62, 1, 1, "", "Mountaincar"]], "seldonian.RL.environments.mountaincar.Mountaincar": [[62, 2, 1, "", "__init__"], [62, 2, 1, "", "__repr__"], [62, 2, 1, "", "get_env_description"], [62, 2, 1, "", "get_observation"], [62, 2, 1, "", "reset"], [62, 2, 1, "", "start_visualizing"], [62, 2, 1, "", "stop_visualizing"], [62, 2, 1, "", "terminated"], [62, 2, 1, "", "transition"], [62, 2, 1, "", "visualize"]], "seldonian.RL.environments.n_step_mountaincar": [[64, 1, 1, "", "N_step_mountaincar"]], "seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar": [[64, 2, 1, "", "__init__"], [64, 2, 1, "", "__repr__"], [64, 2, 1, "", "get_env_description"], [64, 2, 1, "", "get_observation"], [64, 2, 1, "", "reset"], [64, 2, 1, "", "start_visualizing"], [64, 2, 1, "", "stop_visualizing"], [64, 2, 1, "", "terminated"], [64, 2, 1, "", "transition"], [64, 2, 1, "", "visualize"]], "seldonian.RL.environments.simglucose_env": [[66, 1, 1, "", "Simglucose"]], "seldonian.RL.environments.simglucose_env.Simglucose": [[66, 2, 1, "", "__init__"], [66, 2, 1, "", "__repr__"], [66, 2, 1, "", "get_env_description"], [66, 2, 1, "", "get_observation"], [66, 2, 1, "", "reset"], [66, 2, 1, "", "start_visualizing"], [66, 2, 1, "", "stop_visualizing"], [66, 2, 1, "", "terminated"], [66, 2, 1, "", "transition"], [66, 2, 1, "", "visualize"]], "seldonian.RL.generate_mountaincar_episodes": [[68, 3, 1, "", "main"]], "seldonian.RL.generate_simglucose_episodes": [[70, 3, 1, "", "get_max_obs"], [71, 3, 1, "", "main"]], "seldonian.RL.hyperparams_and_settings": [[73, 3, 1, "", "define_hyperparameter_and_setting_dict"]], "seldonian.candidate_selection": [[75, 0, 0, "-", "candidate_selection"]], "seldonian.candidate_selection.candidate_selection": [[76, 1, 1, "", "CandidateSelection"]], "seldonian.candidate_selection.candidate_selection.CandidateSelection": [[76, 2, 1, "", "__init__"], [76, 2, 1, "", "__repr__"], [76, 2, 1, "", "evaluate_primary_objective"], [76, 2, 1, "", "get_constraint_upper_bounds"], [76, 2, 1, "", "objective_with_barrier"], [76, 2, 1, "", "run"]], "seldonian.dataset": [[78, 1, 1, "", "DataSet"], [79, 1, 1, "", "DataSetLoader"], [80, 1, 1, "", "Episode"], [81, 1, 1, "", "RLDataSet"], [82, 1, 1, "", "SupervisedDataSet"]], "seldonian.dataset.DataSet": [[78, 2, 1, "", "__init__"], [78, 2, 1, "", "__repr__"]], "seldonian.dataset.DataSetLoader": [[79, 2, 1, "", "__init__"], [79, 2, 1, "", "__repr__"], [79, 2, 1, "", "load_RL_dataset_from_csv"], [79, 2, 1, "", "load_RL_dataset_from_episode_file"], [79, 2, 1, "", "load_supervised_dataset"]], "seldonian.dataset.Episode": [[80, 2, 1, "", "__init__"], [80, 2, 1, "", "__repr__"]], "seldonian.dataset.RLDataSet": [[81, 2, 1, "", "__init__"], [81, 2, 1, "", "__repr__"]], "seldonian.dataset.SupervisedDataSet": [[82, 2, 1, "", "__init__"], [82, 2, 1, "", "__repr__"]], "seldonian.models": [[84, 0, 0, "-", "models"], [94, 0, 0, "-", "objectives"]], "seldonian.models.models": [[85, 1, 1, "", "BoundedLinearRegressionModel"], [86, 1, 1, "", "ClassificationModel"], [87, 1, 1, "", "DummyClassifierModel"], [88, 1, 1, "", "LinearRegressionModel"], [89, 1, 1, "", "LogisticRegressionModel"], [90, 1, 1, "", "RandomClassifierModel"], [91, 1, 1, "", "RegressionModel"], [92, 1, 1, "", "SeldonianModel"], [93, 1, 1, "", "SupervisedModel"]], "seldonian.models.models.BoundedLinearRegressionModel": [[85, 2, 1, "", "__init__"], [85, 2, 1, "", "__repr__"], [85, 2, 1, "", "fit"], [85, 2, 1, "", "predict"]], "seldonian.models.models.ClassificationModel": [[86, 2, 1, "", "__init__"], [86, 2, 1, "", "__repr__"]], "seldonian.models.models.DummyClassifierModel": [[87, 2, 1, "", "__init__"], [87, 2, 1, "", "__repr__"], [87, 2, 1, "", "predict"]], "seldonian.models.models.LinearRegressionModel": [[88, 2, 1, "", "__init__"], [88, 2, 1, "", "__repr__"], [88, 2, 1, "", "fit"], [88, 2, 1, "", "predict"]], "seldonian.models.models.LogisticRegressionModel": [[89, 2, 1, "", "__init__"], [89, 2, 1, "", "__repr__"], [89, 2, 1, "", "fit"], [89, 2, 1, "", "predict"]], "seldonian.models.models.RandomClassifierModel": [[90, 2, 1, "", "__init__"], [90, 2, 1, "", "__repr__"], [90, 2, 1, "", "predict"]], "seldonian.models.models.RegressionModel": [[91, 2, 1, "", "__init__"], [91, 2, 1, "", "__repr__"]], "seldonian.models.models.SeldonianModel": [[92, 2, 1, "", "__init__"], [92, 2, 1, "", "__repr__"]], "seldonian.models.models.SupervisedModel": [[93, 2, 1, "", "__init__"], [93, 2, 1, "", "__repr__"]], "seldonian.models.objectives": [[95, 3, 1, "", "False_Negative_Rate"], [96, 3, 1, "", "False_Positive_Rate"], [97, 3, 1, "", "IS_estimate"], [98, 3, 1, "", "Mean_Error"], [99, 3, 1, "", "Mean_Squared_Error"], [100, 3, 1, "", "Negative_Rate"], [101, 3, 1, "", "Positive_Rate"], [102, 3, 1, "", "True_Negative_Rate"], [103, 3, 1, "", "True_Positive_Rate"], [104, 3, 1, "", "evaluate_statistic"], [105, 3, 1, "", "gradient_Bounded_Squared_Error"], [106, 3, 1, "", "gradient_Mean_Squared_Error"], [107, 3, 1, "", "gradient_logistic_loss"], [108, 3, 1, "", "logistic_loss"], [109, 3, 1, "", "sample_from_statistic"], [110, 3, 1, "", "vector_Error"], [111, 3, 1, "", "vector_False_Negative_Rate"], [112, 3, 1, "", "vector_False_Positive_Rate"], [113, 3, 1, "", "vector_IS_estimate"], [114, 3, 1, "", "vector_Negative_Rate"], [115, 3, 1, "", "vector_Positive_Rate"], [116, 3, 1, "", "vector_Squared_Error"], [117, 3, 1, "", "vector_True_Negative_Rate"], [118, 3, 1, "", "vector_True_Positive_Rate"], [119, 3, 1, "", "vector_logistic_loss"]], "seldonian.optimizers": [[121, 0, 0, "-", "gradient_descent"]], "seldonian.optimizers.gradient_descent": [[122, 3, 1, "", "gradient_descent_adam"], [123, 3, 1, "", "setup_gradients"]], "seldonian.parse_tree": [[125, 0, 0, "-", "nodes"], [132, 0, 0, "-", "operators"], [133, 0, 0, "-", "parse_tree"]], "seldonian.parse_tree.nodes": [[126, 1, 1, "", "BaseNode"], [127, 1, 1, "", "CVaRSQeBaseNode"], [128, 1, 1, "", "ConstantNode"], [129, 1, 1, "", "InternalNode"], [130, 1, 1, "", "MEDCustomBaseNode"], [131, 1, 1, "", "Node"]], "seldonian.parse_tree.nodes.BaseNode": [[126, 2, 1, "", "__init__"], [126, 2, 1, "", "__repr__"], [126, 2, 1, "", "calculate_bounds"], [126, 2, 1, "", "calculate_data_forbound"], [126, 2, 1, "", "calculate_value"], [126, 2, 1, "", "compute_HC_lowerbound"], [126, 2, 1, "", "compute_HC_upper_and_lowerbound"], [126, 2, 1, "", "compute_HC_upperbound"], [126, 2, 1, "", "mask_dataframe"], [126, 2, 1, "", "predict_HC_lowerbound"], [126, 2, 1, "", "predict_HC_upper_and_lowerbound"], [126, 2, 1, "", "predict_HC_upperbound"], [126, 2, 1, "", "zhat"]], "seldonian.parse_tree.nodes.CVaRSQeBaseNode": [[127, 2, 1, "", "__init__"], [127, 2, 1, "", "__repr__"], [127, 2, 1, "", "calculate_bounds"], [127, 2, 1, "", "calculate_data_forbound"], [127, 2, 1, "", "calculate_value"], [127, 2, 1, "", "compute_HC_lowerbound"], [127, 2, 1, "", "compute_HC_upper_and_lowerbound"], [127, 2, 1, "", "compute_HC_upperbound"], [127, 2, 1, "", "mask_dataframe"], [127, 2, 1, "", "predict_HC_lowerbound"], [127, 2, 1, "", "predict_HC_upper_and_lowerbound"], [127, 2, 1, "", "predict_HC_upperbound"], [127, 2, 1, "", "zhat"]], "seldonian.parse_tree.nodes.ConstantNode": [[128, 2, 1, "", "__init__"], [128, 2, 1, "", "__repr__"]], "seldonian.parse_tree.nodes.InternalNode": [[129, 2, 1, "", "__init__"], [129, 2, 1, "", "__repr__"]], "seldonian.parse_tree.nodes.MEDCustomBaseNode": [[130, 2, 1, "", "__init__"], [130, 2, 1, "", "__repr__"], [130, 2, 1, "", "calculate_bounds"], [130, 2, 1, "", "calculate_data_forbound"], [130, 2, 1, "", "calculate_value"], [130, 2, 1, "", "compute_HC_lowerbound"], [130, 2, 1, "", "compute_HC_upper_and_lowerbound"], [130, 2, 1, "", "compute_HC_upperbound"], [130, 2, 1, "", "mask_dataframe"], [130, 2, 1, "", "precalculate_data"], [130, 2, 1, "", "predict_HC_lowerbound"], [130, 2, 1, "", "predict_HC_upper_and_lowerbound"], [130, 2, 1, "", "predict_HC_upperbound"], [130, 2, 1, "", "zhat"]], "seldonian.parse_tree.nodes.Node": [[131, 2, 1, "", "__init__"], [131, 2, 1, "", "__repr__"]], "seldonian.parse_tree.operators": [[132, 4, 1, "", "bounds_required_dict"], [132, 4, 1, "", "custom_base_node_dict"], [132, 4, 1, "", "measure_functions_dict"], [132, 4, 1, "", "not_supported_op_mapper"], [132, 4, 1, "", "op_mapper"]], "seldonian.parse_tree.parse_tree": [[134, 1, 1, "", "ParseTree"], [135, 3, 1, "", "make_parse_trees_from_constraints"]], "seldonian.parse_tree.parse_tree.ParseTree": [[134, 2, 1, "", "__init__"], [134, 2, 1, "", "__repr__"], [134, 2, 1, "", "_abs"], [134, 2, 1, "", "_add"], [134, 2, 1, "", "_assign_bounds_helper"], [134, 2, 1, "", "_assign_deltas_helper"], [134, 2, 1, "", "_ast2pt_node"], [134, 2, 1, "", "_ast_tree_helper"], [134, 2, 1, "", "_div"], [134, 2, 1, "", "_evaluator_helper"], [134, 2, 1, "", "_exp"], [134, 2, 1, "", "_max"], [134, 2, 1, "", "_min"], [134, 2, 1, "", "_mult"], [134, 2, 1, "", "_pow"], [134, 2, 1, "", "_preprocess_constraint_str"], [134, 2, 1, "", "_propagate_value"], [134, 2, 1, "", "_propagator_helper"], [134, 2, 1, "", "_protect_nan"], [134, 2, 1, "", "_sub"], [134, 2, 1, "", "assign_bounds_needed"], [134, 2, 1, "", "assign_deltas"], [134, 2, 1, "", "build_tree"], [134, 2, 1, "", "create_from_ast"], [134, 2, 1, "", "evaluate_constraint"], [134, 2, 1, "", "make_viz"], [134, 2, 1, "", "make_viz_helper"], [134, 2, 1, "", "propagate"], [134, 2, 1, "", "propagate_bounds"], [134, 2, 1, "", "reset_base_node_dict"]], "seldonian.safety_test": [[137, 0, 0, "-", "safety_test"]], "seldonian.safety_test.safety_test": [[138, 1, 1, "", "SafetyTest"]], "seldonian.safety_test.safety_test.SafetyTest": [[138, 2, 1, "", "__init__"], [138, 2, 1, "", "__repr__"], [138, 2, 1, "", "evaluate_primary_objective"], [138, 2, 1, "", "run"]], "seldonian.seldonian_algorithm": [[140, 1, 1, "", "SeldonianAlgorithm"]], "seldonian.seldonian_algorithm.SeldonianAlgorithm": [[140, 2, 1, "", "__init__"], [140, 2, 1, "", "__repr__"], [140, 2, 1, "", "candidate_selection"], [140, 2, 1, "", "evaluate_primary_objective"], [140, 2, 1, "", "run"], [140, 2, 1, "", "run_safety_test"], [140, 2, 1, "", "safety_test"]], "seldonian.spec": [[142, 1, 1, "", "RLSpec"], [143, 1, 1, "", "Spec"], [144, 1, 1, "", "SupervisedSpec"], [145, 3, 1, "", "createRLSpec"], [146, 3, 1, "", "createSupervisedSpec"]], "seldonian.spec.RLSpec": [[142, 2, 1, "", "__init__"], [142, 2, 1, "", "__repr__"]], "seldonian.spec.Spec": [[143, 2, 1, "", "__init__"], [143, 2, 1, "", "__repr__"]], "seldonian.spec.SupervisedSpec": [[144, 2, 1, "", "__init__"], [144, 2, 1, "", "__repr__"]], "seldonian.utils": [[148, 0, 0, "-", "RL_utils"], [152, 0, 0, "-", "io_utils"], [159, 0, 0, "-", "plot_utils"], [161, 0, 0, "-", "stats_utils"], [165, 0, 0, "-", "tutorial_utils"]], "seldonian.utils.RL_utils": [[149, 3, 1, "", "argmax_multi"], [150, 3, 1, "", "clamp"], [151, 3, 1, "", "error"]], "seldonian.utils.io_utils": [[153, 3, 1, "", "dir_path"], [154, 3, 1, "", "load_json"], [155, 3, 1, "", "load_pickle"], [156, 3, 1, "", "load_supervised_metadata"], [157, 3, 1, "", "save_json"], [158, 3, 1, "", "save_pickle"]], "seldonian.utils.plot_utils": [[160, 3, 1, "", "plot_gradient_descent"]], "seldonian.utils.stats_utils": [[162, 3, 1, "", "stddev"], [163, 3, 1, "", "tinv"], [164, 3, 1, "", "weighted_sum_gamma"]], "seldonian.utils.tutorial_utils": [[166, 3, 1, "", "generate_clipped_data"], [167, 3, 1, "", "generate_data"], [168, 3, 1, "", "make_synthetic_regression_dataset"]], "seldonian.warnings": [[170, 0, 0, "-", "custom_warnings"]], "seldonian.warnings.custom_warnings": [[171, 3, 1, "", "custom_formatwarning"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "data", "Python data"]}, "titleterms": {"seldonian": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 174], "rl": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73], "agent": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32], "base": [5, 6, 7], "fourier": [6, 7], "discrete_random_ag": [8, 9], "function_approxim": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "linear_fa": [13, 14, 15], "linear_state_action_value_fa": 15, "tabl": [16, 17, 18, 19, 174], "q_tabl": 17, "construct_q_table_from_env_descript": 19, "parameterized_non_learning_softmax_ag": [20, 21], "polici": [22, 23, 24, 25, 26, 27, 28], "discrete_action_polici": 24, "softmax": [26, 27, 28], "discretesoftmax": 27, "keyboard_gridworld": [29, 30], "mountain_car_rough_solut": [31, 32], "env_descript": [33, 34, 35, 36, 37, 38, 39], "check_space_typ": 36, "space": [37, 38, 39], "continuous_spac": 38, "discrete_spac": 39, "rl_generate_dataset_and_spec_fil": [40, 41, 42, 43, 44, 45], "get_constraint_str": 41, "get_env_kwarg": 42, "get_metadata_path": 43, "main": [44, 68, 71], "print_return_info": 45, "rl_model": [46, 47], "rl_runner": [48, 49, 50, 51, 52, 53, 54, 55], "create_ag": 49, "create_env": 50, "run_all_tri": 51, "run_episod": 52, "run_episode_from_dict": 53, "run_trial": 54, "run_trial_given_agent_and_env": 55, "environ": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66], "gridworld": [59, 60], "mountaincar": [61, 62], "n_step_mountaincar": [63, 64], "simglucose_env": [65, 66], "simglucos": 66, "generate_mountaincar_episod": [67, 68], "generate_simglucose_episod": [69, 70, 71], "get_max_ob": 70, "hyperparams_and_set": [72, 73], "define_hyperparameter_and_setting_dict": 73, "candidate_select": [74, 75, 76], "candidateselect": 76, "dataset": [77, 78, 79, 80, 81, 82, 175], "datasetload": 79, "episod": 80, "rldataset": 81, "superviseddataset": 82, "model": [83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 175], "boundedlinearregressionmodel": 85, "classificationmodel": 86, "dummyclassifiermodel": 87, "linearregressionmodel": 88, "logisticregressionmodel": 89, "randomclassifiermodel": 90, "regressionmodel": 91, "seldonianmodel": 92, "supervisedmodel": 93, "object": [94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 175], "false_negative_r": 95, "false_positive_r": 96, "is_estim": 97, "mean_error": 98, "mean_squared_error": 99, "negative_r": 100, "positive_r": 101, "true_negative_r": 102, "true_positive_r": 103, "evaluate_statist": 104, "gradient_bounded_squared_error": 105, "gradient_mean_squared_error": 106, "gradient_logistic_loss": 107, "logistic_loss": 108, "sample_from_statist": 109, "vector_error": 110, "vector_false_negative_r": 111, "vector_false_positive_r": 112, "vector_is_estim": 113, "vector_negative_r": 114, "vector_positive_r": 115, "vector_squared_error": 116, "vector_true_negative_r": 117, "vector_true_positive_r": 118, "vector_logistic_loss": 119, "optim": [120, 121, 122, 123], "gradient_desc": [121, 122, 123], "gradient_descent_adam": 122, "setup_gradi": 123, "parse_tre": [124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135], "node": [125, 126, 127, 128, 129, 130, 131], "basenod": 126, "cvarsqebasenod": 127, "constantnod": 128, "internalnod": 129, "medcustombasenod": 130, "oper": 132, "parsetre": 134, "make_parse_trees_from_constraint": 135, "safety_test": [136, 137, 138], "safetytest": 138, "seldonian_algorithm": [139, 140], "seldonianalgorithm": 140, "spec": [141, 142, 143, 144, 145, 146, 175], "rlspec": 142, "supervisedspec": 144, "createrlspec": 145, "createsupervisedspec": 146, "util": [147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168], "rl_util": [148, 149, 150, 151], "argmax_multi": 149, "clamp": 150, "error": 151, "io_util": [152, 153, 154, 155, 156, 157, 158], "dir_path": 153, "load_json": 154, "load_pickl": 155, "load_supervised_metadata": 156, "save_json": 157, "save_pickl": 158, "plot_util": [159, 160], "plot_gradient_desc": 160, "stats_util": [161, 162, 163, 164], "stddev": 162, "tinv": 163, "weighted_sum_gamma": 164, "tutorial_util": [165, 166, 167, 168], "generate_clipped_data": 166, "generate_data": 167, "make_synthetic_regression_dataset": 168, "warn": [169, 170, 171], "custom_warn": [170, 171], "custom_formatwarn": 171, "api": 172, "get": 173, "start": 173, "instal": 173, "A": 173, "first": 173, "tutori": 173, "engin": 174, "document": 174, "content": 174, "overview": 175, "interfac": 175, "behavior": 175, "constraint": 175, "string": 175, "what": 175, "doe": 175, "sa": 175, "run": 175, "do": 175, "candid": 175, "select": 175, "safeti": 175, "test": 175}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 56}})