Search.setIndex({"docnames": ["_autosummary/seldonian", "_autosummary/seldonian.RL", "_autosummary/seldonian.RL.Agents", "_autosummary/seldonian.RL.Agents.Agent", "_autosummary/seldonian.RL.Agents.Agent.Agent", "_autosummary/seldonian.RL.Agents.Bases", "_autosummary/seldonian.RL.Agents.Bases.Fourier", "_autosummary/seldonian.RL.Agents.Bases.Fourier.Fourier", "_autosummary/seldonian.RL.Agents.Discrete_Random_Agent", "_autosummary/seldonian.RL.Agents.Discrete_Random_Agent.Discrete_Random_Agent", "_autosummary/seldonian.RL.Agents.Function_Approximators", "_autosummary/seldonian.RL.Agents.Function_Approximators.Function_Approximator", "_autosummary/seldonian.RL.Agents.Function_Approximators.Function_Approximator.Function_Approximator", "_autosummary/seldonian.RL.Agents.Function_Approximators.Linear_FA", "_autosummary/seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_FA", "_autosummary/seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_state_action_value_FA", "_autosummary/seldonian.RL.Agents.Function_Approximators.Table", "_autosummary/seldonian.RL.Agents.Function_Approximators.Table.Q_Table", "_autosummary/seldonian.RL.Agents.Function_Approximators.Table.Table", "_autosummary/seldonian.RL.Agents.Function_Approximators.Table.construct_Q_Table_From_Env_Description", "_autosummary/seldonian.RL.Agents.Parameterized_non_learning_softmax_agent", "_autosummary/seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.Parameterized_non_learning_softmax_agent", "_autosummary/seldonian.RL.Agents.Policies", "_autosummary/seldonian.RL.Agents.Policies.Policy", "_autosummary/seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy", "_autosummary/seldonian.RL.Agents.Policies.Policy.Policy", "_autosummary/seldonian.RL.Agents.Policies.Softmax", "_autosummary/seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax", "_autosummary/seldonian.RL.Agents.Policies.Softmax.Softmax", "_autosummary/seldonian.RL.Agents.keyboard_gridworld", "_autosummary/seldonian.RL.Agents.keyboard_gridworld.Keyboard_gridworld", "_autosummary/seldonian.RL.Agents.mountain_car_rough_solution", "_autosummary/seldonian.RL.Agents.mountain_car_rough_solution.Mountain_car_rough_solution", "_autosummary/seldonian.RL.Env_Description", "_autosummary/seldonian.RL.Env_Description.Env_Description", "_autosummary/seldonian.RL.Env_Description.Env_Description.Env_Description", "_autosummary/seldonian.RL.Env_Description.Env_Description.check_space_type", "_autosummary/seldonian.RL.Env_Description.Spaces", "_autosummary/seldonian.RL.Env_Description.Spaces.Continuous_Space", "_autosummary/seldonian.RL.Env_Description.Spaces.Discrete_Space", "_autosummary/seldonian.RL.RL_generate_dataset_and_spec_file", "_autosummary/seldonian.RL.RL_generate_dataset_and_spec_file.get_constraint_string", "_autosummary/seldonian.RL.RL_generate_dataset_and_spec_file.get_env_kwargs", "_autosummary/seldonian.RL.RL_generate_dataset_and_spec_file.get_metadata_path", "_autosummary/seldonian.RL.RL_generate_dataset_and_spec_file.main", "_autosummary/seldonian.RL.RL_generate_dataset_and_spec_file.print_return_info", "_autosummary/seldonian.RL.RL_model", "_autosummary/seldonian.RL.RL_model.RL_model", "_autosummary/seldonian.RL.RL_runner", "_autosummary/seldonian.RL.RL_runner.create_agent", "_autosummary/seldonian.RL.RL_runner.create_env", "_autosummary/seldonian.RL.RL_runner.run_all_trials", "_autosummary/seldonian.RL.RL_runner.run_episode", "_autosummary/seldonian.RL.RL_runner.run_episode_from_dict", "_autosummary/seldonian.RL.RL_runner.run_trial", "_autosummary/seldonian.RL.RL_runner.run_trial_given_agent_and_env", "_autosummary/seldonian.RL.environments", "_autosummary/seldonian.RL.environments.Environment", "_autosummary/seldonian.RL.environments.Environment.Environment", "_autosummary/seldonian.RL.environments.gridworld", "_autosummary/seldonian.RL.environments.gridworld.Gridworld", "_autosummary/seldonian.RL.environments.mountaincar", "_autosummary/seldonian.RL.environments.mountaincar.Mountaincar", "_autosummary/seldonian.RL.environments.n_step_mountaincar", "_autosummary/seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar", "_autosummary/seldonian.RL.environments.simglucose_env", "_autosummary/seldonian.RL.environments.simglucose_env.Simglucose", "_autosummary/seldonian.RL.generate_gridworld_episodes", "_autosummary/seldonian.RL.generate_gridworld_episodes.main", "_autosummary/seldonian.RL.generate_mountaincar_episodes", "_autosummary/seldonian.RL.generate_mountaincar_episodes.main", "_autosummary/seldonian.RL.generate_simglucose_episodes", "_autosummary/seldonian.RL.generate_simglucose_episodes.get_max_obs", "_autosummary/seldonian.RL.generate_simglucose_episodes.main", "_autosummary/seldonian.RL.hyperparams_and_settings", "_autosummary/seldonian.RL.hyperparams_and_settings.define_hyperparameter_and_setting_dict", "_autosummary/seldonian.candidate_selection", "_autosummary/seldonian.candidate_selection.candidate_selection", "_autosummary/seldonian.candidate_selection.candidate_selection.CandidateSelection", "_autosummary/seldonian.dataset", "_autosummary/seldonian.dataset.DataSet", "_autosummary/seldonian.dataset.DataSetLoader", "_autosummary/seldonian.dataset.Episode", "_autosummary/seldonian.dataset.RLDataSet", "_autosummary/seldonian.dataset.SupervisedDataSet", "_autosummary/seldonian.dataset.load_supervised_metadata", "_autosummary/seldonian.models", "_autosummary/seldonian.models.models", "_autosummary/seldonian.models.models.BaseLogisticRegressionModel", "_autosummary/seldonian.models.models.BinaryLogisticRegressionModel", "_autosummary/seldonian.models.models.BoundedLinearRegressionModel", "_autosummary/seldonian.models.models.ClassificationModel", "_autosummary/seldonian.models.models.DummyClassifierModel", "_autosummary/seldonian.models.models.LinearRegressionModel", "_autosummary/seldonian.models.models.LinearRegressionModelListFeatures", "_autosummary/seldonian.models.models.MultiClassLogisticRegressionModel", "_autosummary/seldonian.models.models.RandomClassifierModel", "_autosummary/seldonian.models.models.RegressionModel", "_autosummary/seldonian.models.models.SeldonianModel", "_autosummary/seldonian.models.models.SupervisedModel", "_autosummary/seldonian.models.objectives", "_autosummary/seldonian.models.objectives.Accuracy_binary", "_autosummary/seldonian.models.objectives.Accuracy_multiclass", "_autosummary/seldonian.models.objectives.False_Negative_Rate", "_autosummary/seldonian.models.objectives.False_Positive_Rate", "_autosummary/seldonian.models.objectives.IS_estimate", "_autosummary/seldonian.models.objectives.Mean_Error", "_autosummary/seldonian.models.objectives.Mean_Squared_Error", "_autosummary/seldonian.models.objectives.Negative_Rate", "_autosummary/seldonian.models.objectives.Positive_Rate", "_autosummary/seldonian.models.objectives.True_Negative_Rate", "_autosummary/seldonian.models.objectives.True_Positive_Rate", "_autosummary/seldonian.models.objectives.binary_logistic_loss", "_autosummary/seldonian.models.objectives.confusion_matrix", "_autosummary/seldonian.models.objectives.evaluate_statistic", "_autosummary/seldonian.models.objectives.gradient_Bounded_Squared_Error", "_autosummary/seldonian.models.objectives.gradient_Mean_Squared_Error", "_autosummary/seldonian.models.objectives.gradient_binary_logistic_loss", "_autosummary/seldonian.models.objectives.multiclass_logistic_loss", "_autosummary/seldonian.models.objectives.sample_from_statistic", "_autosummary/seldonian.models.objectives.vector_Accuracy_binary", "_autosummary/seldonian.models.objectives.vector_Accuracy_multiclass", "_autosummary/seldonian.models.objectives.vector_Error", "_autosummary/seldonian.models.objectives.vector_False_Negative_Rate", "_autosummary/seldonian.models.objectives.vector_False_Positive_Rate", "_autosummary/seldonian.models.objectives.vector_IS_estimate", "_autosummary/seldonian.models.objectives.vector_Negative_Rate", "_autosummary/seldonian.models.objectives.vector_Positive_Rate", "_autosummary/seldonian.models.objectives.vector_Squared_Error", "_autosummary/seldonian.models.objectives.vector_True_Negative_Rate", "_autosummary/seldonian.models.objectives.vector_True_Positive_Rate", "_autosummary/seldonian.models.objectives.vector_confusion_matrix", "_autosummary/seldonian.models.pytorch_cnn", "_autosummary/seldonian.models.pytorch_cnn.PytorchCNN", "_autosummary/seldonian.models.pytorch_model", "_autosummary/seldonian.models.pytorch_model.PytorchLRTestModel", "_autosummary/seldonian.models.pytorch_model.SupervisedPytorchBaseModel", "_autosummary/seldonian.models.pytorch_model.pytorch_predict_vjp", "_autosummary/seldonian.optimizers", "_autosummary/seldonian.optimizers.gradient_descent", "_autosummary/seldonian.optimizers.gradient_descent.gradient_descent_adam", "_autosummary/seldonian.optimizers.gradient_descent.setup_gradients", "_autosummary/seldonian.parse_tree", "_autosummary/seldonian.parse_tree.nodes", "_autosummary/seldonian.parse_tree.nodes.BaseNode", "_autosummary/seldonian.parse_tree.nodes.CVaRSQeBaseNode", "_autosummary/seldonian.parse_tree.nodes.ConfusionMatrixBaseNode", "_autosummary/seldonian.parse_tree.nodes.ConstantNode", "_autosummary/seldonian.parse_tree.nodes.InternalNode", "_autosummary/seldonian.parse_tree.nodes.MEDCustomBaseNode", "_autosummary/seldonian.parse_tree.nodes.MultiClassBaseNode", "_autosummary/seldonian.parse_tree.nodes.Node", "_autosummary/seldonian.parse_tree.operators", "_autosummary/seldonian.parse_tree.parse_tree", "_autosummary/seldonian.parse_tree.parse_tree.ParseTree", "_autosummary/seldonian.parse_tree.parse_tree.make_parse_trees_from_constraints", "_autosummary/seldonian.safety_test", "_autosummary/seldonian.safety_test.safety_test", "_autosummary/seldonian.safety_test.safety_test.SafetyTest", "_autosummary/seldonian.seldonian_algorithm", "_autosummary/seldonian.seldonian_algorithm.SeldonianAlgorithm", "_autosummary/seldonian.spec", "_autosummary/seldonian.spec.RLSpec", "_autosummary/seldonian.spec.Spec", "_autosummary/seldonian.spec.SupervisedSpec", "_autosummary/seldonian.spec.createRLSpec", "_autosummary/seldonian.spec.createSupervisedSpec", "_autosummary/seldonian.spec.validate_parse_trees", "_autosummary/seldonian.utils", "_autosummary/seldonian.utils.RL_utils", "_autosummary/seldonian.utils.RL_utils.argmax_multi", "_autosummary/seldonian.utils.RL_utils.clamp", "_autosummary/seldonian.utils.RL_utils.error", "_autosummary/seldonian.utils.io_utils", "_autosummary/seldonian.utils.io_utils.dir_path", "_autosummary/seldonian.utils.io_utils.load_json", "_autosummary/seldonian.utils.io_utils.load_pickle", "_autosummary/seldonian.utils.io_utils.save_json", "_autosummary/seldonian.utils.io_utils.save_pickle", "_autosummary/seldonian.utils.plot_utils", "_autosummary/seldonian.utils.plot_utils.plot_gradient_descent", "_autosummary/seldonian.utils.stats_utils", "_autosummary/seldonian.utils.stats_utils.softmax", "_autosummary/seldonian.utils.stats_utils.stddev", "_autosummary/seldonian.utils.stats_utils.tinv", "_autosummary/seldonian.utils.stats_utils.weighted_sum_gamma", "_autosummary/seldonian.utils.tutorial_utils", "_autosummary/seldonian.utils.tutorial_utils.generate_clipped_data", "_autosummary/seldonian.utils.tutorial_utils.generate_data", "_autosummary/seldonian.utils.tutorial_utils.make_synthetic_regression_dataset", "_autosummary/seldonian.warnings", "_autosummary/seldonian.warnings.custom_warnings", "_autosummary/seldonian.warnings.custom_warnings.custom_formatwarning", "api", "getting_started", "index", "overview"], "filenames": ["_autosummary/seldonian.rst", "_autosummary/seldonian.RL.rst", "_autosummary/seldonian.RL.Agents.rst", "_autosummary/seldonian.RL.Agents.Agent.rst", "_autosummary/seldonian.RL.Agents.Agent.Agent.rst", "_autosummary/seldonian.RL.Agents.Bases.rst", "_autosummary/seldonian.RL.Agents.Bases.Fourier.rst", "_autosummary/seldonian.RL.Agents.Bases.Fourier.Fourier.rst", "_autosummary/seldonian.RL.Agents.Discrete_Random_Agent.rst", "_autosummary/seldonian.RL.Agents.Discrete_Random_Agent.Discrete_Random_Agent.rst", "_autosummary/seldonian.RL.Agents.Function_Approximators.rst", "_autosummary/seldonian.RL.Agents.Function_Approximators.Function_Approximator.rst", "_autosummary/seldonian.RL.Agents.Function_Approximators.Function_Approximator.Function_Approximator.rst", "_autosummary/seldonian.RL.Agents.Function_Approximators.Linear_FA.rst", "_autosummary/seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_FA.rst", "_autosummary/seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_state_action_value_FA.rst", "_autosummary/seldonian.RL.Agents.Function_Approximators.Table.rst", "_autosummary/seldonian.RL.Agents.Function_Approximators.Table.Q_Table.rst", "_autosummary/seldonian.RL.Agents.Function_Approximators.Table.Table.rst", "_autosummary/seldonian.RL.Agents.Function_Approximators.Table.construct_Q_Table_From_Env_Description.rst", "_autosummary/seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.rst", "_autosummary/seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.Parameterized_non_learning_softmax_agent.rst", "_autosummary/seldonian.RL.Agents.Policies.rst", "_autosummary/seldonian.RL.Agents.Policies.Policy.rst", "_autosummary/seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy.rst", "_autosummary/seldonian.RL.Agents.Policies.Policy.Policy.rst", "_autosummary/seldonian.RL.Agents.Policies.Softmax.rst", "_autosummary/seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax.rst", "_autosummary/seldonian.RL.Agents.Policies.Softmax.Softmax.rst", "_autosummary/seldonian.RL.Agents.keyboard_gridworld.rst", "_autosummary/seldonian.RL.Agents.keyboard_gridworld.Keyboard_gridworld.rst", "_autosummary/seldonian.RL.Agents.mountain_car_rough_solution.rst", "_autosummary/seldonian.RL.Agents.mountain_car_rough_solution.Mountain_car_rough_solution.rst", "_autosummary/seldonian.RL.Env_Description.rst", "_autosummary/seldonian.RL.Env_Description.Env_Description.rst", "_autosummary/seldonian.RL.Env_Description.Env_Description.Env_Description.rst", "_autosummary/seldonian.RL.Env_Description.Env_Description.check_space_type.rst", "_autosummary/seldonian.RL.Env_Description.Spaces.rst", "_autosummary/seldonian.RL.Env_Description.Spaces.Continuous_Space.rst", "_autosummary/seldonian.RL.Env_Description.Spaces.Discrete_Space.rst", "_autosummary/seldonian.RL.RL_generate_dataset_and_spec_file.rst", "_autosummary/seldonian.RL.RL_generate_dataset_and_spec_file.get_constraint_string.rst", "_autosummary/seldonian.RL.RL_generate_dataset_and_spec_file.get_env_kwargs.rst", "_autosummary/seldonian.RL.RL_generate_dataset_and_spec_file.get_metadata_path.rst", "_autosummary/seldonian.RL.RL_generate_dataset_and_spec_file.main.rst", "_autosummary/seldonian.RL.RL_generate_dataset_and_spec_file.print_return_info.rst", "_autosummary/seldonian.RL.RL_model.rst", "_autosummary/seldonian.RL.RL_model.RL_model.rst", "_autosummary/seldonian.RL.RL_runner.rst", "_autosummary/seldonian.RL.RL_runner.create_agent.rst", "_autosummary/seldonian.RL.RL_runner.create_env.rst", "_autosummary/seldonian.RL.RL_runner.run_all_trials.rst", "_autosummary/seldonian.RL.RL_runner.run_episode.rst", "_autosummary/seldonian.RL.RL_runner.run_episode_from_dict.rst", "_autosummary/seldonian.RL.RL_runner.run_trial.rst", "_autosummary/seldonian.RL.RL_runner.run_trial_given_agent_and_env.rst", "_autosummary/seldonian.RL.environments.rst", "_autosummary/seldonian.RL.environments.Environment.rst", "_autosummary/seldonian.RL.environments.Environment.Environment.rst", "_autosummary/seldonian.RL.environments.gridworld.rst", "_autosummary/seldonian.RL.environments.gridworld.Gridworld.rst", "_autosummary/seldonian.RL.environments.mountaincar.rst", "_autosummary/seldonian.RL.environments.mountaincar.Mountaincar.rst", "_autosummary/seldonian.RL.environments.n_step_mountaincar.rst", "_autosummary/seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar.rst", "_autosummary/seldonian.RL.environments.simglucose_env.rst", "_autosummary/seldonian.RL.environments.simglucose_env.Simglucose.rst", "_autosummary/seldonian.RL.generate_gridworld_episodes.rst", "_autosummary/seldonian.RL.generate_gridworld_episodes.main.rst", "_autosummary/seldonian.RL.generate_mountaincar_episodes.rst", "_autosummary/seldonian.RL.generate_mountaincar_episodes.main.rst", "_autosummary/seldonian.RL.generate_simglucose_episodes.rst", "_autosummary/seldonian.RL.generate_simglucose_episodes.get_max_obs.rst", "_autosummary/seldonian.RL.generate_simglucose_episodes.main.rst", "_autosummary/seldonian.RL.hyperparams_and_settings.rst", "_autosummary/seldonian.RL.hyperparams_and_settings.define_hyperparameter_and_setting_dict.rst", "_autosummary/seldonian.candidate_selection.rst", "_autosummary/seldonian.candidate_selection.candidate_selection.rst", "_autosummary/seldonian.candidate_selection.candidate_selection.CandidateSelection.rst", "_autosummary/seldonian.dataset.rst", "_autosummary/seldonian.dataset.DataSet.rst", "_autosummary/seldonian.dataset.DataSetLoader.rst", "_autosummary/seldonian.dataset.Episode.rst", "_autosummary/seldonian.dataset.RLDataSet.rst", "_autosummary/seldonian.dataset.SupervisedDataSet.rst", "_autosummary/seldonian.dataset.load_supervised_metadata.rst", "_autosummary/seldonian.models.rst", "_autosummary/seldonian.models.models.rst", "_autosummary/seldonian.models.models.BaseLogisticRegressionModel.rst", "_autosummary/seldonian.models.models.BinaryLogisticRegressionModel.rst", "_autosummary/seldonian.models.models.BoundedLinearRegressionModel.rst", "_autosummary/seldonian.models.models.ClassificationModel.rst", "_autosummary/seldonian.models.models.DummyClassifierModel.rst", "_autosummary/seldonian.models.models.LinearRegressionModel.rst", "_autosummary/seldonian.models.models.LinearRegressionModelListFeatures.rst", "_autosummary/seldonian.models.models.MultiClassLogisticRegressionModel.rst", "_autosummary/seldonian.models.models.RandomClassifierModel.rst", "_autosummary/seldonian.models.models.RegressionModel.rst", "_autosummary/seldonian.models.models.SeldonianModel.rst", "_autosummary/seldonian.models.models.SupervisedModel.rst", "_autosummary/seldonian.models.objectives.rst", "_autosummary/seldonian.models.objectives.Accuracy_binary.rst", "_autosummary/seldonian.models.objectives.Accuracy_multiclass.rst", "_autosummary/seldonian.models.objectives.False_Negative_Rate.rst", "_autosummary/seldonian.models.objectives.False_Positive_Rate.rst", "_autosummary/seldonian.models.objectives.IS_estimate.rst", "_autosummary/seldonian.models.objectives.Mean_Error.rst", "_autosummary/seldonian.models.objectives.Mean_Squared_Error.rst", "_autosummary/seldonian.models.objectives.Negative_Rate.rst", "_autosummary/seldonian.models.objectives.Positive_Rate.rst", "_autosummary/seldonian.models.objectives.True_Negative_Rate.rst", "_autosummary/seldonian.models.objectives.True_Positive_Rate.rst", "_autosummary/seldonian.models.objectives.binary_logistic_loss.rst", "_autosummary/seldonian.models.objectives.confusion_matrix.rst", "_autosummary/seldonian.models.objectives.evaluate_statistic.rst", "_autosummary/seldonian.models.objectives.gradient_Bounded_Squared_Error.rst", "_autosummary/seldonian.models.objectives.gradient_Mean_Squared_Error.rst", "_autosummary/seldonian.models.objectives.gradient_binary_logistic_loss.rst", "_autosummary/seldonian.models.objectives.multiclass_logistic_loss.rst", "_autosummary/seldonian.models.objectives.sample_from_statistic.rst", "_autosummary/seldonian.models.objectives.vector_Accuracy_binary.rst", "_autosummary/seldonian.models.objectives.vector_Accuracy_multiclass.rst", "_autosummary/seldonian.models.objectives.vector_Error.rst", "_autosummary/seldonian.models.objectives.vector_False_Negative_Rate.rst", "_autosummary/seldonian.models.objectives.vector_False_Positive_Rate.rst", "_autosummary/seldonian.models.objectives.vector_IS_estimate.rst", "_autosummary/seldonian.models.objectives.vector_Negative_Rate.rst", "_autosummary/seldonian.models.objectives.vector_Positive_Rate.rst", "_autosummary/seldonian.models.objectives.vector_Squared_Error.rst", "_autosummary/seldonian.models.objectives.vector_True_Negative_Rate.rst", "_autosummary/seldonian.models.objectives.vector_True_Positive_Rate.rst", "_autosummary/seldonian.models.objectives.vector_confusion_matrix.rst", "_autosummary/seldonian.models.pytorch_cnn.rst", "_autosummary/seldonian.models.pytorch_cnn.PytorchCNN.rst", "_autosummary/seldonian.models.pytorch_model.rst", "_autosummary/seldonian.models.pytorch_model.PytorchLRTestModel.rst", "_autosummary/seldonian.models.pytorch_model.SupervisedPytorchBaseModel.rst", "_autosummary/seldonian.models.pytorch_model.pytorch_predict_vjp.rst", "_autosummary/seldonian.optimizers.rst", "_autosummary/seldonian.optimizers.gradient_descent.rst", "_autosummary/seldonian.optimizers.gradient_descent.gradient_descent_adam.rst", "_autosummary/seldonian.optimizers.gradient_descent.setup_gradients.rst", "_autosummary/seldonian.parse_tree.rst", "_autosummary/seldonian.parse_tree.nodes.rst", "_autosummary/seldonian.parse_tree.nodes.BaseNode.rst", "_autosummary/seldonian.parse_tree.nodes.CVaRSQeBaseNode.rst", "_autosummary/seldonian.parse_tree.nodes.ConfusionMatrixBaseNode.rst", "_autosummary/seldonian.parse_tree.nodes.ConstantNode.rst", "_autosummary/seldonian.parse_tree.nodes.InternalNode.rst", "_autosummary/seldonian.parse_tree.nodes.MEDCustomBaseNode.rst", "_autosummary/seldonian.parse_tree.nodes.MultiClassBaseNode.rst", "_autosummary/seldonian.parse_tree.nodes.Node.rst", "_autosummary/seldonian.parse_tree.operators.rst", "_autosummary/seldonian.parse_tree.parse_tree.rst", "_autosummary/seldonian.parse_tree.parse_tree.ParseTree.rst", "_autosummary/seldonian.parse_tree.parse_tree.make_parse_trees_from_constraints.rst", "_autosummary/seldonian.safety_test.rst", "_autosummary/seldonian.safety_test.safety_test.rst", "_autosummary/seldonian.safety_test.safety_test.SafetyTest.rst", "_autosummary/seldonian.seldonian_algorithm.rst", "_autosummary/seldonian.seldonian_algorithm.SeldonianAlgorithm.rst", "_autosummary/seldonian.spec.rst", "_autosummary/seldonian.spec.RLSpec.rst", "_autosummary/seldonian.spec.Spec.rst", "_autosummary/seldonian.spec.SupervisedSpec.rst", "_autosummary/seldonian.spec.createRLSpec.rst", "_autosummary/seldonian.spec.createSupervisedSpec.rst", "_autosummary/seldonian.spec.validate_parse_trees.rst", "_autosummary/seldonian.utils.rst", "_autosummary/seldonian.utils.RL_utils.rst", "_autosummary/seldonian.utils.RL_utils.argmax_multi.rst", "_autosummary/seldonian.utils.RL_utils.clamp.rst", "_autosummary/seldonian.utils.RL_utils.error.rst", "_autosummary/seldonian.utils.io_utils.rst", "_autosummary/seldonian.utils.io_utils.dir_path.rst", "_autosummary/seldonian.utils.io_utils.load_json.rst", "_autosummary/seldonian.utils.io_utils.load_pickle.rst", "_autosummary/seldonian.utils.io_utils.save_json.rst", "_autosummary/seldonian.utils.io_utils.save_pickle.rst", "_autosummary/seldonian.utils.plot_utils.rst", "_autosummary/seldonian.utils.plot_utils.plot_gradient_descent.rst", "_autosummary/seldonian.utils.stats_utils.rst", "_autosummary/seldonian.utils.stats_utils.softmax.rst", "_autosummary/seldonian.utils.stats_utils.stddev.rst", "_autosummary/seldonian.utils.stats_utils.tinv.rst", "_autosummary/seldonian.utils.stats_utils.weighted_sum_gamma.rst", "_autosummary/seldonian.utils.tutorial_utils.rst", "_autosummary/seldonian.utils.tutorial_utils.generate_clipped_data.rst", "_autosummary/seldonian.utils.tutorial_utils.generate_data.rst", "_autosummary/seldonian.utils.tutorial_utils.make_synthetic_regression_dataset.rst", "_autosummary/seldonian.warnings.rst", "_autosummary/seldonian.warnings.custom_warnings.rst", "_autosummary/seldonian.warnings.custom_warnings.custom_formatwarning.rst", "api.rst", "getting_started.rst", "index.rst", "overview.rst"], "titles": ["seldonian", "seldonian.RL", "seldonian.RL.Agents", "seldonian.RL.Agents.Agent", "seldonian.RL.Agents.Agent.Agent", "seldonian.RL.Agents.Bases", "seldonian.RL.Agents.Bases.Fourier", "seldonian.RL.Agents.Bases.Fourier.Fourier", "seldonian.RL.Agents.Discrete_Random_Agent", "seldonian.RL.Agents.Discrete_Random_Agent.Discrete_Random_Agent", "seldonian.RL.Agents.Function_Approximators", "seldonian.RL.Agents.Function_Approximators.Function_Approximator", "seldonian.RL.Agents.Function_Approximators.Function_Approximator.Function_Approximator", "seldonian.RL.Agents.Function_Approximators.Linear_FA", "seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_FA", "seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_state_action_value_FA", "seldonian.RL.Agents.Function_Approximators.Table", "seldonian.RL.Agents.Function_Approximators.Table.Q_Table", "seldonian.RL.Agents.Function_Approximators.Table.Table", "seldonian.RL.Agents.Function_Approximators.Table.construct_Q_Table_From_Env_Description", "seldonian.RL.Agents.Parameterized_non_learning_softmax_agent", "seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.Parameterized_non_learning_softmax_agent", "seldonian.RL.Agents.Policies", "seldonian.RL.Agents.Policies.Policy", "seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy", "seldonian.RL.Agents.Policies.Policy.Policy", "seldonian.RL.Agents.Policies.Softmax", "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax", "seldonian.RL.Agents.Policies.Softmax.Softmax", "seldonian.RL.Agents.keyboard_gridworld", "seldonian.RL.Agents.keyboard_gridworld.Keyboard_gridworld", "seldonian.RL.Agents.mountain_car_rough_solution", "seldonian.RL.Agents.mountain_car_rough_solution.Mountain_car_rough_solution", "seldonian.RL.Env_Description", "seldonian.RL.Env_Description.Env_Description", "seldonian.RL.Env_Description.Env_Description.Env_Description", "seldonian.RL.Env_Description.Env_Description.check_space_type", "seldonian.RL.Env_Description.Spaces", "seldonian.RL.Env_Description.Spaces.Continuous_Space", "seldonian.RL.Env_Description.Spaces.Discrete_Space", "seldonian.RL.RL_generate_dataset_and_spec_file", "seldonian.RL.RL_generate_dataset_and_spec_file.get_constraint_string", "seldonian.RL.RL_generate_dataset_and_spec_file.get_env_kwargs", "seldonian.RL.RL_generate_dataset_and_spec_file.get_metadata_path", "seldonian.RL.RL_generate_dataset_and_spec_file.main", "seldonian.RL.RL_generate_dataset_and_spec_file.print_return_info", "seldonian.RL.RL_model", "seldonian.RL.RL_model.RL_model", "seldonian.RL.RL_runner", "seldonian.RL.RL_runner.create_agent", "seldonian.RL.RL_runner.create_env", "seldonian.RL.RL_runner.run_all_trials", "seldonian.RL.RL_runner.run_episode", "seldonian.RL.RL_runner.run_episode_from_dict", "seldonian.RL.RL_runner.run_trial", "seldonian.RL.RL_runner.run_trial_given_agent_and_env", "seldonian.RL.environments", "seldonian.RL.environments.Environment", "seldonian.RL.environments.Environment.Environment", "seldonian.RL.environments.gridworld", "seldonian.RL.environments.gridworld.Gridworld", "seldonian.RL.environments.mountaincar", "seldonian.RL.environments.mountaincar.Mountaincar", "seldonian.RL.environments.n_step_mountaincar", "seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar", "seldonian.RL.environments.simglucose_env", "seldonian.RL.environments.simglucose_env.Simglucose", "seldonian.RL.generate_gridworld_episodes", "seldonian.RL.generate_gridworld_episodes.main", "seldonian.RL.generate_mountaincar_episodes", "seldonian.RL.generate_mountaincar_episodes.main", "seldonian.RL.generate_simglucose_episodes", "seldonian.RL.generate_simglucose_episodes.get_max_obs", "seldonian.RL.generate_simglucose_episodes.main", "seldonian.RL.hyperparams_and_settings", "seldonian.RL.hyperparams_and_settings.define_hyperparameter_and_setting_dict", "seldonian.candidate_selection", "seldonian.candidate_selection.candidate_selection", "seldonian.candidate_selection.candidate_selection.CandidateSelection", "seldonian.dataset", "seldonian.dataset.DataSet", "seldonian.dataset.DataSetLoader", "seldonian.dataset.Episode", "seldonian.dataset.RLDataSet", "seldonian.dataset.SupervisedDataSet", "seldonian.dataset.load_supervised_metadata", "seldonian.models", "seldonian.models.models", "seldonian.models.models.BaseLogisticRegressionModel", "seldonian.models.models.BinaryLogisticRegressionModel", "seldonian.models.models.BoundedLinearRegressionModel", "seldonian.models.models.ClassificationModel", "seldonian.models.models.DummyClassifierModel", "seldonian.models.models.LinearRegressionModel", "seldonian.models.models.LinearRegressionModelListFeatures", "seldonian.models.models.MultiClassLogisticRegressionModel", "seldonian.models.models.RandomClassifierModel", "seldonian.models.models.RegressionModel", "seldonian.models.models.SeldonianModel", "seldonian.models.models.SupervisedModel", "seldonian.models.objectives", "seldonian.models.objectives.Accuracy_binary", "seldonian.models.objectives.Accuracy_multiclass", "seldonian.models.objectives.False_Negative_Rate", "seldonian.models.objectives.False_Positive_Rate", "seldonian.models.objectives.IS_estimate", "seldonian.models.objectives.Mean_Error", "seldonian.models.objectives.Mean_Squared_Error", "seldonian.models.objectives.Negative_Rate", "seldonian.models.objectives.Positive_Rate", "seldonian.models.objectives.True_Negative_Rate", "seldonian.models.objectives.True_Positive_Rate", "seldonian.models.objectives.binary_logistic_loss", "seldonian.models.objectives.confusion_matrix", "seldonian.models.objectives.evaluate_statistic", "seldonian.models.objectives.gradient_Bounded_Squared_Error", "seldonian.models.objectives.gradient_Mean_Squared_Error", "seldonian.models.objectives.gradient_binary_logistic_loss", "seldonian.models.objectives.multiclass_logistic_loss", "seldonian.models.objectives.sample_from_statistic", "seldonian.models.objectives.vector_Accuracy_binary", "seldonian.models.objectives.vector_Accuracy_multiclass", "seldonian.models.objectives.vector_Error", "seldonian.models.objectives.vector_False_Negative_Rate", "seldonian.models.objectives.vector_False_Positive_Rate", "seldonian.models.objectives.vector_IS_estimate", "seldonian.models.objectives.vector_Negative_Rate", "seldonian.models.objectives.vector_Positive_Rate", "seldonian.models.objectives.vector_Squared_Error", "seldonian.models.objectives.vector_True_Negative_Rate", "seldonian.models.objectives.vector_True_Positive_Rate", "seldonian.models.objectives.vector_confusion_matrix", "seldonian.models.pytorch_cnn", "seldonian.models.pytorch_cnn.PytorchCNN", "seldonian.models.pytorch_model", "seldonian.models.pytorch_model.PytorchLRTestModel", "seldonian.models.pytorch_model.SupervisedPytorchBaseModel", "seldonian.models.pytorch_model.pytorch_predict_vjp", "seldonian.optimizers", "seldonian.optimizers.gradient_descent", "seldonian.optimizers.gradient_descent.gradient_descent_adam", "seldonian.optimizers.gradient_descent.setup_gradients", "seldonian.parse_tree", "seldonian.parse_tree.nodes", "seldonian.parse_tree.nodes.BaseNode", "seldonian.parse_tree.nodes.CVaRSQeBaseNode", "seldonian.parse_tree.nodes.ConfusionMatrixBaseNode", "seldonian.parse_tree.nodes.ConstantNode", "seldonian.parse_tree.nodes.InternalNode", "seldonian.parse_tree.nodes.MEDCustomBaseNode", "seldonian.parse_tree.nodes.MultiClassBaseNode", "seldonian.parse_tree.nodes.Node", "seldonian.parse_tree.operators", "seldonian.parse_tree.parse_tree", "seldonian.parse_tree.parse_tree.ParseTree", "seldonian.parse_tree.parse_tree.make_parse_trees_from_constraints", "seldonian.safety_test", "seldonian.safety_test.safety_test", "seldonian.safety_test.safety_test.SafetyTest", "seldonian.seldonian_algorithm", "seldonian.seldonian_algorithm.SeldonianAlgorithm", "seldonian.spec", "seldonian.spec.RLSpec", "seldonian.spec.Spec", "seldonian.spec.SupervisedSpec", "seldonian.spec.createRLSpec", "seldonian.spec.createSupervisedSpec", "seldonian.spec.validate_parse_trees", "seldonian.utils", "seldonian.utils.RL_utils", "seldonian.utils.RL_utils.argmax_multi", "seldonian.utils.RL_utils.clamp", "seldonian.utils.RL_utils.error", "seldonian.utils.io_utils", "seldonian.utils.io_utils.dir_path", "seldonian.utils.io_utils.load_json", "seldonian.utils.io_utils.load_pickle", "seldonian.utils.io_utils.save_json", "seldonian.utils.io_utils.save_pickle", "seldonian.utils.plot_utils", "seldonian.utils.plot_utils.plot_gradient_descent", "seldonian.utils.stats_utils", "seldonian.utils.stats_utils.softmax", "seldonian.utils.stats_utils.stddev", "seldonian.utils.stats_utils.tinv", "seldonian.utils.stats_utils.weighted_sum_gamma", "seldonian.utils.tutorial_utils", "seldonian.utils.tutorial_utils.generate_clipped_data", "seldonian.utils.tutorial_utils.generate_data", "seldonian.utils.tutorial_utils.make_synthetic_regression_dataset", "seldonian.warnings", "seldonian.warnings.custom_warnings", "seldonian.warnings.custom_warnings.custom_formatwarning", "API", "Getting Started", "Seldonian Engine documentation", "Overview"], "terms": {"engin": [0, 152, 194, 196], "packag": [0, 196], "modul": [0, 1, 2, 5, 10, 22, 33, 56, 76, 77, 86, 87, 138, 142, 152, 153, 156, 157, 159, 161, 168, 190, 192, 196], "class": [3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 37, 38, 39, 46, 47, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 77, 78, 79, 80, 81, 82, 83, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 102, 103, 104, 108, 109, 110, 111, 113, 118, 131, 132, 133, 134, 135, 136, 137, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 157, 158, 159, 160, 161, 162, 163, 164, 196], "base": [4, 9, 12, 14, 15, 17, 18, 21, 24, 25, 27, 28, 30, 32, 35, 38, 39, 47, 58, 60, 62, 64, 66, 78, 80, 81, 82, 83, 84, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 133, 135, 136, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 158, 160, 162, 163, 164, 195, 196], "object": [4, 7, 9, 12, 14, 15, 19, 21, 24, 25, 27, 28, 35, 38, 39, 44, 45, 58, 60, 78, 80, 81, 82, 83, 84, 98, 140, 141, 144, 145, 146, 149, 150, 151, 154, 158, 160, 161, 162, 163, 164, 165, 166, 167, 175, 176, 177, 178, 180, 195], "__init__": [4, 7, 9, 12, 14, 15, 17, 18, 21, 24, 25, 27, 28, 30, 32, 35, 38, 39, 47, 58, 60, 62, 64, 66, 78, 80, 81, 82, 83, 84, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 133, 135, 136, 144, 145, 146, 147, 148, 149, 150, 151, 154, 158, 160, 162, 163, 164, 195], "__repr__": [4, 7, 9, 12, 14, 15, 17, 18, 21, 24, 25, 27, 28, 30, 32, 35, 38, 39, 47, 58, 60, 62, 64, 66, 78, 80, 81, 82, 83, 84, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 133, 135, 136, 144, 145, 146, 147, 148, 149, 150, 151, 154, 158, 160, 162, 163, 164, 195], "return": [4, 7, 9, 12, 14, 15, 17, 18, 19, 21, 24, 25, 27, 28, 30, 32, 35, 38, 39, 41, 42, 43, 45, 47, 49, 50, 51, 52, 53, 54, 55, 58, 60, 62, 64, 66, 78, 80, 81, 82, 83, 84, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 135, 136, 137, 140, 144, 145, 146, 149, 150, 152, 154, 158, 160, 162, 163, 164, 170, 180, 183, 184, 185, 196], "repr": [4, 7, 9, 12, 14, 15, 17, 18, 21, 24, 25, 27, 28, 30, 32, 35, 38, 39, 47, 58, 60, 62, 64, 66, 78, 80, 81, 82, 83, 84, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 133, 135, 136, 154, 158, 160, 162, 163, 164], "self": [4, 7, 9, 12, 14, 15, 17, 18, 21, 24, 25, 27, 28, 30, 32, 35, 38, 39, 47, 58, 60, 62, 64, 66, 78, 80, 81, 82, 83, 84, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 133, 135, 136, 154, 158, 160, 162, 163, 164], "method": [4, 7, 9, 12, 14, 15, 17, 18, 21, 24, 25, 27, 28, 30, 32, 35, 38, 39, 47, 58, 60, 62, 64, 66, 78, 80, 81, 82, 83, 84, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 133, 135, 136, 140, 144, 145, 146, 147, 148, 149, 150, 151, 154, 155, 158, 160, 162, 163, 164, 196], "choose_act": [4, 9, 21, 24, 25, 27, 28, 30, 32, 195], "observ": [4, 7, 9, 21, 24, 25, 27, 28, 30, 32, 35, 38, 39, 47, 58, 62, 64, 66, 82, 89, 92, 95, 96, 119, 122, 123, 124, 126, 127, 128, 129, 130, 131, 144, 145, 146, 149, 150, 196], "choos": [4, 9, 30, 32, 196], "an": [4, 7, 9, 14, 15, 19, 21, 24, 25, 27, 28, 30, 32, 35, 49, 50, 54, 58, 60, 62, 64, 66, 137, 144, 145, 146, 150, 151, 152, 174, 175, 176, 177, 178, 185, 196], "action": [4, 9, 15, 17, 21, 24, 25, 27, 28, 30, 32, 35, 38, 39, 47, 58, 60, 62, 64, 66, 81, 82, 196], "given": [4, 7, 9, 17, 19, 21, 24, 25, 27, 28, 30, 32, 41, 42, 43, 47, 58, 60, 62, 64, 66, 78, 141, 144, 145, 146, 149, 150, 154, 155, 158, 160, 196], "To": [4, 9, 30, 32, 194], "overridden": [4, 9, 25, 30, 32], "paramet": [4, 7, 9, 12, 14, 15, 17, 18, 19, 21, 24, 25, 27, 28, 30, 32, 35, 36, 38, 39, 45, 47, 49, 50, 51, 52, 53, 54, 55, 58, 60, 62, 64, 66, 78, 80, 81, 82, 83, 84, 85, 88, 89, 90, 92, 93, 94, 95, 96, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 135, 136, 137, 140, 141, 144, 145, 146, 147, 148, 149, 150, 151, 154, 155, 158, 160, 162, 163, 164, 165, 166, 167, 174, 175, 176, 177, 178, 180, 183, 184, 185, 187, 188, 189, 196], "The": [4, 9, 14, 15, 17, 18, 21, 27, 28, 30, 32, 38, 60, 78, 80, 81, 84, 85, 88, 89, 90, 92, 93, 94, 95, 96, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 135, 136, 140, 141, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 158, 160, 162, 163, 164, 165, 166, 178, 180, 185, 187, 188, 189, 195, 196], "current": [4, 9, 21, 24, 25, 27, 28, 30, 32, 58, 60, 62, 64, 66, 91, 196], "type": [4, 9, 19, 21, 24, 27, 28, 30, 32, 36, 47, 49, 50, 52, 53, 60, 78, 88, 89, 90, 92, 93, 94, 95, 96, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 135, 136, 140, 144, 145, 146, 149, 150, 154, 158, 160, 183, 184, 185, 196], "depend": [4, 9, 21, 24, 27, 28, 30, 32, 144, 145, 146, 149, 150, 196], "environ": [4, 7, 9, 14, 15, 17, 18, 19, 21, 24, 27, 28, 30, 32, 35, 41, 42, 43, 47, 49, 50, 51, 52, 53, 54, 55, 165, 195, 196], "get_param": [4, 9, 21, 24, 25, 27, 28, 30, 32, 195], "retriev": [4, 9, 30, 32], "": [4, 9, 21, 30, 32, 35, 149, 154, 160, 183, 184, 196], "polici": [4, 9, 21, 30, 32, 47, 54, 82, 152, 165, 195, 196], "get_prob_this_act": [4, 9, 21, 24, 25, 27, 28, 30, 32, 47, 195], "get": [4, 7, 9, 17, 21, 24, 25, 27, 28, 30, 32, 35, 38, 39, 47, 58, 60, 62, 64, 66, 78, 113, 131, 133, 135, 136, 154, 158, 160, 195, 196], "probabl": [4, 9, 17, 21, 24, 25, 27, 28, 30, 32, 47, 82, 89, 92, 95, 96, 103, 104, 108, 109, 110, 111, 113, 120, 121, 123, 124, 126, 127, 129, 130, 131, 145, 154, 184, 196], "provid": [4, 9, 30, 32, 35, 114, 119, 154, 160, 162, 163, 164, 165, 196], "i": [4, 9, 21, 24, 27, 28, 30, 32, 38, 45, 51, 60, 78, 88, 89, 90, 95, 103, 104, 105, 108, 109, 110, 111, 113, 123, 124, 125, 126, 127, 129, 130, 131, 133, 140, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 158, 160, 162, 163, 164, 174, 180, 194, 195, 196], "set_new_param": [4, 9, 12, 14, 15, 17, 18, 21, 24, 25, 27, 28, 30, 32, 195], "theta": [4, 9, 30, 32, 78, 89, 90, 92, 93, 94, 95, 96, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 135, 136, 137, 140, 144, 145, 146, 149, 150, 158, 160, 196], "updat": [4, 9, 21, 25, 30, 32, 60, 133, 135, 136, 165, 166, 195], "model": [4, 9, 12, 14, 15, 17, 18, 30, 32, 47, 78, 140, 144, 145, 146, 149, 150, 158, 160, 162, 163, 164, 165, 195], "next_observ": [4, 9, 21, 30, 32], "reward": [4, 9, 21, 30, 32, 45, 60, 81, 82, 152, 185, 196], "termin": [4, 9, 21, 30, 32, 58, 60, 62, 64, 66, 195], "accord": [4, 9, 21, 30, 32], "learn": [4, 9, 21, 30, 32, 78, 80, 81, 84, 87, 91, 98, 99, 136, 140, 144, 145, 146, 149, 150, 152, 154, 155, 158, 164, 195, 196], "rule": [4, 9, 21, 30, 32], "overriden": [4, 9, 30, 32], "after": [4, 9, 21, 30, 32], "taken": [4, 9, 21, 30, 32, 35, 47], "take": [4, 9, 21, 24, 25, 30, 32, 47, 196], "bool": [4, 9, 21, 30, 32, 60, 78, 151, 154, 158, 162, 163, 164, 165, 180], "whether": [4, 9, 21, 24, 27, 28, 30, 32, 54, 60, 78, 151, 154, 158, 160, 162, 163, 164, 165, 166, 174, 180, 189, 196], "hyperparam_and_setting_dict": [7, 21, 24, 27, 28], "env_desc": 7, "basi": [7, 14, 15, 24, 27, 28], "us": [7, 14, 15, 21, 27, 30, 38, 39, 45, 47, 54, 58, 62, 64, 66, 78, 88, 89, 90, 93, 94, 95, 133, 135, 136, 140, 141, 144, 145, 146, 149, 150, 152, 154, 160, 162, 163, 164, 165, 166, 184, 185, 189, 194, 196], "linear": [7, 14, 15, 24, 27, 28, 90, 93, 94, 133, 135], "valu": [7, 15, 17, 27, 28, 39, 78, 122, 128, 140, 144, 145, 146, 147, 149, 150, 154, 158, 160, 187, 189, 196], "function": [7, 12, 14, 15, 16, 21, 24, 27, 28, 34, 40, 48, 60, 67, 69, 71, 74, 78, 79, 90, 100, 134, 137, 139, 140, 141, 144, 146, 150, 152, 153, 154, 155, 158, 161, 162, 163, 164, 165, 166, 169, 173, 179, 180, 181, 184, 186, 191, 196], "approxim": [7, 12, 14, 15, 21, 24, 27, 28], "see": [7, 133, 135, 136, 145, 149, 162, 163, 164, 195, 196], "http": [7, 133, 135, 136, 145, 149, 184], "irl": 7, "c": [7, 113, 131, 145, 146], "brown": 7, "edu": [7, 145], "fb": 7, "php": 7, "refer": [7, 152, 196], "hyperparameter_and_setting_dict": [7, 24, 27, 28, 49, 50, 51, 53, 54], "specifi": [7, 24, 27, 28, 49, 50, 51, 54, 55, 152, 154, 162, 163, 164, 196], "number": [7, 17, 18, 24, 27, 28, 35, 38, 39, 49, 50, 51, 54, 55, 60, 80, 84, 88, 89, 95, 109, 113, 131, 133, 135, 136, 140, 144, 145, 146, 149, 150, 154, 187, 188, 189, 196], "episod": [7, 24, 27, 28, 44, 45, 49, 50, 51, 52, 53, 54, 55, 68, 70, 72, 73, 80, 81, 83, 84, 105, 125, 195, 196], "per": [7, 24, 27, 28, 49, 50, 51, 180], "trial": [7, 24, 27, 28, 44, 49, 50, 51, 54, 68, 70, 73], "env_descript": [7, 9, 14, 15, 19, 21, 24, 27, 28, 30, 60, 195], "access": [7, 9, 14, 15, 19, 21, 24, 27, 28, 35], "attribut": [7, 9, 14, 15, 19, 21, 24, 27, 28, 35, 60, 81, 83, 146, 150, 154, 160, 196], "calculate_num_featur": [7, 195], "order": [7, 196], "max_coupled_var": 7, "num_obs_dim": 7, "determin": [7, 140, 154, 165, 166], "featur": [7, 14, 15, 81, 84, 88, 89, 90, 92, 93, 94, 95, 96, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 135, 136, 137, 144, 145, 146, 149, 150, 160, 196], "construct_basis_matrix": [7, 195], "creat": [7, 19, 24, 27, 28, 44, 49, 50, 60, 81, 133, 135, 136, 144, 145, 146, 149, 150, 154, 155, 160, 165, 166, 196], "matrix": [7, 113, 131, 146, 196], "get_featur": [7, 195], "ob": [7, 17, 18, 21, 24, 25, 27, 28, 35, 58, 60, 62, 64, 66, 81, 154], "get_normalized_observ": [7, 195], "normal": [7, 109, 187, 188, 189], "act": 9, "discret": [9, 24, 27, 28, 35, 36, 39], "space": [9, 24, 27, 28, 35, 36, 60, 195], "pick": 9, "uniform": 9, "random": [9, 187, 188, 189], "capabl": [9, 18], "new_param": [12, 14, 15, 17, 18, 21, 24, 25, 27, 28, 47], "set": [12, 14, 15, 17, 18, 21, 24, 27, 28, 54, 142, 146, 147, 160, 196], "new": [12, 14, 15, 17, 18, 58, 62, 64, 66, 152, 195, 196], "weight": [12, 14, 15, 17, 18, 21, 24, 27, 28, 47, 78, 88, 89, 90, 92, 93, 94, 95, 96, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 135, 136, 137, 140, 144, 145, 146, 149, 150, 152, 154, 155, 158, 160, 162, 163, 164, 165, 185, 196], "encod": [14, 15, 196], "A": [15, 17, 19, 27, 47, 55, 58, 60, 62, 64, 66, 83, 125, 137, 146, 150, 152, 154, 162, 163, 164, 174, 175, 176, 177, 178, 195], "state": [15, 17, 18, 21, 35, 60], "min_stat": [17, 18], "num_stat": [17, 18, 60], "num_act": 17, "q": [17, 19, 27], "contain": [17, 21, 25, 60, 78, 81, 87, 105, 114, 119, 125, 140, 144, 145, 146, 149, 150, 152, 154, 158, 160, 162, 163, 164, 166, 196], "transit": [17, 58, 60, 62, 64, 66, 195], "int": [17, 18, 27, 39, 60, 78, 80, 84, 113, 131, 140, 144, 145, 146, 149, 150, 151, 154, 184, 187, 188, 189], "smallest": [17, 18], "total": [17, 18, 39, 154], "from_environment_state_to_0_indexed_st": [17, 18, 195], "env_stat": [17, 18], "convert": [17, 18, 24, 27, 28, 133, 135, 136, 137], "0": [17, 18, 24, 27, 28, 38, 90, 96, 103, 104, 108, 109, 110, 111, 123, 124, 126, 127, 129, 130, 140, 144, 145, 146, 149, 150, 154, 158, 162, 163, 164, 165, 166, 185, 187, 188, 189, 196], "index": [17, 18, 24, 27, 28, 113, 131, 146, 150, 151, 185, 196], "you": [17, 18, 81, 154, 158, 178, 180, 194, 195, 196], "want": [17, 18, 36, 81, 150, 154, 158, 178, 180, 194, 196], "get_action_values_given_st": [17, 24, 27, 28, 195], "state_number_not_zero_index": 17, "possibl": [17, 21, 24, 27, 28, 35, 58, 60, 62, 64, 66, 145, 196], "environment": 17, "specif": [17, 24, 27, 28, 49, 50, 160, 161, 162, 163, 164, 196], "arrai": [17, 21, 24, 27, 28, 38, 47, 78, 88, 89, 95, 113, 131, 133, 135, 136, 137, 152, 185, 196], "get_action_values_given_zero_indexed_st": [17, 195], "zero_indexed_state_numb": 17, "hold": [18, 80, 82, 83, 84], "reindex": 18, "descript": [19, 24, 27, 28, 58, 60, 62, 64, 66, 196], "q_tabl": [19, 21, 195], "parametr": 21, "softmax": [21, 133, 195, 196], "pi": 21, "frac": 21, "e": [21, 45, 78, 80, 81, 83, 84, 114, 119, 140, 144, 145, 146, 149, 150, 154, 155, 158, 162, 163, 164, 196], "p": [21, 184, 196], "sum_": 21, "addit": [21, 196], "info": [21, 140, 160], "about": [21, 140, 154, 196], "data": [21, 78, 81, 89, 95, 101, 102, 105, 112, 118, 121, 125, 144, 145, 146, 149, 150, 154, 158, 160, 162, 163, 164, 165, 166, 177, 178, 183, 187, 188, 189, 196], "gener": [21, 24, 28, 187, 188, 189, 196], "variabl": [21, 38, 60, 144, 145, 146, 147, 149, 150, 151, 152, 154], "fa": 21, "select": [21, 24, 25, 27, 28, 76, 77, 78, 138, 140, 144, 145, 146, 149, 150, 158, 160, 162, 163, 164, 165, 195], "get_action_valu": [21, 195], "all": [21, 24, 27, 28, 47, 58, 80, 84, 91, 97, 98, 99, 101, 102, 105, 112, 118, 133, 135, 136, 146, 150, 151, 154, 158, 196], "from": [21, 24, 27, 28, 49, 50, 81, 82, 85, 90, 93, 94, 137, 142, 149, 153, 154, 160, 175, 176, 189, 196], "thi": [21, 47, 58, 60, 62, 64, 66, 108, 109, 113, 115, 123, 124, 126, 127, 129, 130, 131, 140, 144, 145, 146, 149, 150, 151, 154, 160, 187, 189, 195, 196], "float": [21, 27, 28, 47, 60, 92, 96, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 140, 144, 145, 146, 147, 148, 149, 150, 151, 154, 160, 162, 163, 164, 165, 166, 183, 184, 185, 187, 188, 189, 196], "Not": [21, 30, 152], "implement": [21, 25, 58, 60, 62, 64, 66, 89, 90, 92, 93, 94, 95, 96, 133, 135, 136, 140, 184, 196], "where": [24, 27, 55, 78, 133, 140, 144, 145, 146, 149, 150, 154, 158, 160, 165, 166, 177, 180, 185, 196], "ar": [24, 27, 36, 38, 55, 78, 133, 145, 146, 152, 154, 158, 167, 180, 185, 195, 196], "defin": [24, 25, 38, 145, 152, 196], "how": [24, 25, 154, 196], "construct_basis_and_linear_fa": [24, 27, 28, 195], "dictionari": [24, 27, 28, 49, 50, 55, 85, 140, 152, 160, 162, 163, 164, 180, 196], "from_0_indexed_action_to_environment_act": [24, 27, 28, 195], "action_0_index": [24, 27, 28], "env": [24, 27, 28, 42, 52, 53, 55], "from_environment_action_to_0_indexed_act": [24, 27, 28, 195], "env_act": [24, 27, 28], "make_state_action_fa": [24, 27, 28, 195], "contin": [24, 27, 28, 36], "four": [25, 196], "which": [25, 36, 51, 108, 133, 135, 136, 144, 145, 146, 148, 149, 150, 152, 154, 165, 166, 196], "must": [25, 133, 135, 136, 137, 144, 196], "ani": [25, 78, 155, 196], "both": [27, 154, 196], "faster": 27, "than": [27, 38, 55, 145, 154, 158, 196], "just": [27, 160], "becaus": [27, 154, 180], "cach": [27, 154], "lookup": 27, "tabl": 27, "_arg": [27, 195], "helper": [27, 60, 154], "acceler": 27, "calcul": [27, 60, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 140, 144, 145, 146, 149, 150, 154, 158, 185, 196], "_denom": [27, 195], "choose_action_from_action_valu": [27, 28, 195], "action_valu": [27, 28], "list": [27, 28, 45, 47, 51, 54, 55, 78, 80, 81, 82, 83, 84, 144, 145, 146, 149, 150, 152, 154, 155, 158, 162, 163, 164, 165, 166, 167, 196], "param": [27, 28, 109, 115], "get_action_probs_from_action_valu": [27, 28, 195], "get_e_to_the_something_term": [27, 28, 195], "exponenti": [27, 28, 140, 154], "obsertavt": [27, 28], "obserav": [27, 28], "discrete_action_polici": [28, 195], "debug": [30, 45, 58, 62, 64, 66, 140, 160], "gridworld": [30, 195], "intend": 30, "public": 30, "observation_spac": 35, "action_spac": 35, "describ": [35, 60, 81], "conveni": [35, 154, 155, 165, 166, 196], "continu": [35, 38], "made": 35, "get_min_act": [35, 195], "first": [35, 150, 154, 195, 196], "get_min_st": [35, 195], "get_num_act": [35, 195], "get_num_observation_dim": [35, 195], "dimens": [35, 38, 187, 188, 189], "get_num_st": [35, 195], "also": [35, 133, 135, 136, 147, 148, 151, 154, 185, 196], "call": [35, 144, 145, 146, 149, 150, 185, 196], "here": [35, 152, 196], "desired_typ": 36, "valid": [36, 38, 154, 196], "ensur": [36, 167, 196], "equival": [36, 144, 145, 146, 149, 150], "discrete_spac": [36, 195], "continous_spac": 36, "we": [36, 144, 145, 146, 149, 150, 154, 194, 196], "match": 36, "bound": [38, 78, 90, 115, 140, 141, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 158, 162, 163, 164, 196], "np": 38, "ndarrai": [38, 78, 90, 92, 93, 94, 96, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 133, 135, 136, 137, 144, 145, 146, 149, 150, 158, 160, 183, 185], "shape": [38, 88, 89, 95, 113, 131, 133, 135, 136, 196], "num_dim": 38, "2": [38, 149, 150, 177, 196], "min": [38, 39, 149, 196], "max": [38, 39, 196], "each": [38, 51, 82, 83, 89, 92, 95, 96, 108, 109, 110, 111, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 135, 136, 144, 145, 146, 149, 150, 152, 154, 155, 162, 163, 164, 180, 196], "For": [38, 150, 152, 196], "exampl": [38, 150, 196], "3d": 38, "x": [38, 88, 89, 90, 92, 93, 94, 95, 96, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 135, 136, 137, 146, 149, 182, 187, 188, 189], "1": [38, 89, 103, 104, 108, 109, 110, 111, 123, 124, 126, 127, 129, 130, 133, 140, 144, 145, 146, 150, 187, 188, 189, 192, 196], "y": [38, 88, 89, 90, 93, 94, 95, 101, 102, 103, 104, 106, 107, 110, 111, 112, 113, 115, 116, 117, 118, 120, 121, 122, 123, 124, 128, 129, 130, 131, 149, 187, 188, 189], "5": [38, 96, 162, 163, 164, 196], "4": [38, 145, 152, 196], "z": [38, 145], "12": 38, "6": [38, 162, 164, 165, 166, 196], "8": [38, 54, 196], "would": [38, 78, 140, 150, 152, 162, 163, 164, 196], "check_bounds_valid": [38, 195], "check": [38, 60, 154, 174], "format": [38, 81, 196], "maximum": [38, 39, 60, 145, 154], "larger": [38, 145], "minimum": [38, 39, 145, 154, 196], "get_num_dim": [38, 195], "get_num_valu": [39, 195], "env_nam": [41, 42, 43], "name": [41, 42, 43, 78, 80, 81, 83, 84, 114, 119, 140, 141, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 162, 163, 164, 196], "default": [41, 42, 81, 140, 141, 151, 154, 155, 162, 163, 164, 165, 166, 196], "constraint": [41, 78, 140, 141, 142, 150, 152, 153, 154, 155, 158, 162, 163, 164, 165, 166, 167, 180, 195], "string": [41, 78, 147, 148, 151, 152, 154, 155, 162, 163, 164, 165, 166, 195], "kwarg": [42, 47, 78, 80, 81, 83, 103, 104, 108, 109, 110, 111, 119, 123, 124, 126, 127, 129, 130, 133, 135, 136, 140, 144, 145, 146, 147, 148, 149, 150, 154, 158, 165, 192], "path": [43, 166, 174, 180], "metadata": [43, 80, 81, 83, 84, 85, 105, 125, 140, 166, 196], "file": [43, 81, 85, 160, 165, 166, 175, 176, 177, 178, 196], "run": [44, 51, 52, 53, 54, 55, 68, 70, 73, 78, 79, 86, 140, 157, 158, 159, 160, 161, 162, 163, 164, 195], "rlspec": [44, 165, 195, 196], "save": [44, 68, 70, 73, 165, 166, 177, 178, 180, 196], "disk": [44, 68, 70, 73, 78, 81], "print": [45, 58, 60, 62, 64, 66, 140, 160], "sum": [45, 108, 109, 110, 111, 185], "env_kwarg": [47, 165, 196], "seldonianmodel": [47, 78, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 144, 145, 146, 149, 150, 158, 163, 164, 195], "parameter": [47, 196], "dict": [47, 51, 54, 114, 119, 140, 144, 145, 146, 149, 150, 152, 154, 162, 163, 164, 165, 180], "pertain": [47, 165], "gamma": [47, 60, 165, 185, 196], "discount": [47, 60, 165, 185, 196], "factor": [47, 60, 165, 185, 196], "singl": [47, 52, 53, 54, 135, 150, 154, 196], "pair": [47, 90, 93, 94, 149, 196], "get_probs_from_observations_and_act": [47, 195], "those": [47, 152], "agent": [49, 50, 51, 52, 53, 54, 55, 195], "mani": [51, 165, 166], "consist": [51, 54, 133, 196], "same": [51, 133, 135, 136, 149], "_i": [51, 196], "model_param": [53, 54], "none": [53, 54, 78, 81, 151, 162, 163, 164, 165], "parallel": 54, "fals": [54, 60, 78, 103, 104, 110, 111, 114, 123, 124, 140, 150, 152, 154, 160, 162, 163, 164, 165, 166, 177, 178, 180, 189, 196], "n_worker": 54, "arbitrari": [54, 60], "befor": [54, 133, 135, 136, 137, 196], "process": [54, 160, 196], "cpu": 54, "num_episod": 55, "wrapper": [55, 78, 141, 158, 160, 175, 176, 177, 178], "run_trial": [55, 195], "explic": 55, "rather": 55, "via": [55, 154, 196], "get_env_descript": [58, 60, 62, 64, 66, 195], "overrid": [58, 60, 62, 64, 66, 90, 144, 145, 146, 149, 150], "child": [58, 60, 62, 64, 66, 151, 152, 154, 196], "get_observ": [58, 60, 62, 64, 66, 195], "reset": [58, 60, 62, 64, 66, 154, 195], "initi": [58, 60, 62, 64, 66, 78, 133, 135, 136, 140, 154, 162, 163, 164, 165], "start_visu": [58, 60, 62, 64, 66, 195], "turn": [58, 60, 62, 64, 66], "visual": [58, 60, 62, 64, 66, 147, 148, 151, 154, 194, 195, 196], "debugg": [58, 60, 62, 64, 66], "stop_visu": [58, 60, 62, 64, 66, 195], "off": [58, 60, 62, 64, 66], "out": [58, 60, 62, 64, 66, 133, 135, 136, 140, 160], "size": [60, 133, 135, 136], "3": [60, 145, 150, 187, 189, 196], "squar": [60, 106, 107, 115, 116, 128, 145, 152, 196], "grid": 60, "cell": 60, "side": [60, 154], "distinct": 60, "terminal_st": 60, "occupi": 60, "time": 60, "timestep": [60, 82, 196], "max_tim": 60, "allow": 60, "expect": [60, 144, 145, 146, 149, 150, 152], "create_env_descript": [60, 195], "is_in_goal_st": [60, 195], "goal": [60, 196], "true": [60, 104, 110, 111, 113, 120, 121, 129, 130, 131, 133, 135, 136, 144, 145, 146, 149, 150, 152, 162, 163, 164, 165, 166, 180, 196], "go": [60, 196], "back": [60, 133, 135, 136, 137, 162, 163, 164], "between": [60, 103, 104, 108, 109, 110, 111, 123, 124, 126, 127, 129, 130, 149, 171, 196], "reach": 60, "next": 60, "update_posit": [60, 195], "posit": [60, 92, 96, 103, 104, 108, 109, 110, 111, 114, 123, 124, 126, 127, 130, 145, 150, 152, 154, 196], "inform": [60, 196], "candid": [76, 77, 78, 138, 140, 144, 145, 146, 149, 150, 158, 160, 162, 163, 164, 165, 195], "candidate_dataset": 78, "n_safeti": [78, 145], "parse_tre": [78, 158, 162, 163, 164, 167, 195, 196], "primary_object": [78, 140, 141, 158, 160, 162, 163, 164], "optimization_techniqu": [78, 162, 163, 164, 196], "barrier_funct": [78, 162, 163, 164, 196], "optim": [78, 160, 162, 163, 164, 195, 196], "powel": [78, 196], "initial_solut": 78, "regim": [78, 80, 81, 84, 152, 154, 155, 158, 196], "supervised_learn": [78, 80, 81, 84, 154, 155, 158, 196], "write_logfil": [78, 160], "dataset": [78, 122, 128, 144, 145, 146, 149, 150, 155, 158, 160, 162, 163, 164, 165, 166, 189, 195], "length": [78, 89, 145, 152], "safeti": [78, 140, 144, 145, 146, 149, 150, 156, 157, 158, 160, 162, 163, 164, 165, 195], "when": [78, 103, 104, 110, 111, 144, 146, 150, 154, 180, 196], "predict": [78, 89, 90, 92, 93, 94, 95, 96, 103, 104, 109, 113, 120, 121, 123, 124, 129, 130, 131, 133, 135, 136, 146, 150, 195, 196], "confid": [78, 144, 145, 146, 148, 149, 150, 151, 154, 165, 166, 196], "dure": [78, 152, 160, 162, 163, 164, 196], "parsetre": [78, 158, 162, 163, 167, 195, 196], "pars": [78, 142, 144, 147, 148, 149, 151, 152, 153, 154, 155, 158, 162, 163, 164, 167, 194, 196], "tree": [78, 142, 144, 147, 148, 149, 151, 152, 153, 154, 155, 158, 162, 163, 164, 167, 194, 196], "behavior": [78, 82, 140, 142, 152, 153, 154, 158, 162, 163, 164, 195], "sole": [78, 140, 162, 163, 164], "absenc": [78, 140, 162, 163, 164], "loss": [78, 112, 117, 118, 120, 140, 152, 162, 163, 164, 196], "str": [78, 80, 81, 83, 84, 114, 119, 140, 141, 144, 145, 146, 147, 148, 149, 150, 151, 154, 155, 158, 160, 162, 163, 164, 165, 166, 174, 175, 176, 177, 178, 180], "g": [78, 80, 81, 83, 84, 114, 119, 140, 144, 145, 146, 149, 150, 154, 155, 158, 162, 163, 164, 196], "gradient_desc": [78, 162, 163, 164, 195, 196], "categori": [78, 80, 81, 84, 154, 155, 158, 192], "machin": [78, 80, 81, 84, 87, 91, 98, 144, 145, 146, 149, 150, 154, 155, 158, 195, 196], "algorithm": [78, 79, 80, 81, 84, 86, 149, 154, 155, 158, 159, 160, 161, 162, 163, 164, 196], "reinforcement_learn": [78, 80, 81, 84, 154, 155, 158, 196], "write": [78, 150, 160, 196], "output": [78, 133, 135, 136, 196], "evaluate_primary_object": [78, 158, 160, 195], "primari": [78, 140, 141, 158, 160, 162, 163, 164, 165, 180, 196], "fix": [78, 145, 158, 160, 196], "input": [78, 92, 96, 133, 144, 145, 146, 149, 150, 174, 175, 185, 196], "gradient": [78, 115, 116, 117, 133, 135, 136, 140, 141, 162, 163, 164, 165, 180, 196], "descent": [78, 140, 180, 196], "numpi": [78, 90, 92, 93, 94, 96, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 133, 135, 136, 137, 144, 145, 146, 149, 150, 158, 160, 183, 185], "evalu": [78, 114, 115, 119, 144, 145, 146, 149, 150, 154, 158, 160], "get_constraint_upper_bound": [78, 195], "upper": [78, 140, 141, 144, 145, 146, 147, 148, 149, 150, 151, 154, 158, 196], "objective_with_barri": [78, 195], "minimization_techniqu": 78, "barrier": [78, 196], "add": [78, 154], "larg": 78, "penalti": 78, "violat": [78, 154, 196], "nsf": [78, 160, 196], "build": [79, 142, 153, 154, 161], "load": [79, 81, 85, 175, 176, 196], "num_datapoint": [80, 84], "meta_inform": [80, 83, 84], "datafram": [80, 83, 84, 105, 125, 144, 145, 146, 149, 150, 154], "row": [80, 84, 113, 131, 146, 149, 180, 196], "rl": [80, 82, 83, 84, 154, 162, 185, 195, 196], "column": [80, 84, 113, 131, 133, 135, 144, 145, 146, 149, 150, 154, 155, 196], "load_rl_dataset_from_csv": [81, 195, 196], "filenam": [81, 85, 175, 176, 177, 178, 192, 196], "metadata_filenam": [81, 196], "rldataset": [81, 195, 196], "csv": [81, 196], "episode_index": 81, "probability_of_act": 81, "load_rl_dataset_from_episode_fil": [81, 195, 196], "pickl": [81, 160, 176, 178, 196], "load_supervised_dataset": [81, 195, 196], "file_typ": 81, "superviseddataset": [81, 195, 196], "label": [81, 84, 88, 89, 90, 92, 93, 94, 95, 96, 101, 102, 104, 106, 107, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 128, 129, 130, 131, 133, 135, 136, 144, 145, 146, 149, 150, 160, 180, 196], "sensit": [81, 160, 196], "extens": 81, "action_prob": 82, "o": 83, "r": [83, 117], "pi_b": 83, "sensitive_attr": 84, "json": [85, 175, 177, 196], "main": [87, 153, 195], "classificationmodel": [88, 92, 96, 195, 196], "binari": [88, 89, 91, 101, 112, 117], "multi": [88, 95, 102, 118], "logist": [88, 89, 95, 112, 117, 118, 120, 152], "regress": [88, 89, 90, 93, 94, 95, 97, 135, 149, 152, 154, 155, 164, 196], "fit": [88, 89, 90, 93, 94, 95, 195, 196], "train": [88, 89, 90, 93, 94, 95, 196], "let": [88, 89, 95, 113, 131, 196], "datapoint": [88, 89, 95, 113, 131], "j": [88, 89, 95, 113, 131, 146], "includ": [88, 89, 95, 113, 131, 154, 196], "bia": [88, 89, 95, 113, 131], "term": [88, 89, 95, 113, 131, 140], "provi": [88, 89, 95, 113, 131, 196], "k": [88, 89, 95, 113, 131, 146], "baselogisticregressionmodel": [89, 95, 195], "have": [89, 92, 95, 96, 154, 196], "point": [89, 95, 101, 102, 112, 118, 121, 140, 149, 175, 176, 187, 188, 189, 196], "linearregressionmodel": [90, 195, 196], "sever": [90, 145, 149, 196], "parent": [90, 91, 97, 98, 99, 145, 149], "assum": 90, "intercept": 90, "nxm": [90, 93, 94], "nx1": [90, 93, 94], "origin": 90, "squash": 90, "supervisedmodel": [91, 97, 136, 195], "classif": [91, 101, 102, 112, 118, 150, 152, 154, 164, 196], "onli": [91, 145, 180, 196], "support": [91, 152, 196], "classifi": [92, 96], "alwai": [92, 96, 140, 144, 145, 146, 149, 150, 154, 196], "regardless": [92, 96, 196], "regressionmodel": [93, 94, 195, 196], "ha": [96, 150, 152, 196], "prob": 96, "supervis": [99, 136, 152, 154, 164, 196], "accuraci": [101, 102, 121], "over": [101, 102, 103, 104, 105, 106, 107, 112, 114, 118, 158, 196], "instanc": [101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 137], "probabilist": [103, 104], "averag": [103, 104, 112, 118], "neg": [103, 104, 108, 110, 123, 124, 126, 129, 152, 154], "rate": [103, 104, 108, 109, 110, 111, 114, 123, 124, 126, 127, 129, 130, 140, 150, 152, 154, 196], "whole": [103, 104, 106, 107, 108, 109, 110, 111, 114, 154], "sampl": [103, 104, 105, 106, 107, 108, 109, 110, 111, 114, 116, 119, 125, 145, 183, 196], "truth": 103, "wa": [103, 104, 110, 111, 113, 131, 149, 150, 154, 196], "data_dict": [105, 114, 119, 125, 144, 145, 146, 149, 150], "unweight": [105, 125], "import": [105, 125, 140, 194, 196], "estim": [105, 125, 144, 145, 146, 150, 196], "mean": [106, 107, 116, 122, 128, 149, 152, 160, 187, 188, 189, 196], "error": [106, 107, 115, 116, 122, 128, 145, 149, 152, 195, 196], "y_hat": 106, "being": [108, 109, 110, 111, 123, 124, 126, 127, 129, 130, 144, 146, 150], "fact": [110, 111], "l_i": [113, 131], "l_k": [113, 131], "element": [113, 131, 133, 135, 136], "confus": [113, 131, 146], "correspond": [113, 131, 155, 184, 196], "statistic_nam": [114, 119], "statist": [114, 119, 144, 150, 152, 196], "fpr": [114, 119, 144, 152, 196], "analyt": 115, "w": 117, "t": [117, 144, 145, 146, 149, 150, 184], "perceptron": 117, "vector": [120, 121, 122, 125, 128, 133, 135, 136, 137, 140, 144, 145, 146, 149, 150, 183], "subject": [123, 124, 129, 130, 196], "actual": [123, 124, 129, 130, 145, 196], "devic": [133, 135, 136], "supervisedpytorchbasemodel": [133, 135, 137, 195], "cnn": 133, "pytorch": [133, 135, 136, 137], "two": [133, 152, 154, 196], "hidden": 133, "layer": [133, 135], "follow": [133, 196], "input_dim": [133, 135], "output_dim": [133, 135], "backward_pass": [133, 135, 136, 195], "external_grad": [133, 135, 136], "do": [133, 135, 136, 137, 195], "backward": [133, 135, 136, 137], "pass": [133, 135, 136, 137, 144, 145, 146, 149, 150, 154, 158, 160, 165, 196], "through": [133, 135, 136, 137, 149, 154], "respect": [133, 135, 136], "torch": [133, 135, 136], "tensor": [133, 135, 136], "itself": [133, 135, 136, 154], "org": [133, 135, 136, 149], "tutori": [133, 135, 136, 195, 196], "beginn": [133, 135, 136], "blitz": [133, 135, 136], "autograd_tutori": [133, 135, 136], "html": [133, 135, 136, 184], "differenti": [133, 135, 136], "autograd": [133, 135, 136, 140, 141, 162, 163, 164, 165], "more": [133, 135, 136, 154, 196], "detail": [133, 135, 136, 160, 196], "create_model": [133, 135, 136, 195], "n": [133, 180, 196], "28": [133, 196], "them": 133, "channel": 133, "28x28": 133, "pixel": 133, "conv2d": 133, "relu": 133, "maxpool": 133, "twice": 133, "fulli": 133, "connect": 133, "10": [133, 196], "forward_pass": [133, 135, 136, 195], "forward": [133, 135, 136], "should": [133, 135, 136, 196], "get_initial_weight": [133, 135, 136, 195], "arg": [133, 135, 136, 192], "flatten": [133, 135, 136], "1d": [133, 135, 136], "get_param_s": [133, 135, 136, 195], "pred_numpi": [133, 135, 136], "rtype": [133, 135, 136], "update_model_param": [133, 135, 136, 195], "reshap": [133, 135, 136], "zero_gradi": [133, 135, 136, 195], "zero": [133, 135, 136], "obtain": [137, 141], "jacobian": 137, "d": 137, "pred": 137, "dtheta": 137, "inherit": [137, 146, 150, 196], "fn": 137, "repres": [137, 144, 147, 148, 152, 154, 196], "oper": [137, 144, 148, 195, 196], "n_constraint": 140, "upper_bounds_funct": [140, 141], "theta_init": 140, "lambda_init": [140, 162, 163, 164], "batch_calcul": 140, "n_batch": 140, "batch_siz": 140, "100": [140, 145], "n_epoch": 140, "alpha_theta": [140, 162, 163, 164], "05": [140, 144, 145, 146, 149, 150, 196], "alpha_lamb": [140, 162, 163, 164], "beta_veloc": [140, 162, 163, 164], "9": [140, 162, 163, 164, 185, 196], "beta_rmsprop": [140, 162, 163, 164], "gradient_librari": [140, 141, 162, 163, 164], "verbos": [140, 162, 163, 164, 165, 166, 177, 178], "simultan": 140, "ascent": 140, "adam": [140, 162, 163, 164, 196], "lagrangian": [140, 180, 196], "l": [140, 160, 180, 196], "lambda": [140, 196], "f": [140, 149, 160, 180, 196], "lagrang": [140, 180], "multipli": [140, 154, 180], "done": 140, "find": [140, 196], "saddl": 140, "Being": 140, "part": [140, 196], "solut": [140, 154, 158, 160, 180, 196], "test": [140, 144, 145, 146, 149, 150, 156, 157, 158, 160, 162, 163, 164, 165, 180, 195], "No": [140, 196], "found": [140, 158, 160, 196], "decai": 140, "veloc": 140, "rmsprop": 140, "num_it": [140, 162, 163, 164], "iter": [140, 149, 196], "librari": [140, 141, 195, 196], "comput": [140, 141, 149, 150, 154, 162, 163, 164], "automat": [140, 141], "boolean": [140, 152, 165, 166, 178, 189, 196], "flag": [140, 165, 166, 178, 189, 196], "control": [140, 165, 166, 189, 196], "lower": [144, 145, 146, 147, 148, 149, 150, 151, 154], "inf": [144, 145, 146, 148, 149, 150], "conditional_column": [144, 145, 146, 149, 150], "leaf": [144, 147, 148, 158], "measur": [144, 146, 150, 152, 154, 196], "condit": [144, 145, 146, 149, 150, 154, 155], "node_typ": [144, 147], "equal": [144, 154, 155, 158, 196], "base_nod": 144, "delta": [144, 145, 146, 149, 150, 154, 155, 165, 166, 196], "share": [144, 145, 149], "put": [144, 145, 149], "measure_function_nam": 144, "measure_funct": [144, 196], "calculate_bound": [144, 145, 146, 149, 150, 195], "bound_method": [144, 145, 146, 149, 150], "calculate_data_forbound": [144, 145, 146, 149, 150, 195], "prepar": [144, 145, 146, 150], "calculate_valu": [144, 145, 146, 149, 150, 195], "etc": [144, 146, 148, 149, 150], "compute_hc_lowerbound": [144, 145, 146, 149, 150, 195], "datas": [144, 145, 146, 149, 150], "high": [144, 145, 146, 149, 150], "level": [144, 145, 146, 149, 150, 154, 196], "compute_hc_upper_and_lowerbound": [144, 145, 146, 149, 150, 195], "compute_hc_upperbound": [144, 145, 146, 149, 150, 195], "independ": [144, 145, 146, 149, 150, 196], "mask_data": [144, 145, 146, 149, 150, 195], "mask": [144, 145, 146, 149, 150], "joint": [144, 145, 146, 149, 150], "AND": [144, 145, 146, 149, 150], "predict_hc_lowerbound": [144, 145, 146, 149, 150, 195], "predict_hc_upper_and_lowerbound": [144, 145, 146, 149, 150, 195], "predict_hc_upperbound": [144, 145, 146, 149, 150, 195], "zhat": [144, 145, 146, 149, 150, 195], "unbias": [144, 145, 146, 150], "basenod": [145, 146, 149, 150, 195], "custom": [145, 149, 152, 196], "cvar_alpha": 145, "alpha": 145, "definit": [145, 196], "consid": 145, "least": [145, 196], "var_alpha": 145, "largest": 145, "thoma": [145, 149], "miller": 145, "2019": [145, 149], "peopl": 145, "umass": 145, "pthoma": 145, "paper": 145, "thomas2019": 145, "pdf": 145, "theorem": 145, "threshold": [145, 165, 166], "cvar": 145, "sort": 145, "b": [145, 152, 154], "n_candid": 145, "cm_true_index": 146, "cm_pred_index": 146, "indic": [146, 160, 170, 196], "c_00": 146, "c_01": 146, "c_0k": 146, "______": 146, "_____": 146, "c_10": 146, "c_11": 146, "c_1k": 146, "c_k0": 146, "c_k1": 146, "c_kk": 146, "constant": [147, 154, 185, 196], "constant_nod": 147, "represent": [147, 148, 151, 152], "what": [147, 148, 151, 195], "displai": [147, 148, 151, 154, 180], "insid": [147, 148, 151], "box": [147, 148, 151, 196], "graph": [147, 148, 151, 154, 194], "intern": [148, 196], "non": 148, "These": [148, 196], "perform": [148, 152, 196], "wise": 149, "differ": [149, 196], "male": [149, 196], "femal": [149, 196], "present": [149, 154], "et": 149, "al": 149, "www": [149, 184], "scienc": 149, "stoken": 149, "author": 149, "token": 149, "st": 149, "119": 149, "full": [149, 180, 196], "figur": [149, 180, 196], "precalculate_data": [149, 195], "preconfigur": 149, "so": [149, 154, 196], "doe": [149, 154, 195], "need": [149, 151, 154, 155, 161, 196], "recalcul": 149, "panda": 149, "up": [149, 154, 196], "y_i": 149, "y_hat_i": 149, "m": [149, 154, 196], "y_j": 149, "y_hat_j": 149, "There": [149, 154, 196], "mai": [149, 174, 196], "n_male": 149, "n_femal": 149, "class_index": 150, "against": 150, "other": [150, 160, 196], "one": [150, 152, 154, 162, 163, 164, 165, 196], "thei": [150, 152, 180, 196], "fpr_": 150, "left": [151, 154, 196], "right": [151, 154, 196], "will_lower_bound": 151, "will_upper_bound": 151, "global": 152, "construct": [152, 196], "measure_functions_dict": [152, 195], "sub_regim": [152, 154, 155, 164, 196], "appear": [152, 154, 196], "recogn": 152, "special": [152, 196], "organ": 152, "sub": [152, 154, 155, 196], "pr": [152, 154, 196], "nr": 152, "tpr": [152, 196], "fnr": 152, "tnr": 152, "logistic_loss": 152, "mean_error": [152, 154, 195], "mean_squared_error": [152, 195, 196], "reinforc": [152, 196], "j_pi_new": [152, 196], "custom_base_node_dict": [152, 195], "map": 152, "node": [152, 154, 155, 158, 162, 163, 164, 195, 196], "op_mapp": [152, 195], "ast": [152, 154], "not_supported_op_mapp": [152, 195], "bounds_required_dict": [152, 195], "requir": [152, 154, 163, 194, 196], "If": [152, 154, 162, 163, 164, 165, 194, 195, 196], "children": [152, 154], "like": [152, 154, 196], "need_a_low": 152, "need_a_upp": 152, "need_b_low": 152, "need_b_upp": 152, "can": [154, 165, 166, 196], "ml": [154, 196], "user": [154, 196], "appropri": 154, "root": [154, 158], "assign": 154, "built": [154, 162, 163, 164, 165, 196], "constraint_str": [154, 155, 165, 166], "express": [154, 196], "n_node": 154, "n_base_nod": 154, "onc": [154, 196], "contribut": 154, "base_node_dict": 154, "keep": 154, "track": 154, "uniqu": 154, "been": [154, 196], "alreadi": [154, 196], "help": [154, 184], "handl": 154, "case": [154, 170, 196], "duplic": [154, 167], "node_fonts": 154, "fontsiz": 154, "graphviz": [154, 194], "available_measure_funct": 154, "_ab": [154, 195], "absolut": [154, 196], "interv": 154, "tupl": [154, 160, 196], "_add": [154, 195], "_assign_bounds_help": [154, 195], "lower_need": 154, "upper_need": 154, "travers": 154, "_assign_deltas_help": [154, 195], "weight_method": 154, "_ast2pt_nod": [154, 195], "ast_nod": 154, "_ast_tree_help": [154, 195], "make": [154, 180, 196], "recurs": 154, "_div": [154, 195], "divid": 154, "_evaluator_help": [154, 195], "_exp": [154, 195], "_max": [154, 195], "_min": [154, 195], "_mult": [154, 195], "_pow": [154, 195], "pow": 154, "_preprocess_constraint_str": [154, 195], "inequ": [154, 196], "move": 154, "everyth": 154, "final": 154, "form": [154, 196], "some": [154, 160, 196], "sure": 154, "mathemat": [154, 196], "written": [154, 196], "python": [154, 184, 194, 196], "syntax": 154, "_propagate_valu": [154, 195], "propag": [154, 158, 195], "_propagator_help": [154, 195], "_protect_nan": [154, 195], "bound_typ": 154, "nan": 154, "infin": 154, "postit": 154, "_sub": [154, 195], "subract": 154, "assign_bounds_need": [154, 195], "breadth": 154, "search": 154, "decid": 154, "eventu": 154, "necessari": [154, 196], "end": [154, 196], "care": 154, "assign_delta": [154, 195], "split": [154, 160, 196], "among": 154, "build_tre": [154, 195], "delta_weight_method": [154, 155], "create_from_ast": [154, 195], "structur": 154, "evaluate_constraint": [154, 195], "postord": 154, "logic": 154, "make_viz": [154, 195], "titl": 154, "diagram": 154, "top": [154, 196], "make_viz_help": [154, 195], "edg": 154, "digraph": 154, "propagate_bound": [154, 195], "reset_base_node_dict": [154, 195], "reset_data": 154, "less": [154, 158, 196], "frequent": 154, "defult": 155, "classifict": 155, "across": 155, "safety_dataset": 158, "loop": 158, "spec": [160, 195], "introspect": 160, "complet": [160, 195, 196], "candidate_safety_split": [160, 195], "frac_data_in_safeti": [160, 162, 163, 164, 165, 166], "fraction": [160, 162, 163, 164, 165], "remain": [160, 162, 163, 164, 165], "f_c": 160, "f_": 160, "l_c": 160, "l_": 160, "s_c": 160, "s_": 160, "candidate_select": [160, 195], "branch": 160, "either": [160, 196], "safety_test": [160, 195, 196], "get_cs_result": [160, 195], "write_cs_logfil": [160, 196], "log": [160, 196], "passed_safeti": [160, 196], "run_safety_test": [160, 195], "candidate_solut": 160, "initial_solution_fn": [162, 163, 164, 165], "base_node_bound_method_dict": [162, 163, 164], "use_builtin_primary_gradient_fn": [162, 163, 164, 165], "custom_primary_gradient_fn": [162, 163, 164], "optimization_hyperparam": [162, 163, 164, 196], "005": [162, 163, 164], "95": [162, 163, 164], "hyper_search": [162, 163, 164], "200": [162, 163, 164], "use_batch": [162, 164], "regularization_hyperparam": [162, 163, 164], "rl_model": [162, 165, 195, 196], "exist": [162, 163, 164, 165], "fall": [162, 163, 164], "builtin": [162, 163, 164], "hyperparamet": [162, 163, 164, 196], "regular": [162, 163, 164], "save_dir": [165, 166], "later": [165, 166], "chang": [165, 166, 180], "directori": [165, 166, 174, 196], "pkl": [165, 166, 196], "glag": [165, 166], "metadata_pth": 166, "supervisedspec": [166, 195, 196], "array_in": 170, "argmax": 170, "multipl": [170, 196], "tie": 170, "val_in": 171, "min_val": 171, "max_val": 171, "limit": 171, "output_str": 172, "indent": 177, "abl": 178, "primary_objective_nam": [180, 196], "savenam": 180, "png": 180, "show": [180, 196], "evolut": [180, 196], "One": [180, 196], "subplot": [180, 196], "repeat": [180, 196], "plot": [180, 196], "ii": 180, "lambda_i": [180, 196], "iii": 180, "g_i": [180, 196], "iv": 180, "lagranian": 180, "sum_i": 180, "plt": 180, "relev": 180, "v": 183, "standard": [183, 187, 188, 189], "deviat": [183, 187, 188, 189], "bessel": 183, "correct": 183, "nu": 184, "invers": [184, 196], "student": 184, "cdf": 184, "degre": 184, "freedom": 184, "matlab": 184, "mathwork": 184, "com": 184, "stat": 184, "arr": 185, "num_point": [187, 188, 189], "loc_x": [187, 188, 189], "loc_i": [187, 188, 189], "sigma_x": [187, 188, 189], "sigma_i": [187, 188, 189], "clip_min": [187, 189], "clip_max": [187, 189], "2d": [187, 188, 189], "distribut": [187, 188, 189], "clip": [187, 189], "option": [189, 196], "msg": 192, "lineno": 192, "seldonian": [194, 196], "pip": 194, "Then": 194, "system": 194, "wide": 194, "recommend": 194, "welcom": 195, "core": 195, "toolkit": [195, 196], "sourc": 195, "code": [195, 196], "host": 195, "github": 195, "overview": 195, "interfac": 195, "sa": 195, "start": [195, 196], "instal": 195, "api": [195, 196], "fourier": 195, "discrete_random_ag": 195, "function_approxim": 195, "linear_fa": 195, "linear_state_action_value_fa": 195, "construct_q_table_from_env_descript": 195, "parameterized_non_learning_softmax_ag": 195, "discretesoftmax": [195, 196], "keyboard_gridworld": 195, "mountain_car_rough_solut": 195, "check_space_typ": 195, "continuous_spac": 195, "rl_generate_dataset_and_spec_fil": 195, "get_constraint_str": 195, "get_env_kwarg": 195, "get_metadata_path": 195, "print_return_info": 195, "rl_runner": 195, "create_ag": 195, "create_env": 195, "run_all_tri": 195, "run_episod": 195, "run_episode_from_dict": 195, "run_trial_given_agent_and_env": 195, "mountaincar": 195, "n_step_mountaincar": 195, "simglucose_env": 195, "simglucos": 195, "generate_gridworld_episod": 195, "generate_mountaincar_episod": 195, "generate_simglucose_episod": 195, "get_max_ob": 195, "hyperparams_and_set": 195, "define_hyperparameter_and_setting_dict": 195, "candidateselect": [195, 196], "load_supervised_metadata": 195, "datasetload": [195, 196], "binarylogisticregressionmodel": 195, "boundedlinearregressionmodel": 195, "dummyclassifiermodel": 195, "linearregressionmodellistfeatur": 195, "multiclasslogisticregressionmodel": 195, "randomclassifiermodel": 195, "accuracy_binari": 195, "accuracy_multiclass": 195, "false_negative_r": 195, "false_positive_r": 195, "is_estim": 195, "negative_r": 195, "positive_r": 195, "true_negative_r": 195, "true_positive_r": 195, "binary_logistic_loss": 195, "confusion_matrix": 195, "evaluate_statist": 195, "gradient_bounded_squared_error": 195, "gradient_mean_squared_error": 195, "gradient_binary_logistic_loss": 195, "multiclass_logistic_loss": 195, "sample_from_statist": 195, "vector_accuracy_binari": 195, "vector_accuracy_multiclass": 195, "vector_error": 195, "vector_false_negative_r": 195, "vector_false_positive_r": 195, "vector_is_estim": 195, "vector_negative_r": 195, "vector_positive_r": 195, "vector_squared_error": 195, "vector_true_negative_r": 195, "vector_true_positive_r": 195, "vector_confusion_matrix": 195, "pytorch_cnn": 195, "pytorchcnn": 195, "pytorch_model": 195, "pytorch_predict_vjp": 195, "pytorchlrtestmodel": 195, "gradient_descent_adam": 195, "setup_gradi": 195, "cvarsqebasenod": 195, "confusionmatrixbasenod": 195, "constantnod": 195, "internalnod": 195, "medcustombasenod": 195, "multiclassbasenod": 195, "make_parse_trees_from_constraint": 195, "safetytest": [195, 196], "seldonian_algorithm": [195, 196], "seldonianalgorithm": [195, 196], "createrlspec": [195, 196], "createsupervisedspec": [195, 196], "validate_parse_tre": 195, "util": [195, 196], "rl_util": 195, "argmax_multi": 195, "clamp": 195, "io_util": [195, 196], "dir_path": 195, "load_json": 195, "load_pickl": [195, 196], "save_json": 195, "save_pickl": 195, "plot_util": [195, 196], "plot_gradient_desc": [195, 196], "stats_util": 195, "stddev": 195, "tinv": 195, "weighted_sum_gamma": 195, "tutorial_util": 195, "generate_clipped_data": 195, "generate_data": 195, "make_synthetic_regression_dataset": 195, "warn": 195, "custom_warn": 195, "custom_formatwarn": 195, "document": 196, "homepag": 196, "In": 196, "page": 196, "few": 196, "hand": 196, "illustr": 196, "simul": 196, "realist": 196, "most": 196, "piec": 196, "cover": 196, "note": 196, "could": 196, "unifi": 196, "work": 196, "pattern": 196, "concept": 196, "conceptu": 196, "enforc": 196, "develop": 196, "design": 196, "applic": 196, "command": 196, "line": 196, "graphic": 196, "short": 196, "underli": 196, "discuss": 196, "below": 196, "well": 196, "manual": 196, "loader": 196, "comma": 196, "separ": 196, "header": 196, "categor": 196, "numer": 196, "might": 196, "look": 196, "622": 196, "491": 196, "56": 196, "439": 196, "93": 196, "707": 196, "64": 196, "663": 196, "65": 196, "557": 196, "09": 196, "711": 196, "37": 196, "731": 196, "31": 196, "509": 196, "33333": 196, "538": 196, "490": 196, "58": 196, "406": 196, "59": 196, "529": 196, "532": 196, "447": 196, "23": 196, "527": 196, "379": 196, "14": 196, "488": 196, "98333": 196, "455": 196, "18": 196, "440": 196, "570": 196, "86": 196, "417": 196, "54": 196, "453": 196, "53": 196, "425": 196, "87": 196, "475": 196, "63": 196, "476": 196, "11": 196, "407": 196, "15": 196, "97333": 196, "756": 196, "91": 196, "679": 196, "62": 196, "531": 196, "583": 196, "534": 196, "42": 196, "521": 196, "592": 196, "41": 196, "783": 196, "76": 196, "588": 196, "26": 196, "53333": 196, "hot": 196, "last": 196, "integ": 196, "25": 196, "second": 196, "partit": 196, "intention": 196, "exclud": 196, "kei": 196, "your": 196, "problem": 196, "label_column": 196, "try": 196, "sensitive_column": 196, "biggest": 196, "logisticregressionmodel": 196, "essenti": 196, "wrap": 196, "scikit": 196, "linearregress": 196, "unless": 196, "own": 196, "know": 196, "best": 196, "though": 196, "chosen": 196, "explicitli": 196, "thing": 196, "extend": 196, "py": 196, "_": 196, "directli": 196, "often": 196, "five": 196, "math": 196, "nativ": 196, "ab": 196, "exp": 196, "239": 196, "trigger": 196, "open": 196, "ad": 196, "quantiti": 196, "It": 196, "someth": 196, "wai": 196, "wrote": 196, "instruct": 196, "recal": 196, "leq": 196, "satisfi": 196, "howev": 196, "cumbersom": 196, "symbol": 196, "interpret": 196, "ident": 196, "themselv": 196, "result": 196, "tri": 196, "basic": 196, "plain": 196, "english": 196, "88": 196, "greater": 196, "commonli": 196, "fair": 196, "filter": 196, "atr1": 196, "atr2": 196, "placehold": 196, "parenthes": 196, "surround": 196, "statement": 196, "sai": 196, "r1": 196, "r2": 196, "stand": 196, "race": 196, "demograph": 196, "pariti": 196, "toler": 196, "ratio": 196, "dispar": 196, "impact": 196, "anoth": 196, "permit": 196, "belong": 196, "bundl": 196, "shown": 196, "block": 196, "At": 196, "broad": 196, "scope": 196, "throught": 196, "now": 196, "happen": 196, "even": 196, "small": 196, "techniqu": 196, "black": 196, "cost": 196, "forc": 196, "toward": 196, "feasibl": 196, "cg": 196, "nelder": 196, "mead": 196, "bfg": 196, "cma": 196, "scipi": 196, "minim": 196, "solver": 196, "covari": 196, "adapt": 196, "strategi": 196, "kkt": 196, "situat": 196, "contraint": 196, "conflict": 196, "vanilla": 196, "oscil": 196, "boundari": 196, "dampen": 196, "momentum": 196, "our": 196, "mitig": 196, "far": 196, "accept": 196, "hat": 196, "mathcal": 196, "ran": 196, "convent": 196, "candidate_selection_log": 196, "increas": 196, "overwritten": 196, "log_fil": 196, "candidate_selection_log0": 196, "cs_dict": 196, "produc": 196, "1500": 196, "red": 196, "area": 196, "middl": 196, "region": 196, "dot": 196, "its": 196, "deem": 196, "assembl": 196, "interact": 196}, "objects": {"": [[0, 0, 0, "-", "seldonian"]], "seldonian": [[1, 0, 0, "-", "RL"], [76, 0, 0, "-", "candidate_selection"], [79, 0, 0, "-", "dataset"], [86, 0, 0, "-", "models"], [138, 0, 0, "-", "optimizers"], [142, 0, 0, "-", "parse_tree"], [156, 0, 0, "-", "safety_test"], [159, 0, 0, "-", "seldonian_algorithm"], [161, 0, 0, "-", "spec"], [168, 0, 0, "-", "utils"], [190, 0, 0, "-", "warnings"]], "seldonian.RL": [[2, 0, 0, "-", "Agents"], [33, 0, 0, "-", "Env_Description"], [40, 0, 0, "-", "RL_generate_dataset_and_spec_file"], [46, 0, 0, "-", "RL_model"], [48, 0, 0, "-", "RL_runner"], [56, 0, 0, "-", "environments"], [67, 0, 0, "-", "generate_gridworld_episodes"], [69, 0, 0, "-", "generate_mountaincar_episodes"], [71, 0, 0, "-", "generate_simglucose_episodes"], [74, 0, 0, "-", "hyperparams_and_settings"]], "seldonian.RL.Agents": [[3, 0, 0, "-", "Agent"], [5, 0, 0, "-", "Bases"], [8, 0, 0, "-", "Discrete_Random_Agent"], [10, 0, 0, "-", "Function_Approximators"], [20, 0, 0, "-", "Parameterized_non_learning_softmax_agent"], [22, 0, 0, "-", "Policies"], [29, 0, 0, "-", "keyboard_gridworld"], [31, 0, 0, "-", "mountain_car_rough_solution"]], "seldonian.RL.Agents.Agent": [[4, 1, 1, "", "Agent"]], "seldonian.RL.Agents.Agent.Agent": [[4, 2, 1, "", "__init__"], [4, 2, 1, "", "__repr__"], [4, 2, 1, "", "choose_action"], [4, 2, 1, "", "get_params"], [4, 2, 1, "", "get_prob_this_action"], [4, 2, 1, "", "set_new_params"], [4, 2, 1, "", "update"]], "seldonian.RL.Agents.Bases": [[6, 0, 0, "-", "Fourier"]], "seldonian.RL.Agents.Bases.Fourier": [[7, 1, 1, "", "Fourier"]], "seldonian.RL.Agents.Bases.Fourier.Fourier": [[7, 2, 1, "", "__init__"], [7, 2, 1, "", "__repr__"], [7, 2, 1, "", "calculate_num_features"], [7, 2, 1, "", "construct_basis_matrix"], [7, 2, 1, "", "get_features"], [7, 2, 1, "", "get_normalized_observation"]], "seldonian.RL.Agents.Discrete_Random_Agent": [[9, 1, 1, "", "Discrete_Random_Agent"]], "seldonian.RL.Agents.Discrete_Random_Agent.Discrete_Random_Agent": [[9, 2, 1, "", "__init__"], [9, 2, 1, "", "__repr__"], [9, 2, 1, "", "choose_action"], [9, 2, 1, "", "get_params"], [9, 2, 1, "", "get_prob_this_action"], [9, 2, 1, "", "set_new_params"], [9, 2, 1, "", "update"]], "seldonian.RL.Agents.Function_Approximators": [[11, 0, 0, "-", "Function_Approximator"], [13, 0, 0, "-", "Linear_FA"], [16, 0, 0, "-", "Table"]], "seldonian.RL.Agents.Function_Approximators.Function_Approximator": [[12, 1, 1, "", "Function_Approximator"]], "seldonian.RL.Agents.Function_Approximators.Function_Approximator.Function_Approximator": [[12, 2, 1, "", "__init__"], [12, 2, 1, "", "__repr__"], [12, 2, 1, "", "set_new_params"]], "seldonian.RL.Agents.Function_Approximators.Linear_FA": [[14, 1, 1, "", "Linear_FA"], [15, 1, 1, "", "Linear_state_action_value_FA"]], "seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_FA": [[14, 2, 1, "", "__init__"], [14, 2, 1, "", "__repr__"], [14, 2, 1, "", "set_new_params"]], "seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_state_action_value_FA": [[15, 2, 1, "", "__init__"], [15, 2, 1, "", "__repr__"], [15, 2, 1, "", "set_new_params"]], "seldonian.RL.Agents.Function_Approximators.Table": [[17, 1, 1, "", "Q_Table"], [18, 1, 1, "", "Table"], [19, 3, 1, "", "construct_Q_Table_From_Env_Description"]], "seldonian.RL.Agents.Function_Approximators.Table.Q_Table": [[17, 2, 1, "", "__init__"], [17, 2, 1, "", "__repr__"], [17, 2, 1, "", "from_environment_state_to_0_indexed_state"], [17, 2, 1, "", "get_action_values_given_state"], [17, 2, 1, "", "get_action_values_given_zero_indexed_state"], [17, 2, 1, "", "set_new_params"]], "seldonian.RL.Agents.Function_Approximators.Table.Table": [[18, 2, 1, "", "__init__"], [18, 2, 1, "", "__repr__"], [18, 2, 1, "", "from_environment_state_to_0_indexed_state"], [18, 2, 1, "", "set_new_params"]], "seldonian.RL.Agents.Parameterized_non_learning_softmax_agent": [[21, 1, 1, "", "Parameterized_non_learning_softmax_agent"]], "seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.Parameterized_non_learning_softmax_agent": [[21, 2, 1, "", "__init__"], [21, 2, 1, "", "__repr__"], [21, 2, 1, "", "choose_action"], [21, 2, 1, "", "get_action_values"], [21, 2, 1, "", "get_params"], [21, 2, 1, "", "get_prob_this_action"], [21, 2, 1, "", "set_new_params"], [21, 2, 1, "", "update"]], "seldonian.RL.Agents.Policies": [[23, 0, 0, "-", "Policy"], [26, 0, 0, "-", "Softmax"]], "seldonian.RL.Agents.Policies.Policy": [[24, 1, 1, "", "Discrete_Action_Policy"], [25, 1, 1, "", "Policy"]], "seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy": [[24, 2, 1, "", "__init__"], [24, 2, 1, "", "__repr__"], [24, 2, 1, "", "choose_action"], [24, 2, 1, "", "construct_basis_and_linear_FA"], [24, 2, 1, "", "from_0_indexed_action_to_environment_action"], [24, 2, 1, "", "from_environment_action_to_0_indexed_action"], [24, 2, 1, "", "get_action_values_given_state"], [24, 2, 1, "", "get_params"], [24, 2, 1, "", "get_prob_this_action"], [24, 2, 1, "", "make_state_action_FA"], [24, 2, 1, "", "set_new_params"]], "seldonian.RL.Agents.Policies.Policy.Policy": [[25, 2, 1, "", "__init__"], [25, 2, 1, "", "__repr__"], [25, 2, 1, "", "choose_action"], [25, 2, 1, "", "get_params"], [25, 2, 1, "", "get_prob_this_action"], [25, 2, 1, "", "set_new_params"]], "seldonian.RL.Agents.Policies.Softmax": [[27, 1, 1, "", "DiscreteSoftmax"], [28, 1, 1, "", "Softmax"]], "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax": [[27, 2, 1, "", "__init__"], [27, 2, 1, "", "__repr__"], [27, 2, 1, "", "_arg"], [27, 2, 1, "", "_denom"], [27, 2, 1, "", "choose_action"], [27, 2, 1, "", "choose_action_from_action_values"], [27, 2, 1, "", "construct_basis_and_linear_FA"], [27, 2, 1, "", "from_0_indexed_action_to_environment_action"], [27, 2, 1, "", "from_environment_action_to_0_indexed_action"], [27, 2, 1, "", "get_action_probs_from_action_values"], [27, 2, 1, "", "get_action_values_given_state"], [27, 2, 1, "", "get_e_to_the_something_terms"], [27, 2, 1, "", "get_params"], [27, 2, 1, "", "get_prob_this_action"], [27, 2, 1, "", "make_state_action_FA"], [27, 2, 1, "", "set_new_params"]], "seldonian.RL.Agents.Policies.Softmax.Softmax": [[28, 2, 1, "", "__init__"], [28, 2, 1, "", "__repr__"], [28, 2, 1, "", "choose_action"], [28, 2, 1, "", "choose_action_from_action_values"], [28, 2, 1, "", "construct_basis_and_linear_FA"], [28, 2, 1, "", "from_0_indexed_action_to_environment_action"], [28, 2, 1, "", "from_environment_action_to_0_indexed_action"], [28, 2, 1, "", "get_action_probs_from_action_values"], [28, 2, 1, "", "get_action_values_given_state"], [28, 2, 1, "", "get_e_to_the_something_terms"], [28, 2, 1, "", "get_params"], [28, 2, 1, "", "get_prob_this_action"], [28, 2, 1, "", "make_state_action_FA"], [28, 2, 1, "", "set_new_params"]], "seldonian.RL.Agents.keyboard_gridworld": [[30, 1, 1, "", "Keyboard_gridworld"]], "seldonian.RL.Agents.keyboard_gridworld.Keyboard_gridworld": [[30, 2, 1, "", "__init__"], [30, 2, 1, "", "__repr__"], [30, 2, 1, "", "choose_action"], [30, 2, 1, "", "get_params"], [30, 2, 1, "", "get_prob_this_action"], [30, 2, 1, "", "set_new_params"], [30, 2, 1, "", "update"]], "seldonian.RL.Agents.mountain_car_rough_solution": [[32, 1, 1, "", "Mountain_car_rough_solution"]], "seldonian.RL.Agents.mountain_car_rough_solution.Mountain_car_rough_solution": [[32, 2, 1, "", "__init__"], [32, 2, 1, "", "__repr__"], [32, 2, 1, "", "choose_action"], [32, 2, 1, "", "get_params"], [32, 2, 1, "", "get_prob_this_action"], [32, 2, 1, "", "set_new_params"], [32, 2, 1, "", "update"]], "seldonian.RL.Env_Description": [[34, 0, 0, "-", "Env_Description"], [37, 0, 0, "-", "Spaces"]], "seldonian.RL.Env_Description.Env_Description": [[35, 1, 1, "", "Env_Description"], [36, 3, 1, "", "check_space_type"]], "seldonian.RL.Env_Description.Env_Description.Env_Description": [[35, 2, 1, "", "__init__"], [35, 2, 1, "", "__repr__"], [35, 2, 1, "", "get_min_action"], [35, 2, 1, "", "get_min_state"], [35, 2, 1, "", "get_num_actions"], [35, 2, 1, "", "get_num_observation_dims"], [35, 2, 1, "", "get_num_states"]], "seldonian.RL.Env_Description.Spaces": [[38, 1, 1, "", "Continuous_Space"], [39, 1, 1, "", "Discrete_Space"]], "seldonian.RL.Env_Description.Spaces.Continuous_Space": [[38, 2, 1, "", "__init__"], [38, 2, 1, "", "__repr__"], [38, 2, 1, "", "check_bounds_valid"], [38, 2, 1, "", "get_num_dims"]], "seldonian.RL.Env_Description.Spaces.Discrete_Space": [[39, 2, 1, "", "__init__"], [39, 2, 1, "", "__repr__"], [39, 2, 1, "", "get_num_values"]], "seldonian.RL.RL_generate_dataset_and_spec_file": [[41, 3, 1, "", "get_constraint_string"], [42, 3, 1, "", "get_env_kwargs"], [43, 3, 1, "", "get_metadata_path"], [44, 3, 1, "", "main"], [45, 3, 1, "", "print_return_info"]], "seldonian.RL.RL_model": [[47, 1, 1, "", "RL_model"]], "seldonian.RL.RL_model.RL_model": [[47, 2, 1, "", "__init__"], [47, 2, 1, "", "__repr__"], [47, 2, 1, "", "get_prob_this_action"], [47, 2, 1, "", "get_probs_from_observations_and_actions"]], "seldonian.RL.RL_runner": [[49, 3, 1, "", "create_agent"], [50, 3, 1, "", "create_env"], [51, 3, 1, "", "run_all_trials"], [52, 3, 1, "", "run_episode"], [53, 3, 1, "", "run_episode_from_dict"], [54, 3, 1, "", "run_trial"], [55, 3, 1, "", "run_trial_given_agent_and_env"]], "seldonian.RL.environments": [[57, 0, 0, "-", "Environment"], [59, 0, 0, "-", "gridworld"], [61, 0, 0, "-", "mountaincar"], [63, 0, 0, "-", "n_step_mountaincar"], [65, 0, 0, "-", "simglucose_env"]], "seldonian.RL.environments.Environment": [[58, 1, 1, "", "Environment"]], "seldonian.RL.environments.Environment.Environment": [[58, 2, 1, "", "__init__"], [58, 2, 1, "", "__repr__"], [58, 2, 1, "", "get_env_description"], [58, 2, 1, "", "get_observation"], [58, 2, 1, "", "reset"], [58, 2, 1, "", "start_visualizing"], [58, 2, 1, "", "stop_visualizing"], [58, 2, 1, "", "terminated"], [58, 2, 1, "", "transition"], [58, 2, 1, "", "visualize"]], "seldonian.RL.environments.gridworld": [[60, 1, 1, "", "Gridworld"]], "seldonian.RL.environments.gridworld.Gridworld": [[60, 2, 1, "", "__init__"], [60, 2, 1, "", "__repr__"], [60, 2, 1, "", "create_env_description"], [60, 2, 1, "", "get_env_description"], [60, 2, 1, "", "get_observation"], [60, 2, 1, "", "is_in_goal_state"], [60, 2, 1, "", "reset"], [60, 2, 1, "", "start_visualizing"], [60, 2, 1, "", "stop_visualizing"], [60, 2, 1, "", "terminated"], [60, 2, 1, "", "transition"], [60, 2, 1, "", "update_position"], [60, 2, 1, "", "visualize"]], "seldonian.RL.environments.mountaincar": [[62, 1, 1, "", "Mountaincar"]], "seldonian.RL.environments.mountaincar.Mountaincar": [[62, 2, 1, "", "__init__"], [62, 2, 1, "", "__repr__"], [62, 2, 1, "", "get_env_description"], [62, 2, 1, "", "get_observation"], [62, 2, 1, "", "reset"], [62, 2, 1, "", "start_visualizing"], [62, 2, 1, "", "stop_visualizing"], [62, 2, 1, "", "terminated"], [62, 2, 1, "", "transition"], [62, 2, 1, "", "visualize"]], "seldonian.RL.environments.n_step_mountaincar": [[64, 1, 1, "", "N_step_mountaincar"]], "seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar": [[64, 2, 1, "", "__init__"], [64, 2, 1, "", "__repr__"], [64, 2, 1, "", "get_env_description"], [64, 2, 1, "", "get_observation"], [64, 2, 1, "", "reset"], [64, 2, 1, "", "start_visualizing"], [64, 2, 1, "", "stop_visualizing"], [64, 2, 1, "", "terminated"], [64, 2, 1, "", "transition"], [64, 2, 1, "", "visualize"]], "seldonian.RL.environments.simglucose_env": [[66, 1, 1, "", "Simglucose"]], "seldonian.RL.environments.simglucose_env.Simglucose": [[66, 2, 1, "", "__init__"], [66, 2, 1, "", "__repr__"], [66, 2, 1, "", "get_env_description"], [66, 2, 1, "", "get_observation"], [66, 2, 1, "", "reset"], [66, 2, 1, "", "start_visualizing"], [66, 2, 1, "", "stop_visualizing"], [66, 2, 1, "", "terminated"], [66, 2, 1, "", "transition"], [66, 2, 1, "", "visualize"]], "seldonian.RL.generate_gridworld_episodes": [[68, 3, 1, "", "main"]], "seldonian.RL.generate_mountaincar_episodes": [[70, 3, 1, "", "main"]], "seldonian.RL.generate_simglucose_episodes": [[72, 3, 1, "", "get_max_obs"], [73, 3, 1, "", "main"]], "seldonian.RL.hyperparams_and_settings": [[75, 3, 1, "", "define_hyperparameter_and_setting_dict"]], "seldonian.candidate_selection": [[77, 0, 0, "-", "candidate_selection"]], "seldonian.candidate_selection.candidate_selection": [[78, 1, 1, "", "CandidateSelection"]], "seldonian.candidate_selection.candidate_selection.CandidateSelection": [[78, 2, 1, "", "__init__"], [78, 2, 1, "", "__repr__"], [78, 2, 1, "", "evaluate_primary_objective"], [78, 2, 1, "", "get_constraint_upper_bounds"], [78, 2, 1, "", "objective_with_barrier"], [78, 2, 1, "", "run"]], "seldonian.dataset": [[80, 1, 1, "", "DataSet"], [81, 1, 1, "", "DataSetLoader"], [82, 1, 1, "", "Episode"], [83, 1, 1, "", "RLDataSet"], [84, 1, 1, "", "SupervisedDataSet"], [85, 3, 1, "", "load_supervised_metadata"]], "seldonian.dataset.DataSet": [[80, 2, 1, "", "__init__"], [80, 2, 1, "", "__repr__"]], "seldonian.dataset.DataSetLoader": [[81, 2, 1, "", "__init__"], [81, 2, 1, "", "__repr__"], [81, 2, 1, "", "load_RL_dataset_from_csv"], [81, 2, 1, "", "load_RL_dataset_from_episode_file"], [81, 2, 1, "", "load_supervised_dataset"]], "seldonian.dataset.Episode": [[82, 2, 1, "", "__init__"], [82, 2, 1, "", "__repr__"]], "seldonian.dataset.RLDataSet": [[83, 2, 1, "", "__init__"], [83, 2, 1, "", "__repr__"]], "seldonian.dataset.SupervisedDataSet": [[84, 2, 1, "", "__init__"], [84, 2, 1, "", "__repr__"]], "seldonian.models": [[87, 0, 0, "-", "models"], [100, 0, 0, "-", "objectives"], [132, 0, 0, "-", "pytorch_cnn"], [134, 0, 0, "-", "pytorch_model"]], "seldonian.models.models": [[88, 1, 1, "", "BaseLogisticRegressionModel"], [89, 1, 1, "", "BinaryLogisticRegressionModel"], [90, 1, 1, "", "BoundedLinearRegressionModel"], [91, 1, 1, "", "ClassificationModel"], [92, 1, 1, "", "DummyClassifierModel"], [93, 1, 1, "", "LinearRegressionModel"], [94, 1, 1, "", "LinearRegressionModelListFeatures"], [95, 1, 1, "", "MultiClassLogisticRegressionModel"], [96, 1, 1, "", "RandomClassifierModel"], [97, 1, 1, "", "RegressionModel"], [98, 1, 1, "", "SeldonianModel"], [99, 1, 1, "", "SupervisedModel"]], "seldonian.models.models.BaseLogisticRegressionModel": [[88, 2, 1, "", "__init__"], [88, 2, 1, "", "__repr__"], [88, 2, 1, "", "fit"]], "seldonian.models.models.BinaryLogisticRegressionModel": [[89, 2, 1, "", "__init__"], [89, 2, 1, "", "__repr__"], [89, 2, 1, "", "fit"], [89, 2, 1, "", "predict"]], "seldonian.models.models.BoundedLinearRegressionModel": [[90, 2, 1, "", "__init__"], [90, 2, 1, "", "__repr__"], [90, 2, 1, "", "fit"], [90, 2, 1, "", "predict"]], "seldonian.models.models.ClassificationModel": [[91, 2, 1, "", "__init__"], [91, 2, 1, "", "__repr__"]], "seldonian.models.models.DummyClassifierModel": [[92, 2, 1, "", "__init__"], [92, 2, 1, "", "__repr__"], [92, 2, 1, "", "predict"]], "seldonian.models.models.LinearRegressionModel": [[93, 2, 1, "", "__init__"], [93, 2, 1, "", "__repr__"], [93, 2, 1, "", "fit"], [93, 2, 1, "", "predict"]], "seldonian.models.models.LinearRegressionModelListFeatures": [[94, 2, 1, "", "__init__"], [94, 2, 1, "", "__repr__"], [94, 2, 1, "", "fit"], [94, 2, 1, "", "predict"]], "seldonian.models.models.MultiClassLogisticRegressionModel": [[95, 2, 1, "", "__init__"], [95, 2, 1, "", "__repr__"], [95, 2, 1, "", "fit"], [95, 2, 1, "", "predict"]], "seldonian.models.models.RandomClassifierModel": [[96, 2, 1, "", "__init__"], [96, 2, 1, "", "__repr__"], [96, 2, 1, "", "predict"]], "seldonian.models.models.RegressionModel": [[97, 2, 1, "", "__init__"], [97, 2, 1, "", "__repr__"]], "seldonian.models.models.SeldonianModel": [[98, 2, 1, "", "__init__"], [98, 2, 1, "", "__repr__"]], "seldonian.models.models.SupervisedModel": [[99, 2, 1, "", "__init__"], [99, 2, 1, "", "__repr__"]], "seldonian.models.objectives": [[101, 3, 1, "", "Accuracy_binary"], [102, 3, 1, "", "Accuracy_multiclass"], [103, 3, 1, "", "False_Negative_Rate"], [104, 3, 1, "", "False_Positive_Rate"], [105, 3, 1, "", "IS_estimate"], [106, 3, 1, "", "Mean_Error"], [107, 3, 1, "", "Mean_Squared_Error"], [108, 3, 1, "", "Negative_Rate"], [109, 3, 1, "", "Positive_Rate"], [110, 3, 1, "", "True_Negative_Rate"], [111, 3, 1, "", "True_Positive_Rate"], [112, 3, 1, "", "binary_logistic_loss"], [113, 3, 1, "", "confusion_matrix"], [114, 3, 1, "", "evaluate_statistic"], [115, 3, 1, "", "gradient_Bounded_Squared_Error"], [116, 3, 1, "", "gradient_Mean_Squared_Error"], [117, 3, 1, "", "gradient_binary_logistic_loss"], [118, 3, 1, "", "multiclass_logistic_loss"], [119, 3, 1, "", "sample_from_statistic"], [120, 3, 1, "", "vector_Accuracy_binary"], [121, 3, 1, "", "vector_Accuracy_multiclass"], [122, 3, 1, "", "vector_Error"], [123, 3, 1, "", "vector_False_Negative_Rate"], [124, 3, 1, "", "vector_False_Positive_Rate"], [125, 3, 1, "", "vector_IS_estimate"], [126, 3, 1, "", "vector_Negative_Rate"], [127, 3, 1, "", "vector_Positive_Rate"], [128, 3, 1, "", "vector_Squared_Error"], [129, 3, 1, "", "vector_True_Negative_Rate"], [130, 3, 1, "", "vector_True_Positive_Rate"], [131, 3, 1, "", "vector_confusion_matrix"]], "seldonian.models.pytorch_cnn": [[133, 1, 1, "", "PytorchCNN"]], "seldonian.models.pytorch_cnn.PytorchCNN": [[133, 2, 1, "", "__init__"], [133, 2, 1, "", "__repr__"], [133, 2, 1, "", "backward_pass"], [133, 2, 1, "", "create_model"], [133, 2, 1, "", "forward_pass"], [133, 2, 1, "", "get_initial_weights"], [133, 2, 1, "", "get_param_sizes"], [133, 2, 1, "", "predict"], [133, 2, 1, "", "update_model_params"], [133, 2, 1, "", "zero_gradients"]], "seldonian.models.pytorch_model": [[135, 1, 1, "", "PytorchLRTestModel"], [136, 1, 1, "", "SupervisedPytorchBaseModel"], [137, 3, 1, "", "pytorch_predict_vjp"]], "seldonian.models.pytorch_model.PytorchLRTestModel": [[135, 2, 1, "", "__init__"], [135, 2, 1, "", "__repr__"], [135, 2, 1, "", "backward_pass"], [135, 2, 1, "", "create_model"], [135, 2, 1, "", "forward_pass"], [135, 2, 1, "", "get_initial_weights"], [135, 2, 1, "", "get_param_sizes"], [135, 2, 1, "", "predict"], [135, 2, 1, "", "update_model_params"], [135, 2, 1, "", "zero_gradients"]], "seldonian.models.pytorch_model.SupervisedPytorchBaseModel": [[136, 2, 1, "", "__init__"], [136, 2, 1, "", "__repr__"], [136, 2, 1, "", "backward_pass"], [136, 2, 1, "", "create_model"], [136, 2, 1, "", "forward_pass"], [136, 2, 1, "", "get_initial_weights"], [136, 2, 1, "", "get_param_sizes"], [136, 2, 1, "", "predict"], [136, 2, 1, "", "update_model_params"], [136, 2, 1, "", "zero_gradients"]], "seldonian.optimizers": [[139, 0, 0, "-", "gradient_descent"]], "seldonian.optimizers.gradient_descent": [[140, 3, 1, "", "gradient_descent_adam"], [141, 3, 1, "", "setup_gradients"]], "seldonian.parse_tree": [[143, 0, 0, "-", "nodes"], [152, 0, 0, "-", "operators"], [153, 0, 0, "-", "parse_tree"]], "seldonian.parse_tree.nodes": [[144, 1, 1, "", "BaseNode"], [145, 1, 1, "", "CVaRSQeBaseNode"], [146, 1, 1, "", "ConfusionMatrixBaseNode"], [147, 1, 1, "", "ConstantNode"], [148, 1, 1, "", "InternalNode"], [149, 1, 1, "", "MEDCustomBaseNode"], [150, 1, 1, "", "MultiClassBaseNode"], [151, 1, 1, "", "Node"]], "seldonian.parse_tree.nodes.BaseNode": [[144, 2, 1, "", "__init__"], [144, 2, 1, "", "__repr__"], [144, 2, 1, "", "calculate_bounds"], [144, 2, 1, "", "calculate_data_forbound"], [144, 2, 1, "", "calculate_value"], [144, 2, 1, "", "compute_HC_lowerbound"], [144, 2, 1, "", "compute_HC_upper_and_lowerbound"], [144, 2, 1, "", "compute_HC_upperbound"], [144, 2, 1, "", "mask_data"], [144, 2, 1, "", "predict_HC_lowerbound"], [144, 2, 1, "", "predict_HC_upper_and_lowerbound"], [144, 2, 1, "", "predict_HC_upperbound"], [144, 2, 1, "", "zhat"]], "seldonian.parse_tree.nodes.CVaRSQeBaseNode": [[145, 2, 1, "", "__init__"], [145, 2, 1, "", "__repr__"], [145, 2, 1, "", "calculate_bounds"], [145, 2, 1, "", "calculate_data_forbound"], [145, 2, 1, "", "calculate_value"], [145, 2, 1, "", "compute_HC_lowerbound"], [145, 2, 1, "", "compute_HC_upper_and_lowerbound"], [145, 2, 1, "", "compute_HC_upperbound"], [145, 2, 1, "", "mask_data"], [145, 2, 1, "", "predict_HC_lowerbound"], [145, 2, 1, "", "predict_HC_upper_and_lowerbound"], [145, 2, 1, "", "predict_HC_upperbound"], [145, 2, 1, "", "zhat"]], "seldonian.parse_tree.nodes.ConfusionMatrixBaseNode": [[146, 2, 1, "", "__init__"], [146, 2, 1, "", "__repr__"], [146, 2, 1, "", "calculate_bounds"], [146, 2, 1, "", "calculate_data_forbound"], [146, 2, 1, "", "calculate_value"], [146, 2, 1, "", "compute_HC_lowerbound"], [146, 2, 1, "", "compute_HC_upper_and_lowerbound"], [146, 2, 1, "", "compute_HC_upperbound"], [146, 2, 1, "", "mask_data"], [146, 2, 1, "", "predict_HC_lowerbound"], [146, 2, 1, "", "predict_HC_upper_and_lowerbound"], [146, 2, 1, "", "predict_HC_upperbound"], [146, 2, 1, "", "zhat"]], "seldonian.parse_tree.nodes.ConstantNode": [[147, 2, 1, "", "__init__"], [147, 2, 1, "", "__repr__"]], "seldonian.parse_tree.nodes.InternalNode": [[148, 2, 1, "", "__init__"], [148, 2, 1, "", "__repr__"]], "seldonian.parse_tree.nodes.MEDCustomBaseNode": [[149, 2, 1, "", "__init__"], [149, 2, 1, "", "__repr__"], [149, 2, 1, "", "calculate_bounds"], [149, 2, 1, "", "calculate_data_forbound"], [149, 2, 1, "", "calculate_value"], [149, 2, 1, "", "compute_HC_lowerbound"], [149, 2, 1, "", "compute_HC_upper_and_lowerbound"], [149, 2, 1, "", "compute_HC_upperbound"], [149, 2, 1, "", "mask_data"], [149, 2, 1, "", "precalculate_data"], [149, 2, 1, "", "predict_HC_lowerbound"], [149, 2, 1, "", "predict_HC_upper_and_lowerbound"], [149, 2, 1, "", "predict_HC_upperbound"], [149, 2, 1, "", "zhat"]], "seldonian.parse_tree.nodes.MultiClassBaseNode": [[150, 2, 1, "", "__init__"], [150, 2, 1, "", "__repr__"], [150, 2, 1, "", "calculate_bounds"], [150, 2, 1, "", "calculate_data_forbound"], [150, 2, 1, "", "calculate_value"], [150, 2, 1, "", "compute_HC_lowerbound"], [150, 2, 1, "", "compute_HC_upper_and_lowerbound"], [150, 2, 1, "", "compute_HC_upperbound"], [150, 2, 1, "", "mask_data"], [150, 2, 1, "", "predict_HC_lowerbound"], [150, 2, 1, "", "predict_HC_upper_and_lowerbound"], [150, 2, 1, "", "predict_HC_upperbound"], [150, 2, 1, "", "zhat"]], "seldonian.parse_tree.nodes.Node": [[151, 2, 1, "", "__init__"], [151, 2, 1, "", "__repr__"]], "seldonian.parse_tree.operators": [[152, 4, 1, "", "bounds_required_dict"], [152, 4, 1, "", "custom_base_node_dict"], [152, 4, 1, "", "measure_functions_dict"], [152, 4, 1, "", "not_supported_op_mapper"], [152, 4, 1, "", "op_mapper"]], "seldonian.parse_tree.parse_tree": [[154, 1, 1, "", "ParseTree"], [155, 3, 1, "", "make_parse_trees_from_constraints"]], "seldonian.parse_tree.parse_tree.ParseTree": [[154, 2, 1, "", "__init__"], [154, 2, 1, "", "__repr__"], [154, 2, 1, "", "_abs"], [154, 2, 1, "", "_add"], [154, 2, 1, "", "_assign_bounds_helper"], [154, 2, 1, "", "_assign_deltas_helper"], [154, 2, 1, "", "_ast2pt_node"], [154, 2, 1, "", "_ast_tree_helper"], [154, 2, 1, "", "_div"], [154, 2, 1, "", "_evaluator_helper"], [154, 2, 1, "", "_exp"], [154, 2, 1, "", "_max"], [154, 2, 1, "", "_min"], [154, 2, 1, "", "_mult"], [154, 2, 1, "", "_pow"], [154, 2, 1, "", "_preprocess_constraint_str"], [154, 2, 1, "", "_propagate_value"], [154, 2, 1, "", "_propagator_helper"], [154, 2, 1, "", "_protect_nan"], [154, 2, 1, "", "_sub"], [154, 2, 1, "", "assign_bounds_needed"], [154, 2, 1, "", "assign_deltas"], [154, 2, 1, "", "build_tree"], [154, 2, 1, "", "create_from_ast"], [154, 2, 1, "", "evaluate_constraint"], [154, 2, 1, "", "make_viz"], [154, 2, 1, "", "make_viz_helper"], [154, 2, 1, "", "propagate"], [154, 2, 1, "", "propagate_bounds"], [154, 2, 1, "", "reset_base_node_dict"]], "seldonian.safety_test": [[157, 0, 0, "-", "safety_test"]], "seldonian.safety_test.safety_test": [[158, 1, 1, "", "SafetyTest"]], "seldonian.safety_test.safety_test.SafetyTest": [[158, 2, 1, "", "__init__"], [158, 2, 1, "", "__repr__"], [158, 2, 1, "", "evaluate_primary_objective"], [158, 2, 1, "", "run"]], "seldonian.seldonian_algorithm": [[160, 1, 1, "", "SeldonianAlgorithm"]], "seldonian.seldonian_algorithm.SeldonianAlgorithm": [[160, 2, 1, "", "__init__"], [160, 2, 1, "", "__repr__"], [160, 2, 1, "", "candidate_safety_split"], [160, 2, 1, "", "candidate_selection"], [160, 2, 1, "", "evaluate_primary_objective"], [160, 2, 1, "", "get_cs_result"], [160, 2, 1, "", "run"], [160, 2, 1, "", "run_safety_test"], [160, 2, 1, "", "safety_test"]], "seldonian.spec": [[162, 1, 1, "", "RLSpec"], [163, 1, 1, "", "Spec"], [164, 1, 1, "", "SupervisedSpec"], [165, 3, 1, "", "createRLSpec"], [166, 3, 1, "", "createSupervisedSpec"], [167, 3, 1, "", "validate_parse_trees"]], "seldonian.spec.RLSpec": [[162, 2, 1, "", "__init__"], [162, 2, 1, "", "__repr__"]], "seldonian.spec.Spec": [[163, 2, 1, "", "__init__"], [163, 2, 1, "", "__repr__"]], "seldonian.spec.SupervisedSpec": [[164, 2, 1, "", "__init__"], [164, 2, 1, "", "__repr__"]], "seldonian.utils": [[169, 0, 0, "-", "RL_utils"], [173, 0, 0, "-", "io_utils"], [179, 0, 0, "-", "plot_utils"], [181, 0, 0, "-", "stats_utils"], [186, 0, 0, "-", "tutorial_utils"]], "seldonian.utils.RL_utils": [[170, 3, 1, "", "argmax_multi"], [171, 3, 1, "", "clamp"], [172, 3, 1, "", "error"]], "seldonian.utils.io_utils": [[174, 3, 1, "", "dir_path"], [175, 3, 1, "", "load_json"], [176, 3, 1, "", "load_pickle"], [177, 3, 1, "", "save_json"], [178, 3, 1, "", "save_pickle"]], "seldonian.utils.plot_utils": [[180, 3, 1, "", "plot_gradient_descent"]], "seldonian.utils.stats_utils": [[182, 3, 1, "", "softmax"], [183, 3, 1, "", "stddev"], [184, 3, 1, "", "tinv"], [185, 3, 1, "", "weighted_sum_gamma"]], "seldonian.utils.tutorial_utils": [[187, 3, 1, "", "generate_clipped_data"], [188, 3, 1, "", "generate_data"], [189, 3, 1, "", "make_synthetic_regression_dataset"]], "seldonian.warnings": [[191, 0, 0, "-", "custom_warnings"]], "seldonian.warnings.custom_warnings": [[192, 3, 1, "", "custom_formatwarning"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "data", "Python data"]}, "titleterms": {"seldonian": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 195], "rl": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "agent": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32], "base": [5, 6, 7], "fourier": [6, 7], "discrete_random_ag": [8, 9], "function_approxim": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "linear_fa": [13, 14, 15], "linear_state_action_value_fa": 15, "tabl": [16, 17, 18, 19, 195], "q_tabl": 17, "construct_q_table_from_env_descript": 19, "parameterized_non_learning_softmax_ag": [20, 21], "polici": [22, 23, 24, 25, 26, 27, 28], "discrete_action_polici": 24, "softmax": [26, 27, 28, 182], "discretesoftmax": 27, "keyboard_gridworld": [29, 30], "mountain_car_rough_solut": [31, 32], "env_descript": [33, 34, 35, 36, 37, 38, 39], "check_space_typ": 36, "space": [37, 38, 39], "continuous_spac": 38, "discrete_spac": 39, "rl_generate_dataset_and_spec_fil": [40, 41, 42, 43, 44, 45], "get_constraint_str": 41, "get_env_kwarg": 42, "get_metadata_path": 43, "main": [44, 68, 70, 73], "print_return_info": 45, "rl_model": [46, 47], "rl_runner": [48, 49, 50, 51, 52, 53, 54, 55], "create_ag": 49, "create_env": 50, "run_all_tri": 51, "run_episod": 52, "run_episode_from_dict": 53, "run_trial": 54, "run_trial_given_agent_and_env": 55, "environ": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66], "gridworld": [59, 60], "mountaincar": [61, 62], "n_step_mountaincar": [63, 64], "simglucose_env": [65, 66], "simglucos": 66, "generate_gridworld_episod": [67, 68], "generate_mountaincar_episod": [69, 70], "generate_simglucose_episod": [71, 72, 73], "get_max_ob": 72, "hyperparams_and_set": [74, 75], "define_hyperparameter_and_setting_dict": 75, "candidate_select": [76, 77, 78], "candidateselect": 78, "dataset": [79, 80, 81, 82, 83, 84, 85, 196], "datasetload": 81, "episod": 82, "rldataset": 83, "superviseddataset": 84, "load_supervised_metadata": 85, "model": [86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 196], "baselogisticregressionmodel": 88, "binarylogisticregressionmodel": 89, "boundedlinearregressionmodel": 90, "classificationmodel": 91, "dummyclassifiermodel": 92, "linearregressionmodel": 93, "linearregressionmodellistfeatur": 94, "multiclasslogisticregressionmodel": 95, "randomclassifiermodel": 96, "regressionmodel": 97, "seldonianmodel": 98, "supervisedmodel": 99, "object": [100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 196], "accuracy_binari": 101, "accuracy_multiclass": 102, "false_negative_r": 103, "false_positive_r": 104, "is_estim": 105, "mean_error": 106, "mean_squared_error": 107, "negative_r": 108, "positive_r": 109, "true_negative_r": 110, "true_positive_r": 111, "binary_logistic_loss": 112, "confusion_matrix": 113, "evaluate_statist": 114, "gradient_bounded_squared_error": 115, "gradient_mean_squared_error": 116, "gradient_binary_logistic_loss": 117, "multiclass_logistic_loss": 118, "sample_from_statist": 119, "vector_accuracy_binari": 120, "vector_accuracy_multiclass": 121, "vector_error": 122, "vector_false_negative_r": 123, "vector_false_positive_r": 124, "vector_is_estim": 125, "vector_negative_r": 126, "vector_positive_r": 127, "vector_squared_error": 128, "vector_true_negative_r": 129, "vector_true_positive_r": 130, "vector_confusion_matrix": 131, "pytorch_cnn": [132, 133], "pytorchcnn": 133, "pytorch_model": [134, 135, 136, 137], "pytorchlrtestmodel": 135, "supervisedpytorchbasemodel": 136, "pytorch_predict_vjp": 137, "optim": [138, 139, 140, 141], "gradient_desc": [139, 140, 141], "gradient_descent_adam": 140, "setup_gradi": 141, "parse_tre": [142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155], "node": [143, 144, 145, 146, 147, 148, 149, 150, 151], "basenod": 144, "cvarsqebasenod": 145, "confusionmatrixbasenod": 146, "constantnod": 147, "internalnod": 148, "medcustombasenod": 149, "multiclassbasenod": 150, "oper": 152, "parsetre": 154, "make_parse_trees_from_constraint": 155, "safety_test": [156, 157, 158], "safetytest": 158, "seldonian_algorithm": [159, 160], "seldonianalgorithm": 160, "spec": [161, 162, 163, 164, 165, 166, 167, 196], "rlspec": 162, "supervisedspec": 164, "createrlspec": 165, "createsupervisedspec": 166, "validate_parse_tre": 167, "util": [168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189], "rl_util": [169, 170, 171, 172], "argmax_multi": 170, "clamp": 171, "error": 172, "io_util": [173, 174, 175, 176, 177, 178], "dir_path": 174, "load_json": 175, "load_pickl": 176, "save_json": 177, "save_pickl": 178, "plot_util": [179, 180], "plot_gradient_desc": 180, "stats_util": [181, 182, 183, 184, 185], "stddev": 183, "tinv": 184, "weighted_sum_gamma": 185, "tutorial_util": [186, 187, 188, 189], "generate_clipped_data": 187, "generate_data": 188, "make_synthetic_regression_dataset": 189, "warn": [190, 191, 192], "custom_warn": [191, 192], "custom_formatwarn": 192, "api": 193, "get": 194, "start": 194, "instal": 194, "A": 194, "first": 194, "tutori": 194, "engin": 195, "document": 195, "content": 195, "overview": 196, "interfac": 196, "behavior": 196, "constraint": 196, "string": 196, "what": 196, "doe": 196, "sa": 196, "run": 196, "do": 196, "candid": 196, "select": 196, "safeti": 196, "test": 196}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"seldonian": [[0, "module-seldonian"]], "seldonian.RL": [[1, "module-seldonian.RL"]], "seldonian.RL.Agents": [[2, "module-seldonian.RL.Agents"]], "seldonian.RL.Agents.Agent": [[3, "module-seldonian.RL.Agents.Agent"]], "seldonian.RL.Agents.Agent.Agent": [[4, "seldonian-rl-agents-agent-agent"]], "seldonian.RL.Agents.Bases": [[5, "module-seldonian.RL.Agents.Bases"]], "seldonian.RL.Agents.Bases.Fourier": [[6, "module-seldonian.RL.Agents.Bases.Fourier"]], "seldonian.RL.Agents.Bases.Fourier.Fourier": [[7, "seldonian-rl-agents-bases-fourier-fourier"]], "seldonian.RL.Agents.Discrete_Random_Agent": [[8, "module-seldonian.RL.Agents.Discrete_Random_Agent"]], "seldonian.RL.Agents.Discrete_Random_Agent.Discrete_Random_Agent": [[9, "seldonian-rl-agents-discrete-random-agent-discrete-random-agent"]], "seldonian.RL.Agents.Function_Approximators": [[10, "module-seldonian.RL.Agents.Function_Approximators"]], "seldonian.RL.Agents.Function_Approximators.Function_Approximator": [[11, "module-seldonian.RL.Agents.Function_Approximators.Function_Approximator"]], "seldonian.RL.Agents.Function_Approximators.Function_Approximator.Function_Approximator": [[12, "seldonian-rl-agents-function-approximators-function-approximator-function-approximator"]], "seldonian.RL.Agents.Function_Approximators.Linear_FA": [[13, "module-seldonian.RL.Agents.Function_Approximators.Linear_FA"]], "seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_FA": [[14, "seldonian-rl-agents-function-approximators-linear-fa-linear-fa"]], "seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_state_action_value_FA": [[15, "seldonian-rl-agents-function-approximators-linear-fa-linear-state-action-value-fa"]], "seldonian.RL.Agents.Function_Approximators.Table": [[16, "module-seldonian.RL.Agents.Function_Approximators.Table"]], "seldonian.RL.Agents.Function_Approximators.Table.Q_Table": [[17, "seldonian-rl-agents-function-approximators-table-q-table"]], "seldonian.RL.Agents.Function_Approximators.Table.Table": [[18, "seldonian-rl-agents-function-approximators-table-table"]], "seldonian.RL.Agents.Function_Approximators.Table.construct_Q_Table_From_Env_Description": [[19, "seldonian-rl-agents-function-approximators-table-construct-q-table-from-env-description"]], "seldonian.RL.Agents.Parameterized_non_learning_softmax_agent": [[20, "module-seldonian.RL.Agents.Parameterized_non_learning_softmax_agent"]], "seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.Parameterized_non_learning_softmax_agent": [[21, "seldonian-rl-agents-parameterized-non-learning-softmax-agent-parameterized-non-learning-softmax-agent"]], "seldonian.RL.Agents.Policies": [[22, "module-seldonian.RL.Agents.Policies"]], "seldonian.RL.Agents.Policies.Policy": [[23, "module-seldonian.RL.Agents.Policies.Policy"]], "seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy": [[24, "seldonian-rl-agents-policies-policy-discrete-action-policy"]], "seldonian.RL.Agents.Policies.Policy.Policy": [[25, "seldonian-rl-agents-policies-policy-policy"]], "seldonian.RL.Agents.Policies.Softmax": [[26, "module-seldonian.RL.Agents.Policies.Softmax"]], "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax": [[27, "seldonian-rl-agents-policies-softmax-discretesoftmax"]], "seldonian.RL.Agents.Policies.Softmax.Softmax": [[28, "seldonian-rl-agents-policies-softmax-softmax"]], "seldonian.RL.Agents.keyboard_gridworld": [[29, "module-seldonian.RL.Agents.keyboard_gridworld"]], "seldonian.RL.Agents.keyboard_gridworld.Keyboard_gridworld": [[30, "seldonian-rl-agents-keyboard-gridworld-keyboard-gridworld"]], "seldonian.RL.Agents.mountain_car_rough_solution": [[31, "module-seldonian.RL.Agents.mountain_car_rough_solution"]], "seldonian.RL.Agents.mountain_car_rough_solution.Mountain_car_rough_solution": [[32, "seldonian-rl-agents-mountain-car-rough-solution-mountain-car-rough-solution"]], "seldonian.RL.Env_Description": [[33, "module-seldonian.RL.Env_Description"]], "seldonian.RL.Env_Description.Env_Description": [[34, "module-seldonian.RL.Env_Description.Env_Description"]], "seldonian.RL.Env_Description.Env_Description.Env_Description": [[35, "seldonian-rl-env-description-env-description-env-description"]], "seldonian.RL.Env_Description.Env_Description.check_space_type": [[36, "seldonian-rl-env-description-env-description-check-space-type"]], "seldonian.RL.Env_Description.Spaces": [[37, "module-seldonian.RL.Env_Description.Spaces"]], "seldonian.RL.Env_Description.Spaces.Continuous_Space": [[38, "seldonian-rl-env-description-spaces-continuous-space"]], "seldonian.RL.Env_Description.Spaces.Discrete_Space": [[39, "seldonian-rl-env-description-spaces-discrete-space"]], "seldonian.RL.RL_generate_dataset_and_spec_file": [[40, "module-seldonian.RL.RL_generate_dataset_and_spec_file"]], "seldonian.RL.RL_generate_dataset_and_spec_file.get_constraint_string": [[41, "seldonian-rl-rl-generate-dataset-and-spec-file-get-constraint-string"]], "seldonian.RL.RL_generate_dataset_and_spec_file.get_env_kwargs": [[42, "seldonian-rl-rl-generate-dataset-and-spec-file-get-env-kwargs"]], "seldonian.RL.RL_generate_dataset_and_spec_file.get_metadata_path": [[43, "seldonian-rl-rl-generate-dataset-and-spec-file-get-metadata-path"]], "seldonian.RL.RL_generate_dataset_and_spec_file.main": [[44, "seldonian-rl-rl-generate-dataset-and-spec-file-main"]], "seldonian.RL.RL_generate_dataset_and_spec_file.print_return_info": [[45, "seldonian-rl-rl-generate-dataset-and-spec-file-print-return-info"]], "seldonian.RL.RL_model": [[46, "module-seldonian.RL.RL_model"]], "seldonian.RL.RL_model.RL_model": [[47, "seldonian-rl-rl-model-rl-model"]], "seldonian.RL.RL_runner": [[48, "module-seldonian.RL.RL_runner"]], "seldonian.RL.RL_runner.create_agent": [[49, "seldonian-rl-rl-runner-create-agent"]], "seldonian.RL.RL_runner.create_env": [[50, "seldonian-rl-rl-runner-create-env"]], "seldonian.RL.RL_runner.run_all_trials": [[51, "seldonian-rl-rl-runner-run-all-trials"]], "seldonian.RL.RL_runner.run_episode": [[52, "seldonian-rl-rl-runner-run-episode"]], "seldonian.RL.RL_runner.run_episode_from_dict": [[53, "seldonian-rl-rl-runner-run-episode-from-dict"]], "seldonian.RL.RL_runner.run_trial": [[54, "seldonian-rl-rl-runner-run-trial"]], "seldonian.RL.RL_runner.run_trial_given_agent_and_env": [[55, "seldonian-rl-rl-runner-run-trial-given-agent-and-env"]], "seldonian.RL.environments": [[56, "module-seldonian.RL.environments"]], "seldonian.RL.environments.Environment": [[57, "module-seldonian.RL.environments.Environment"]], "seldonian.RL.environments.Environment.Environment": [[58, "seldonian-rl-environments-environment-environment"]], "seldonian.RL.environments.gridworld": [[59, "module-seldonian.RL.environments.gridworld"]], "seldonian.RL.environments.gridworld.Gridworld": [[60, "seldonian-rl-environments-gridworld-gridworld"]], "seldonian.RL.environments.mountaincar": [[61, "module-seldonian.RL.environments.mountaincar"]], "seldonian.RL.environments.mountaincar.Mountaincar": [[62, "seldonian-rl-environments-mountaincar-mountaincar"]], "seldonian.RL.environments.n_step_mountaincar": [[63, "module-seldonian.RL.environments.n_step_mountaincar"]], "seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar": [[64, "seldonian-rl-environments-n-step-mountaincar-n-step-mountaincar"]], "seldonian.RL.environments.simglucose_env": [[65, "module-seldonian.RL.environments.simglucose_env"]], "seldonian.RL.environments.simglucose_env.Simglucose": [[66, "seldonian-rl-environments-simglucose-env-simglucose"]], "seldonian.RL.generate_gridworld_episodes": [[67, "module-seldonian.RL.generate_gridworld_episodes"]], "seldonian.RL.generate_gridworld_episodes.main": [[68, "seldonian-rl-generate-gridworld-episodes-main"]], "seldonian.RL.generate_mountaincar_episodes": [[69, "module-seldonian.RL.generate_mountaincar_episodes"]], "seldonian.RL.generate_mountaincar_episodes.main": [[70, "seldonian-rl-generate-mountaincar-episodes-main"]], "seldonian.RL.generate_simglucose_episodes": [[71, "module-seldonian.RL.generate_simglucose_episodes"]], "seldonian.RL.generate_simglucose_episodes.get_max_obs": [[72, "seldonian-rl-generate-simglucose-episodes-get-max-obs"]], "seldonian.RL.generate_simglucose_episodes.main": [[73, "seldonian-rl-generate-simglucose-episodes-main"]], "seldonian.RL.hyperparams_and_settings": [[74, "module-seldonian.RL.hyperparams_and_settings"]], "seldonian.RL.hyperparams_and_settings.define_hyperparameter_and_setting_dict": [[75, "seldonian-rl-hyperparams-and-settings-define-hyperparameter-and-setting-dict"]], "seldonian.candidate_selection": [[76, "module-seldonian.candidate_selection"]], "seldonian.candidate_selection.candidate_selection": [[77, "module-seldonian.candidate_selection.candidate_selection"]], "seldonian.candidate_selection.candidate_selection.CandidateSelection": [[78, "seldonian-candidate-selection-candidate-selection-candidateselection"]], "seldonian.dataset": [[79, "module-seldonian.dataset"]], "seldonian.dataset.DataSet": [[80, "seldonian-dataset-dataset"]], "seldonian.dataset.DataSetLoader": [[81, "seldonian-dataset-datasetloader"]], "seldonian.dataset.Episode": [[82, "seldonian-dataset-episode"]], "seldonian.dataset.RLDataSet": [[83, "seldonian-dataset-rldataset"]], "seldonian.dataset.SupervisedDataSet": [[84, "seldonian-dataset-superviseddataset"]], "seldonian.dataset.load_supervised_metadata": [[85, "seldonian-dataset-load-supervised-metadata"]], "seldonian.models": [[86, "module-seldonian.models"]], "seldonian.models.models": [[87, "module-seldonian.models.models"]], "seldonian.models.models.BaseLogisticRegressionModel": [[88, "seldonian-models-models-baselogisticregressionmodel"]], "seldonian.models.models.BinaryLogisticRegressionModel": [[89, "seldonian-models-models-binarylogisticregressionmodel"]], "seldonian.models.models.BoundedLinearRegressionModel": [[90, "seldonian-models-models-boundedlinearregressionmodel"]], "seldonian.models.models.ClassificationModel": [[91, "seldonian-models-models-classificationmodel"]], "seldonian.models.models.DummyClassifierModel": [[92, "seldonian-models-models-dummyclassifiermodel"]], "seldonian.models.models.LinearRegressionModel": [[93, "seldonian-models-models-linearregressionmodel"]], "seldonian.models.models.LinearRegressionModelListFeatures": [[94, "seldonian-models-models-linearregressionmodellistfeatures"]], "seldonian.models.models.MultiClassLogisticRegressionModel": [[95, "seldonian-models-models-multiclasslogisticregressionmodel"]], "seldonian.models.models.RandomClassifierModel": [[96, "seldonian-models-models-randomclassifiermodel"]], "seldonian.models.models.RegressionModel": [[97, "seldonian-models-models-regressionmodel"]], "seldonian.models.models.SeldonianModel": [[98, "seldonian-models-models-seldonianmodel"]], "seldonian.models.models.SupervisedModel": [[99, "seldonian-models-models-supervisedmodel"]], "seldonian.models.objectives": [[100, "module-seldonian.models.objectives"]], "seldonian.models.objectives.Accuracy_binary": [[101, "seldonian-models-objectives-accuracy-binary"]], "seldonian.models.objectives.Accuracy_multiclass": [[102, "seldonian-models-objectives-accuracy-multiclass"]], "seldonian.models.objectives.False_Negative_Rate": [[103, "seldonian-models-objectives-false-negative-rate"]], "seldonian.models.objectives.False_Positive_Rate": [[104, "seldonian-models-objectives-false-positive-rate"]], "seldonian.models.objectives.IS_estimate": [[105, "seldonian-models-objectives-is-estimate"]], "seldonian.models.objectives.Mean_Error": [[106, "seldonian-models-objectives-mean-error"]], "seldonian.models.objectives.Mean_Squared_Error": [[107, "seldonian-models-objectives-mean-squared-error"]], "seldonian.models.objectives.Negative_Rate": [[108, "seldonian-models-objectives-negative-rate"]], "seldonian.models.objectives.Positive_Rate": [[109, "seldonian-models-objectives-positive-rate"]], "seldonian.models.objectives.True_Negative_Rate": [[110, "seldonian-models-objectives-true-negative-rate"]], "seldonian.models.objectives.True_Positive_Rate": [[111, "seldonian-models-objectives-true-positive-rate"]], "seldonian.models.objectives.binary_logistic_loss": [[112, "seldonian-models-objectives-binary-logistic-loss"]], "seldonian.models.objectives.confusion_matrix": [[113, "seldonian-models-objectives-confusion-matrix"]], "seldonian.models.objectives.evaluate_statistic": [[114, "seldonian-models-objectives-evaluate-statistic"]], "seldonian.models.objectives.gradient_Bounded_Squared_Error": [[115, "seldonian-models-objectives-gradient-bounded-squared-error"]], "seldonian.models.objectives.gradient_Mean_Squared_Error": [[116, "seldonian-models-objectives-gradient-mean-squared-error"]], "seldonian.models.objectives.gradient_binary_logistic_loss": [[117, "seldonian-models-objectives-gradient-binary-logistic-loss"]], "seldonian.models.objectives.multiclass_logistic_loss": [[118, "seldonian-models-objectives-multiclass-logistic-loss"]], "seldonian.models.objectives.sample_from_statistic": [[119, "seldonian-models-objectives-sample-from-statistic"]], "seldonian.models.objectives.vector_Accuracy_binary": [[120, "seldonian-models-objectives-vector-accuracy-binary"]], "seldonian.models.objectives.vector_Accuracy_multiclass": [[121, "seldonian-models-objectives-vector-accuracy-multiclass"]], "seldonian.models.objectives.vector_Error": [[122, "seldonian-models-objectives-vector-error"]], "seldonian.models.objectives.vector_False_Negative_Rate": [[123, "seldonian-models-objectives-vector-false-negative-rate"]], "seldonian.models.objectives.vector_False_Positive_Rate": [[124, "seldonian-models-objectives-vector-false-positive-rate"]], "seldonian.models.objectives.vector_IS_estimate": [[125, "seldonian-models-objectives-vector-is-estimate"]], "seldonian.models.objectives.vector_Negative_Rate": [[126, "seldonian-models-objectives-vector-negative-rate"]], "seldonian.models.objectives.vector_Positive_Rate": [[127, "seldonian-models-objectives-vector-positive-rate"]], "seldonian.models.objectives.vector_Squared_Error": [[128, "seldonian-models-objectives-vector-squared-error"]], "seldonian.models.objectives.vector_True_Negative_Rate": [[129, "seldonian-models-objectives-vector-true-negative-rate"]], "seldonian.models.objectives.vector_True_Positive_Rate": [[130, "seldonian-models-objectives-vector-true-positive-rate"]], "seldonian.models.objectives.vector_confusion_matrix": [[131, "seldonian-models-objectives-vector-confusion-matrix"]], "seldonian.models.pytorch_cnn": [[132, "module-seldonian.models.pytorch_cnn"]], "seldonian.models.pytorch_cnn.PytorchCNN": [[133, "seldonian-models-pytorch-cnn-pytorchcnn"]], "seldonian.models.pytorch_model": [[134, "module-seldonian.models.pytorch_model"]], "seldonian.models.pytorch_model.PytorchLRTestModel": [[135, "seldonian-models-pytorch-model-pytorchlrtestmodel"]], "seldonian.models.pytorch_model.SupervisedPytorchBaseModel": [[136, "seldonian-models-pytorch-model-supervisedpytorchbasemodel"]], "seldonian.models.pytorch_model.pytorch_predict_vjp": [[137, "seldonian-models-pytorch-model-pytorch-predict-vjp"]], "seldonian.optimizers": [[138, "module-seldonian.optimizers"]], "seldonian.optimizers.gradient_descent": [[139, "module-seldonian.optimizers.gradient_descent"]], "seldonian.optimizers.gradient_descent.gradient_descent_adam": [[140, "seldonian-optimizers-gradient-descent-gradient-descent-adam"]], "seldonian.optimizers.gradient_descent.setup_gradients": [[141, "seldonian-optimizers-gradient-descent-setup-gradients"]], "seldonian.parse_tree": [[142, "module-seldonian.parse_tree"]], "seldonian.parse_tree.nodes": [[143, "module-seldonian.parse_tree.nodes"]], "seldonian.parse_tree.nodes.BaseNode": [[144, "seldonian-parse-tree-nodes-basenode"]], "seldonian.parse_tree.nodes.CVaRSQeBaseNode": [[145, "seldonian-parse-tree-nodes-cvarsqebasenode"]], "seldonian.parse_tree.nodes.ConfusionMatrixBaseNode": [[146, "seldonian-parse-tree-nodes-confusionmatrixbasenode"]], "seldonian.parse_tree.nodes.ConstantNode": [[147, "seldonian-parse-tree-nodes-constantnode"]], "seldonian.parse_tree.nodes.InternalNode": [[148, "seldonian-parse-tree-nodes-internalnode"]], "seldonian.parse_tree.nodes.MEDCustomBaseNode": [[149, "seldonian-parse-tree-nodes-medcustombasenode"]], "seldonian.parse_tree.nodes.MultiClassBaseNode": [[150, "seldonian-parse-tree-nodes-multiclassbasenode"]], "seldonian.parse_tree.nodes.Node": [[151, "seldonian-parse-tree-nodes-node"]], "seldonian.parse_tree.operators": [[152, "module-seldonian.parse_tree.operators"]], "seldonian.parse_tree.parse_tree": [[153, "module-seldonian.parse_tree.parse_tree"]], "seldonian.parse_tree.parse_tree.ParseTree": [[154, "seldonian-parse-tree-parse-tree-parsetree"]], "seldonian.parse_tree.parse_tree.make_parse_trees_from_constraints": [[155, "seldonian-parse-tree-parse-tree-make-parse-trees-from-constraints"]], "seldonian.safety_test": [[156, "module-seldonian.safety_test"]], "seldonian.safety_test.safety_test": [[157, "module-seldonian.safety_test.safety_test"]], "seldonian.safety_test.safety_test.SafetyTest": [[158, "seldonian-safety-test-safety-test-safetytest"]], "seldonian.seldonian_algorithm": [[159, "module-seldonian.seldonian_algorithm"]], "seldonian.seldonian_algorithm.SeldonianAlgorithm": [[160, "seldonian-seldonian-algorithm-seldonianalgorithm"]], "seldonian.spec": [[161, "module-seldonian.spec"]], "seldonian.spec.RLSpec": [[162, "seldonian-spec-rlspec"]], "seldonian.spec.Spec": [[163, "seldonian-spec-spec"]], "seldonian.spec.SupervisedSpec": [[164, "seldonian-spec-supervisedspec"]], "seldonian.spec.createRLSpec": [[165, "seldonian-spec-createrlspec"]], "seldonian.spec.createSupervisedSpec": [[166, "seldonian-spec-createsupervisedspec"]], "seldonian.spec.validate_parse_trees": [[167, "seldonian-spec-validate-parse-trees"]], "seldonian.utils": [[168, "module-seldonian.utils"]], "seldonian.utils.RL_utils": [[169, "module-seldonian.utils.RL_utils"]], "seldonian.utils.RL_utils.argmax_multi": [[170, "seldonian-utils-rl-utils-argmax-multi"]], "seldonian.utils.RL_utils.clamp": [[171, "seldonian-utils-rl-utils-clamp"]], "seldonian.utils.RL_utils.error": [[172, "seldonian-utils-rl-utils-error"]], "seldonian.utils.io_utils": [[173, "module-seldonian.utils.io_utils"]], "seldonian.utils.io_utils.dir_path": [[174, "seldonian-utils-io-utils-dir-path"]], "seldonian.utils.io_utils.load_json": [[175, "seldonian-utils-io-utils-load-json"]], "seldonian.utils.io_utils.load_pickle": [[176, "seldonian-utils-io-utils-load-pickle"]], "seldonian.utils.io_utils.save_json": [[177, "seldonian-utils-io-utils-save-json"]], "seldonian.utils.io_utils.save_pickle": [[178, "seldonian-utils-io-utils-save-pickle"]], "seldonian.utils.plot_utils": [[179, "module-seldonian.utils.plot_utils"]], "seldonian.utils.plot_utils.plot_gradient_descent": [[180, "seldonian-utils-plot-utils-plot-gradient-descent"]], "seldonian.utils.stats_utils": [[181, "module-seldonian.utils.stats_utils"]], "seldonian.utils.stats_utils.softmax": [[182, "seldonian-utils-stats-utils-softmax"]], "seldonian.utils.stats_utils.stddev": [[183, "seldonian-utils-stats-utils-stddev"]], "seldonian.utils.stats_utils.tinv": [[184, "seldonian-utils-stats-utils-tinv"]], "seldonian.utils.stats_utils.weighted_sum_gamma": [[185, "seldonian-utils-stats-utils-weighted-sum-gamma"]], "seldonian.utils.tutorial_utils": [[186, "module-seldonian.utils.tutorial_utils"]], "seldonian.utils.tutorial_utils.generate_clipped_data": [[187, "seldonian-utils-tutorial-utils-generate-clipped-data"]], "seldonian.utils.tutorial_utils.generate_data": [[188, "seldonian-utils-tutorial-utils-generate-data"]], "seldonian.utils.tutorial_utils.make_synthetic_regression_dataset": [[189, "seldonian-utils-tutorial-utils-make-synthetic-regression-dataset"]], "seldonian.warnings": [[190, "module-seldonian.warnings"]], "seldonian.warnings.custom_warnings": [[191, "module-seldonian.warnings.custom_warnings"]], "seldonian.warnings.custom_warnings.custom_formatwarning": [[192, "seldonian-warnings-custom-warnings-custom-formatwarning"]], "API": [[193, "api"]], "Getting Started": [[194, "getting-started"]], "Installation": [[194, "installation"]], "A first tutorial": [[194, "a-first-tutorial"]], "Seldonian Engine documentation": [[195, "seldonian-engine-documentation"]], "Table of contents": [[195, "table-of-contents"]], "Overview": [[196, "overview"]], "Interface": [[196, "interface"]], "Spec object": [[196, "spec-object"]], "Dataset object": [[196, "dataset-object"]], "Model object": [[196, "model-object"]], "Behavioral constraints": [[196, "behavioral-constraints"]], "Constraint strings": [[196, "constraint-strings"]], "What does SA.run() do?": [[196, "what-does-sa-run-do"]], "Candidate Selection": [[196, "candidate-selection"]], "Safety Test": [[196, "safety-test"]]}, "indexentries": {"module": [[0, "module-seldonian"], [1, "module-seldonian.RL"], [2, "module-seldonian.RL.Agents"], [3, "module-seldonian.RL.Agents.Agent"], [5, "module-seldonian.RL.Agents.Bases"], [6, "module-seldonian.RL.Agents.Bases.Fourier"], [8, "module-seldonian.RL.Agents.Discrete_Random_Agent"], [10, "module-seldonian.RL.Agents.Function_Approximators"], [11, "module-seldonian.RL.Agents.Function_Approximators.Function_Approximator"], [13, "module-seldonian.RL.Agents.Function_Approximators.Linear_FA"], [16, "module-seldonian.RL.Agents.Function_Approximators.Table"], [20, "module-seldonian.RL.Agents.Parameterized_non_learning_softmax_agent"], [22, "module-seldonian.RL.Agents.Policies"], [23, "module-seldonian.RL.Agents.Policies.Policy"], [26, "module-seldonian.RL.Agents.Policies.Softmax"], [29, "module-seldonian.RL.Agents.keyboard_gridworld"], [31, "module-seldonian.RL.Agents.mountain_car_rough_solution"], [33, "module-seldonian.RL.Env_Description"], [34, "module-seldonian.RL.Env_Description.Env_Description"], [37, "module-seldonian.RL.Env_Description.Spaces"], [40, "module-seldonian.RL.RL_generate_dataset_and_spec_file"], [46, "module-seldonian.RL.RL_model"], [48, "module-seldonian.RL.RL_runner"], [56, "module-seldonian.RL.environments"], [57, "module-seldonian.RL.environments.Environment"], [59, "module-seldonian.RL.environments.gridworld"], [61, "module-seldonian.RL.environments.mountaincar"], [63, "module-seldonian.RL.environments.n_step_mountaincar"], [65, "module-seldonian.RL.environments.simglucose_env"], [67, "module-seldonian.RL.generate_gridworld_episodes"], [69, "module-seldonian.RL.generate_mountaincar_episodes"], [71, "module-seldonian.RL.generate_simglucose_episodes"], [74, "module-seldonian.RL.hyperparams_and_settings"], [76, "module-seldonian.candidate_selection"], [77, "module-seldonian.candidate_selection.candidate_selection"], [79, "module-seldonian.dataset"], [86, "module-seldonian.models"], [87, "module-seldonian.models.models"], [100, "module-seldonian.models.objectives"], [132, "module-seldonian.models.pytorch_cnn"], [134, "module-seldonian.models.pytorch_model"], [138, "module-seldonian.optimizers"], [139, "module-seldonian.optimizers.gradient_descent"], [142, "module-seldonian.parse_tree"], [143, "module-seldonian.parse_tree.nodes"], [152, "module-seldonian.parse_tree.operators"], [153, "module-seldonian.parse_tree.parse_tree"], [156, "module-seldonian.safety_test"], [157, "module-seldonian.safety_test.safety_test"], [159, "module-seldonian.seldonian_algorithm"], [161, "module-seldonian.spec"], [168, "module-seldonian.utils"], [169, "module-seldonian.utils.RL_utils"], [173, "module-seldonian.utils.io_utils"], [179, "module-seldonian.utils.plot_utils"], [181, "module-seldonian.utils.stats_utils"], [186, "module-seldonian.utils.tutorial_utils"], [190, "module-seldonian.warnings"], [191, "module-seldonian.warnings.custom_warnings"]], "seldonian": [[0, "module-seldonian"]], "seldonian.rl": [[1, "module-seldonian.RL"]], "seldonian.rl.agents": [[2, "module-seldonian.RL.Agents"]], "seldonian.rl.agents.agent": [[3, "module-seldonian.RL.Agents.Agent"]], "agent (class in seldonian.rl.agents.agent)": [[4, "seldonian.RL.Agents.Agent.Agent"]], "__init__() (agent method)": [[4, "seldonian.RL.Agents.Agent.Agent.__init__"]], "__repr__() (agent method)": [[4, "seldonian.RL.Agents.Agent.Agent.__repr__"]], "choose_action() (agent method)": [[4, "seldonian.RL.Agents.Agent.Agent.choose_action"]], "get_params() (agent method)": [[4, "seldonian.RL.Agents.Agent.Agent.get_params"]], "get_prob_this_action() (agent method)": [[4, "seldonian.RL.Agents.Agent.Agent.get_prob_this_action"]], "set_new_params() (agent method)": [[4, "seldonian.RL.Agents.Agent.Agent.set_new_params"]], "update() (agent method)": [[4, "seldonian.RL.Agents.Agent.Agent.update"]], "seldonian.rl.agents.bases": [[5, "module-seldonian.RL.Agents.Bases"]], "seldonian.rl.agents.bases.fourier": [[6, "module-seldonian.RL.Agents.Bases.Fourier"]], "fourier (class in seldonian.rl.agents.bases.fourier)": [[7, "seldonian.RL.Agents.Bases.Fourier.Fourier"]], "__init__() (fourier method)": [[7, "seldonian.RL.Agents.Bases.Fourier.Fourier.__init__"]], "__repr__() (fourier method)": [[7, "seldonian.RL.Agents.Bases.Fourier.Fourier.__repr__"]], "calculate_num_features() (fourier method)": [[7, "seldonian.RL.Agents.Bases.Fourier.Fourier.calculate_num_features"]], "construct_basis_matrix() (fourier method)": [[7, "seldonian.RL.Agents.Bases.Fourier.Fourier.construct_basis_matrix"]], "get_features() (fourier method)": [[7, "seldonian.RL.Agents.Bases.Fourier.Fourier.get_features"]], "get_normalized_observation() (fourier method)": [[7, "seldonian.RL.Agents.Bases.Fourier.Fourier.get_normalized_observation"]], "seldonian.rl.agents.discrete_random_agent": [[8, "module-seldonian.RL.Agents.Discrete_Random_Agent"]], "discrete_random_agent (class in seldonian.rl.agents.discrete_random_agent)": [[9, "seldonian.RL.Agents.Discrete_Random_Agent.Discrete_Random_Agent"]], "__init__() (discrete_random_agent method)": [[9, "seldonian.RL.Agents.Discrete_Random_Agent.Discrete_Random_Agent.__init__"]], "__repr__() (discrete_random_agent method)": [[9, "seldonian.RL.Agents.Discrete_Random_Agent.Discrete_Random_Agent.__repr__"]], "choose_action() (discrete_random_agent method)": [[9, "seldonian.RL.Agents.Discrete_Random_Agent.Discrete_Random_Agent.choose_action"]], "get_params() (discrete_random_agent method)": [[9, "seldonian.RL.Agents.Discrete_Random_Agent.Discrete_Random_Agent.get_params"]], "get_prob_this_action() (discrete_random_agent method)": [[9, "seldonian.RL.Agents.Discrete_Random_Agent.Discrete_Random_Agent.get_prob_this_action"]], "set_new_params() (discrete_random_agent method)": [[9, "seldonian.RL.Agents.Discrete_Random_Agent.Discrete_Random_Agent.set_new_params"]], "update() (discrete_random_agent method)": [[9, "seldonian.RL.Agents.Discrete_Random_Agent.Discrete_Random_Agent.update"]], "seldonian.rl.agents.function_approximators": [[10, "module-seldonian.RL.Agents.Function_Approximators"]], "seldonian.rl.agents.function_approximators.function_approximator": [[11, "module-seldonian.RL.Agents.Function_Approximators.Function_Approximator"]], "function_approximator (class in seldonian.rl.agents.function_approximators.function_approximator)": [[12, "seldonian.RL.Agents.Function_Approximators.Function_Approximator.Function_Approximator"]], "__init__() (function_approximator method)": [[12, "seldonian.RL.Agents.Function_Approximators.Function_Approximator.Function_Approximator.__init__"]], "__repr__() (function_approximator method)": [[12, "seldonian.RL.Agents.Function_Approximators.Function_Approximator.Function_Approximator.__repr__"]], "set_new_params() (function_approximator method)": [[12, "seldonian.RL.Agents.Function_Approximators.Function_Approximator.Function_Approximator.set_new_params"]], "seldonian.rl.agents.function_approximators.linear_fa": [[13, "module-seldonian.RL.Agents.Function_Approximators.Linear_FA"]], "linear_fa (class in seldonian.rl.agents.function_approximators.linear_fa)": [[14, "seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_FA"]], "__init__() (linear_fa method)": [[14, "seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_FA.__init__"]], "__repr__() (linear_fa method)": [[14, "seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_FA.__repr__"]], "set_new_params() (linear_fa method)": [[14, "seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_FA.set_new_params"]], "linear_state_action_value_fa (class in seldonian.rl.agents.function_approximators.linear_fa)": [[15, "seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_state_action_value_FA"]], "__init__() (linear_state_action_value_fa method)": [[15, "seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_state_action_value_FA.__init__"]], "__repr__() (linear_state_action_value_fa method)": [[15, "seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_state_action_value_FA.__repr__"]], "set_new_params() (linear_state_action_value_fa method)": [[15, "seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_state_action_value_FA.set_new_params"]], "seldonian.rl.agents.function_approximators.table": [[16, "module-seldonian.RL.Agents.Function_Approximators.Table"]], "q_table (class in seldonian.rl.agents.function_approximators.table)": [[17, "seldonian.RL.Agents.Function_Approximators.Table.Q_Table"]], "__init__() (q_table method)": [[17, "seldonian.RL.Agents.Function_Approximators.Table.Q_Table.__init__"]], "__repr__() (q_table method)": [[17, "seldonian.RL.Agents.Function_Approximators.Table.Q_Table.__repr__"]], "from_environment_state_to_0_indexed_state() (q_table method)": [[17, "seldonian.RL.Agents.Function_Approximators.Table.Q_Table.from_environment_state_to_0_indexed_state"]], "get_action_values_given_state() (q_table method)": [[17, "seldonian.RL.Agents.Function_Approximators.Table.Q_Table.get_action_values_given_state"]], "get_action_values_given_zero_indexed_state() (q_table method)": [[17, "seldonian.RL.Agents.Function_Approximators.Table.Q_Table.get_action_values_given_zero_indexed_state"]], "set_new_params() (q_table method)": [[17, "seldonian.RL.Agents.Function_Approximators.Table.Q_Table.set_new_params"]], "table (class in seldonian.rl.agents.function_approximators.table)": [[18, "seldonian.RL.Agents.Function_Approximators.Table.Table"]], "__init__() (table method)": [[18, "seldonian.RL.Agents.Function_Approximators.Table.Table.__init__"]], "__repr__() (table method)": [[18, "seldonian.RL.Agents.Function_Approximators.Table.Table.__repr__"]], "from_environment_state_to_0_indexed_state() (table method)": [[18, "seldonian.RL.Agents.Function_Approximators.Table.Table.from_environment_state_to_0_indexed_state"]], "set_new_params() (table method)": [[18, "seldonian.RL.Agents.Function_Approximators.Table.Table.set_new_params"]], "construct_q_table_from_env_description() (in module seldonian.rl.agents.function_approximators.table)": [[19, "seldonian.RL.Agents.Function_Approximators.Table.construct_Q_Table_From_Env_Description"]], "seldonian.rl.agents.parameterized_non_learning_softmax_agent": [[20, "module-seldonian.RL.Agents.Parameterized_non_learning_softmax_agent"]], "parameterized_non_learning_softmax_agent (class in seldonian.rl.agents.parameterized_non_learning_softmax_agent)": [[21, "seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.Parameterized_non_learning_softmax_agent"]], "__init__() (parameterized_non_learning_softmax_agent method)": [[21, "seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.Parameterized_non_learning_softmax_agent.__init__"]], "__repr__() (parameterized_non_learning_softmax_agent method)": [[21, "seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.Parameterized_non_learning_softmax_agent.__repr__"]], "choose_action() (parameterized_non_learning_softmax_agent method)": [[21, "seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.Parameterized_non_learning_softmax_agent.choose_action"]], "get_action_values() (parameterized_non_learning_softmax_agent method)": [[21, "seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.Parameterized_non_learning_softmax_agent.get_action_values"]], "get_params() (parameterized_non_learning_softmax_agent method)": [[21, "seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.Parameterized_non_learning_softmax_agent.get_params"]], "get_prob_this_action() (parameterized_non_learning_softmax_agent method)": [[21, "seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.Parameterized_non_learning_softmax_agent.get_prob_this_action"]], "set_new_params() (parameterized_non_learning_softmax_agent method)": [[21, "seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.Parameterized_non_learning_softmax_agent.set_new_params"]], "update() (parameterized_non_learning_softmax_agent method)": [[21, "seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.Parameterized_non_learning_softmax_agent.update"]], "seldonian.rl.agents.policies": [[22, "module-seldonian.RL.Agents.Policies"]], "seldonian.rl.agents.policies.policy": [[23, "module-seldonian.RL.Agents.Policies.Policy"]], "discrete_action_policy (class in seldonian.rl.agents.policies.policy)": [[24, "seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy"]], "__init__() (discrete_action_policy method)": [[24, "seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy.__init__"]], "__repr__() (discrete_action_policy method)": [[24, "seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy.__repr__"]], "choose_action() (discrete_action_policy method)": [[24, "seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy.choose_action"]], "construct_basis_and_linear_fa() (discrete_action_policy method)": [[24, "seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy.construct_basis_and_linear_FA"]], "from_0_indexed_action_to_environment_action() (discrete_action_policy method)": [[24, "seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy.from_0_indexed_action_to_environment_action"]], "from_environment_action_to_0_indexed_action() (discrete_action_policy method)": [[24, "seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy.from_environment_action_to_0_indexed_action"]], "get_action_values_given_state() (discrete_action_policy method)": [[24, "seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy.get_action_values_given_state"]], "get_params() (discrete_action_policy method)": [[24, "seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy.get_params"]], "get_prob_this_action() (discrete_action_policy method)": [[24, "seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy.get_prob_this_action"]], "make_state_action_fa() (discrete_action_policy method)": [[24, "seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy.make_state_action_FA"]], "set_new_params() (discrete_action_policy method)": [[24, "seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy.set_new_params"]], "policy (class in seldonian.rl.agents.policies.policy)": [[25, "seldonian.RL.Agents.Policies.Policy.Policy"]], "__init__() (policy method)": [[25, "seldonian.RL.Agents.Policies.Policy.Policy.__init__"]], "__repr__() (policy method)": [[25, "seldonian.RL.Agents.Policies.Policy.Policy.__repr__"]], "choose_action() (policy method)": [[25, "seldonian.RL.Agents.Policies.Policy.Policy.choose_action"]], "get_params() (policy method)": [[25, "seldonian.RL.Agents.Policies.Policy.Policy.get_params"]], "get_prob_this_action() (policy method)": [[25, "seldonian.RL.Agents.Policies.Policy.Policy.get_prob_this_action"]], "set_new_params() (policy method)": [[25, "seldonian.RL.Agents.Policies.Policy.Policy.set_new_params"]], "seldonian.rl.agents.policies.softmax": [[26, "module-seldonian.RL.Agents.Policies.Softmax"]], "discretesoftmax (class in seldonian.rl.agents.policies.softmax)": [[27, "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax"]], "__init__() (discretesoftmax method)": [[27, "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax.__init__"]], "__repr__() (discretesoftmax method)": [[27, "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax.__repr__"]], "_arg() (discretesoftmax method)": [[27, "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax._arg"]], "_denom() (discretesoftmax method)": [[27, "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax._denom"]], "choose_action() (discretesoftmax method)": [[27, "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax.choose_action"]], "choose_action_from_action_values() (discretesoftmax method)": [[27, "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax.choose_action_from_action_values"]], "construct_basis_and_linear_fa() (discretesoftmax method)": [[27, "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax.construct_basis_and_linear_FA"]], "from_0_indexed_action_to_environment_action() (discretesoftmax method)": [[27, "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax.from_0_indexed_action_to_environment_action"]], "from_environment_action_to_0_indexed_action() (discretesoftmax method)": [[27, "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax.from_environment_action_to_0_indexed_action"]], "get_action_probs_from_action_values() (discretesoftmax method)": [[27, "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax.get_action_probs_from_action_values"]], "get_action_values_given_state() (discretesoftmax method)": [[27, "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax.get_action_values_given_state"]], "get_e_to_the_something_terms() (discretesoftmax method)": [[27, "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax.get_e_to_the_something_terms"]], "get_params() (discretesoftmax method)": [[27, "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax.get_params"]], "get_prob_this_action() (discretesoftmax method)": [[27, "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax.get_prob_this_action"]], "make_state_action_fa() (discretesoftmax method)": [[27, "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax.make_state_action_FA"]], "set_new_params() (discretesoftmax method)": [[27, "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax.set_new_params"]], "softmax (class in seldonian.rl.agents.policies.softmax)": [[28, "seldonian.RL.Agents.Policies.Softmax.Softmax"]], "__init__() (softmax method)": [[28, "seldonian.RL.Agents.Policies.Softmax.Softmax.__init__"]], "__repr__() (softmax method)": [[28, "seldonian.RL.Agents.Policies.Softmax.Softmax.__repr__"]], "choose_action() (softmax method)": [[28, "seldonian.RL.Agents.Policies.Softmax.Softmax.choose_action"]], "choose_action_from_action_values() (softmax method)": [[28, "seldonian.RL.Agents.Policies.Softmax.Softmax.choose_action_from_action_values"]], "construct_basis_and_linear_fa() (softmax method)": [[28, "seldonian.RL.Agents.Policies.Softmax.Softmax.construct_basis_and_linear_FA"]], "from_0_indexed_action_to_environment_action() (softmax method)": [[28, "seldonian.RL.Agents.Policies.Softmax.Softmax.from_0_indexed_action_to_environment_action"]], "from_environment_action_to_0_indexed_action() (softmax method)": [[28, "seldonian.RL.Agents.Policies.Softmax.Softmax.from_environment_action_to_0_indexed_action"]], "get_action_probs_from_action_values() (softmax method)": [[28, "seldonian.RL.Agents.Policies.Softmax.Softmax.get_action_probs_from_action_values"]], "get_action_values_given_state() (softmax method)": [[28, "seldonian.RL.Agents.Policies.Softmax.Softmax.get_action_values_given_state"]], "get_e_to_the_something_terms() (softmax method)": [[28, "seldonian.RL.Agents.Policies.Softmax.Softmax.get_e_to_the_something_terms"]], "get_params() (softmax method)": [[28, "seldonian.RL.Agents.Policies.Softmax.Softmax.get_params"]], "get_prob_this_action() (softmax method)": [[28, "seldonian.RL.Agents.Policies.Softmax.Softmax.get_prob_this_action"]], "make_state_action_fa() (softmax method)": [[28, "seldonian.RL.Agents.Policies.Softmax.Softmax.make_state_action_FA"]], "set_new_params() (softmax method)": [[28, "seldonian.RL.Agents.Policies.Softmax.Softmax.set_new_params"]], "seldonian.rl.agents.keyboard_gridworld": [[29, "module-seldonian.RL.Agents.keyboard_gridworld"]], "keyboard_gridworld (class in seldonian.rl.agents.keyboard_gridworld)": [[30, "seldonian.RL.Agents.keyboard_gridworld.Keyboard_gridworld"]], "__init__() (keyboard_gridworld method)": [[30, "seldonian.RL.Agents.keyboard_gridworld.Keyboard_gridworld.__init__"]], "__repr__() (keyboard_gridworld method)": [[30, "seldonian.RL.Agents.keyboard_gridworld.Keyboard_gridworld.__repr__"]], "choose_action() (keyboard_gridworld method)": [[30, "seldonian.RL.Agents.keyboard_gridworld.Keyboard_gridworld.choose_action"]], "get_params() (keyboard_gridworld method)": [[30, "seldonian.RL.Agents.keyboard_gridworld.Keyboard_gridworld.get_params"]], "get_prob_this_action() (keyboard_gridworld method)": [[30, "seldonian.RL.Agents.keyboard_gridworld.Keyboard_gridworld.get_prob_this_action"]], "set_new_params() (keyboard_gridworld method)": [[30, "seldonian.RL.Agents.keyboard_gridworld.Keyboard_gridworld.set_new_params"]], "update() (keyboard_gridworld method)": [[30, "seldonian.RL.Agents.keyboard_gridworld.Keyboard_gridworld.update"]], "seldonian.rl.agents.mountain_car_rough_solution": [[31, "module-seldonian.RL.Agents.mountain_car_rough_solution"]], "mountain_car_rough_solution (class in seldonian.rl.agents.mountain_car_rough_solution)": [[32, "seldonian.RL.Agents.mountain_car_rough_solution.Mountain_car_rough_solution"]], "__init__() (mountain_car_rough_solution method)": [[32, "seldonian.RL.Agents.mountain_car_rough_solution.Mountain_car_rough_solution.__init__"]], "__repr__() (mountain_car_rough_solution method)": [[32, "seldonian.RL.Agents.mountain_car_rough_solution.Mountain_car_rough_solution.__repr__"]], "choose_action() (mountain_car_rough_solution method)": [[32, "seldonian.RL.Agents.mountain_car_rough_solution.Mountain_car_rough_solution.choose_action"]], "get_params() (mountain_car_rough_solution method)": [[32, "seldonian.RL.Agents.mountain_car_rough_solution.Mountain_car_rough_solution.get_params"]], "get_prob_this_action() (mountain_car_rough_solution method)": [[32, "seldonian.RL.Agents.mountain_car_rough_solution.Mountain_car_rough_solution.get_prob_this_action"]], "set_new_params() (mountain_car_rough_solution method)": [[32, "seldonian.RL.Agents.mountain_car_rough_solution.Mountain_car_rough_solution.set_new_params"]], "update() (mountain_car_rough_solution method)": [[32, "seldonian.RL.Agents.mountain_car_rough_solution.Mountain_car_rough_solution.update"]], "seldonian.rl.env_description": [[33, "module-seldonian.RL.Env_Description"]], "seldonian.rl.env_description.env_description": [[34, "module-seldonian.RL.Env_Description.Env_Description"]], "env_description (class in seldonian.rl.env_description.env_description)": [[35, "seldonian.RL.Env_Description.Env_Description.Env_Description"]], "__init__() (env_description method)": [[35, "seldonian.RL.Env_Description.Env_Description.Env_Description.__init__"]], "__repr__() (env_description method)": [[35, "seldonian.RL.Env_Description.Env_Description.Env_Description.__repr__"]], "get_min_action() (env_description method)": [[35, "seldonian.RL.Env_Description.Env_Description.Env_Description.get_min_action"]], "get_min_state() (env_description method)": [[35, "seldonian.RL.Env_Description.Env_Description.Env_Description.get_min_state"]], "get_num_actions() (env_description method)": [[35, "seldonian.RL.Env_Description.Env_Description.Env_Description.get_num_actions"]], "get_num_observation_dims() (env_description method)": [[35, "seldonian.RL.Env_Description.Env_Description.Env_Description.get_num_observation_dims"]], "get_num_states() (env_description method)": [[35, "seldonian.RL.Env_Description.Env_Description.Env_Description.get_num_states"]], "check_space_type() (in module seldonian.rl.env_description.env_description)": [[36, "seldonian.RL.Env_Description.Env_Description.check_space_type"]], "seldonian.rl.env_description.spaces": [[37, "module-seldonian.RL.Env_Description.Spaces"]], "continuous_space (class in seldonian.rl.env_description.spaces)": [[38, "seldonian.RL.Env_Description.Spaces.Continuous_Space"]], "__init__() (continuous_space method)": [[38, "seldonian.RL.Env_Description.Spaces.Continuous_Space.__init__"]], "__repr__() (continuous_space method)": [[38, "seldonian.RL.Env_Description.Spaces.Continuous_Space.__repr__"]], "check_bounds_valid() (continuous_space method)": [[38, "seldonian.RL.Env_Description.Spaces.Continuous_Space.check_bounds_valid"]], "get_num_dims() (continuous_space method)": [[38, "seldonian.RL.Env_Description.Spaces.Continuous_Space.get_num_dims"]], "discrete_space (class in seldonian.rl.env_description.spaces)": [[39, "seldonian.RL.Env_Description.Spaces.Discrete_Space"]], "__init__() (discrete_space method)": [[39, "seldonian.RL.Env_Description.Spaces.Discrete_Space.__init__"]], "__repr__() (discrete_space method)": [[39, "seldonian.RL.Env_Description.Spaces.Discrete_Space.__repr__"]], "get_num_values() (discrete_space method)": [[39, "seldonian.RL.Env_Description.Spaces.Discrete_Space.get_num_values"]], "seldonian.rl.rl_generate_dataset_and_spec_file": [[40, "module-seldonian.RL.RL_generate_dataset_and_spec_file"]], "get_constraint_string() (in module seldonian.rl.rl_generate_dataset_and_spec_file)": [[41, "seldonian.RL.RL_generate_dataset_and_spec_file.get_constraint_string"]], "get_env_kwargs() (in module seldonian.rl.rl_generate_dataset_and_spec_file)": [[42, "seldonian.RL.RL_generate_dataset_and_spec_file.get_env_kwargs"]], "get_metadata_path() (in module seldonian.rl.rl_generate_dataset_and_spec_file)": [[43, "seldonian.RL.RL_generate_dataset_and_spec_file.get_metadata_path"]], "main() (in module seldonian.rl.rl_generate_dataset_and_spec_file)": [[44, "seldonian.RL.RL_generate_dataset_and_spec_file.main"]], "print_return_info() (in module seldonian.rl.rl_generate_dataset_and_spec_file)": [[45, "seldonian.RL.RL_generate_dataset_and_spec_file.print_return_info"]], "seldonian.rl.rl_model": [[46, "module-seldonian.RL.RL_model"]], "rl_model (class in seldonian.rl.rl_model)": [[47, "seldonian.RL.RL_model.RL_model"]], "__init__() (rl_model method)": [[47, "seldonian.RL.RL_model.RL_model.__init__"]], "__repr__() (rl_model method)": [[47, "seldonian.RL.RL_model.RL_model.__repr__"]], "get_prob_this_action() (rl_model method)": [[47, "seldonian.RL.RL_model.RL_model.get_prob_this_action"]], "get_probs_from_observations_and_actions() (rl_model method)": [[47, "seldonian.RL.RL_model.RL_model.get_probs_from_observations_and_actions"]], "seldonian.rl.rl_runner": [[48, "module-seldonian.RL.RL_runner"]], "create_agent() (in module seldonian.rl.rl_runner)": [[49, "seldonian.RL.RL_runner.create_agent"]], "create_env() (in module seldonian.rl.rl_runner)": [[50, "seldonian.RL.RL_runner.create_env"]], "run_all_trials() (in module seldonian.rl.rl_runner)": [[51, "seldonian.RL.RL_runner.run_all_trials"]], "run_episode() (in module seldonian.rl.rl_runner)": [[52, "seldonian.RL.RL_runner.run_episode"]], "run_episode_from_dict() (in module seldonian.rl.rl_runner)": [[53, "seldonian.RL.RL_runner.run_episode_from_dict"]], "run_trial() (in module seldonian.rl.rl_runner)": [[54, "seldonian.RL.RL_runner.run_trial"]], "run_trial_given_agent_and_env() (in module seldonian.rl.rl_runner)": [[55, "seldonian.RL.RL_runner.run_trial_given_agent_and_env"]], "seldonian.rl.environments": [[56, "module-seldonian.RL.environments"]], "seldonian.rl.environments.environment": [[57, "module-seldonian.RL.environments.Environment"]], "environment (class in seldonian.rl.environments.environment)": [[58, "seldonian.RL.environments.Environment.Environment"]], "__init__() (environment method)": [[58, "seldonian.RL.environments.Environment.Environment.__init__"]], "__repr__() (environment method)": [[58, "seldonian.RL.environments.Environment.Environment.__repr__"]], "get_env_description() (environment method)": [[58, "seldonian.RL.environments.Environment.Environment.get_env_description"]], "get_observation() (environment method)": [[58, "seldonian.RL.environments.Environment.Environment.get_observation"]], "reset() (environment method)": [[58, "seldonian.RL.environments.Environment.Environment.reset"]], "start_visualizing() (environment method)": [[58, "seldonian.RL.environments.Environment.Environment.start_visualizing"]], "stop_visualizing() (environment method)": [[58, "seldonian.RL.environments.Environment.Environment.stop_visualizing"]], "terminated() (environment method)": [[58, "seldonian.RL.environments.Environment.Environment.terminated"]], "transition() (environment method)": [[58, "seldonian.RL.environments.Environment.Environment.transition"]], "visualize() (environment method)": [[58, "seldonian.RL.environments.Environment.Environment.visualize"]], "seldonian.rl.environments.gridworld": [[59, "module-seldonian.RL.environments.gridworld"]], "gridworld (class in seldonian.rl.environments.gridworld)": [[60, "seldonian.RL.environments.gridworld.Gridworld"]], "__init__() (gridworld method)": [[60, "seldonian.RL.environments.gridworld.Gridworld.__init__"]], "__repr__() (gridworld method)": [[60, "seldonian.RL.environments.gridworld.Gridworld.__repr__"]], "create_env_description() (gridworld method)": [[60, "seldonian.RL.environments.gridworld.Gridworld.create_env_description"]], "get_env_description() (gridworld method)": [[60, "seldonian.RL.environments.gridworld.Gridworld.get_env_description"]], "get_observation() (gridworld method)": [[60, "seldonian.RL.environments.gridworld.Gridworld.get_observation"]], "is_in_goal_state() (gridworld method)": [[60, "seldonian.RL.environments.gridworld.Gridworld.is_in_goal_state"]], "reset() (gridworld method)": [[60, "seldonian.RL.environments.gridworld.Gridworld.reset"]], "start_visualizing() (gridworld method)": [[60, "seldonian.RL.environments.gridworld.Gridworld.start_visualizing"]], "stop_visualizing() (gridworld method)": [[60, "seldonian.RL.environments.gridworld.Gridworld.stop_visualizing"]], "terminated() (gridworld method)": [[60, "seldonian.RL.environments.gridworld.Gridworld.terminated"]], "transition() (gridworld method)": [[60, "seldonian.RL.environments.gridworld.Gridworld.transition"]], "update_position() (gridworld method)": [[60, "seldonian.RL.environments.gridworld.Gridworld.update_position"]], "visualize() (gridworld method)": [[60, "seldonian.RL.environments.gridworld.Gridworld.visualize"]], "seldonian.rl.environments.mountaincar": [[61, "module-seldonian.RL.environments.mountaincar"]], "mountaincar (class in seldonian.rl.environments.mountaincar)": [[62, "seldonian.RL.environments.mountaincar.Mountaincar"]], "__init__() (mountaincar method)": [[62, "seldonian.RL.environments.mountaincar.Mountaincar.__init__"]], "__repr__() (mountaincar method)": [[62, "seldonian.RL.environments.mountaincar.Mountaincar.__repr__"]], "get_env_description() (mountaincar method)": [[62, "seldonian.RL.environments.mountaincar.Mountaincar.get_env_description"]], "get_observation() (mountaincar method)": [[62, "seldonian.RL.environments.mountaincar.Mountaincar.get_observation"]], "reset() (mountaincar method)": [[62, "seldonian.RL.environments.mountaincar.Mountaincar.reset"]], "start_visualizing() (mountaincar method)": [[62, "seldonian.RL.environments.mountaincar.Mountaincar.start_visualizing"]], "stop_visualizing() (mountaincar method)": [[62, "seldonian.RL.environments.mountaincar.Mountaincar.stop_visualizing"]], "terminated() (mountaincar method)": [[62, "seldonian.RL.environments.mountaincar.Mountaincar.terminated"]], "transition() (mountaincar method)": [[62, "seldonian.RL.environments.mountaincar.Mountaincar.transition"]], "visualize() (mountaincar method)": [[62, "seldonian.RL.environments.mountaincar.Mountaincar.visualize"]], "seldonian.rl.environments.n_step_mountaincar": [[63, "module-seldonian.RL.environments.n_step_mountaincar"]], "n_step_mountaincar (class in seldonian.rl.environments.n_step_mountaincar)": [[64, "seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar"]], "__init__() (n_step_mountaincar method)": [[64, "seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar.__init__"]], "__repr__() (n_step_mountaincar method)": [[64, "seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar.__repr__"]], "get_env_description() (n_step_mountaincar method)": [[64, "seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar.get_env_description"]], "get_observation() (n_step_mountaincar method)": [[64, "seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar.get_observation"]], "reset() (n_step_mountaincar method)": [[64, "seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar.reset"]], "start_visualizing() (n_step_mountaincar method)": [[64, "seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar.start_visualizing"]], "stop_visualizing() (n_step_mountaincar method)": [[64, "seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar.stop_visualizing"]], "terminated() (n_step_mountaincar method)": [[64, "seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar.terminated"]], "transition() (n_step_mountaincar method)": [[64, "seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar.transition"]], "visualize() (n_step_mountaincar method)": [[64, "seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar.visualize"]], "seldonian.rl.environments.simglucose_env": [[65, "module-seldonian.RL.environments.simglucose_env"]], "simglucose (class in seldonian.rl.environments.simglucose_env)": [[66, "seldonian.RL.environments.simglucose_env.Simglucose"]], "__init__() (simglucose method)": [[66, "seldonian.RL.environments.simglucose_env.Simglucose.__init__"]], "__repr__() (simglucose method)": [[66, "seldonian.RL.environments.simglucose_env.Simglucose.__repr__"]], "get_env_description() (simglucose method)": [[66, "seldonian.RL.environments.simglucose_env.Simglucose.get_env_description"]], "get_observation() (simglucose method)": [[66, "seldonian.RL.environments.simglucose_env.Simglucose.get_observation"]], "reset() (simglucose method)": [[66, "seldonian.RL.environments.simglucose_env.Simglucose.reset"]], "start_visualizing() (simglucose method)": [[66, "seldonian.RL.environments.simglucose_env.Simglucose.start_visualizing"]], "stop_visualizing() (simglucose method)": [[66, "seldonian.RL.environments.simglucose_env.Simglucose.stop_visualizing"]], "terminated() (simglucose method)": [[66, "seldonian.RL.environments.simglucose_env.Simglucose.terminated"]], "transition() (simglucose method)": [[66, "seldonian.RL.environments.simglucose_env.Simglucose.transition"]], "visualize() (simglucose method)": [[66, "seldonian.RL.environments.simglucose_env.Simglucose.visualize"]], "seldonian.rl.generate_gridworld_episodes": [[67, "module-seldonian.RL.generate_gridworld_episodes"]], "main() (in module seldonian.rl.generate_gridworld_episodes)": [[68, "seldonian.RL.generate_gridworld_episodes.main"]], "seldonian.rl.generate_mountaincar_episodes": [[69, "module-seldonian.RL.generate_mountaincar_episodes"]], "main() (in module seldonian.rl.generate_mountaincar_episodes)": [[70, "seldonian.RL.generate_mountaincar_episodes.main"]], "seldonian.rl.generate_simglucose_episodes": [[71, "module-seldonian.RL.generate_simglucose_episodes"]], "get_max_obs() (in module seldonian.rl.generate_simglucose_episodes)": [[72, "seldonian.RL.generate_simglucose_episodes.get_max_obs"]], "main() (in module seldonian.rl.generate_simglucose_episodes)": [[73, "seldonian.RL.generate_simglucose_episodes.main"]], "seldonian.rl.hyperparams_and_settings": [[74, "module-seldonian.RL.hyperparams_and_settings"]], "define_hyperparameter_and_setting_dict() (in module seldonian.rl.hyperparams_and_settings)": [[75, "seldonian.RL.hyperparams_and_settings.define_hyperparameter_and_setting_dict"]], "seldonian.candidate_selection": [[76, "module-seldonian.candidate_selection"]], "seldonian.candidate_selection.candidate_selection": [[77, "module-seldonian.candidate_selection.candidate_selection"]], "candidateselection (class in seldonian.candidate_selection.candidate_selection)": [[78, "seldonian.candidate_selection.candidate_selection.CandidateSelection"]], "__init__() (candidateselection method)": [[78, "seldonian.candidate_selection.candidate_selection.CandidateSelection.__init__"]], "__repr__() (candidateselection method)": [[78, "seldonian.candidate_selection.candidate_selection.CandidateSelection.__repr__"]], "evaluate_primary_objective() (candidateselection method)": [[78, "seldonian.candidate_selection.candidate_selection.CandidateSelection.evaluate_primary_objective"]], "get_constraint_upper_bounds() (candidateselection method)": [[78, "seldonian.candidate_selection.candidate_selection.CandidateSelection.get_constraint_upper_bounds"]], "objective_with_barrier() (candidateselection method)": [[78, "seldonian.candidate_selection.candidate_selection.CandidateSelection.objective_with_barrier"]], "run() (candidateselection method)": [[78, "seldonian.candidate_selection.candidate_selection.CandidateSelection.run"]], "seldonian.dataset": [[79, "module-seldonian.dataset"]], "dataset (class in seldonian.dataset)": [[80, "seldonian.dataset.DataSet"]], "__init__() (dataset method)": [[80, "seldonian.dataset.DataSet.__init__"]], "__repr__() (dataset method)": [[80, "seldonian.dataset.DataSet.__repr__"]], "datasetloader (class in seldonian.dataset)": [[81, "seldonian.dataset.DataSetLoader"]], "__init__() (datasetloader method)": [[81, "seldonian.dataset.DataSetLoader.__init__"]], "__repr__() (datasetloader method)": [[81, "seldonian.dataset.DataSetLoader.__repr__"]], "load_rl_dataset_from_csv() (datasetloader method)": [[81, "seldonian.dataset.DataSetLoader.load_RL_dataset_from_csv"]], "load_rl_dataset_from_episode_file() (datasetloader method)": [[81, "seldonian.dataset.DataSetLoader.load_RL_dataset_from_episode_file"]], "load_supervised_dataset() (datasetloader method)": [[81, "seldonian.dataset.DataSetLoader.load_supervised_dataset"]], "episode (class in seldonian.dataset)": [[82, "seldonian.dataset.Episode"]], "__init__() (episode method)": [[82, "seldonian.dataset.Episode.__init__"]], "__repr__() (episode method)": [[82, "seldonian.dataset.Episode.__repr__"]], "rldataset (class in seldonian.dataset)": [[83, "seldonian.dataset.RLDataSet"]], "__init__() (rldataset method)": [[83, "seldonian.dataset.RLDataSet.__init__"]], "__repr__() (rldataset method)": [[83, "seldonian.dataset.RLDataSet.__repr__"]], "superviseddataset (class in seldonian.dataset)": [[84, "seldonian.dataset.SupervisedDataSet"]], "__init__() (superviseddataset method)": [[84, "seldonian.dataset.SupervisedDataSet.__init__"]], "__repr__() (superviseddataset method)": [[84, "seldonian.dataset.SupervisedDataSet.__repr__"]], "load_supervised_metadata() (in module seldonian.dataset)": [[85, "seldonian.dataset.load_supervised_metadata"]], "seldonian.models": [[86, "module-seldonian.models"]], "seldonian.models.models": [[87, "module-seldonian.models.models"]], "baselogisticregressionmodel (class in seldonian.models.models)": [[88, "seldonian.models.models.BaseLogisticRegressionModel"]], "__init__() (baselogisticregressionmodel method)": [[88, "seldonian.models.models.BaseLogisticRegressionModel.__init__"]], "__repr__() (baselogisticregressionmodel method)": [[88, "seldonian.models.models.BaseLogisticRegressionModel.__repr__"]], "fit() (baselogisticregressionmodel method)": [[88, "seldonian.models.models.BaseLogisticRegressionModel.fit"]], "binarylogisticregressionmodel (class in seldonian.models.models)": [[89, "seldonian.models.models.BinaryLogisticRegressionModel"]], "__init__() (binarylogisticregressionmodel method)": [[89, "seldonian.models.models.BinaryLogisticRegressionModel.__init__"]], "__repr__() (binarylogisticregressionmodel method)": [[89, "seldonian.models.models.BinaryLogisticRegressionModel.__repr__"]], "fit() (binarylogisticregressionmodel method)": [[89, "seldonian.models.models.BinaryLogisticRegressionModel.fit"]], "predict() (binarylogisticregressionmodel method)": [[89, "seldonian.models.models.BinaryLogisticRegressionModel.predict"]], "boundedlinearregressionmodel (class in seldonian.models.models)": [[90, "seldonian.models.models.BoundedLinearRegressionModel"]], "__init__() (boundedlinearregressionmodel method)": [[90, "seldonian.models.models.BoundedLinearRegressionModel.__init__"]], "__repr__() (boundedlinearregressionmodel method)": [[90, "seldonian.models.models.BoundedLinearRegressionModel.__repr__"]], "fit() (boundedlinearregressionmodel method)": [[90, "seldonian.models.models.BoundedLinearRegressionModel.fit"]], "predict() (boundedlinearregressionmodel method)": [[90, "seldonian.models.models.BoundedLinearRegressionModel.predict"]], "classificationmodel (class in seldonian.models.models)": [[91, "seldonian.models.models.ClassificationModel"]], "__init__() (classificationmodel method)": [[91, "seldonian.models.models.ClassificationModel.__init__"]], "__repr__() (classificationmodel method)": [[91, "seldonian.models.models.ClassificationModel.__repr__"]], "dummyclassifiermodel (class in seldonian.models.models)": [[92, "seldonian.models.models.DummyClassifierModel"]], "__init__() (dummyclassifiermodel method)": [[92, "seldonian.models.models.DummyClassifierModel.__init__"]], "__repr__() (dummyclassifiermodel method)": [[92, "seldonian.models.models.DummyClassifierModel.__repr__"]], "predict() (dummyclassifiermodel method)": [[92, "seldonian.models.models.DummyClassifierModel.predict"]], "linearregressionmodel (class in seldonian.models.models)": [[93, "seldonian.models.models.LinearRegressionModel"]], "__init__() (linearregressionmodel method)": [[93, "seldonian.models.models.LinearRegressionModel.__init__"]], "__repr__() (linearregressionmodel method)": [[93, "seldonian.models.models.LinearRegressionModel.__repr__"]], "fit() (linearregressionmodel method)": [[93, "seldonian.models.models.LinearRegressionModel.fit"]], "predict() (linearregressionmodel method)": [[93, "seldonian.models.models.LinearRegressionModel.predict"]], "linearregressionmodellistfeatures (class in seldonian.models.models)": [[94, "seldonian.models.models.LinearRegressionModelListFeatures"]], "__init__() (linearregressionmodellistfeatures method)": [[94, "seldonian.models.models.LinearRegressionModelListFeatures.__init__"]], "__repr__() (linearregressionmodellistfeatures method)": [[94, "seldonian.models.models.LinearRegressionModelListFeatures.__repr__"]], "fit() (linearregressionmodellistfeatures method)": [[94, "seldonian.models.models.LinearRegressionModelListFeatures.fit"]], "predict() (linearregressionmodellistfeatures method)": [[94, "seldonian.models.models.LinearRegressionModelListFeatures.predict"]], "multiclasslogisticregressionmodel (class in seldonian.models.models)": [[95, "seldonian.models.models.MultiClassLogisticRegressionModel"]], "__init__() (multiclasslogisticregressionmodel method)": [[95, "seldonian.models.models.MultiClassLogisticRegressionModel.__init__"]], "__repr__() (multiclasslogisticregressionmodel method)": [[95, "seldonian.models.models.MultiClassLogisticRegressionModel.__repr__"]], "fit() (multiclasslogisticregressionmodel method)": [[95, "seldonian.models.models.MultiClassLogisticRegressionModel.fit"]], "predict() (multiclasslogisticregressionmodel method)": [[95, "seldonian.models.models.MultiClassLogisticRegressionModel.predict"]], "randomclassifiermodel (class in seldonian.models.models)": [[96, "seldonian.models.models.RandomClassifierModel"]], "__init__() (randomclassifiermodel method)": [[96, "seldonian.models.models.RandomClassifierModel.__init__"]], "__repr__() (randomclassifiermodel method)": [[96, "seldonian.models.models.RandomClassifierModel.__repr__"]], "predict() (randomclassifiermodel method)": [[96, "seldonian.models.models.RandomClassifierModel.predict"]], "regressionmodel (class in seldonian.models.models)": [[97, "seldonian.models.models.RegressionModel"]], "__init__() (regressionmodel method)": [[97, "seldonian.models.models.RegressionModel.__init__"]], "__repr__() (regressionmodel method)": [[97, "seldonian.models.models.RegressionModel.__repr__"]], "seldonianmodel (class in seldonian.models.models)": [[98, "seldonian.models.models.SeldonianModel"]], "__init__() (seldonianmodel method)": [[98, "seldonian.models.models.SeldonianModel.__init__"]], "__repr__() (seldonianmodel method)": [[98, "seldonian.models.models.SeldonianModel.__repr__"]], "supervisedmodel (class in seldonian.models.models)": [[99, "seldonian.models.models.SupervisedModel"]], "__init__() (supervisedmodel method)": [[99, "seldonian.models.models.SupervisedModel.__init__"]], "__repr__() (supervisedmodel method)": [[99, "seldonian.models.models.SupervisedModel.__repr__"]], "seldonian.models.objectives": [[100, "module-seldonian.models.objectives"]], "accuracy_binary() (in module seldonian.models.objectives)": [[101, "seldonian.models.objectives.Accuracy_binary"]], "accuracy_multiclass() (in module seldonian.models.objectives)": [[102, "seldonian.models.objectives.Accuracy_multiclass"]], "false_negative_rate() (in module seldonian.models.objectives)": [[103, "seldonian.models.objectives.False_Negative_Rate"]], "false_positive_rate() (in module seldonian.models.objectives)": [[104, "seldonian.models.objectives.False_Positive_Rate"]], "is_estimate() (in module seldonian.models.objectives)": [[105, "seldonian.models.objectives.IS_estimate"]], "mean_error() (in module seldonian.models.objectives)": [[106, "seldonian.models.objectives.Mean_Error"]], "mean_squared_error() (in module seldonian.models.objectives)": [[107, "seldonian.models.objectives.Mean_Squared_Error"]], "negative_rate() (in module seldonian.models.objectives)": [[108, "seldonian.models.objectives.Negative_Rate"]], "positive_rate() (in module seldonian.models.objectives)": [[109, "seldonian.models.objectives.Positive_Rate"]], "true_negative_rate() (in module seldonian.models.objectives)": [[110, "seldonian.models.objectives.True_Negative_Rate"]], "true_positive_rate() (in module seldonian.models.objectives)": [[111, "seldonian.models.objectives.True_Positive_Rate"]], "binary_logistic_loss() (in module seldonian.models.objectives)": [[112, "seldonian.models.objectives.binary_logistic_loss"]], "confusion_matrix() (in module seldonian.models.objectives)": [[113, "seldonian.models.objectives.confusion_matrix"]], "evaluate_statistic() (in module seldonian.models.objectives)": [[114, "seldonian.models.objectives.evaluate_statistic"]], "gradient_bounded_squared_error() (in module seldonian.models.objectives)": [[115, "seldonian.models.objectives.gradient_Bounded_Squared_Error"]], "gradient_mean_squared_error() (in module seldonian.models.objectives)": [[116, "seldonian.models.objectives.gradient_Mean_Squared_Error"]], "gradient_binary_logistic_loss() (in module seldonian.models.objectives)": [[117, "seldonian.models.objectives.gradient_binary_logistic_loss"]], "multiclass_logistic_loss() (in module seldonian.models.objectives)": [[118, "seldonian.models.objectives.multiclass_logistic_loss"]], "sample_from_statistic() (in module seldonian.models.objectives)": [[119, "seldonian.models.objectives.sample_from_statistic"]], "vector_accuracy_binary() (in module seldonian.models.objectives)": [[120, "seldonian.models.objectives.vector_Accuracy_binary"]], "vector_accuracy_multiclass() (in module seldonian.models.objectives)": [[121, "seldonian.models.objectives.vector_Accuracy_multiclass"]], "vector_error() (in module seldonian.models.objectives)": [[122, "seldonian.models.objectives.vector_Error"]], "vector_false_negative_rate() (in module seldonian.models.objectives)": [[123, "seldonian.models.objectives.vector_False_Negative_Rate"]], "vector_false_positive_rate() (in module seldonian.models.objectives)": [[124, "seldonian.models.objectives.vector_False_Positive_Rate"]], "vector_is_estimate() (in module seldonian.models.objectives)": [[125, "seldonian.models.objectives.vector_IS_estimate"]], "vector_negative_rate() (in module seldonian.models.objectives)": [[126, "seldonian.models.objectives.vector_Negative_Rate"]], "vector_positive_rate() (in module seldonian.models.objectives)": [[127, "seldonian.models.objectives.vector_Positive_Rate"]], "vector_squared_error() (in module seldonian.models.objectives)": [[128, "seldonian.models.objectives.vector_Squared_Error"]], "vector_true_negative_rate() (in module seldonian.models.objectives)": [[129, "seldonian.models.objectives.vector_True_Negative_Rate"]], "vector_true_positive_rate() (in module seldonian.models.objectives)": [[130, "seldonian.models.objectives.vector_True_Positive_Rate"]], "vector_confusion_matrix() (in module seldonian.models.objectives)": [[131, "seldonian.models.objectives.vector_confusion_matrix"]], "seldonian.models.pytorch_cnn": [[132, "module-seldonian.models.pytorch_cnn"]], "pytorchcnn (class in seldonian.models.pytorch_cnn)": [[133, "seldonian.models.pytorch_cnn.PytorchCNN"]], "__init__() (pytorchcnn method)": [[133, "seldonian.models.pytorch_cnn.PytorchCNN.__init__"]], "__repr__() (pytorchcnn method)": [[133, "seldonian.models.pytorch_cnn.PytorchCNN.__repr__"]], "backward_pass() (pytorchcnn method)": [[133, "seldonian.models.pytorch_cnn.PytorchCNN.backward_pass"]], "create_model() (pytorchcnn method)": [[133, "seldonian.models.pytorch_cnn.PytorchCNN.create_model"]], "forward_pass() (pytorchcnn method)": [[133, "seldonian.models.pytorch_cnn.PytorchCNN.forward_pass"]], "get_initial_weights() (pytorchcnn method)": [[133, "seldonian.models.pytorch_cnn.PytorchCNN.get_initial_weights"]], "get_param_sizes() (pytorchcnn method)": [[133, "seldonian.models.pytorch_cnn.PytorchCNN.get_param_sizes"]], "predict() (pytorchcnn method)": [[133, "seldonian.models.pytorch_cnn.PytorchCNN.predict"]], "update_model_params() (pytorchcnn method)": [[133, "seldonian.models.pytorch_cnn.PytorchCNN.update_model_params"]], "zero_gradients() (pytorchcnn method)": [[133, "seldonian.models.pytorch_cnn.PytorchCNN.zero_gradients"]], "seldonian.models.pytorch_model": [[134, "module-seldonian.models.pytorch_model"]], "pytorchlrtestmodel (class in seldonian.models.pytorch_model)": [[135, "seldonian.models.pytorch_model.PytorchLRTestModel"]], "__init__() (pytorchlrtestmodel method)": [[135, "seldonian.models.pytorch_model.PytorchLRTestModel.__init__"]], "__repr__() (pytorchlrtestmodel method)": [[135, "seldonian.models.pytorch_model.PytorchLRTestModel.__repr__"]], "backward_pass() (pytorchlrtestmodel method)": [[135, "seldonian.models.pytorch_model.PytorchLRTestModel.backward_pass"]], "create_model() (pytorchlrtestmodel method)": [[135, "seldonian.models.pytorch_model.PytorchLRTestModel.create_model"]], "forward_pass() (pytorchlrtestmodel method)": [[135, "seldonian.models.pytorch_model.PytorchLRTestModel.forward_pass"]], "get_initial_weights() (pytorchlrtestmodel method)": [[135, "seldonian.models.pytorch_model.PytorchLRTestModel.get_initial_weights"]], "get_param_sizes() (pytorchlrtestmodel method)": [[135, "seldonian.models.pytorch_model.PytorchLRTestModel.get_param_sizes"]], "predict() (pytorchlrtestmodel method)": [[135, "seldonian.models.pytorch_model.PytorchLRTestModel.predict"]], "update_model_params() (pytorchlrtestmodel method)": [[135, "seldonian.models.pytorch_model.PytorchLRTestModel.update_model_params"]], "zero_gradients() (pytorchlrtestmodel method)": [[135, "seldonian.models.pytorch_model.PytorchLRTestModel.zero_gradients"]], "supervisedpytorchbasemodel (class in seldonian.models.pytorch_model)": [[136, "seldonian.models.pytorch_model.SupervisedPytorchBaseModel"]], "__init__() (supervisedpytorchbasemodel method)": [[136, "seldonian.models.pytorch_model.SupervisedPytorchBaseModel.__init__"]], "__repr__() (supervisedpytorchbasemodel method)": [[136, "seldonian.models.pytorch_model.SupervisedPytorchBaseModel.__repr__"]], "backward_pass() (supervisedpytorchbasemodel method)": [[136, "seldonian.models.pytorch_model.SupervisedPytorchBaseModel.backward_pass"]], "create_model() (supervisedpytorchbasemodel method)": [[136, "seldonian.models.pytorch_model.SupervisedPytorchBaseModel.create_model"]], "forward_pass() (supervisedpytorchbasemodel method)": [[136, "seldonian.models.pytorch_model.SupervisedPytorchBaseModel.forward_pass"]], "get_initial_weights() (supervisedpytorchbasemodel method)": [[136, "seldonian.models.pytorch_model.SupervisedPytorchBaseModel.get_initial_weights"]], "get_param_sizes() (supervisedpytorchbasemodel method)": [[136, "seldonian.models.pytorch_model.SupervisedPytorchBaseModel.get_param_sizes"]], "predict() (supervisedpytorchbasemodel method)": [[136, "seldonian.models.pytorch_model.SupervisedPytorchBaseModel.predict"]], "update_model_params() (supervisedpytorchbasemodel method)": [[136, "seldonian.models.pytorch_model.SupervisedPytorchBaseModel.update_model_params"]], "zero_gradients() (supervisedpytorchbasemodel method)": [[136, "seldonian.models.pytorch_model.SupervisedPytorchBaseModel.zero_gradients"]], "pytorch_predict_vjp() (in module seldonian.models.pytorch_model)": [[137, "seldonian.models.pytorch_model.pytorch_predict_vjp"]], "seldonian.optimizers": [[138, "module-seldonian.optimizers"]], "seldonian.optimizers.gradient_descent": [[139, "module-seldonian.optimizers.gradient_descent"]], "gradient_descent_adam() (in module seldonian.optimizers.gradient_descent)": [[140, "seldonian.optimizers.gradient_descent.gradient_descent_adam"]], "setup_gradients() (in module seldonian.optimizers.gradient_descent)": [[141, "seldonian.optimizers.gradient_descent.setup_gradients"]], "seldonian.parse_tree": [[142, "module-seldonian.parse_tree"]], "seldonian.parse_tree.nodes": [[143, "module-seldonian.parse_tree.nodes"]], "basenode (class in seldonian.parse_tree.nodes)": [[144, "seldonian.parse_tree.nodes.BaseNode"]], "__init__() (basenode method)": [[144, "seldonian.parse_tree.nodes.BaseNode.__init__"]], "__repr__() (basenode method)": [[144, "seldonian.parse_tree.nodes.BaseNode.__repr__"]], "calculate_bounds() (basenode method)": [[144, "seldonian.parse_tree.nodes.BaseNode.calculate_bounds"]], "calculate_data_forbound() (basenode method)": [[144, "seldonian.parse_tree.nodes.BaseNode.calculate_data_forbound"]], "calculate_value() (basenode method)": [[144, "seldonian.parse_tree.nodes.BaseNode.calculate_value"]], "compute_hc_lowerbound() (basenode method)": [[144, "seldonian.parse_tree.nodes.BaseNode.compute_HC_lowerbound"]], "compute_hc_upper_and_lowerbound() (basenode method)": [[144, "seldonian.parse_tree.nodes.BaseNode.compute_HC_upper_and_lowerbound"]], "compute_hc_upperbound() (basenode method)": [[144, "seldonian.parse_tree.nodes.BaseNode.compute_HC_upperbound"]], "mask_data() (basenode method)": [[144, "seldonian.parse_tree.nodes.BaseNode.mask_data"]], "predict_hc_lowerbound() (basenode method)": [[144, "seldonian.parse_tree.nodes.BaseNode.predict_HC_lowerbound"]], "predict_hc_upper_and_lowerbound() (basenode method)": [[144, "seldonian.parse_tree.nodes.BaseNode.predict_HC_upper_and_lowerbound"]], "predict_hc_upperbound() (basenode method)": [[144, "seldonian.parse_tree.nodes.BaseNode.predict_HC_upperbound"]], "zhat() (basenode method)": [[144, "seldonian.parse_tree.nodes.BaseNode.zhat"]], "cvarsqebasenode (class in seldonian.parse_tree.nodes)": [[145, "seldonian.parse_tree.nodes.CVaRSQeBaseNode"]], "__init__() (cvarsqebasenode method)": [[145, "seldonian.parse_tree.nodes.CVaRSQeBaseNode.__init__"]], "__repr__() (cvarsqebasenode method)": [[145, "seldonian.parse_tree.nodes.CVaRSQeBaseNode.__repr__"]], "calculate_bounds() (cvarsqebasenode method)": [[145, "seldonian.parse_tree.nodes.CVaRSQeBaseNode.calculate_bounds"]], "calculate_data_forbound() (cvarsqebasenode method)": [[145, "seldonian.parse_tree.nodes.CVaRSQeBaseNode.calculate_data_forbound"]], "calculate_value() (cvarsqebasenode method)": [[145, "seldonian.parse_tree.nodes.CVaRSQeBaseNode.calculate_value"]], "compute_hc_lowerbound() (cvarsqebasenode method)": [[145, "seldonian.parse_tree.nodes.CVaRSQeBaseNode.compute_HC_lowerbound"]], "compute_hc_upper_and_lowerbound() (cvarsqebasenode method)": [[145, "seldonian.parse_tree.nodes.CVaRSQeBaseNode.compute_HC_upper_and_lowerbound"]], "compute_hc_upperbound() (cvarsqebasenode method)": [[145, "seldonian.parse_tree.nodes.CVaRSQeBaseNode.compute_HC_upperbound"]], "mask_data() (cvarsqebasenode method)": [[145, "seldonian.parse_tree.nodes.CVaRSQeBaseNode.mask_data"]], "predict_hc_lowerbound() (cvarsqebasenode method)": [[145, "seldonian.parse_tree.nodes.CVaRSQeBaseNode.predict_HC_lowerbound"]], "predict_hc_upper_and_lowerbound() (cvarsqebasenode method)": [[145, "seldonian.parse_tree.nodes.CVaRSQeBaseNode.predict_HC_upper_and_lowerbound"]], "predict_hc_upperbound() (cvarsqebasenode method)": [[145, "seldonian.parse_tree.nodes.CVaRSQeBaseNode.predict_HC_upperbound"]], "zhat() (cvarsqebasenode method)": [[145, "seldonian.parse_tree.nodes.CVaRSQeBaseNode.zhat"]], "confusionmatrixbasenode (class in seldonian.parse_tree.nodes)": [[146, "seldonian.parse_tree.nodes.ConfusionMatrixBaseNode"]], "__init__() (confusionmatrixbasenode method)": [[146, "seldonian.parse_tree.nodes.ConfusionMatrixBaseNode.__init__"]], "__repr__() (confusionmatrixbasenode method)": [[146, "seldonian.parse_tree.nodes.ConfusionMatrixBaseNode.__repr__"]], "calculate_bounds() (confusionmatrixbasenode method)": [[146, "seldonian.parse_tree.nodes.ConfusionMatrixBaseNode.calculate_bounds"]], "calculate_data_forbound() (confusionmatrixbasenode method)": [[146, "seldonian.parse_tree.nodes.ConfusionMatrixBaseNode.calculate_data_forbound"]], "calculate_value() (confusionmatrixbasenode method)": [[146, "seldonian.parse_tree.nodes.ConfusionMatrixBaseNode.calculate_value"]], "compute_hc_lowerbound() (confusionmatrixbasenode method)": [[146, "seldonian.parse_tree.nodes.ConfusionMatrixBaseNode.compute_HC_lowerbound"]], "compute_hc_upper_and_lowerbound() (confusionmatrixbasenode method)": [[146, "seldonian.parse_tree.nodes.ConfusionMatrixBaseNode.compute_HC_upper_and_lowerbound"]], "compute_hc_upperbound() (confusionmatrixbasenode method)": [[146, "seldonian.parse_tree.nodes.ConfusionMatrixBaseNode.compute_HC_upperbound"]], "mask_data() (confusionmatrixbasenode method)": [[146, "seldonian.parse_tree.nodes.ConfusionMatrixBaseNode.mask_data"]], "predict_hc_lowerbound() (confusionmatrixbasenode method)": [[146, "seldonian.parse_tree.nodes.ConfusionMatrixBaseNode.predict_HC_lowerbound"]], "predict_hc_upper_and_lowerbound() (confusionmatrixbasenode method)": [[146, "seldonian.parse_tree.nodes.ConfusionMatrixBaseNode.predict_HC_upper_and_lowerbound"]], "predict_hc_upperbound() (confusionmatrixbasenode method)": [[146, "seldonian.parse_tree.nodes.ConfusionMatrixBaseNode.predict_HC_upperbound"]], "zhat() (confusionmatrixbasenode method)": [[146, "seldonian.parse_tree.nodes.ConfusionMatrixBaseNode.zhat"]], "constantnode (class in seldonian.parse_tree.nodes)": [[147, "seldonian.parse_tree.nodes.ConstantNode"]], "__init__() (constantnode method)": [[147, "seldonian.parse_tree.nodes.ConstantNode.__init__"]], "__repr__() (constantnode method)": [[147, "seldonian.parse_tree.nodes.ConstantNode.__repr__"]], "internalnode (class in seldonian.parse_tree.nodes)": [[148, "seldonian.parse_tree.nodes.InternalNode"]], "__init__() (internalnode method)": [[148, "seldonian.parse_tree.nodes.InternalNode.__init__"]], "__repr__() (internalnode method)": [[148, "seldonian.parse_tree.nodes.InternalNode.__repr__"]], "medcustombasenode (class in seldonian.parse_tree.nodes)": [[149, "seldonian.parse_tree.nodes.MEDCustomBaseNode"]], "__init__() (medcustombasenode method)": [[149, "seldonian.parse_tree.nodes.MEDCustomBaseNode.__init__"]], "__repr__() (medcustombasenode method)": [[149, "seldonian.parse_tree.nodes.MEDCustomBaseNode.__repr__"]], "calculate_bounds() (medcustombasenode method)": [[149, "seldonian.parse_tree.nodes.MEDCustomBaseNode.calculate_bounds"]], "calculate_data_forbound() (medcustombasenode method)": [[149, "seldonian.parse_tree.nodes.MEDCustomBaseNode.calculate_data_forbound"]], "calculate_value() (medcustombasenode method)": [[149, "seldonian.parse_tree.nodes.MEDCustomBaseNode.calculate_value"]], "compute_hc_lowerbound() (medcustombasenode method)": [[149, "seldonian.parse_tree.nodes.MEDCustomBaseNode.compute_HC_lowerbound"]], "compute_hc_upper_and_lowerbound() (medcustombasenode method)": [[149, "seldonian.parse_tree.nodes.MEDCustomBaseNode.compute_HC_upper_and_lowerbound"]], "compute_hc_upperbound() (medcustombasenode method)": [[149, "seldonian.parse_tree.nodes.MEDCustomBaseNode.compute_HC_upperbound"]], "mask_data() (medcustombasenode method)": [[149, "seldonian.parse_tree.nodes.MEDCustomBaseNode.mask_data"]], "precalculate_data() (medcustombasenode method)": [[149, "seldonian.parse_tree.nodes.MEDCustomBaseNode.precalculate_data"]], "predict_hc_lowerbound() (medcustombasenode method)": [[149, "seldonian.parse_tree.nodes.MEDCustomBaseNode.predict_HC_lowerbound"]], "predict_hc_upper_and_lowerbound() (medcustombasenode method)": [[149, "seldonian.parse_tree.nodes.MEDCustomBaseNode.predict_HC_upper_and_lowerbound"]], "predict_hc_upperbound() (medcustombasenode method)": [[149, "seldonian.parse_tree.nodes.MEDCustomBaseNode.predict_HC_upperbound"]], "zhat() (medcustombasenode method)": [[149, "seldonian.parse_tree.nodes.MEDCustomBaseNode.zhat"]], "multiclassbasenode (class in seldonian.parse_tree.nodes)": [[150, "seldonian.parse_tree.nodes.MultiClassBaseNode"]], "__init__() (multiclassbasenode method)": [[150, "seldonian.parse_tree.nodes.MultiClassBaseNode.__init__"]], "__repr__() (multiclassbasenode method)": [[150, "seldonian.parse_tree.nodes.MultiClassBaseNode.__repr__"]], "calculate_bounds() (multiclassbasenode method)": [[150, "seldonian.parse_tree.nodes.MultiClassBaseNode.calculate_bounds"]], "calculate_data_forbound() (multiclassbasenode method)": [[150, "seldonian.parse_tree.nodes.MultiClassBaseNode.calculate_data_forbound"]], "calculate_value() (multiclassbasenode method)": [[150, "seldonian.parse_tree.nodes.MultiClassBaseNode.calculate_value"]], "compute_hc_lowerbound() (multiclassbasenode method)": [[150, "seldonian.parse_tree.nodes.MultiClassBaseNode.compute_HC_lowerbound"]], "compute_hc_upper_and_lowerbound() (multiclassbasenode method)": [[150, "seldonian.parse_tree.nodes.MultiClassBaseNode.compute_HC_upper_and_lowerbound"]], "compute_hc_upperbound() (multiclassbasenode method)": [[150, "seldonian.parse_tree.nodes.MultiClassBaseNode.compute_HC_upperbound"]], "mask_data() (multiclassbasenode method)": [[150, "seldonian.parse_tree.nodes.MultiClassBaseNode.mask_data"]], "predict_hc_lowerbound() (multiclassbasenode method)": [[150, "seldonian.parse_tree.nodes.MultiClassBaseNode.predict_HC_lowerbound"]], "predict_hc_upper_and_lowerbound() (multiclassbasenode method)": [[150, "seldonian.parse_tree.nodes.MultiClassBaseNode.predict_HC_upper_and_lowerbound"]], "predict_hc_upperbound() (multiclassbasenode method)": [[150, "seldonian.parse_tree.nodes.MultiClassBaseNode.predict_HC_upperbound"]], "zhat() (multiclassbasenode method)": [[150, "seldonian.parse_tree.nodes.MultiClassBaseNode.zhat"]], "node (class in seldonian.parse_tree.nodes)": [[151, "seldonian.parse_tree.nodes.Node"]], "__init__() (node method)": [[151, "seldonian.parse_tree.nodes.Node.__init__"]], "__repr__() (node method)": [[151, "seldonian.parse_tree.nodes.Node.__repr__"]], "bounds_required_dict (in module seldonian.parse_tree.operators)": [[152, "seldonian.parse_tree.operators.bounds_required_dict"]], "custom_base_node_dict (in module seldonian.parse_tree.operators)": [[152, "seldonian.parse_tree.operators.custom_base_node_dict"]], "measure_functions_dict (in module seldonian.parse_tree.operators)": [[152, "seldonian.parse_tree.operators.measure_functions_dict"]], "not_supported_op_mapper (in module seldonian.parse_tree.operators)": [[152, "seldonian.parse_tree.operators.not_supported_op_mapper"]], "op_mapper (in module seldonian.parse_tree.operators)": [[152, "seldonian.parse_tree.operators.op_mapper"]], "seldonian.parse_tree.operators": [[152, "module-seldonian.parse_tree.operators"]], "seldonian.parse_tree.parse_tree": [[153, "module-seldonian.parse_tree.parse_tree"]], "parsetree (class in seldonian.parse_tree.parse_tree)": [[154, "seldonian.parse_tree.parse_tree.ParseTree"]], "__init__() (parsetree method)": [[154, "seldonian.parse_tree.parse_tree.ParseTree.__init__"]], "__repr__() (parsetree method)": [[154, "seldonian.parse_tree.parse_tree.ParseTree.__repr__"]], "_abs() (parsetree method)": [[154, "seldonian.parse_tree.parse_tree.ParseTree._abs"]], "_add() (parsetree method)": [[154, "seldonian.parse_tree.parse_tree.ParseTree._add"]], "_assign_bounds_helper() (parsetree method)": [[154, "seldonian.parse_tree.parse_tree.ParseTree._assign_bounds_helper"]], "_assign_deltas_helper() (parsetree method)": [[154, "seldonian.parse_tree.parse_tree.ParseTree._assign_deltas_helper"]], "_ast2pt_node() (parsetree method)": [[154, "seldonian.parse_tree.parse_tree.ParseTree._ast2pt_node"]], "_ast_tree_helper() (parsetree method)": [[154, "seldonian.parse_tree.parse_tree.ParseTree._ast_tree_helper"]], "_div() (parsetree method)": [[154, "seldonian.parse_tree.parse_tree.ParseTree._div"]], "_evaluator_helper() (parsetree method)": [[154, "seldonian.parse_tree.parse_tree.ParseTree._evaluator_helper"]], "_exp() (parsetree method)": [[154, "seldonian.parse_tree.parse_tree.ParseTree._exp"]], "_max() (parsetree method)": [[154, "seldonian.parse_tree.parse_tree.ParseTree._max"]], "_min() (parsetree method)": [[154, "seldonian.parse_tree.parse_tree.ParseTree._min"]], "_mult() (parsetree method)": [[154, "seldonian.parse_tree.parse_tree.ParseTree._mult"]], "_pow() (parsetree method)": [[154, "seldonian.parse_tree.parse_tree.ParseTree._pow"]], "_preprocess_constraint_str() (parsetree method)": [[154, "seldonian.parse_tree.parse_tree.ParseTree._preprocess_constraint_str"]], "_propagate_value() (parsetree method)": [[154, "seldonian.parse_tree.parse_tree.ParseTree._propagate_value"]], "_propagator_helper() (parsetree method)": [[154, "seldonian.parse_tree.parse_tree.ParseTree._propagator_helper"]], "_protect_nan() (parsetree method)": [[154, "seldonian.parse_tree.parse_tree.ParseTree._protect_nan"]], "_sub() (parsetree method)": [[154, "seldonian.parse_tree.parse_tree.ParseTree._sub"]], "assign_bounds_needed() (parsetree method)": [[154, "seldonian.parse_tree.parse_tree.ParseTree.assign_bounds_needed"]], "assign_deltas() (parsetree method)": [[154, "seldonian.parse_tree.parse_tree.ParseTree.assign_deltas"]], "build_tree() (parsetree method)": [[154, "seldonian.parse_tree.parse_tree.ParseTree.build_tree"]], "create_from_ast() (parsetree method)": [[154, "seldonian.parse_tree.parse_tree.ParseTree.create_from_ast"]], "evaluate_constraint() (parsetree method)": [[154, "seldonian.parse_tree.parse_tree.ParseTree.evaluate_constraint"]], "make_viz() (parsetree method)": [[154, "seldonian.parse_tree.parse_tree.ParseTree.make_viz"]], "make_viz_helper() (parsetree method)": [[154, "seldonian.parse_tree.parse_tree.ParseTree.make_viz_helper"]], "propagate() (parsetree method)": [[154, "seldonian.parse_tree.parse_tree.ParseTree.propagate"]], "propagate_bounds() (parsetree method)": [[154, "seldonian.parse_tree.parse_tree.ParseTree.propagate_bounds"]], "reset_base_node_dict() (parsetree method)": [[154, "seldonian.parse_tree.parse_tree.ParseTree.reset_base_node_dict"]], "make_parse_trees_from_constraints() (in module seldonian.parse_tree.parse_tree)": [[155, "seldonian.parse_tree.parse_tree.make_parse_trees_from_constraints"]], "seldonian.safety_test": [[156, "module-seldonian.safety_test"]], "seldonian.safety_test.safety_test": [[157, "module-seldonian.safety_test.safety_test"]], "safetytest (class in seldonian.safety_test.safety_test)": [[158, "seldonian.safety_test.safety_test.SafetyTest"]], "__init__() (safetytest method)": [[158, "seldonian.safety_test.safety_test.SafetyTest.__init__"]], "__repr__() (safetytest method)": [[158, "seldonian.safety_test.safety_test.SafetyTest.__repr__"]], "evaluate_primary_objective() (safetytest method)": [[158, "seldonian.safety_test.safety_test.SafetyTest.evaluate_primary_objective"]], "run() (safetytest method)": [[158, "seldonian.safety_test.safety_test.SafetyTest.run"]], "seldonian.seldonian_algorithm": [[159, "module-seldonian.seldonian_algorithm"]], "seldonianalgorithm (class in seldonian.seldonian_algorithm)": [[160, "seldonian.seldonian_algorithm.SeldonianAlgorithm"]], "__init__() (seldonianalgorithm method)": [[160, "seldonian.seldonian_algorithm.SeldonianAlgorithm.__init__"]], "__repr__() (seldonianalgorithm method)": [[160, "seldonian.seldonian_algorithm.SeldonianAlgorithm.__repr__"]], "candidate_safety_split() (seldonianalgorithm method)": [[160, "seldonian.seldonian_algorithm.SeldonianAlgorithm.candidate_safety_split"]], "candidate_selection() (seldonianalgorithm method)": [[160, "seldonian.seldonian_algorithm.SeldonianAlgorithm.candidate_selection"]], "evaluate_primary_objective() (seldonianalgorithm method)": [[160, "seldonian.seldonian_algorithm.SeldonianAlgorithm.evaluate_primary_objective"]], "get_cs_result() (seldonianalgorithm method)": [[160, "seldonian.seldonian_algorithm.SeldonianAlgorithm.get_cs_result"]], "run() (seldonianalgorithm method)": [[160, "seldonian.seldonian_algorithm.SeldonianAlgorithm.run"]], "run_safety_test() (seldonianalgorithm method)": [[160, "seldonian.seldonian_algorithm.SeldonianAlgorithm.run_safety_test"]], "safety_test() (seldonianalgorithm method)": [[160, "seldonian.seldonian_algorithm.SeldonianAlgorithm.safety_test"]], "seldonian.spec": [[161, "module-seldonian.spec"]], "rlspec (class in seldonian.spec)": [[162, "seldonian.spec.RLSpec"]], "__init__() (rlspec method)": [[162, "seldonian.spec.RLSpec.__init__"]], "__repr__() (rlspec method)": [[162, "seldonian.spec.RLSpec.__repr__"]], "spec (class in seldonian.spec)": [[163, "seldonian.spec.Spec"]], "__init__() (spec method)": [[163, "seldonian.spec.Spec.__init__"]], "__repr__() (spec method)": [[163, "seldonian.spec.Spec.__repr__"]], "supervisedspec (class in seldonian.spec)": [[164, "seldonian.spec.SupervisedSpec"]], "__init__() (supervisedspec method)": [[164, "seldonian.spec.SupervisedSpec.__init__"]], "__repr__() (supervisedspec method)": [[164, "seldonian.spec.SupervisedSpec.__repr__"]], "createrlspec() (in module seldonian.spec)": [[165, "seldonian.spec.createRLSpec"]], "createsupervisedspec() (in module seldonian.spec)": [[166, "seldonian.spec.createSupervisedSpec"]], "validate_parse_trees() (in module seldonian.spec)": [[167, "seldonian.spec.validate_parse_trees"]], "seldonian.utils": [[168, "module-seldonian.utils"]], "seldonian.utils.rl_utils": [[169, "module-seldonian.utils.RL_utils"]], "argmax_multi() (in module seldonian.utils.rl_utils)": [[170, "seldonian.utils.RL_utils.argmax_multi"]], "clamp() (in module seldonian.utils.rl_utils)": [[171, "seldonian.utils.RL_utils.clamp"]], "error() (in module seldonian.utils.rl_utils)": [[172, "seldonian.utils.RL_utils.error"]], "seldonian.utils.io_utils": [[173, "module-seldonian.utils.io_utils"]], "dir_path() (in module seldonian.utils.io_utils)": [[174, "seldonian.utils.io_utils.dir_path"]], "load_json() (in module seldonian.utils.io_utils)": [[175, "seldonian.utils.io_utils.load_json"]], "load_pickle() (in module seldonian.utils.io_utils)": [[176, "seldonian.utils.io_utils.load_pickle"]], "save_json() (in module seldonian.utils.io_utils)": [[177, "seldonian.utils.io_utils.save_json"]], "save_pickle() (in module seldonian.utils.io_utils)": [[178, "seldonian.utils.io_utils.save_pickle"]], "seldonian.utils.plot_utils": [[179, "module-seldonian.utils.plot_utils"]], "plot_gradient_descent() (in module seldonian.utils.plot_utils)": [[180, "seldonian.utils.plot_utils.plot_gradient_descent"]], "seldonian.utils.stats_utils": [[181, "module-seldonian.utils.stats_utils"]], "softmax() (in module seldonian.utils.stats_utils)": [[182, "seldonian.utils.stats_utils.softmax"]], "stddev() (in module seldonian.utils.stats_utils)": [[183, "seldonian.utils.stats_utils.stddev"]], "tinv() (in module seldonian.utils.stats_utils)": [[184, "seldonian.utils.stats_utils.tinv"]], "weighted_sum_gamma() (in module seldonian.utils.stats_utils)": [[185, "seldonian.utils.stats_utils.weighted_sum_gamma"]], "seldonian.utils.tutorial_utils": [[186, "module-seldonian.utils.tutorial_utils"]], "generate_clipped_data() (in module seldonian.utils.tutorial_utils)": [[187, "seldonian.utils.tutorial_utils.generate_clipped_data"]], "generate_data() (in module seldonian.utils.tutorial_utils)": [[188, "seldonian.utils.tutorial_utils.generate_data"]], "make_synthetic_regression_dataset() (in module seldonian.utils.tutorial_utils)": [[189, "seldonian.utils.tutorial_utils.make_synthetic_regression_dataset"]], "seldonian.warnings": [[190, "module-seldonian.warnings"]], "seldonian.warnings.custom_warnings": [[191, "module-seldonian.warnings.custom_warnings"]], "custom_formatwarning() (in module seldonian.warnings.custom_warnings)": [[192, "seldonian.warnings.custom_warnings.custom_formatwarning"]]}})