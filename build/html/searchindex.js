Search.setIndex({"docnames": ["_autosummary/interface", "_autosummary/interface.cli_supervised", "_autosummary/interface.cli_supervised.run_interface", "_autosummary/seldonian", "_autosummary/seldonian.RL", "_autosummary/seldonian.RL.environments", "_autosummary/seldonian.RL.environments.gridworld3x3", "_autosummary/seldonian.RL.environments.gridworld3x3.Environment", "_autosummary/seldonian.RL.environments.mountaincar", "_autosummary/seldonian.RL.environments.mountaincar.Basis", "_autosummary/seldonian.RL.environments.mountaincar.Environment", "_autosummary/seldonian.RL.environments.mountaincar.FourierBasis", "_autosummary/seldonian.RL.environments.mountaincar.Linear_Softmax", "_autosummary/seldonian.RL.environments.mountaincar.Mountaincar", "_autosummary/seldonian.RL.environments.mountaincar.Policy", "_autosummary/seldonian.RL.environments.mountaincar.increment_counter", "_autosummary/seldonian.candidate_selection", "_autosummary/seldonian.candidate_selection.CandidateSelection", "_autosummary/seldonian.candidate_selection.candidate_selection", "_autosummary/seldonian.candidate_selection.candidate_selection.CandidateSelection", "_autosummary/seldonian.dataset", "_autosummary/seldonian.dataset.DataSet", "_autosummary/seldonian.dataset.DataSetLoader", "_autosummary/seldonian.models", "_autosummary/seldonian.models.model", "_autosummary/seldonian.models.model.ClassificationModel", "_autosummary/seldonian.models.model.LinearClassifierModel", "_autosummary/seldonian.models.model.LinearRegressionModel", "_autosummary/seldonian.models.model.LinearSoftmaxModel", "_autosummary/seldonian.models.model.LogisticRegressionModel", "_autosummary/seldonian.models.model.RLModel", "_autosummary/seldonian.models.model.RegressionModel", "_autosummary/seldonian.models.model.SGDClassifierModel", "_autosummary/seldonian.models.model.SeldonianModel", "_autosummary/seldonian.models.model.SupervisedModel", "_autosummary/seldonian.models.model.TabularSoftmaxModel", "_autosummary/seldonian.optimizers", "_autosummary/seldonian.optimizers.gradient_descent", "_autosummary/seldonian.optimizers.gradient_descent.gradient_descent_adam", "_autosummary/seldonian.parse_tree", "_autosummary/seldonian.parse_tree.nodes", "_autosummary/seldonian.parse_tree.nodes.BaseNode", "_autosummary/seldonian.parse_tree.nodes.ConstantNode", "_autosummary/seldonian.parse_tree.nodes.InternalNode", "_autosummary/seldonian.parse_tree.nodes.MEDCustomBaseNode", "_autosummary/seldonian.parse_tree.nodes.Node", "_autosummary/seldonian.parse_tree.operators", "_autosummary/seldonian.parse_tree.parse_tree", "_autosummary/seldonian.parse_tree.parse_tree.ParseTree", "_autosummary/seldonian.safety_test", "_autosummary/seldonian.safety_test.SafetyTest", "_autosummary/seldonian.safety_test.safety_test", "_autosummary/seldonian.safety_test.safety_test.SafetyTest", "_autosummary/seldonian.seldonian_algorithm", "_autosummary/seldonian.seldonian_algorithm.seldonian_algorithm", "_autosummary/seldonian.spec", "_autosummary/seldonian.spec.RLSpec", "_autosummary/seldonian.spec.Spec", "_autosummary/seldonian.spec.SupervisedSpec", "api", "getting_started", "glossary", "index", "overview", "usage"], "filenames": ["_autosummary/interface.rst", "_autosummary/interface.cli_supervised.rst", "_autosummary/interface.cli_supervised.run_interface.rst", "_autosummary/seldonian.rst", "_autosummary/seldonian.RL.rst", "_autosummary/seldonian.RL.environments.rst", "_autosummary/seldonian.RL.environments.gridworld3x3.rst", "_autosummary/seldonian.RL.environments.gridworld3x3.Environment.rst", "_autosummary/seldonian.RL.environments.mountaincar.rst", "_autosummary/seldonian.RL.environments.mountaincar.Basis.rst", "_autosummary/seldonian.RL.environments.mountaincar.Environment.rst", "_autosummary/seldonian.RL.environments.mountaincar.FourierBasis.rst", "_autosummary/seldonian.RL.environments.mountaincar.Linear_Softmax.rst", "_autosummary/seldonian.RL.environments.mountaincar.Mountaincar.rst", "_autosummary/seldonian.RL.environments.mountaincar.Policy.rst", "_autosummary/seldonian.RL.environments.mountaincar.increment_counter.rst", "_autosummary/seldonian.candidate_selection.rst", "_autosummary/seldonian.candidate_selection.CandidateSelection.rst", "_autosummary/seldonian.candidate_selection.candidate_selection.rst", "_autosummary/seldonian.candidate_selection.candidate_selection.CandidateSelection.rst", "_autosummary/seldonian.dataset.rst", "_autosummary/seldonian.dataset.DataSet.rst", "_autosummary/seldonian.dataset.DataSetLoader.rst", "_autosummary/seldonian.models.rst", "_autosummary/seldonian.models.model.rst", "_autosummary/seldonian.models.model.ClassificationModel.rst", "_autosummary/seldonian.models.model.LinearClassifierModel.rst", "_autosummary/seldonian.models.model.LinearRegressionModel.rst", "_autosummary/seldonian.models.model.LinearSoftmaxModel.rst", "_autosummary/seldonian.models.model.LogisticRegressionModel.rst", "_autosummary/seldonian.models.model.RLModel.rst", "_autosummary/seldonian.models.model.RegressionModel.rst", "_autosummary/seldonian.models.model.SGDClassifierModel.rst", "_autosummary/seldonian.models.model.SeldonianModel.rst", "_autosummary/seldonian.models.model.SupervisedModel.rst", "_autosummary/seldonian.models.model.TabularSoftmaxModel.rst", "_autosummary/seldonian.optimizers.rst", "_autosummary/seldonian.optimizers.gradient_descent.rst", "_autosummary/seldonian.optimizers.gradient_descent.gradient_descent_adam.rst", "_autosummary/seldonian.parse_tree.rst", "_autosummary/seldonian.parse_tree.nodes.rst", "_autosummary/seldonian.parse_tree.nodes.BaseNode.rst", "_autosummary/seldonian.parse_tree.nodes.ConstantNode.rst", "_autosummary/seldonian.parse_tree.nodes.InternalNode.rst", "_autosummary/seldonian.parse_tree.nodes.MEDCustomBaseNode.rst", "_autosummary/seldonian.parse_tree.nodes.Node.rst", "_autosummary/seldonian.parse_tree.operators.rst", "_autosummary/seldonian.parse_tree.parse_tree.rst", "_autosummary/seldonian.parse_tree.parse_tree.ParseTree.rst", "_autosummary/seldonian.safety_test.rst", "_autosummary/seldonian.safety_test.SafetyTest.rst", "_autosummary/seldonian.safety_test.safety_test.rst", "_autosummary/seldonian.safety_test.safety_test.SafetyTest.rst", "_autosummary/seldonian.seldonian_algorithm.rst", "_autosummary/seldonian.seldonian_algorithm.seldonian_algorithm.rst", "_autosummary/seldonian.spec.rst", "_autosummary/seldonian.spec.RLSpec.rst", "_autosummary/seldonian.spec.Spec.rst", "_autosummary/seldonian.spec.SupervisedSpec.rst", "api.rst", "getting_started.rst", "glossary.rst", "index.rst", "overview.rst", "usage.rst"], "titles": ["interface", "interface.cli_supervised", "interface.cli_supervised.run_interface", "seldonian", "seldonian.RL", "seldonian.RL.environments", "seldonian.RL.environments.gridworld3x3", "seldonian.RL.environments.gridworld3x3.Environment", "seldonian.RL.environments.mountaincar", "seldonian.RL.environments.mountaincar.Basis", "seldonian.RL.environments.mountaincar.Environment", "seldonian.RL.environments.mountaincar.FourierBasis", "seldonian.RL.environments.mountaincar.Linear_Softmax", "seldonian.RL.environments.mountaincar.Mountaincar", "seldonian.RL.environments.mountaincar.Policy", "seldonian.RL.environments.mountaincar.increment_counter", "seldonian.candidate_selection", "seldonian.candidate_selection.CandidateSelection", "seldonian.candidate_selection.candidate_selection", "seldonian.candidate_selection.candidate_selection.CandidateSelection", "seldonian.dataset", "seldonian.dataset.DataSet", "seldonian.dataset.DataSetLoader", "seldonian.models", "seldonian.models.model", "seldonian.models.model.ClassificationModel", "seldonian.models.model.LinearClassifierModel", "seldonian.models.model.LinearRegressionModel", "seldonian.models.model.LinearSoftmaxModel", "seldonian.models.model.LogisticRegressionModel", "seldonian.models.model.RLModel", "seldonian.models.model.RegressionModel", "seldonian.models.model.SGDClassifierModel", "seldonian.models.model.SeldonianModel", "seldonian.models.model.SupervisedModel", "seldonian.models.model.TabularSoftmaxModel", "seldonian.optimizers", "seldonian.optimizers.gradient_descent", "seldonian.optimizers.gradient_descent.gradient_descent_adam", "seldonian.parse_tree", "seldonian.parse_tree.nodes", "seldonian.parse_tree.nodes.BaseNode", "seldonian.parse_tree.nodes.ConstantNode", "seldonian.parse_tree.nodes.InternalNode", "seldonian.parse_tree.nodes.MEDCustomBaseNode", "seldonian.parse_tree.nodes.Node", "seldonian.parse_tree.operators", "seldonian.parse_tree.parse_tree", "seldonian.parse_tree.parse_tree.ParseTree", "seldonian.safety_test", "seldonian.safety_test.SafetyTest", "seldonian.safety_test.safety_test", "seldonian.safety_test.safety_test.SafetyTest", "seldonian.seldonian_algorithm", "seldonian.seldonian_algorithm.seldonian_algorithm", "seldonian.spec", "seldonian.spec.RLSpec", "seldonian.spec.Spec", "seldonian.spec.SupervisedSpec", "API", "Getting Started", "Glossary", "Seldonian Engine documentation", "Overview", "Usage"], "terms": {"seldonian": [0, 1, 60, 61, 63, 64], "packag": [0, 3], "modul": [0, 3, 4, 5, 16, 18, 23, 24, 28, 35, 36, 39, 46, 47, 49, 51, 53, 55, 56], "command": [1, 2, 60], "line": [1, 2, 10, 13, 60], "supervis": [1, 19, 21, 22, 34, 52, 58, 60, 61], "learn": [1, 13, 19, 21, 22, 24, 25, 31, 33, 34, 41, 44, 52, 58, 60, 61], "algorithm": [1, 19, 20, 21, 22, 23, 44, 48, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63], "usag": [1, 60, 62], "python": [1, 48, 60], "py": [1, 60], "data_pth": [1, 2, 60], "metadata_pth": [1, 2, 60], "include_sensitive_column": [1, 2, 21, 22, 60], "include_intercept_term": [1, 2, 21, 22, 60], "save_dir": [1, 2, 60], "function": [1, 6, 7, 8, 19, 35, 37, 41, 46, 48, 53, 56, 57, 58, 61], "fals": [2, 7, 10, 11, 19, 21, 22, 25, 26, 29, 32, 38, 48, 56, 57, 58], "run": [2, 19, 20, 23, 51, 52, 53, 54, 55, 56, 57, 58, 60, 63], "paramet": [2, 7, 12, 14, 19, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 41, 42, 43, 44, 45, 48, 52, 54, 56, 57, 58, 63], "path": [2, 60], "main": [2, 24, 47, 63], "dataset": [2, 10, 19, 27, 28, 30, 31, 35, 41, 44, 52, 56, 57, 58, 60, 62], "file": [2, 7, 22, 60], "metadata": [2, 21, 28, 30, 35, 60, 63], "json": 2, "whether": [2, 7, 19, 21, 22, 45, 48, 52, 56, 57, 58], "includ": [2, 7, 21, 22, 32, 48], "sensit": [2, 21, 22, 61], "column": [2, 7, 21, 22, 32, 41, 44], "dure": [2, 19, 21, 22, 46, 56, 57, 58], "train": [2, 21, 22, 25, 26, 27, 29, 31, 32, 34, 63], "predict": [2, 19, 21, 22, 25, 26, 27, 29, 32, 61], "add": [2, 19, 21, 22, 48], "ones": [2, 21, 22], "first": [2, 21, 22, 32, 48, 60, 64], "engin": [3, 64], "3x3": [6, 7], "gridworld": [6, 7, 35], "state": [6, 7, 10, 13, 28, 35, 48], "0": [6, 7, 13, 25, 26, 28, 29, 32, 38, 41, 44, 52, 56], "8": [6, 7, 10], "reward": [6, 7, 10, 13], "everywher": [6, 7], "except": [6, 7], "r": [6, 7, 10, 13, 25, 26, 29, 32], "1": [6, 7, 13, 25, 26, 28, 29, 32, 41, 52, 56, 61], "cell": [6, 7], "7": [6, 7], "bottom": [6, 7], "middl": [6, 7], "right": [6, 7, 13, 45, 48], "action": [6, 7, 10, 13, 28, 35], "ar": [6, 7, 19, 46, 48, 52, 56, 57, 58, 60, 61, 62, 63], "2": [6, 7, 38, 44], "3": [6, 7], "up": [6, 7, 44, 48], "down": [6, 7], "left": [6, 7, 13, 45, 48], "respect": [6, 7], "an": [6, 7, 32, 41, 45, 46, 56, 57, 58, 60, 61], "episod": [6, 7, 10, 13, 28, 30, 35], "start": [6, 7, 62], "top": [6, 7, 48], "termin": [6, 7, 10, 13], "timeout": [6, 7], "occur": [6, 7], "class": [6, 7, 8, 9, 10, 11, 12, 13, 14, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 55, 56, 57, 58], "base": [7, 9, 10, 11, 12, 13, 14, 19, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 41, 42, 43, 44, 45, 46, 48, 52, 56, 57, 58], "object": [7, 9, 13, 14, 19, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 41, 44, 45, 48, 52, 54, 55, 56, 57, 58, 61, 62], "__init__": [7, 9, 10, 11, 12, 13, 14, 19, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 41, 42, 43, 44, 45, 48, 52, 56, 57, 58], "variabl": [7, 22, 28, 35, 41, 42, 44, 45, 46, 48, 52, 56, 57, 58], "gamma": [7, 10, 52], "float": [7, 10, 13, 25, 26, 27, 28, 29, 30, 31, 32, 35, 41, 42, 44, 45, 48, 52, 56, 57, 58], "discount": [7, 10, 52], "factor": [7, 52], "when": [7, 19, 25, 26, 29, 32, 41, 48], "calcul": [7, 10, 25, 26, 27, 28, 29, 30, 31, 32, 35, 41, 44, 48, 52, 56, 57, 58], "return": [7, 9, 10, 11, 12, 13, 14, 19, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 41, 44, 48, 52, 56, 57, 58], "int": [7, 10, 12, 13, 19, 28, 35, 41, 44, 45, 48], "The": [7, 13, 19, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 35, 41, 42, 43, 44, 45, 48, 52, 56, 57, 58, 60, 61, 62, 63], "number": [7, 25, 26, 29, 32, 41, 44, 48], "timestep": [7, 10, 13], "after": 7, "which": [7, 25, 26, 29, 32, 41, 43, 44, 46, 48, 56, 57, 58, 61, 63], "we": [7, 41, 44, 48, 60], "agent": [7, 13], "regardless": 7, "numpi": [7, 12, 14, 19, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 41, 44, 52], "ndarrai": [7, 10, 13, 14, 19, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 41, 44, 52], "possibl": [7, 28, 35, 52], "reward_dict": 7, "dict": [7, 25, 26, 27, 28, 29, 30, 31, 32, 35, 41, 44, 46, 48, 56, 57, 58], "map": [7, 46], "pair": [7, 25, 26, 27, 31, 32, 34, 44], "environ_dict": 7, "next": [7, 10, 13], "initial_st": 7, "where": [7, 19, 41, 44, 48], "each": [7, 25, 26, 27, 28, 29, 30, 31, 32, 35, 41, 44, 46, 48, 63], "terminal_st": 7, "current_st": 7, "current": [7, 25], "initial_weight": 7, "initi": [7, 10, 13, 19, 48, 56, 57, 58], "weight": [7, 19, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 41, 44, 56, 57, 58], "s": [7, 13, 41, 44, 48, 60], "polici": [7, 12, 35, 61, 62], "model": [7, 13, 19, 41, 44, 52, 56, 57, 58, 61, 62], "param_weight": 7, "__repr__": [7, 9, 10, 11, 12, 13, 14, 19, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 41, 42, 43, 44, 45, 48, 52, 56, 57, 58], "repr": [7, 9, 10, 11, 12, 13, 14, 19, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 48, 52, 56, 57, 58], "self": [7, 9, 10, 11, 12, 13, 14, 19, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 48, 52, 56, 57, 58], "method": [7, 9, 10, 11, 12, 13, 14, 19, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 41, 42, 43, 44, 45, 48, 52, 56, 57, 58], "_arg": [7, 35], "helper": [7, 35, 48], "pi": 7, "_denom": [7, 35], "calc_j": 7, "n_episod": [7, 10], "parallel": [7, 10], "true": [7, 10, 25, 26, 29, 32, 41, 44, 52, 56, 57, 58], "n_worker": [7, 10], "expect": [7, 10, 41, 44], "sum": [7, 10, 25, 26, 29, 32], "gener": [7, 63], "us": [7, 10, 13, 19, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 41, 44, 46, 48, 52, 56, 57, 58, 60, 63, 64], "perform": [7, 43], "bool": [7, 10, 13, 19, 45, 48, 52, 56, 57, 58], "multipl": 7, "worker": 7, "data": [7, 19, 22, 28, 30, 35, 41, 44, 48, 52, 56, 57, 58, 60, 63], "multiprocess": 7, "j": 7, "type": [7, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 41, 44, 61], "generate_data": [7, 10], "savenam": [7, 10], "none": [7, 12, 14, 19, 45, 56, 57, 58], "header": [7, 10], "panda": [7, 21, 30, 35, 44], "datafram": [7, 21, 28, 30, 35, 41, 44], "consist": [7, 63], "episode_index": 7, "probability_of_act": 7, "str": [7, 19, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 35, 41, 42, 43, 44, 45, 46, 48, 52, 56, 57, 58], "default": [7, 26, 27, 28, 29, 35, 45, 48, 52, 56, 57, 58, 63], "name": [7, 19, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 35, 41, 42, 43, 44, 45, 46, 56, 57, 58], "save": 7, "generate_episod": 7, "return_index": 7, "entir": 7, "part": [7, 63], "generate_episodes_par": 7, "thi": [7, 13, 25, 26, 28, 29, 31, 32, 33, 34, 41, 44, 45, 48, 56, 60, 61, 62, 63], "appli": [7, 35, 61], "tabular": [7, 35], "softmax": [7, 28, 35], "get": [7, 12, 14, 19, 28, 48, 62], "probabl": [7, 25, 26, 28, 29, 32, 48, 61], "given": [7, 10, 19, 28, 32, 35, 41, 44, 48, 56, 57, 58], "posit": [7, 10, 13, 25, 26, 29, 32], "between": [7, 25, 26, 29, 32, 44], "correspond": 7, "reset": [7, 10, 13, 48], "take_step": 7, "take": [7, 10, 13, 28, 54], "chang": 7, "attribut": [10, 13, 21, 22, 48, 61], "next_stat": [10, 13], "transit": [10, 13], "calc_j_from_df": 10, "df": [10, 21], "nextstat": [10, 13], "comput": [10, 13, 44, 48, 56, 57, 58], "pendulum": [10, 13], "euler": [10, 13], "approxim": [10, 13], "dynam": [10, 13], "configur": [10, 13], "step": [10, 13], "tupl": [10, 13, 48], "one": [10, 13, 28, 46, 48, 56, 57, 58, 61], "time": [10, 13], "greater": [10, 13], "than": [10, 13, 48, 63], "max": [10, 13], "pass": [10, 13, 41, 44, 52], "finish": [10, 13], "rang": 11, "dorder": 11, "iorder": 11, "both": [11, 48], "basi": [11, 12, 62], "n_action": 12, "get_param": [12, 14], "vector": [12, 14, 27, 28, 30, 31, 32, 35, 41, 44], "set_param": [12, 14], "param": [12, 14], "set": [12, 14, 32, 39, 42, 63], "cart": 13, "pole": 13, "describ": [13, 63], "687": 13, "cours": 13, "materi": 13, "domain": 13, "balanc": 13, "must": [13, 41], "move": 13, "forward": 13, "backward": 13, "keep": [13, 48], "from": [13, 22, 25, 26, 27, 28, 31, 32, 34, 35, 39, 44, 47, 48, 56, 60, 61, 63], "fall": [13, 56, 57, 58], "alwai": [13, 41, 44, 48], "see": [13, 44, 56, 57, 58, 60, 61, 62, 63], "work": 13, "florian": 13, "2007": 13, "correct": 13, "equat": 13, "system": [13, 61, 64], "observ": [13, 25, 26, 27, 29, 31, 32, 41, 44], "barrow": 13, "phil": 13, "thoma": [13, 44], "2019": [13, 44], "written": [13, 48], "blossom": 13, "metevi": 13, "scott": 13, "jordan": 13, "counter": 15, "maxdigit": 15, "candid": [18, 19, 36, 41, 44, 52, 56, 57, 58, 61, 62], "select": [18, 19, 36, 41, 44, 52, 56, 57, 58, 61, 62], "candidate_dataset": 19, "n_safeti": 19, "parse_tre": [19, 52, 56, 57, 58, 62], "primary_object": [19, 38, 56, 57, 58], "optimization_techniqu": [19, 56, 57, 58], "barrier_funct": [19, 56, 57, 58], "optim": [19, 56, 57, 58, 61, 62], "powel": 19, "initial_solut": 19, "regim": [19, 21, 22, 52, 61], "write_logfil": 19, "kwarg": [19, 21, 22, 38, 41, 42, 43, 44, 48, 52], "seldonianmodel": [19, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 41, 44, 52, 56, 57, 58, 62], "contain": [19, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 41, 44, 46, 48, 52, 56, 57, 58, 63], "length": [19, 46], "safeti": [19, 41, 44, 51, 52, 56, 57, 58, 60, 61, 63], "confid": [19, 41, 44, 45, 48, 52, 56, 57, 58, 61, 63], "bound": [19, 41, 42, 44, 45, 46, 48, 52, 56, 57, 58], "list": [19, 21, 22, 41, 44, 46, 52, 56, 57, 58], "parsetre": [19, 52, 56, 57, 58, 62, 63], "pars": [19, 39, 41, 42, 43, 44, 45, 46, 47, 48, 52, 56, 57, 58, 62, 64], "tree": [19, 39, 41, 42, 43, 44, 45, 46, 47, 48, 52, 56, 57, 58, 62, 64], "behavior": [19, 39, 46, 47, 48, 52, 56, 57, 58, 61], "constraint": [19, 39, 46, 47, 48, 52, 56, 57, 58, 60, 61, 63], "would": [19, 46, 56, 57, 58], "sole": [19, 56, 57, 58], "absenc": [19, 56, 57, 58], "i": [19, 56, 57, 58], "e": [19, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 35, 41, 44, 52, 56, 57, 58, 61], "loss": [19, 25, 26, 29, 32, 56, 57, 58, 61], "g": [19, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 35, 41, 44, 52, 56, 57, 58, 61], "gradient_desc": [19, 56, 57, 58, 62], "string": [19, 42, 43, 45, 46, 48, 56, 57, 58], "categori": [19, 21, 22, 52], "machin": [19, 21, 22, 24, 25, 31, 32, 33, 34, 41, 44, 52, 61], "rl": [19, 21, 22, 28, 30, 35, 52, 56, 62], "write": 19, "output": 19, "disk": [19, 22], "evaluate_primary_object": 19, "theta": [19, 25, 26, 27, 28, 29, 30, 31, 32, 35, 41, 44], "valu": [19, 27, 31, 41, 42, 44, 48], "primari": [19, 26, 27, 28, 29, 35, 56, 57, 58, 61], "wrapper": 19, "fix": 19, "input": [19, 41, 44, 61], "gradient": [19, 25, 26, 29, 32, 56, 57, 58], "descent": 19, "get_constraint_upper_bound": 19, "upper": [19, 41, 42, 43, 44, 45, 48, 52], "objective_with_barri": 19, "minimization_techniqu": 19, "barrier": 19, "larg": 19, "penalti": 19, "ani": 19, "violat": [19, 48], "build": [20, 39, 47, 48, 55], "load": [20, 22], "meta_inform": 21, "label_column": [21, 22], "sensitive_column_nam": [21, 22], "hold": 21, "full": [21, 63], "all": [21, 22, 25, 28, 30, 31, 33, 34, 35, 45, 48, 52], "target": [21, 22], "label": [21, 22, 25, 26, 27, 29, 31, 32, 34, 41, 44], "column_nam": 22, "from_csv": 22, "csv_file": 22, "creat": [22, 41, 44, 48, 63], "csv": 22, "filenam": 22, "you": [22, 48, 62, 64], "want": [22, 48, 60, 63, 64], "from_pickl": 22, "pkl_file": 22, "pickl": 22, "supervisedmodel": [25, 31, 62], "parent": [25, 28, 31, 33, 34, 44], "classif": [25, 26, 29, 32, 61], "librari": [25, 31, 33, 34, 56, 61, 62, 63], "onli": [25, 52, 61], "support": [25, 32, 46, 61], "binari": [25, 26, 29, 32], "accuraci": [25, 26, 29, 32], "x": [25, 26, 27, 28, 29, 31, 32, 34, 44], "y": [25, 26, 27, 29, 31, 32, 34, 44], "featur": [25, 26, 27, 29, 31, 32, 34, 41, 44, 61], "evaluate_statist": [25, 26, 27, 28, 29, 30, 31, 32, 35], "statistic_nam": [25, 26, 27, 28, 29, 30, 31, 32, 35], "data_dict": [25, 26, 27, 28, 29, 30, 31, 32, 35, 41, 44], "evalu": [25, 26, 27, 28, 29, 30, 31, 32, 35, 41, 44, 48], "provid": [25, 26, 27, 28, 29, 30, 31, 32, 35, 46, 56, 57, 58, 61, 63], "statist": [25, 26, 27, 28, 29, 30, 31, 32, 35, 41, 46, 52, 56, 57, 58], "whole": [25, 26, 27, 28, 29, 30, 31, 32, 35, 48], "sampl": [25, 26, 27, 28, 29, 30, 31, 32, 35], "fpr": [25, 26, 29, 32, 41], "rate": [25, 26, 29, 32], "over": [25, 26, 27, 28, 29, 30, 31, 32, 35, 52], "fit": [25, 26, 27, 29, 31, 32, 34], "nx1": [25, 26, 27, 31, 32, 34], "gradient_sample_logistic_loss": [25, 26, 29, 32], "logist": [25, 26, 29, 32], "w": [25, 26, 29, 32], "t": [25, 26, 29, 32, 41, 44], "perceptron": [25, 26, 29, 32], "sample_false_negative_r": [25, 26, 29, 32], "neg": [25, 26, 29, 32, 48], "being": [25, 26, 29, 32, 41], "fact": [25, 26, 29, 32], "wa": [25, 26, 29, 32, 44], "sample_false_positive_r": [25, 26, 29, 32], "sample_negative_r": [25, 26, 29, 32], "sample_positive_r": [25, 26, 29, 32], "normal": [25, 26, 28, 29, 32, 52, 56, 61, 63], "sample_from_statist": [25, 26, 27, 28, 29, 30, 31, 32, 35], "sample_logistic_loss": [25, 26, 29, 32], "sample_perceptron_loss": [25, 26, 29, 32], "fraction": [25, 26, 29, 32, 56, 57, 58], "incorrect": [25, 26, 29, 32], "vector_false_negative_r": [25, 26, 29, 32], "subject": [25, 26, 29, 32], "actual": [25, 26, 29, 32], "vector_false_positive_r": [25, 26, 29, 32], "vector_negative_r": [25, 26, 29, 32], "vector_positive_r": [25, 26, 29, 32], "vector_true_negative_r": [25, 26, 29, 32], "vector_true_positive_r": [25, 26, 29, 32], "vector_logistic_loss": [25, 26, 29, 32], "arrai": [25, 26, 29, 32, 38, 46], "classificationmodel": [26, 29, 32, 62], "implement": [26, 27, 29, 32, 62, 63], "linear": [26, 27, 28, 32, 60], "classifi": 26, "regress": [26, 27, 29, 31, 44, 60, 61], "default_object": [26, 27, 28, 29, 35], "make": [26, 32, 48, 61], "regressionmodel": [27, 62], "mean": [27, 31, 44, 46, 61], "squar": [27, 31, 61], "error": [27, 31, 44, 61], "mean_squared_error": [27, 31], "sample_mean_error": [27, 31], "sample_mean_squared_error": [27, 31], "vector_mean_error": [27, 31], "vector_mean_squared_error": [27, 31], "environ": [28, 35, 56, 62], "rlmodel": [28, 35, 62], "mountaincar": [28, 62], "is_estim": 28, "unweight": [28, 30, 35], "import": [28, 30, 35, 60], "estim": [28, 30, 35, 41], "overrid": [28, 41, 44], "so": [28, 44], "can": [28, 48, 60, 63], "IS": [28, 30, 35], "apply_polici": [28, 35], "A": [28, 30, 35, 46, 56, 57, 58], "defin": [28, 46], "j_pi_new": [28, 30, 35], "get_p": 28, "probabilit": 28, "encod": 28, "sample_is_estim": [28, 30, 35], "vector_is_estim": [28, 30, 35], "have": [29, 46, 48, 61], "offset": 32, "upper_bound_funct": 38, "theta_init": 38, "lambda_init": 38, "5": 38, "alpha_theta": 38, "05": [38, 41, 44], "alpha_lamb": 38, "beta_veloc": 38, "9": 38, "beta_rmsprop": 38, "num_it": 38, "200": 38, "store_valu": 38, "verbos": 38, "lower": [41, 42, 43, 44, 45, 48], "inf": [41, 43, 44], "conditional_column": [41, 44], "leaf": [41, 42, 43, 52], "measur": 41, "condit": [41, 44], "node_typ": [41, 42], "equal": [41, 48], "base_nod": 41, "delta": [41, 44, 48, 61], "share": [41, 44], "put": [41, 44], "measure_function_nam": 41, "repres": [41, 42, 43, 46, 48], "measure_funct": [41, 46], "oper": [41, 43, 62], "calculate_bound": [41, 44], "bound_method": [41, 44, 52, 56, 57, 58], "test": [41, 44, 51, 52, 56, 57, 58, 61, 63], "calculate_data_forbound": [41, 44], "prepar": 41, "calculate_valu": [41, 44], "etc": [41, 43, 44], "compute_hc_lowerbound": [41, 44], "datas": [41, 44], "high": [41, 44, 61], "level": [41, 44, 48], "compute_hc_upper_and_lowerbound": [41, 44], "depend": [41, 44], "equival": [41, 44], "call": [41, 44, 61], "compute_hc_upperbound": [41, 44], "independ": [41, 44], "mask_datafram": [41, 44], "mask": [41, 44], "joint": [41, 44], "AND": [41, 44], "predict_hc_lowerbound": [41, 44], "predict_hc_upper_and_lowerbound": [41, 44], "predict_hc_upperbound": [41, 44], "zhat": [41, 44], "unbias": 41, "constant": [42, 48], "constant_nod": 42, "represent": [42, 43, 45, 46], "also": [42, 43, 45, 61, 63], "what": [42, 43, 45, 60, 63], "displai": [42, 43, 45, 48], "insid": [42, 43, 45], "box": [42, 43, 45], "visual": [42, 43, 45, 48, 64], "graph": [42, 43, 45, 48, 64], "intern": 43, "non": 43, "These": 43, "basenod": [44, 62], "custom": [44, 46, 63], "wise": 44, "differ": 44, "male": 44, "femal": 44, "point": 44, "et": 44, "al": 44, "scienc": [44, 63], "paper": [44, 63], "figur": 44, "sever": 44, "same": 44, "precalculate_data": 44, "preconfigur": 44, "doe": [44, 48, 61], "need": [44, 45, 48, 55, 60], "recalcul": 44, "iter": 44, "through": [44, 48, 60], "y_i": 44, "y_hat_i": 44, "m": [44, 48], "y_j": 44, "y_hat_j": 44, "f": 44, "epsilon": 44, "There": [44, 48], "mai": [44, 63], "row": 44, "min": 44, "n_male": 44, "n_femal": 44, "index": 45, "child": [45, 46, 48, 56, 57, 58], "will_lower_bound": 45, "will_upper_bound": 45, "global": 46, "construct": 46, "short": 46, "hand": 46, "recogn": 46, "specif": [46, 54, 55, 56, 57, 58, 60, 62], "interfac": [46, 60, 61, 62], "custom_base_node_dict": 46, "dictionari": 46, "node": [46, 48, 52, 62], "appear": [46, 48], "op_mapp": 46, "ast": [46, 48], "those": 46, "thei": [46, 63], "not_supported_op_mapp": 46, "Not": 46, "bounds_required_dict": 46, "specifi": [46, 48], "requir": [46, 48, 57, 60, 64], "If": [46, 48, 56, 57, 58, 62, 64], "ha": [46, 63], "two": [46, 48, 60], "children": [46, 48], "b": [46, 48], "boolean": 46, "4": 46, "like": [46, 48], "need_a_low": 46, "need_a_upp": 46, "need_b_low": 46, "need_b_upp": 46, "singl": 48, "maximum": [48, 52], "solut": [48, 52], "root": [48, 52], "via": 48, "assign": 48, "built": [48, 56, 57, 58], "constraint_str": 48, "express": 48, "n_node": 48, "total": 48, "n_base_nod": 48, "pr": 48, "more": 48, "onc": 48, "contribut": 48, "base_node_dict": 48, "track": 48, "uniqu": 48, "been": 48, "alreadi": 48, "help": 48, "handl": 48, "case": 48, "duplic": 48, "node_fonts": 48, "fontsiz": 48, "graphviz": [48, 64], "_ab": 48, "absolut": 48, "interv": [48, 52], "_add": 48, "_assign_bounds_help": 48, "lower_need": 48, "upper_need": 48, "travers": 48, "_assign_deltas_help": 48, "weight_method": 48, "how": 48, "_ast2pt_nod": 48, "ast_nod": 48, "_ast_tree_help": 48, "recurs": 48, "_div": 48, "divid": 48, "_evaluator_help": 48, "_exp": 48, "exponenti": 48, "_max": 48, "_min": 48, "minimum": [48, 52], "_mult": 48, "multipli": 48, "_pow": 48, "pow": 48, "_propagate_valu": 48, "propag": [48, 52], "_propagator_help": 48, "_protect_nan": 48, "bound_typ": 48, "nan": 48, "infin": 48, "postit": 48, "_sub": 48, "subract": 48, "assign_bounds_need": 48, "breadth": 48, "search": 48, "decid": 48, "eventu": 48, "necessari": 48, "becaus": 48, "end": 48, "care": 48, "about": 48, "assign_delta": 48, "split": [48, 63], "among": 48, "create_from_ast": 48, "structur": 48, "mathemat": 48, "syntax": 48, "evaluate_constraint": 48, "itself": 48, "postord": 48, "logic": 48, "make_viz": 48, "titl": 48, "diagram": 48, "make_viz_help": 48, "edg": 48, "digraph": 48, "propagate_bound": 48, "reset_base_node_dict": 48, "reset_data": 48, "cach": 48, "less": 48, "frequent": 48, "relev": 52, "normalize_return": [52, 56], "min_return": 52, "max_return": 52, "candidate_solut": 52, "ttest": [52, 56, 57, 58], "loop": 52, "found": 52, "spec": [54, 62], "obect": 54, "model_class": [56, 57, 58], "frac_data_in_safeti": [56, 57, 58], "initial_solution_fn": [56, 57, 58], "rl_environment_obj": 56, "use_builtin_primary_gradient_fn": [56, 57, 58], "custom_primary_gradient_fn": [56, 57, 58], "adam": [56, 57, 58], "optimization_hyperparam": [56, 57, 58], "regularization_hyperparam": [56, 57, 58], "instanc": [56, 57, 58], "remain": [56, 57, 58], "exist": [56, 57, 58], "autograd": [56, 57, 58], "back": [56, 57, 58], "builtin": [56, 57, 58], "hyperparamet": [56, 57, 58], "regular": [56, 57, 58], "usable_opt_dict": [56, 57, 58], "show": [56, 57, 58], "accept": [56, 57, 58], "techniqu": [56, 57, 58], "let": 60, "exampl": [60, 61], "ai": [60, 63], "tutori": 60, "go": 60, "acquaint": 60, "mani": [60, 63], "most": 60, "piec": 60, "libari": 60, "tell": 60, "cli": 60, "look": 60, "document": 60, "cli_supervis": [60, 62], "argument": 60, "download": 60, "sourc": [60, 62], "code": [60, 62], "repositori": 60, "github": [60, 62], "other": [60, 61], "option": 60, "criteria": 61, "fair": 61, "user": [61, 63], "ensur": 61, "met": 61, "while": 61, "simultan": 61, "tbd": 61, "threshold": [61, 63], "often": [61, 63], "simpli": 61, "enforc": [61, 63], "interact": 61, "paradigm": 61, "adopt": 61, "reinforc": 61, "problem": [61, 63], "design": 61, "In": [61, 63], "against": 61, "should": 61, "discrimin": 61, "gender": 61, "race": 61, "common": 61, "sometim": [61, 63], "protect": 61, "pertain": 61, "sub": 61, "within": 61, "welcom": 62, "core": 62, "host": 62, "complet": [62, 63], "new": 62, "overview": 62, "api": [62, 63], "gridworld3x3": 62, "increment_count": 62, "fourierbasi": 62, "linear_softmax": 62, "candidate_select": 62, "candidateselect": 62, "datasetload": 62, "linearclassifiermodel": 62, "linearregressionmodel": 62, "linearsoftmaxmodel": 62, "logisticregressionmodel": 62, "sgdclassifiermodel": 62, "tabularsoftmaxmodel": 62, "gradient_descent_adam": 62, "constantnod": 62, "internalnod": 62, "medcustombasenod": 62, "safety_test": 62, "safetytest": 62, "seldonian_algorithm": 62, "rlspec": 62, "supervisedspec": 62, "run_interfac": 62, "instal": 62, "glossari": 62, "focu": 63, "sa": 63, "rather": 63, "descript": 63, "For": 63, "detail": 63, "umass": 63, "page": 63, "ml": 63, "valid": 63, "three": 63, "below": 63, "interpret": 63, "final": 63, "its": 63, "entireti": 63, "modifi": 63, "own": 63, "script": 63, "refer": 63, "explain": 63, "hyperparam": 63, "To": 64, "pip": 64, "venv": 64, "wide": 64}, "objects": {"": [[0, 0, 0, "-", "interface"], [3, 0, 0, "-", "seldonian"]], "interface": [[1, 0, 0, "-", "cli_supervised"]], "interface.cli_supervised": [[2, 1, 1, "", "run_interface"]], "seldonian": [[4, 0, 0, "-", "RL"], [16, 0, 0, "-", "candidate_selection"], [20, 0, 0, "-", "dataset"], [23, 0, 0, "-", "models"], [36, 0, 0, "-", "optimizers"], [39, 0, 0, "-", "parse_tree"], [49, 0, 0, "-", "safety_test"], [53, 0, 0, "-", "seldonian_algorithm"], [55, 0, 0, "-", "spec"]], "seldonian.RL": [[5, 0, 0, "-", "environments"]], "seldonian.RL.environments": [[6, 0, 0, "-", "gridworld3x3"], [8, 0, 0, "-", "mountaincar"]], "seldonian.RL.environments.gridworld3x3": [[7, 2, 1, "", "Environment"]], "seldonian.RL.environments.gridworld3x3.Environment": [[7, 3, 1, "", "__init__"], [7, 3, 1, "", "__repr__"], [7, 3, 1, "", "_arg"], [7, 3, 1, "", "_denom"], [7, 3, 1, "", "calc_J"], [7, 3, 1, "", "generate_data"], [7, 3, 1, "", "generate_episode"], [7, 3, 1, "", "generate_episodes_par"], [7, 3, 1, "", "pi"], [7, 3, 1, "", "reset"], [7, 3, 1, "", "take_step"]], "seldonian.RL.environments.mountaincar": [[9, 2, 1, "", "Basis"], [10, 2, 1, "", "Environment"], [11, 2, 1, "", "FourierBasis"], [12, 2, 1, "", "Linear_Softmax"], [13, 2, 1, "", "Mountaincar"], [14, 2, 1, "", "Policy"], [15, 1, 1, "", "increment_counter"]], "seldonian.RL.environments.mountaincar.Basis": [[9, 3, 1, "", "__init__"], [9, 3, 1, "", "__repr__"]], "seldonian.RL.environments.mountaincar.Environment": [[10, 3, 1, "", "R"], [10, 3, 1, "", "__init__"], [10, 3, 1, "", "__repr__"], [10, 3, 1, "", "calc_J_from_df"], [10, 3, 1, "", "generate_data"], [10, 3, 1, "", "nextState"], [10, 3, 1, "", "reset"], [10, 3, 1, "", "step"], [10, 3, 1, "", "terminal"]], "seldonian.RL.environments.mountaincar.FourierBasis": [[11, 3, 1, "", "__init__"], [11, 3, 1, "", "__repr__"]], "seldonian.RL.environments.mountaincar.Linear_Softmax": [[12, 3, 1, "", "__init__"], [12, 3, 1, "", "__repr__"], [12, 3, 1, "", "get_params"], [12, 3, 1, "", "set_params"]], "seldonian.RL.environments.mountaincar.Mountaincar": [[13, 3, 1, "", "R"], [13, 3, 1, "", "__init__"], [13, 3, 1, "", "__repr__"], [13, 3, 1, "", "nextState"], [13, 3, 1, "", "reset"], [13, 3, 1, "", "step"], [13, 3, 1, "", "terminal"]], "seldonian.RL.environments.mountaincar.Policy": [[14, 3, 1, "", "__init__"], [14, 3, 1, "", "__repr__"], [14, 3, 1, "", "get_params"], [14, 3, 1, "", "set_params"]], "seldonian.candidate_selection": [[18, 0, 0, "-", "candidate_selection"]], "seldonian.candidate_selection.candidate_selection": [[19, 2, 1, "", "CandidateSelection"]], "seldonian.candidate_selection.candidate_selection.CandidateSelection": [[19, 3, 1, "", "__init__"], [19, 3, 1, "", "__repr__"], [19, 3, 1, "", "evaluate_primary_objective"], [19, 3, 1, "", "get_constraint_upper_bound"], [19, 3, 1, "", "objective_with_barrier"], [19, 3, 1, "", "run"]], "seldonian.dataset": [[21, 2, 1, "", "DataSet"], [22, 2, 1, "", "DataSetLoader"]], "seldonian.dataset.DataSet": [[21, 3, 1, "", "__init__"], [21, 3, 1, "", "__repr__"]], "seldonian.dataset.DataSetLoader": [[22, 3, 1, "", "__init__"], [22, 3, 1, "", "__repr__"], [22, 3, 1, "", "from_csv"], [22, 3, 1, "", "from_pickle"]], "seldonian.models": [[24, 0, 0, "-", "model"]], "seldonian.models.model": [[25, 2, 1, "", "ClassificationModel"], [26, 2, 1, "", "LinearClassifierModel"], [27, 2, 1, "", "LinearRegressionModel"], [28, 2, 1, "", "LinearSoftmaxModel"], [29, 2, 1, "", "LogisticRegressionModel"], [30, 2, 1, "", "RLModel"], [31, 2, 1, "", "RegressionModel"], [32, 2, 1, "", "SGDClassifierModel"], [33, 2, 1, "", "SeldonianModel"], [34, 2, 1, "", "SupervisedModel"], [35, 2, 1, "", "TabularSoftmaxModel"]], "seldonian.models.model.ClassificationModel": [[25, 3, 1, "", "__init__"], [25, 3, 1, "", "__repr__"], [25, 3, 1, "", "accuracy"], [25, 3, 1, "", "evaluate_statistic"], [25, 3, 1, "", "fit"], [25, 3, 1, "", "gradient_sample_logistic_loss"], [25, 3, 1, "", "sample_False_Negative_Rate"], [25, 3, 1, "", "sample_False_Positive_Rate"], [25, 3, 1, "", "sample_Negative_Rate"], [25, 3, 1, "", "sample_Positive_Rate"], [25, 3, 1, "", "sample_from_statistic"], [25, 3, 1, "", "sample_logistic_loss"], [25, 3, 1, "", "sample_perceptron_loss"], [25, 3, 1, "", "vector_False_Negative_Rate"], [25, 3, 1, "", "vector_False_Positive_Rate"], [25, 3, 1, "", "vector_Negative_Rate"], [25, 3, 1, "", "vector_Positive_Rate"], [25, 3, 1, "", "vector_True_Negative_Rate"], [25, 3, 1, "", "vector_True_Positive_Rate"], [25, 3, 1, "", "vector_logistic_loss"]], "seldonian.models.model.LinearClassifierModel": [[26, 3, 1, "", "__init__"], [26, 3, 1, "", "__repr__"], [26, 3, 1, "", "accuracy"], [26, 3, 1, "", "default_objective"], [26, 3, 1, "", "evaluate_statistic"], [26, 3, 1, "", "fit"], [26, 3, 1, "", "gradient_sample_logistic_loss"], [26, 3, 1, "", "predict"], [26, 3, 1, "", "sample_False_Negative_Rate"], [26, 3, 1, "", "sample_False_Positive_Rate"], [26, 3, 1, "", "sample_Negative_Rate"], [26, 3, 1, "", "sample_Positive_Rate"], [26, 3, 1, "", "sample_from_statistic"], [26, 3, 1, "", "sample_logistic_loss"], [26, 3, 1, "", "sample_perceptron_loss"], [26, 3, 1, "", "vector_False_Negative_Rate"], [26, 3, 1, "", "vector_False_Positive_Rate"], [26, 3, 1, "", "vector_Negative_Rate"], [26, 3, 1, "", "vector_Positive_Rate"], [26, 3, 1, "", "vector_True_Negative_Rate"], [26, 3, 1, "", "vector_True_Positive_Rate"], [26, 3, 1, "", "vector_logistic_loss"]], "seldonian.models.model.LinearRegressionModel": [[27, 3, 1, "", "__init__"], [27, 3, 1, "", "__repr__"], [27, 3, 1, "", "default_objective"], [27, 3, 1, "", "evaluate_statistic"], [27, 3, 1, "", "fit"], [27, 3, 1, "", "predict"], [27, 3, 1, "", "sample_Mean_Error"], [27, 3, 1, "", "sample_Mean_Squared_Error"], [27, 3, 1, "", "sample_from_statistic"], [27, 3, 1, "", "vector_Mean_Error"], [27, 3, 1, "", "vector_Mean_Squared_Error"]], "seldonian.models.model.LinearSoftmaxModel": [[28, 3, 1, "", "IS_estimate"], [28, 3, 1, "", "__init__"], [28, 3, 1, "", "__repr__"], [28, 3, 1, "", "apply_policy"], [28, 3, 1, "", "default_objective"], [28, 3, 1, "", "evaluate_statistic"], [28, 3, 1, "", "get_p"], [28, 3, 1, "", "sample_IS_estimate"], [28, 3, 1, "", "sample_from_statistic"], [28, 3, 1, "", "vector_IS_estimate"]], "seldonian.models.model.LogisticRegressionModel": [[29, 3, 1, "", "__init__"], [29, 3, 1, "", "__repr__"], [29, 3, 1, "", "accuracy"], [29, 3, 1, "", "default_objective"], [29, 3, 1, "", "evaluate_statistic"], [29, 3, 1, "", "fit"], [29, 3, 1, "", "gradient_sample_logistic_loss"], [29, 3, 1, "", "predict"], [29, 3, 1, "", "sample_False_Negative_Rate"], [29, 3, 1, "", "sample_False_Positive_Rate"], [29, 3, 1, "", "sample_Negative_Rate"], [29, 3, 1, "", "sample_Positive_Rate"], [29, 3, 1, "", "sample_from_statistic"], [29, 3, 1, "", "sample_logistic_loss"], [29, 3, 1, "", "sample_perceptron_loss"], [29, 3, 1, "", "vector_False_Negative_Rate"], [29, 3, 1, "", "vector_False_Positive_Rate"], [29, 3, 1, "", "vector_Negative_Rate"], [29, 3, 1, "", "vector_Positive_Rate"], [29, 3, 1, "", "vector_True_Negative_Rate"], [29, 3, 1, "", "vector_True_Positive_Rate"], [29, 3, 1, "", "vector_logistic_loss"]], "seldonian.models.model.RLModel": [[30, 3, 1, "", "__init__"], [30, 3, 1, "", "__repr__"], [30, 3, 1, "", "evaluate_statistic"], [30, 3, 1, "", "sample_IS_estimate"], [30, 3, 1, "", "sample_from_statistic"], [30, 3, 1, "", "vector_IS_estimate"]], "seldonian.models.model.RegressionModel": [[31, 3, 1, "", "__init__"], [31, 3, 1, "", "__repr__"], [31, 3, 1, "", "evaluate_statistic"], [31, 3, 1, "", "fit"], [31, 3, 1, "", "sample_Mean_Error"], [31, 3, 1, "", "sample_Mean_Squared_Error"], [31, 3, 1, "", "sample_from_statistic"], [31, 3, 1, "", "vector_Mean_Error"], [31, 3, 1, "", "vector_Mean_Squared_Error"]], "seldonian.models.model.SGDClassifierModel": [[32, 3, 1, "", "__init__"], [32, 3, 1, "", "__repr__"], [32, 3, 1, "", "accuracy"], [32, 3, 1, "", "evaluate_statistic"], [32, 3, 1, "", "fit"], [32, 3, 1, "", "gradient_sample_logistic_loss"], [32, 3, 1, "", "predict"], [32, 3, 1, "", "sample_False_Negative_Rate"], [32, 3, 1, "", "sample_False_Positive_Rate"], [32, 3, 1, "", "sample_Negative_Rate"], [32, 3, 1, "", "sample_Positive_Rate"], [32, 3, 1, "", "sample_from_statistic"], [32, 3, 1, "", "sample_logistic_loss"], [32, 3, 1, "", "sample_perceptron_loss"], [32, 3, 1, "", "vector_False_Negative_Rate"], [32, 3, 1, "", "vector_False_Positive_Rate"], [32, 3, 1, "", "vector_Negative_Rate"], [32, 3, 1, "", "vector_Positive_Rate"], [32, 3, 1, "", "vector_True_Negative_Rate"], [32, 3, 1, "", "vector_True_Positive_Rate"], [32, 3, 1, "", "vector_logistic_loss"]], "seldonian.models.model.SeldonianModel": [[33, 3, 1, "", "__init__"], [33, 3, 1, "", "__repr__"]], "seldonian.models.model.SupervisedModel": [[34, 3, 1, "", "__init__"], [34, 3, 1, "", "__repr__"], [34, 3, 1, "", "fit"]], "seldonian.models.model.TabularSoftmaxModel": [[35, 3, 1, "", "__init__"], [35, 3, 1, "", "__repr__"], [35, 3, 1, "", "_arg"], [35, 3, 1, "", "_denom"], [35, 3, 1, "", "apply_policy"], [35, 3, 1, "", "default_objective"], [35, 3, 1, "", "evaluate_statistic"], [35, 3, 1, "", "sample_IS_estimate"], [35, 3, 1, "", "sample_from_statistic"], [35, 3, 1, "", "vector_IS_estimate"]], "seldonian.optimizers": [[37, 0, 0, "-", "gradient_descent"]], "seldonian.optimizers.gradient_descent": [[38, 1, 1, "", "gradient_descent_adam"]], "seldonian.parse_tree": [[40, 0, 0, "-", "nodes"], [46, 0, 0, "-", "operators"], [47, 0, 0, "-", "parse_tree"]], "seldonian.parse_tree.nodes": [[41, 2, 1, "", "BaseNode"], [42, 2, 1, "", "ConstantNode"], [43, 2, 1, "", "InternalNode"], [44, 2, 1, "", "MEDCustomBaseNode"], [45, 2, 1, "", "Node"]], "seldonian.parse_tree.nodes.BaseNode": [[41, 3, 1, "", "__init__"], [41, 3, 1, "", "__repr__"], [41, 3, 1, "", "calculate_bounds"], [41, 3, 1, "", "calculate_data_forbound"], [41, 3, 1, "", "calculate_value"], [41, 3, 1, "", "compute_HC_lowerbound"], [41, 3, 1, "", "compute_HC_upper_and_lowerbound"], [41, 3, 1, "", "compute_HC_upperbound"], [41, 3, 1, "", "mask_dataframe"], [41, 3, 1, "", "predict_HC_lowerbound"], [41, 3, 1, "", "predict_HC_upper_and_lowerbound"], [41, 3, 1, "", "predict_HC_upperbound"], [41, 3, 1, "", "zhat"]], "seldonian.parse_tree.nodes.ConstantNode": [[42, 3, 1, "", "__init__"], [42, 3, 1, "", "__repr__"]], "seldonian.parse_tree.nodes.InternalNode": [[43, 3, 1, "", "__init__"], [43, 3, 1, "", "__repr__"]], "seldonian.parse_tree.nodes.MEDCustomBaseNode": [[44, 3, 1, "", "__init__"], [44, 3, 1, "", "__repr__"], [44, 3, 1, "", "calculate_bounds"], [44, 3, 1, "", "calculate_data_forbound"], [44, 3, 1, "", "calculate_value"], [44, 3, 1, "", "compute_HC_lowerbound"], [44, 3, 1, "", "compute_HC_upper_and_lowerbound"], [44, 3, 1, "", "compute_HC_upperbound"], [44, 3, 1, "", "mask_dataframe"], [44, 3, 1, "", "precalculate_data"], [44, 3, 1, "", "predict_HC_lowerbound"], [44, 3, 1, "", "predict_HC_upper_and_lowerbound"], [44, 3, 1, "", "predict_HC_upperbound"], [44, 3, 1, "", "zhat"]], "seldonian.parse_tree.nodes.Node": [[45, 3, 1, "", "__init__"], [45, 3, 1, "", "__repr__"]], "seldonian.parse_tree.operators": [[46, 4, 1, "", "bounds_required_dict"], [46, 4, 1, "", "custom_base_node_dict"], [46, 4, 1, "", "measure_functions"], [46, 4, 1, "", "not_supported_op_mapper"], [46, 4, 1, "", "op_mapper"]], "seldonian.parse_tree.parse_tree": [[48, 2, 1, "", "ParseTree"]], "seldonian.parse_tree.parse_tree.ParseTree": [[48, 3, 1, "", "__init__"], [48, 3, 1, "", "__repr__"], [48, 3, 1, "", "_abs"], [48, 3, 1, "", "_add"], [48, 3, 1, "", "_assign_bounds_helper"], [48, 3, 1, "", "_assign_deltas_helper"], [48, 3, 1, "", "_ast2pt_node"], [48, 3, 1, "", "_ast_tree_helper"], [48, 3, 1, "", "_div"], [48, 3, 1, "", "_evaluator_helper"], [48, 3, 1, "", "_exp"], [48, 3, 1, "", "_max"], [48, 3, 1, "", "_min"], [48, 3, 1, "", "_mult"], [48, 3, 1, "", "_pow"], [48, 3, 1, "", "_propagate_value"], [48, 3, 1, "", "_propagator_helper"], [48, 3, 1, "", "_protect_nan"], [48, 3, 1, "", "_sub"], [48, 3, 1, "", "assign_bounds_needed"], [48, 3, 1, "", "assign_deltas"], [48, 3, 1, "", "create_from_ast"], [48, 3, 1, "", "evaluate_constraint"], [48, 3, 1, "", "make_viz"], [48, 3, 1, "", "make_viz_helper"], [48, 3, 1, "", "propagate"], [48, 3, 1, "", "propagate_bounds"], [48, 3, 1, "", "reset_base_node_dict"]], "seldonian.safety_test": [[51, 0, 0, "-", "safety_test"]], "seldonian.safety_test.safety_test": [[52, 2, 1, "", "SafetyTest"]], "seldonian.safety_test.safety_test.SafetyTest": [[52, 3, 1, "", "__init__"], [52, 3, 1, "", "__repr__"], [52, 3, 1, "", "run"]], "seldonian.seldonian_algorithm": [[54, 1, 1, "", "seldonian_algorithm"]], "seldonian.spec": [[56, 2, 1, "", "RLSpec"], [57, 2, 1, "", "Spec"], [58, 2, 1, "", "SupervisedSpec"]], "seldonian.spec.RLSpec": [[56, 3, 1, "", "__init__"], [56, 3, 1, "", "__repr__"]], "seldonian.spec.Spec": [[57, 3, 1, "", "__init__"], [57, 3, 1, "", "__repr__"]], "seldonian.spec.SupervisedSpec": [[58, 3, 1, "", "__init__"], [58, 3, 1, "", "__repr__"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "data", "Python data"]}, "titleterms": {"interfac": [0, 1, 2, 63], "cli_supervis": [1, 2], "run_interfac": 2, "seldonian": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 62], "rl": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "environ": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "gridworld3x3": [6, 7], "mountaincar": [8, 9, 10, 11, 12, 13, 14, 15], "basi": 9, "fourierbasi": 11, "linear_softmax": 12, "polici": 14, "increment_count": 15, "candidate_select": [16, 17, 18, 19], "candidateselect": [17, 19], "dataset": [20, 21, 22, 63], "datasetload": 22, "model": [23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35], "classificationmodel": 25, "linearclassifiermodel": 26, "linearregressionmodel": 27, "linearsoftmaxmodel": 28, "logisticregressionmodel": 29, "rlmodel": 30, "regressionmodel": 31, "sgdclassifiermodel": 32, "seldonianmodel": 33, "supervisedmodel": 34, "tabularsoftmaxmodel": 35, "optim": [36, 37, 38], "gradient_desc": [37, 38], "gradient_descent_adam": 38, "parse_tre": [39, 40, 41, 42, 43, 44, 45, 46, 47, 48], "node": [40, 41, 42, 43, 44, 45], "basenod": 41, "constantnod": 42, "internalnod": 43, "medcustombasenod": 44, "oper": 46, "parsetre": 48, "safety_test": [49, 50, 51, 52], "safetytest": [50, 52], "seldonian_algorithm": [53, 54], "spec": [55, 56, 57, 58, 63], "rlspec": 56, "supervisedspec": 58, "api": 59, "get": 60, "start": 60, "glossari": 61, "engin": 62, "document": 62, "tabl": 62, "content": 62, "overview": 63, "pars": 63, "tree": 63, "specif": 63, "object": 63, "candid": 63, "select": 63, "usag": 64, "instal": 64}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 56}})