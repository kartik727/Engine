Search.setIndex({"docnames": ["_autosummary/seldonian", "_autosummary/seldonian.RL", "_autosummary/seldonian.RL.Agents", "_autosummary/seldonian.RL.Agents.Agent", "_autosummary/seldonian.RL.Agents.Agent.Agent", "_autosummary/seldonian.RL.Agents.Bases", "_autosummary/seldonian.RL.Agents.Bases.Fourier", "_autosummary/seldonian.RL.Agents.Bases.Fourier.Fourier", "_autosummary/seldonian.RL.Agents.Discrete_Random_Agent", "_autosummary/seldonian.RL.Agents.Discrete_Random_Agent.Discrete_Random_Agent", "_autosummary/seldonian.RL.Agents.Function_Approximators", "_autosummary/seldonian.RL.Agents.Function_Approximators.Function_Approximator", "_autosummary/seldonian.RL.Agents.Function_Approximators.Function_Approximator.Function_Approximator", "_autosummary/seldonian.RL.Agents.Function_Approximators.Linear_FA", "_autosummary/seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_FA", "_autosummary/seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_state_action_value_FA", "_autosummary/seldonian.RL.Agents.Function_Approximators.Table", "_autosummary/seldonian.RL.Agents.Function_Approximators.Table.Q_Table", "_autosummary/seldonian.RL.Agents.Function_Approximators.Table.Table", "_autosummary/seldonian.RL.Agents.Function_Approximators.Table.construct_Q_Table_From_Env_Description", "_autosummary/seldonian.RL.Agents.Parameterized_non_learning_softmax_agent", "_autosummary/seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.Parameterized_non_learning_softmax_agent", "_autosummary/seldonian.RL.Agents.Policies", "_autosummary/seldonian.RL.Agents.Policies.Policy", "_autosummary/seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy", "_autosummary/seldonian.RL.Agents.Policies.Policy.Policy", "_autosummary/seldonian.RL.Agents.Policies.Softmax", "_autosummary/seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax", "_autosummary/seldonian.RL.Agents.Policies.Softmax.Softmax", "_autosummary/seldonian.RL.Agents.keyboard_gridworld", "_autosummary/seldonian.RL.Agents.keyboard_gridworld.Keyboard_gridworld", "_autosummary/seldonian.RL.Agents.mountain_car_rough_solution", "_autosummary/seldonian.RL.Agents.mountain_car_rough_solution.Mountain_car_rough_solution", "_autosummary/seldonian.RL.Env_Description", "_autosummary/seldonian.RL.Env_Description.Env_Description", "_autosummary/seldonian.RL.Env_Description.Env_Description.Env_Description", "_autosummary/seldonian.RL.Env_Description.Env_Description.check_space_type", "_autosummary/seldonian.RL.Env_Description.Spaces", "_autosummary/seldonian.RL.Env_Description.Spaces.Continuous_Space", "_autosummary/seldonian.RL.Env_Description.Spaces.Discrete_Space", "_autosummary/seldonian.RL.RL_generate_dataset_and_spec_file", "_autosummary/seldonian.RL.RL_generate_dataset_and_spec_file.get_constraint_string", "_autosummary/seldonian.RL.RL_generate_dataset_and_spec_file.get_env_kwargs", "_autosummary/seldonian.RL.RL_generate_dataset_and_spec_file.get_metadata_path", "_autosummary/seldonian.RL.RL_generate_dataset_and_spec_file.main", "_autosummary/seldonian.RL.RL_generate_dataset_and_spec_file.print_return_info", "_autosummary/seldonian.RL.RL_model", "_autosummary/seldonian.RL.RL_model.RL_model", "_autosummary/seldonian.RL.RL_runner", "_autosummary/seldonian.RL.RL_runner.create_agent", "_autosummary/seldonian.RL.RL_runner.run_all_trials", "_autosummary/seldonian.RL.RL_runner.run_episode", "_autosummary/seldonian.RL.RL_runner.run_episode_from_dict", "_autosummary/seldonian.RL.RL_runner.run_trial", "_autosummary/seldonian.RL.RL_runner.run_trial_given_agent_and_env", "_autosummary/seldonian.RL.environments", "_autosummary/seldonian.RL.environments.Environment", "_autosummary/seldonian.RL.environments.Environment.Environment", "_autosummary/seldonian.RL.environments.gridworld", "_autosummary/seldonian.RL.environments.gridworld.Gridworld", "_autosummary/seldonian.RL.environments.mountaincar", "_autosummary/seldonian.RL.environments.mountaincar.Mountaincar", "_autosummary/seldonian.RL.environments.n_step_mountaincar", "_autosummary/seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar", "_autosummary/seldonian.RL.environments.simglucose_env", "_autosummary/seldonian.RL.environments.simglucose_env.Simglucose", "_autosummary/seldonian.RL.generate_gridworld_episodes", "_autosummary/seldonian.RL.generate_gridworld_episodes.main", "_autosummary/seldonian.RL.generate_mountaincar_episodes", "_autosummary/seldonian.RL.generate_mountaincar_episodes.main", "_autosummary/seldonian.RL.generate_simglucose_episodes", "_autosummary/seldonian.RL.generate_simglucose_episodes.get_max_obs", "_autosummary/seldonian.RL.generate_simglucose_episodes.main", "_autosummary/seldonian.RL.hyperparams_and_settings", "_autosummary/seldonian.RL.hyperparams_and_settings.define_hyperparameter_and_setting_dict", "_autosummary/seldonian.candidate_selection", "_autosummary/seldonian.candidate_selection.candidate_selection", "_autosummary/seldonian.candidate_selection.candidate_selection.CandidateSelection", "_autosummary/seldonian.dataset", "_autosummary/seldonian.dataset.DataSet", "_autosummary/seldonian.dataset.DataSetLoader", "_autosummary/seldonian.dataset.Episode", "_autosummary/seldonian.dataset.RLDataSet", "_autosummary/seldonian.dataset.SupervisedDataSet", "_autosummary/seldonian.dataset.load_supervised_metadata", "_autosummary/seldonian.models", "_autosummary/seldonian.models.models", "_autosummary/seldonian.models.models.BaseLogisticRegressionModel", "_autosummary/seldonian.models.models.BinaryLogisticRegressionModel", "_autosummary/seldonian.models.models.BoundedLinearRegressionModel", "_autosummary/seldonian.models.models.ClassificationModel", "_autosummary/seldonian.models.models.DummyClassifierModel", "_autosummary/seldonian.models.models.LinearRegressionModel", "_autosummary/seldonian.models.models.LinearRegressionModelListFeatures", "_autosummary/seldonian.models.models.MultiClassLogisticRegressionModel", "_autosummary/seldonian.models.models.RandomClassifierModel", "_autosummary/seldonian.models.models.RegressionModel", "_autosummary/seldonian.models.models.SeldonianModel", "_autosummary/seldonian.models.models.SupervisedModel", "_autosummary/seldonian.models.objectives", "_autosummary/seldonian.models.objectives.Accuracy", "_autosummary/seldonian.models.objectives.False_Negative_Rate", "_autosummary/seldonian.models.objectives.False_Positive_Rate", "_autosummary/seldonian.models.objectives.IS_estimate", "_autosummary/seldonian.models.objectives.Mean_Error", "_autosummary/seldonian.models.objectives.Mean_Squared_Error", "_autosummary/seldonian.models.objectives.Negative_Rate", "_autosummary/seldonian.models.objectives.Positive_Rate", "_autosummary/seldonian.models.objectives.True_Negative_Rate", "_autosummary/seldonian.models.objectives.True_Positive_Rate", "_autosummary/seldonian.models.objectives.batcher", "_autosummary/seldonian.models.objectives.binary_logistic_loss", "_autosummary/seldonian.models.objectives.confusion_matrix", "_autosummary/seldonian.models.objectives.evaluate_statistic", "_autosummary/seldonian.models.objectives.gradient_Bounded_Squared_Error", "_autosummary/seldonian.models.objectives.gradient_Mean_Squared_Error", "_autosummary/seldonian.models.objectives.gradient_binary_logistic_loss", "_autosummary/seldonian.models.objectives.multiclass_logistic_loss", "_autosummary/seldonian.models.objectives.sample_from_statistic", "_autosummary/seldonian.models.objectives.vector_Accuracy", "_autosummary/seldonian.models.objectives.vector_Error", "_autosummary/seldonian.models.objectives.vector_False_Negative_Rate", "_autosummary/seldonian.models.objectives.vector_False_Positive_Rate", "_autosummary/seldonian.models.objectives.vector_IS_estimate", "_autosummary/seldonian.models.objectives.vector_Negative_Rate", "_autosummary/seldonian.models.objectives.vector_Positive_Rate", "_autosummary/seldonian.models.objectives.vector_Squared_Error", "_autosummary/seldonian.models.objectives.vector_True_Negative_Rate", "_autosummary/seldonian.models.objectives.vector_True_Positive_Rate", "_autosummary/seldonian.models.objectives.vector_confusion_matrix", "_autosummary/seldonian.models.pytorch_cnn", "_autosummary/seldonian.models.pytorch_cnn.PytorchCNN", "_autosummary/seldonian.models.pytorch_model", "_autosummary/seldonian.models.pytorch_model.SupervisedPytorchBaseModel", "_autosummary/seldonian.models.pytorch_model.pytorch_predict_vjp", "_autosummary/seldonian.optimizers", "_autosummary/seldonian.optimizers.gradient_descent", "_autosummary/seldonian.optimizers.gradient_descent.gradient_descent_adam", "_autosummary/seldonian.optimizers.gradient_descent.setup_gradients", "_autosummary/seldonian.parse_tree", "_autosummary/seldonian.parse_tree.nodes", "_autosummary/seldonian.parse_tree.nodes.BaseNode", "_autosummary/seldonian.parse_tree.nodes.CVaRSQeBaseNode", "_autosummary/seldonian.parse_tree.nodes.ConfusionMatrixBaseNode", "_autosummary/seldonian.parse_tree.nodes.ConstantNode", "_autosummary/seldonian.parse_tree.nodes.InternalNode", "_autosummary/seldonian.parse_tree.nodes.MEDCustomBaseNode", "_autosummary/seldonian.parse_tree.nodes.MultiClassBaseNode", "_autosummary/seldonian.parse_tree.nodes.Node", "_autosummary/seldonian.parse_tree.operators", "_autosummary/seldonian.parse_tree.parse_tree", "_autosummary/seldonian.parse_tree.parse_tree.ParseTree", "_autosummary/seldonian.parse_tree.parse_tree.make_parse_trees_from_constraints", "_autosummary/seldonian.safety_test", "_autosummary/seldonian.safety_test.safety_test", "_autosummary/seldonian.safety_test.safety_test.SafetyTest", "_autosummary/seldonian.seldonian_algorithm", "_autosummary/seldonian.seldonian_algorithm.SeldonianAlgorithm", "_autosummary/seldonian.spec", "_autosummary/seldonian.spec.RLSpec", "_autosummary/seldonian.spec.Spec", "_autosummary/seldonian.spec.SupervisedSpec", "_autosummary/seldonian.spec.createRLSpec", "_autosummary/seldonian.spec.createSupervisedSpec", "_autosummary/seldonian.spec.validate_parse_trees", "_autosummary/seldonian.utils", "_autosummary/seldonian.utils.RL_utils", "_autosummary/seldonian.utils.RL_utils.argmax_multi", "_autosummary/seldonian.utils.RL_utils.clamp", "_autosummary/seldonian.utils.RL_utils.error", "_autosummary/seldonian.utils.io_utils", "_autosummary/seldonian.utils.io_utils.dir_path", "_autosummary/seldonian.utils.io_utils.load_json", "_autosummary/seldonian.utils.io_utils.load_pickle", "_autosummary/seldonian.utils.io_utils.save_json", "_autosummary/seldonian.utils.io_utils.save_pickle", "_autosummary/seldonian.utils.plot_utils", "_autosummary/seldonian.utils.plot_utils.plot_gradient_descent", "_autosummary/seldonian.utils.stats_utils", "_autosummary/seldonian.utils.stats_utils.softmax", "_autosummary/seldonian.utils.stats_utils.stddev", "_autosummary/seldonian.utils.stats_utils.tinv", "_autosummary/seldonian.utils.stats_utils.weighted_sum_gamma", "_autosummary/seldonian.utils.tutorial_utils", "_autosummary/seldonian.utils.tutorial_utils.generate_clipped_data", "_autosummary/seldonian.utils.tutorial_utils.generate_data", "_autosummary/seldonian.utils.tutorial_utils.make_synthetic_regression_dataset", "_autosummary/seldonian.warnings", "_autosummary/seldonian.warnings.custom_warnings", "_autosummary/seldonian.warnings.custom_warnings.custom_formatwarning", "api", "getting_started", "index", "overview"], "filenames": ["_autosummary/seldonian.rst", "_autosummary/seldonian.RL.rst", "_autosummary/seldonian.RL.Agents.rst", "_autosummary/seldonian.RL.Agents.Agent.rst", "_autosummary/seldonian.RL.Agents.Agent.Agent.rst", "_autosummary/seldonian.RL.Agents.Bases.rst", "_autosummary/seldonian.RL.Agents.Bases.Fourier.rst", "_autosummary/seldonian.RL.Agents.Bases.Fourier.Fourier.rst", "_autosummary/seldonian.RL.Agents.Discrete_Random_Agent.rst", "_autosummary/seldonian.RL.Agents.Discrete_Random_Agent.Discrete_Random_Agent.rst", "_autosummary/seldonian.RL.Agents.Function_Approximators.rst", "_autosummary/seldonian.RL.Agents.Function_Approximators.Function_Approximator.rst", "_autosummary/seldonian.RL.Agents.Function_Approximators.Function_Approximator.Function_Approximator.rst", "_autosummary/seldonian.RL.Agents.Function_Approximators.Linear_FA.rst", "_autosummary/seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_FA.rst", "_autosummary/seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_state_action_value_FA.rst", "_autosummary/seldonian.RL.Agents.Function_Approximators.Table.rst", "_autosummary/seldonian.RL.Agents.Function_Approximators.Table.Q_Table.rst", "_autosummary/seldonian.RL.Agents.Function_Approximators.Table.Table.rst", "_autosummary/seldonian.RL.Agents.Function_Approximators.Table.construct_Q_Table_From_Env_Description.rst", "_autosummary/seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.rst", "_autosummary/seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.Parameterized_non_learning_softmax_agent.rst", "_autosummary/seldonian.RL.Agents.Policies.rst", "_autosummary/seldonian.RL.Agents.Policies.Policy.rst", "_autosummary/seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy.rst", "_autosummary/seldonian.RL.Agents.Policies.Policy.Policy.rst", "_autosummary/seldonian.RL.Agents.Policies.Softmax.rst", "_autosummary/seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax.rst", "_autosummary/seldonian.RL.Agents.Policies.Softmax.Softmax.rst", "_autosummary/seldonian.RL.Agents.keyboard_gridworld.rst", "_autosummary/seldonian.RL.Agents.keyboard_gridworld.Keyboard_gridworld.rst", "_autosummary/seldonian.RL.Agents.mountain_car_rough_solution.rst", "_autosummary/seldonian.RL.Agents.mountain_car_rough_solution.Mountain_car_rough_solution.rst", "_autosummary/seldonian.RL.Env_Description.rst", "_autosummary/seldonian.RL.Env_Description.Env_Description.rst", "_autosummary/seldonian.RL.Env_Description.Env_Description.Env_Description.rst", "_autosummary/seldonian.RL.Env_Description.Env_Description.check_space_type.rst", "_autosummary/seldonian.RL.Env_Description.Spaces.rst", "_autosummary/seldonian.RL.Env_Description.Spaces.Continuous_Space.rst", "_autosummary/seldonian.RL.Env_Description.Spaces.Discrete_Space.rst", "_autosummary/seldonian.RL.RL_generate_dataset_and_spec_file.rst", "_autosummary/seldonian.RL.RL_generate_dataset_and_spec_file.get_constraint_string.rst", "_autosummary/seldonian.RL.RL_generate_dataset_and_spec_file.get_env_kwargs.rst", "_autosummary/seldonian.RL.RL_generate_dataset_and_spec_file.get_metadata_path.rst", "_autosummary/seldonian.RL.RL_generate_dataset_and_spec_file.main.rst", "_autosummary/seldonian.RL.RL_generate_dataset_and_spec_file.print_return_info.rst", "_autosummary/seldonian.RL.RL_model.rst", "_autosummary/seldonian.RL.RL_model.RL_model.rst", "_autosummary/seldonian.RL.RL_runner.rst", "_autosummary/seldonian.RL.RL_runner.create_agent.rst", "_autosummary/seldonian.RL.RL_runner.run_all_trials.rst", "_autosummary/seldonian.RL.RL_runner.run_episode.rst", "_autosummary/seldonian.RL.RL_runner.run_episode_from_dict.rst", "_autosummary/seldonian.RL.RL_runner.run_trial.rst", "_autosummary/seldonian.RL.RL_runner.run_trial_given_agent_and_env.rst", "_autosummary/seldonian.RL.environments.rst", "_autosummary/seldonian.RL.environments.Environment.rst", "_autosummary/seldonian.RL.environments.Environment.Environment.rst", "_autosummary/seldonian.RL.environments.gridworld.rst", "_autosummary/seldonian.RL.environments.gridworld.Gridworld.rst", "_autosummary/seldonian.RL.environments.mountaincar.rst", "_autosummary/seldonian.RL.environments.mountaincar.Mountaincar.rst", "_autosummary/seldonian.RL.environments.n_step_mountaincar.rst", "_autosummary/seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar.rst", "_autosummary/seldonian.RL.environments.simglucose_env.rst", "_autosummary/seldonian.RL.environments.simglucose_env.Simglucose.rst", "_autosummary/seldonian.RL.generate_gridworld_episodes.rst", "_autosummary/seldonian.RL.generate_gridworld_episodes.main.rst", "_autosummary/seldonian.RL.generate_mountaincar_episodes.rst", "_autosummary/seldonian.RL.generate_mountaincar_episodes.main.rst", "_autosummary/seldonian.RL.generate_simglucose_episodes.rst", "_autosummary/seldonian.RL.generate_simglucose_episodes.get_max_obs.rst", "_autosummary/seldonian.RL.generate_simglucose_episodes.main.rst", "_autosummary/seldonian.RL.hyperparams_and_settings.rst", "_autosummary/seldonian.RL.hyperparams_and_settings.define_hyperparameter_and_setting_dict.rst", "_autosummary/seldonian.candidate_selection.rst", "_autosummary/seldonian.candidate_selection.candidate_selection.rst", "_autosummary/seldonian.candidate_selection.candidate_selection.CandidateSelection.rst", "_autosummary/seldonian.dataset.rst", "_autosummary/seldonian.dataset.DataSet.rst", "_autosummary/seldonian.dataset.DataSetLoader.rst", "_autosummary/seldonian.dataset.Episode.rst", "_autosummary/seldonian.dataset.RLDataSet.rst", "_autosummary/seldonian.dataset.SupervisedDataSet.rst", "_autosummary/seldonian.dataset.load_supervised_metadata.rst", "_autosummary/seldonian.models.rst", "_autosummary/seldonian.models.models.rst", "_autosummary/seldonian.models.models.BaseLogisticRegressionModel.rst", "_autosummary/seldonian.models.models.BinaryLogisticRegressionModel.rst", "_autosummary/seldonian.models.models.BoundedLinearRegressionModel.rst", "_autosummary/seldonian.models.models.ClassificationModel.rst", "_autosummary/seldonian.models.models.DummyClassifierModel.rst", "_autosummary/seldonian.models.models.LinearRegressionModel.rst", "_autosummary/seldonian.models.models.LinearRegressionModelListFeatures.rst", "_autosummary/seldonian.models.models.MultiClassLogisticRegressionModel.rst", "_autosummary/seldonian.models.models.RandomClassifierModel.rst", "_autosummary/seldonian.models.models.RegressionModel.rst", "_autosummary/seldonian.models.models.SeldonianModel.rst", "_autosummary/seldonian.models.models.SupervisedModel.rst", "_autosummary/seldonian.models.objectives.rst", "_autosummary/seldonian.models.objectives.Accuracy.rst", "_autosummary/seldonian.models.objectives.False_Negative_Rate.rst", "_autosummary/seldonian.models.objectives.False_Positive_Rate.rst", "_autosummary/seldonian.models.objectives.IS_estimate.rst", "_autosummary/seldonian.models.objectives.Mean_Error.rst", "_autosummary/seldonian.models.objectives.Mean_Squared_Error.rst", "_autosummary/seldonian.models.objectives.Negative_Rate.rst", "_autosummary/seldonian.models.objectives.Positive_Rate.rst", "_autosummary/seldonian.models.objectives.True_Negative_Rate.rst", "_autosummary/seldonian.models.objectives.True_Positive_Rate.rst", "_autosummary/seldonian.models.objectives.batcher.rst", "_autosummary/seldonian.models.objectives.binary_logistic_loss.rst", "_autosummary/seldonian.models.objectives.confusion_matrix.rst", "_autosummary/seldonian.models.objectives.evaluate_statistic.rst", "_autosummary/seldonian.models.objectives.gradient_Bounded_Squared_Error.rst", "_autosummary/seldonian.models.objectives.gradient_Mean_Squared_Error.rst", "_autosummary/seldonian.models.objectives.gradient_binary_logistic_loss.rst", "_autosummary/seldonian.models.objectives.multiclass_logistic_loss.rst", "_autosummary/seldonian.models.objectives.sample_from_statistic.rst", "_autosummary/seldonian.models.objectives.vector_Accuracy.rst", "_autosummary/seldonian.models.objectives.vector_Error.rst", "_autosummary/seldonian.models.objectives.vector_False_Negative_Rate.rst", "_autosummary/seldonian.models.objectives.vector_False_Positive_Rate.rst", "_autosummary/seldonian.models.objectives.vector_IS_estimate.rst", "_autosummary/seldonian.models.objectives.vector_Negative_Rate.rst", "_autosummary/seldonian.models.objectives.vector_Positive_Rate.rst", "_autosummary/seldonian.models.objectives.vector_Squared_Error.rst", "_autosummary/seldonian.models.objectives.vector_True_Negative_Rate.rst", "_autosummary/seldonian.models.objectives.vector_True_Positive_Rate.rst", "_autosummary/seldonian.models.objectives.vector_confusion_matrix.rst", "_autosummary/seldonian.models.pytorch_cnn.rst", "_autosummary/seldonian.models.pytorch_cnn.PytorchCNN.rst", "_autosummary/seldonian.models.pytorch_model.rst", "_autosummary/seldonian.models.pytorch_model.SupervisedPytorchBaseModel.rst", "_autosummary/seldonian.models.pytorch_model.pytorch_predict_vjp.rst", "_autosummary/seldonian.optimizers.rst", "_autosummary/seldonian.optimizers.gradient_descent.rst", "_autosummary/seldonian.optimizers.gradient_descent.gradient_descent_adam.rst", "_autosummary/seldonian.optimizers.gradient_descent.setup_gradients.rst", "_autosummary/seldonian.parse_tree.rst", "_autosummary/seldonian.parse_tree.nodes.rst", "_autosummary/seldonian.parse_tree.nodes.BaseNode.rst", "_autosummary/seldonian.parse_tree.nodes.CVaRSQeBaseNode.rst", "_autosummary/seldonian.parse_tree.nodes.ConfusionMatrixBaseNode.rst", "_autosummary/seldonian.parse_tree.nodes.ConstantNode.rst", "_autosummary/seldonian.parse_tree.nodes.InternalNode.rst", "_autosummary/seldonian.parse_tree.nodes.MEDCustomBaseNode.rst", "_autosummary/seldonian.parse_tree.nodes.MultiClassBaseNode.rst", "_autosummary/seldonian.parse_tree.nodes.Node.rst", "_autosummary/seldonian.parse_tree.operators.rst", "_autosummary/seldonian.parse_tree.parse_tree.rst", "_autosummary/seldonian.parse_tree.parse_tree.ParseTree.rst", "_autosummary/seldonian.parse_tree.parse_tree.make_parse_trees_from_constraints.rst", "_autosummary/seldonian.safety_test.rst", "_autosummary/seldonian.safety_test.safety_test.rst", "_autosummary/seldonian.safety_test.safety_test.SafetyTest.rst", "_autosummary/seldonian.seldonian_algorithm.rst", "_autosummary/seldonian.seldonian_algorithm.SeldonianAlgorithm.rst", "_autosummary/seldonian.spec.rst", "_autosummary/seldonian.spec.RLSpec.rst", "_autosummary/seldonian.spec.Spec.rst", "_autosummary/seldonian.spec.SupervisedSpec.rst", "_autosummary/seldonian.spec.createRLSpec.rst", "_autosummary/seldonian.spec.createSupervisedSpec.rst", "_autosummary/seldonian.spec.validate_parse_trees.rst", "_autosummary/seldonian.utils.rst", "_autosummary/seldonian.utils.RL_utils.rst", "_autosummary/seldonian.utils.RL_utils.argmax_multi.rst", "_autosummary/seldonian.utils.RL_utils.clamp.rst", "_autosummary/seldonian.utils.RL_utils.error.rst", "_autosummary/seldonian.utils.io_utils.rst", "_autosummary/seldonian.utils.io_utils.dir_path.rst", "_autosummary/seldonian.utils.io_utils.load_json.rst", "_autosummary/seldonian.utils.io_utils.load_pickle.rst", "_autosummary/seldonian.utils.io_utils.save_json.rst", "_autosummary/seldonian.utils.io_utils.save_pickle.rst", "_autosummary/seldonian.utils.plot_utils.rst", "_autosummary/seldonian.utils.plot_utils.plot_gradient_descent.rst", "_autosummary/seldonian.utils.stats_utils.rst", "_autosummary/seldonian.utils.stats_utils.softmax.rst", "_autosummary/seldonian.utils.stats_utils.stddev.rst", "_autosummary/seldonian.utils.stats_utils.tinv.rst", "_autosummary/seldonian.utils.stats_utils.weighted_sum_gamma.rst", "_autosummary/seldonian.utils.tutorial_utils.rst", "_autosummary/seldonian.utils.tutorial_utils.generate_clipped_data.rst", "_autosummary/seldonian.utils.tutorial_utils.generate_data.rst", "_autosummary/seldonian.utils.tutorial_utils.make_synthetic_regression_dataset.rst", "_autosummary/seldonian.warnings.rst", "_autosummary/seldonian.warnings.custom_warnings.rst", "_autosummary/seldonian.warnings.custom_warnings.custom_formatwarning.rst", "api.rst", "getting_started.rst", "index.rst", "overview.rst"], "titles": ["seldonian", "seldonian.RL", "seldonian.RL.Agents", "seldonian.RL.Agents.Agent", "seldonian.RL.Agents.Agent.Agent", "seldonian.RL.Agents.Bases", "seldonian.RL.Agents.Bases.Fourier", "seldonian.RL.Agents.Bases.Fourier.Fourier", "seldonian.RL.Agents.Discrete_Random_Agent", "seldonian.RL.Agents.Discrete_Random_Agent.Discrete_Random_Agent", "seldonian.RL.Agents.Function_Approximators", "seldonian.RL.Agents.Function_Approximators.Function_Approximator", "seldonian.RL.Agents.Function_Approximators.Function_Approximator.Function_Approximator", "seldonian.RL.Agents.Function_Approximators.Linear_FA", "seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_FA", "seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_state_action_value_FA", "seldonian.RL.Agents.Function_Approximators.Table", "seldonian.RL.Agents.Function_Approximators.Table.Q_Table", "seldonian.RL.Agents.Function_Approximators.Table.Table", "seldonian.RL.Agents.Function_Approximators.Table.construct_Q_Table_From_Env_Description", "seldonian.RL.Agents.Parameterized_non_learning_softmax_agent", "seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.Parameterized_non_learning_softmax_agent", "seldonian.RL.Agents.Policies", "seldonian.RL.Agents.Policies.Policy", "seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy", "seldonian.RL.Agents.Policies.Policy.Policy", "seldonian.RL.Agents.Policies.Softmax", "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax", "seldonian.RL.Agents.Policies.Softmax.Softmax", "seldonian.RL.Agents.keyboard_gridworld", "seldonian.RL.Agents.keyboard_gridworld.Keyboard_gridworld", "seldonian.RL.Agents.mountain_car_rough_solution", "seldonian.RL.Agents.mountain_car_rough_solution.Mountain_car_rough_solution", "seldonian.RL.Env_Description", "seldonian.RL.Env_Description.Env_Description", "seldonian.RL.Env_Description.Env_Description.Env_Description", "seldonian.RL.Env_Description.Env_Description.check_space_type", "seldonian.RL.Env_Description.Spaces", "seldonian.RL.Env_Description.Spaces.Continuous_Space", "seldonian.RL.Env_Description.Spaces.Discrete_Space", "seldonian.RL.RL_generate_dataset_and_spec_file", "seldonian.RL.RL_generate_dataset_and_spec_file.get_constraint_string", "seldonian.RL.RL_generate_dataset_and_spec_file.get_env_kwargs", "seldonian.RL.RL_generate_dataset_and_spec_file.get_metadata_path", "seldonian.RL.RL_generate_dataset_and_spec_file.main", "seldonian.RL.RL_generate_dataset_and_spec_file.print_return_info", "seldonian.RL.RL_model", "seldonian.RL.RL_model.RL_model", "seldonian.RL.RL_runner", "seldonian.RL.RL_runner.create_agent", "seldonian.RL.RL_runner.run_all_trials", "seldonian.RL.RL_runner.run_episode", "seldonian.RL.RL_runner.run_episode_from_dict", "seldonian.RL.RL_runner.run_trial", "seldonian.RL.RL_runner.run_trial_given_agent_and_env", "seldonian.RL.environments", "seldonian.RL.environments.Environment", "seldonian.RL.environments.Environment.Environment", "seldonian.RL.environments.gridworld", "seldonian.RL.environments.gridworld.Gridworld", "seldonian.RL.environments.mountaincar", "seldonian.RL.environments.mountaincar.Mountaincar", "seldonian.RL.environments.n_step_mountaincar", "seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar", "seldonian.RL.environments.simglucose_env", "seldonian.RL.environments.simglucose_env.Simglucose", "seldonian.RL.generate_gridworld_episodes", "seldonian.RL.generate_gridworld_episodes.main", "seldonian.RL.generate_mountaincar_episodes", "seldonian.RL.generate_mountaincar_episodes.main", "seldonian.RL.generate_simglucose_episodes", "seldonian.RL.generate_simglucose_episodes.get_max_obs", "seldonian.RL.generate_simglucose_episodes.main", "seldonian.RL.hyperparams_and_settings", "seldonian.RL.hyperparams_and_settings.define_hyperparameter_and_setting_dict", "seldonian.candidate_selection", "seldonian.candidate_selection.candidate_selection", "seldonian.candidate_selection.candidate_selection.CandidateSelection", "seldonian.dataset", "seldonian.dataset.DataSet", "seldonian.dataset.DataSetLoader", "seldonian.dataset.Episode", "seldonian.dataset.RLDataSet", "seldonian.dataset.SupervisedDataSet", "seldonian.dataset.load_supervised_metadata", "seldonian.models", "seldonian.models.models", "seldonian.models.models.BaseLogisticRegressionModel", "seldonian.models.models.BinaryLogisticRegressionModel", "seldonian.models.models.BoundedLinearRegressionModel", "seldonian.models.models.ClassificationModel", "seldonian.models.models.DummyClassifierModel", "seldonian.models.models.LinearRegressionModel", "seldonian.models.models.LinearRegressionModelListFeatures", "seldonian.models.models.MultiClassLogisticRegressionModel", "seldonian.models.models.RandomClassifierModel", "seldonian.models.models.RegressionModel", "seldonian.models.models.SeldonianModel", "seldonian.models.models.SupervisedModel", "seldonian.models.objectives", "seldonian.models.objectives.Accuracy", "seldonian.models.objectives.False_Negative_Rate", "seldonian.models.objectives.False_Positive_Rate", "seldonian.models.objectives.IS_estimate", "seldonian.models.objectives.Mean_Error", "seldonian.models.objectives.Mean_Squared_Error", "seldonian.models.objectives.Negative_Rate", "seldonian.models.objectives.Positive_Rate", "seldonian.models.objectives.True_Negative_Rate", "seldonian.models.objectives.True_Positive_Rate", "seldonian.models.objectives.batcher", "seldonian.models.objectives.binary_logistic_loss", "seldonian.models.objectives.confusion_matrix", "seldonian.models.objectives.evaluate_statistic", "seldonian.models.objectives.gradient_Bounded_Squared_Error", "seldonian.models.objectives.gradient_Mean_Squared_Error", "seldonian.models.objectives.gradient_binary_logistic_loss", "seldonian.models.objectives.multiclass_logistic_loss", "seldonian.models.objectives.sample_from_statistic", "seldonian.models.objectives.vector_Accuracy", "seldonian.models.objectives.vector_Error", "seldonian.models.objectives.vector_False_Negative_Rate", "seldonian.models.objectives.vector_False_Positive_Rate", "seldonian.models.objectives.vector_IS_estimate", "seldonian.models.objectives.vector_Negative_Rate", "seldonian.models.objectives.vector_Positive_Rate", "seldonian.models.objectives.vector_Squared_Error", "seldonian.models.objectives.vector_True_Negative_Rate", "seldonian.models.objectives.vector_True_Positive_Rate", "seldonian.models.objectives.vector_confusion_matrix", "seldonian.models.pytorch_cnn", "seldonian.models.pytorch_cnn.PytorchCNN", "seldonian.models.pytorch_model", "seldonian.models.pytorch_model.SupervisedPytorchBaseModel", "seldonian.models.pytorch_model.pytorch_predict_vjp", "seldonian.optimizers", "seldonian.optimizers.gradient_descent", "seldonian.optimizers.gradient_descent.gradient_descent_adam", "seldonian.optimizers.gradient_descent.setup_gradients", "seldonian.parse_tree", "seldonian.parse_tree.nodes", "seldonian.parse_tree.nodes.BaseNode", "seldonian.parse_tree.nodes.CVaRSQeBaseNode", "seldonian.parse_tree.nodes.ConfusionMatrixBaseNode", "seldonian.parse_tree.nodes.ConstantNode", "seldonian.parse_tree.nodes.InternalNode", "seldonian.parse_tree.nodes.MEDCustomBaseNode", "seldonian.parse_tree.nodes.MultiClassBaseNode", "seldonian.parse_tree.nodes.Node", "seldonian.parse_tree.operators", "seldonian.parse_tree.parse_tree", "seldonian.parse_tree.parse_tree.ParseTree", "seldonian.parse_tree.parse_tree.make_parse_trees_from_constraints", "seldonian.safety_test", "seldonian.safety_test.safety_test", "seldonian.safety_test.safety_test.SafetyTest", "seldonian.seldonian_algorithm", "seldonian.seldonian_algorithm.SeldonianAlgorithm", "seldonian.spec", "seldonian.spec.RLSpec", "seldonian.spec.Spec", "seldonian.spec.SupervisedSpec", "seldonian.spec.createRLSpec", "seldonian.spec.createSupervisedSpec", "seldonian.spec.validate_parse_trees", "seldonian.utils", "seldonian.utils.RL_utils", "seldonian.utils.RL_utils.argmax_multi", "seldonian.utils.RL_utils.clamp", "seldonian.utils.RL_utils.error", "seldonian.utils.io_utils", "seldonian.utils.io_utils.dir_path", "seldonian.utils.io_utils.load_json", "seldonian.utils.io_utils.load_pickle", "seldonian.utils.io_utils.save_json", "seldonian.utils.io_utils.save_pickle", "seldonian.utils.plot_utils", "seldonian.utils.plot_utils.plot_gradient_descent", "seldonian.utils.stats_utils", "seldonian.utils.stats_utils.softmax", "seldonian.utils.stats_utils.stddev", "seldonian.utils.stats_utils.tinv", "seldonian.utils.stats_utils.weighted_sum_gamma", "seldonian.utils.tutorial_utils", "seldonian.utils.tutorial_utils.generate_clipped_data", "seldonian.utils.tutorial_utils.generate_data", "seldonian.utils.tutorial_utils.make_synthetic_regression_dataset", "seldonian.warnings", "seldonian.warnings.custom_warnings", "seldonian.warnings.custom_warnings.custom_formatwarning", "API", "Getting Started", "Seldonian Engine documentation", "Overview"], "terms": {"engin": [0, 149, 191, 193], "packag": [0, 193], "modul": [0, 1, 2, 5, 10, 22, 33, 55, 75, 76, 85, 86, 135, 139, 149, 150, 153, 154, 156, 158, 165, 187, 189, 193], "class": [3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 37, 38, 39, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 106, 107, 108, 109, 112, 117, 129, 130, 131, 132, 133, 134, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 193], "base": [4, 9, 12, 14, 15, 17, 18, 21, 24, 25, 27, 28, 30, 32, 35, 38, 39, 47, 57, 59, 61, 63, 65, 77, 79, 80, 81, 82, 83, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 131, 133, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 155, 157, 159, 160, 161, 192, 193], "object": [4, 7, 9, 12, 14, 15, 19, 21, 24, 25, 27, 28, 35, 38, 39, 44, 45, 57, 59, 77, 79, 80, 81, 82, 83, 97, 137, 138, 141, 142, 143, 146, 147, 148, 151, 155, 157, 158, 159, 160, 161, 162, 163, 164, 172, 173, 174, 175, 177, 192], "__init__": [4, 7, 9, 12, 14, 15, 17, 18, 21, 24, 25, 27, 28, 30, 32, 35, 38, 39, 47, 57, 59, 61, 63, 65, 77, 79, 80, 81, 82, 83, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 131, 133, 141, 142, 143, 144, 145, 146, 147, 148, 151, 155, 157, 159, 160, 161, 192], "__repr__": [4, 7, 9, 12, 14, 15, 17, 18, 21, 24, 25, 27, 28, 30, 32, 35, 38, 39, 47, 57, 59, 61, 63, 65, 77, 79, 80, 81, 82, 83, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 131, 133, 141, 142, 143, 144, 145, 146, 147, 148, 151, 155, 157, 159, 160, 161, 192], "return": [4, 7, 9, 12, 14, 15, 17, 18, 19, 21, 24, 25, 27, 28, 30, 32, 35, 38, 39, 41, 42, 43, 45, 47, 49, 50, 51, 52, 53, 54, 57, 59, 61, 63, 65, 77, 79, 80, 81, 82, 83, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 133, 134, 137, 141, 142, 143, 146, 147, 149, 151, 155, 157, 159, 160, 161, 167, 177, 180, 181, 182, 193], "repr": [4, 7, 9, 12, 14, 15, 17, 18, 21, 24, 25, 27, 28, 30, 32, 35, 38, 39, 47, 57, 59, 61, 63, 65, 77, 79, 80, 81, 82, 83, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 131, 133, 151, 155, 157, 159, 160, 161], "self": [4, 7, 9, 12, 14, 15, 17, 18, 21, 24, 25, 27, 28, 30, 32, 35, 38, 39, 47, 57, 59, 61, 63, 65, 77, 79, 80, 81, 82, 83, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 131, 133, 151, 155, 157, 159, 160, 161], "method": [4, 7, 9, 12, 14, 15, 17, 18, 21, 24, 25, 27, 28, 30, 32, 35, 38, 39, 47, 57, 59, 61, 63, 65, 77, 79, 80, 81, 82, 83, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 131, 133, 137, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 155, 157, 159, 160, 161, 193], "choose_act": [4, 9, 21, 24, 25, 27, 28, 30, 32, 192], "observ": [4, 7, 9, 21, 24, 25, 27, 28, 30, 32, 35, 38, 39, 47, 57, 61, 63, 65, 81, 88, 91, 94, 95, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 141, 142, 143, 146, 147, 193], "choos": [4, 9, 30, 32, 193], "an": [4, 7, 9, 14, 15, 19, 21, 24, 25, 27, 28, 30, 32, 35, 49, 53, 57, 59, 61, 63, 65, 134, 141, 142, 143, 147, 148, 149, 171, 172, 173, 174, 175, 182, 193], "action": [4, 9, 15, 17, 21, 24, 25, 27, 28, 30, 32, 35, 38, 39, 47, 57, 59, 61, 63, 65, 80, 81, 193], "given": [4, 7, 9, 17, 19, 21, 24, 25, 27, 28, 30, 32, 41, 42, 43, 47, 57, 59, 61, 63, 65, 77, 138, 141, 142, 143, 146, 147, 151, 152, 155, 157, 193], "To": [4, 9, 30, 32, 191], "overridden": [4, 9, 25, 30, 32], "paramet": [4, 7, 9, 12, 14, 15, 17, 18, 19, 21, 24, 25, 27, 28, 30, 32, 35, 36, 38, 39, 45, 47, 49, 50, 51, 52, 53, 54, 57, 59, 61, 63, 65, 77, 79, 80, 81, 82, 83, 84, 87, 88, 89, 91, 92, 93, 94, 95, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 133, 134, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 155, 157, 159, 160, 161, 162, 163, 164, 171, 172, 173, 174, 175, 177, 180, 181, 182, 184, 185, 186, 193], "The": [4, 9, 14, 15, 17, 18, 21, 27, 28, 30, 32, 38, 59, 77, 79, 80, 83, 84, 87, 88, 89, 91, 92, 93, 94, 95, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 133, 134, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 155, 157, 159, 160, 161, 162, 163, 175, 177, 182, 184, 185, 186, 192, 193], "current": [4, 9, 21, 24, 25, 27, 28, 30, 32, 57, 59, 61, 63, 65, 90, 193], "type": [4, 9, 19, 21, 24, 27, 28, 30, 32, 36, 47, 49, 51, 52, 59, 77, 87, 88, 89, 91, 92, 93, 94, 95, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 133, 137, 141, 142, 143, 146, 147, 151, 155, 157, 180, 181, 182, 193], "depend": [4, 9, 21, 24, 27, 28, 30, 32, 141, 142, 143, 146, 147, 193], "environ": [4, 7, 9, 14, 15, 17, 18, 19, 21, 24, 27, 28, 30, 32, 35, 41, 42, 43, 47, 49, 50, 51, 52, 53, 54, 162, 192, 193], "get_param": [4, 9, 21, 24, 25, 27, 28, 30, 32, 192], "retriev": [4, 9, 30, 32], "": [4, 9, 21, 30, 32, 35, 146, 151, 157, 180, 181, 193], "polici": [4, 9, 21, 30, 32, 47, 53, 81, 149, 162, 192, 193], "get_prob_this_act": [4, 9, 21, 24, 25, 27, 28, 30, 32, 47, 192], "get": [4, 7, 9, 17, 21, 24, 25, 27, 28, 30, 32, 35, 38, 39, 47, 57, 59, 61, 63, 65, 77, 112, 129, 131, 133, 151, 155, 157, 192, 193], "probabl": [4, 9, 17, 21, 24, 25, 27, 28, 30, 32, 47, 81, 88, 91, 94, 95, 100, 101, 102, 106, 107, 108, 109, 112, 119, 121, 122, 124, 125, 127, 128, 129, 142, 151, 181, 193], "provid": [4, 9, 30, 32, 35, 113, 118, 151, 157, 159, 160, 161, 162, 193], "i": [4, 9, 21, 24, 27, 28, 30, 32, 38, 45, 50, 59, 77, 87, 88, 89, 94, 100, 101, 102, 103, 106, 107, 108, 109, 112, 119, 121, 122, 123, 124, 125, 127, 128, 129, 131, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 155, 157, 159, 160, 161, 171, 177, 191, 192, 193], "set_new_param": [4, 9, 12, 14, 15, 17, 18, 21, 24, 25, 27, 28, 30, 32, 192], "theta": [4, 9, 30, 32, 77, 88, 89, 91, 92, 93, 94, 95, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 133, 134, 137, 141, 142, 143, 146, 147, 155, 157, 193], "updat": [4, 9, 21, 25, 30, 32, 59, 131, 133, 162, 163, 192], "model": [4, 9, 12, 14, 15, 17, 18, 30, 32, 47, 77, 137, 141, 142, 143, 146, 147, 155, 157, 159, 160, 161, 162, 192], "next_observ": [4, 9, 21, 30, 32], "reward": [4, 9, 21, 30, 32, 45, 59, 80, 81, 149, 182, 193], "termin": [4, 9, 21, 30, 32, 57, 59, 61, 63, 65, 192], "accord": [4, 9, 21, 30, 32], "learn": [4, 9, 21, 30, 32, 77, 79, 80, 83, 86, 90, 97, 98, 133, 137, 141, 142, 143, 146, 147, 149, 151, 152, 155, 161, 192, 193], "rule": [4, 9, 21, 30, 32], "overriden": [4, 9, 30, 32], "after": [4, 9, 21, 30, 32], "taken": [4, 9, 21, 30, 32, 35, 47], "take": [4, 9, 21, 24, 25, 30, 32, 47, 193], "bool": [4, 9, 21, 30, 32, 59, 77, 148, 151, 155, 159, 160, 161, 162, 177], "whether": [4, 9, 21, 24, 27, 28, 30, 32, 53, 59, 77, 148, 151, 155, 157, 159, 160, 161, 162, 163, 171, 177, 186, 193], "hyperparam_and_setting_dict": [7, 21, 24, 27, 28], "env_desc": 7, "basi": [7, 14, 15, 24, 27, 28], "us": [7, 14, 15, 21, 27, 30, 38, 39, 45, 47, 53, 57, 61, 63, 65, 77, 87, 88, 89, 92, 93, 94, 131, 133, 137, 138, 141, 142, 143, 146, 147, 149, 151, 157, 159, 160, 161, 162, 163, 181, 182, 186, 191, 193], "linear": [7, 14, 15, 24, 27, 28, 89, 92, 93, 131], "valu": [7, 15, 17, 27, 28, 39, 77, 110, 120, 126, 137, 141, 142, 143, 144, 146, 147, 151, 155, 157, 184, 186, 193], "function": [7, 12, 14, 15, 16, 21, 24, 27, 28, 34, 40, 48, 59, 66, 68, 70, 73, 77, 78, 89, 99, 110, 132, 134, 136, 137, 138, 141, 143, 147, 149, 150, 151, 152, 155, 158, 159, 160, 161, 162, 163, 166, 170, 176, 177, 178, 181, 183, 188, 193], "approxim": [7, 12, 14, 15, 21, 24, 27, 28], "see": [7, 131, 133, 142, 146, 159, 160, 161, 192, 193], "http": [7, 131, 133, 142, 146, 181], "irl": 7, "c": [7, 112, 129, 142, 143], "brown": 7, "edu": [7, 142], "fb": 7, "php": 7, "refer": [7, 149, 193], "hyperparameter_and_setting_dict": [7, 24, 27, 28, 49, 50, 52, 53], "specifi": [7, 24, 27, 28, 49, 50, 53, 54, 149, 151, 159, 160, 161, 193], "number": [7, 17, 18, 24, 27, 28, 35, 38, 39, 49, 50, 53, 54, 59, 79, 83, 87, 88, 94, 107, 110, 112, 129, 131, 133, 137, 141, 142, 143, 146, 147, 151, 155, 184, 185, 186, 193], "episod": [7, 24, 27, 28, 44, 45, 49, 50, 51, 52, 53, 54, 67, 69, 71, 72, 79, 80, 82, 83, 103, 123, 192, 193], "per": [7, 24, 27, 28, 49, 50, 177], "trial": [7, 24, 27, 28, 44, 49, 50, 53, 67, 69, 72], "env_descript": [7, 9, 14, 15, 19, 21, 24, 27, 28, 30, 59, 192], "access": [7, 9, 14, 15, 19, 21, 24, 27, 28, 35], "attribut": [7, 9, 14, 15, 19, 21, 24, 27, 28, 35, 59, 80, 82, 143, 147, 151, 157, 193], "calculate_num_featur": [7, 192], "order": [7, 193], "max_coupled_var": 7, "num_obs_dim": 7, "determin": [7, 137, 151, 162, 163], "featur": [7, 14, 15, 80, 83, 87, 88, 89, 91, 92, 93, 94, 95, 100, 101, 102, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 133, 134, 141, 142, 143, 146, 147, 157, 193], "construct_basis_matrix": [7, 192], "creat": [7, 19, 24, 27, 28, 44, 49, 59, 80, 131, 133, 141, 142, 143, 146, 147, 151, 152, 157, 162, 163, 193], "matrix": [7, 112, 129, 143, 193], "get_featur": [7, 192], "ob": [7, 17, 18, 21, 24, 25, 27, 28, 35, 57, 59, 61, 63, 65, 80, 151], "get_normalized_observ": [7, 192], "normal": [7, 107, 184, 185, 186], "act": 9, "discret": [9, 24, 27, 28, 35, 36, 39], "space": [9, 24, 27, 28, 35, 36, 59, 192], "pick": 9, "uniform": 9, "random": [9, 184, 185, 186], "capabl": [9, 18], "new_param": [12, 14, 15, 17, 18, 21, 24, 25, 27, 28, 47], "set": [12, 14, 15, 17, 18, 21, 24, 27, 28, 53, 139, 143, 144, 157, 193], "new": [12, 14, 15, 17, 18, 57, 61, 63, 65, 149, 192, 193], "weight": [12, 14, 15, 17, 18, 21, 24, 27, 28, 47, 77, 87, 88, 89, 91, 92, 93, 94, 95, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 133, 134, 137, 141, 142, 143, 146, 147, 149, 151, 152, 155, 157, 159, 160, 161, 162, 182, 193], "encod": [14, 15, 193], "A": [15, 17, 19, 27, 47, 54, 57, 59, 61, 63, 65, 82, 123, 134, 143, 147, 149, 151, 159, 160, 161, 171, 172, 173, 174, 175, 192], "state": [15, 17, 18, 21, 35, 59], "min_stat": [17, 18], "num_stat": [17, 18, 59], "num_act": 17, "q": [17, 19, 27], "contain": [17, 21, 25, 59, 77, 80, 86, 113, 118, 137, 141, 142, 143, 146, 147, 149, 151, 155, 157, 159, 160, 161, 163, 193], "transit": [17, 57, 59, 61, 63, 65, 192], "int": [17, 18, 27, 39, 59, 77, 79, 83, 110, 112, 129, 137, 141, 142, 143, 146, 147, 148, 151, 155, 181, 184, 185, 186], "smallest": [17, 18], "total": [17, 18, 39, 110, 151], "from_environment_state_to_0_indexed_st": [17, 18, 192], "env_stat": [17, 18], "convert": [17, 18, 24, 27, 28, 131, 133, 134], "0": [17, 18, 24, 27, 28, 38, 89, 95, 100, 101, 102, 106, 107, 108, 109, 119, 121, 122, 124, 125, 127, 128, 137, 141, 142, 143, 146, 147, 151, 155, 159, 160, 161, 162, 163, 182, 184, 185, 186, 193], "index": [17, 18, 24, 27, 28, 112, 129, 143, 147, 148, 182, 193], "you": [17, 18, 80, 110, 151, 155, 175, 177, 191, 192, 193], "want": [17, 18, 36, 80, 110, 147, 151, 155, 175, 177, 191, 193], "get_action_values_given_st": [17, 24, 27, 28, 192], "state_number_not_zero_index": 17, "possibl": [17, 21, 24, 27, 28, 35, 57, 59, 61, 63, 65, 142, 193], "environment": 17, "specif": [17, 24, 27, 28, 49, 157, 158, 159, 160, 161, 193], "arrai": [17, 21, 24, 27, 28, 38, 47, 77, 87, 88, 94, 112, 129, 131, 133, 134, 149, 182, 193], "get_action_values_given_zero_indexed_st": [17, 192], "zero_indexed_state_numb": 17, "hold": [18, 79, 81, 82, 83], "reindex": 18, "descript": [19, 24, 27, 28, 57, 59, 61, 63, 65, 193], "q_tabl": [19, 21, 192], "parametr": 21, "softmax": [21, 131, 192, 193], "pi": 21, "frac": 21, "e": [21, 45, 77, 79, 80, 82, 83, 113, 118, 133, 137, 141, 142, 143, 146, 147, 151, 152, 155, 159, 160, 161, 193], "p": [21, 181, 193], "sum_": 21, "addit": [21, 193], "info": [21, 137, 157], "about": [21, 137, 151, 193], "data": [21, 77, 80, 88, 94, 110, 111, 117, 141, 142, 143, 146, 147, 151, 155, 157, 159, 160, 161, 162, 163, 174, 175, 180, 184, 185, 186, 193], "gener": [21, 24, 28, 184, 185, 186, 193], "variabl": [21, 38, 59, 141, 142, 143, 144, 146, 147, 148, 149, 151], "fa": 21, "select": [21, 24, 25, 27, 28, 75, 76, 77, 135, 137, 141, 142, 143, 146, 147, 155, 157, 159, 160, 161, 162, 192], "get_action_valu": [21, 192], "all": [21, 24, 27, 28, 47, 57, 79, 83, 90, 96, 97, 98, 103, 111, 117, 131, 133, 143, 147, 148, 151, 155, 193], "from": [21, 24, 27, 28, 49, 80, 81, 84, 89, 92, 93, 110, 134, 139, 146, 150, 151, 157, 172, 173, 186, 193], "thi": [21, 47, 57, 59, 61, 63, 65, 106, 107, 112, 114, 119, 121, 122, 124, 125, 127, 128, 129, 137, 141, 142, 143, 146, 147, 148, 151, 157, 184, 186, 192, 193], "float": [21, 27, 28, 47, 59, 91, 95, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 137, 141, 142, 143, 144, 145, 146, 147, 148, 151, 157, 159, 160, 161, 162, 163, 180, 181, 182, 184, 185, 186, 193], "Not": [21, 30, 149], "implement": [21, 25, 57, 59, 61, 63, 65, 88, 89, 91, 92, 93, 94, 95, 131, 133, 137, 181, 193], "where": [24, 27, 54, 77, 131, 137, 141, 142, 143, 146, 147, 151, 155, 157, 162, 163, 174, 177, 182, 193], "ar": [24, 27, 36, 38, 54, 77, 131, 142, 143, 149, 151, 155, 164, 177, 182, 192, 193], "defin": [24, 25, 38, 142, 149, 193], "how": [24, 25, 151, 193], "construct_basis_and_linear_fa": [24, 27, 28, 192], "dictionari": [24, 27, 28, 49, 54, 84, 137, 149, 157, 159, 160, 161, 177, 193], "from_0_indexed_action_to_environment_act": [24, 27, 28, 192], "action_0_index": [24, 27, 28], "env": [24, 27, 28, 42, 51, 52, 54], "from_environment_action_to_0_indexed_act": [24, 27, 28, 192], "env_act": [24, 27, 28], "make_state_action_fa": [24, 27, 28, 192], "contin": [24, 27, 28, 36], "four": [25, 193], "which": [25, 36, 50, 106, 131, 133, 141, 142, 143, 145, 146, 147, 149, 151, 162, 163, 193], "must": [25, 131, 133, 134, 141, 193], "ani": [25, 77, 152, 193], "both": [27, 151, 193], "faster": 27, "than": [27, 38, 54, 142, 151, 155, 193], "just": [27, 157], "becaus": [27, 151, 177], "cach": [27, 151], "lookup": 27, "tabl": 27, "_arg": [27, 192], "helper": [27, 59, 151], "acceler": 27, "calcul": [27, 59, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 117, 120, 121, 122, 123, 124, 125, 126, 137, 141, 142, 143, 146, 147, 151, 155, 182, 193], "_denom": [27, 192], "choose_action_from_action_valu": [27, 28, 192], "action_valu": [27, 28], "list": [27, 28, 45, 47, 50, 53, 54, 77, 79, 80, 81, 82, 83, 103, 123, 141, 142, 143, 146, 147, 149, 151, 152, 155, 159, 160, 161, 162, 163, 164, 193], "param": [27, 28, 107, 114], "get_action_probs_from_action_valu": [27, 28, 192], "get_e_to_the_something_term": [27, 28, 192], "exponenti": [27, 28, 137, 151], "obsertavt": [27, 28], "obserav": [27, 28], "discrete_action_polici": [28, 192], "debug": [30, 45, 57, 61, 63, 65, 137, 157], "gridworld": [30, 192], "intend": 30, "public": 30, "observation_spac": 35, "action_spac": 35, "describ": [35, 59, 80], "conveni": [35, 151, 152, 162, 163, 193], "continu": [35, 38], "made": 35, "get_min_act": [35, 192], "first": [35, 147, 151, 192, 193], "get_min_st": [35, 192], "get_num_act": [35, 192], "get_num_observation_dim": [35, 192], "dimens": [35, 38, 184, 185, 186], "get_num_st": [35, 192], "also": [35, 131, 133, 144, 145, 148, 151, 182, 193], "call": [35, 110, 141, 142, 143, 146, 147, 182, 193], "here": [35, 149, 193], "desired_typ": 36, "valid": [36, 38, 151, 193], "ensur": [36, 164, 193], "equival": [36, 141, 142, 143, 146, 147], "discrete_spac": [36, 192], "continous_spac": 36, "we": [36, 141, 142, 143, 146, 147, 151, 191, 193], "match": 36, "bound": [38, 77, 89, 114, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 155, 159, 160, 161, 193], "np": 38, "ndarrai": [38, 77, 89, 91, 92, 93, 95, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 131, 133, 134, 141, 142, 143, 146, 147, 155, 157, 180, 182], "shape": [38, 87, 88, 94, 112, 129, 131, 133, 193], "num_dim": 38, "2": [38, 146, 147, 174, 193], "min": [38, 39, 146, 193], "max": [38, 39, 193], "each": [38, 50, 81, 82, 88, 91, 94, 95, 100, 106, 107, 108, 109, 110, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 133, 141, 142, 143, 146, 147, 149, 151, 152, 159, 160, 161, 177, 193], "For": [38, 147, 149, 193], "exampl": [38, 147, 193], "3d": 38, "x": [38, 87, 88, 89, 91, 92, 93, 94, 95, 100, 101, 102, 104, 105, 106, 107, 108, 109, 111, 112, 114, 115, 116, 117, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 133, 134, 143, 146, 179, 184, 185, 186], "1": [38, 88, 100, 101, 102, 106, 107, 108, 109, 119, 121, 122, 124, 125, 127, 128, 131, 137, 141, 142, 143, 147, 184, 185, 186, 189, 193], "y": [38, 87, 88, 89, 92, 93, 94, 100, 101, 102, 104, 105, 106, 107, 108, 109, 111, 112, 114, 115, 116, 117, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 146, 184, 185, 186], "5": [38, 95, 159, 160, 161, 193], "4": [38, 142, 149, 193], "z": [38, 142], "12": 38, "6": [38, 159, 161, 162, 163, 193], "8": [38, 53, 193], "would": [38, 77, 137, 147, 149, 159, 160, 161, 193], "check_bounds_valid": [38, 192], "check": [38, 59, 151, 171], "format": [38, 80, 193], "maximum": [38, 39, 59, 142, 151], "larger": [38, 142], "minimum": [38, 39, 142, 151, 193], "get_num_dim": [38, 192], "get_num_valu": [39, 192], "env_nam": [41, 42, 43], "name": [41, 42, 43, 77, 79, 80, 82, 83, 113, 118, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 159, 160, 161, 193], "default": [41, 42, 80, 137, 138, 148, 151, 152, 159, 160, 161, 162, 163, 193], "constraint": [41, 77, 137, 138, 139, 147, 149, 150, 151, 152, 155, 159, 160, 161, 162, 163, 164, 177, 192], "string": [41, 77, 133, 144, 145, 148, 149, 151, 152, 159, 160, 161, 162, 163, 192], "kwarg": [42, 47, 77, 79, 80, 82, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 133, 137, 141, 142, 143, 144, 145, 146, 147, 151, 155, 162, 189], "path": [43, 163, 171, 177], "metadata": [43, 79, 80, 82, 83, 84, 137, 163, 193], "file": [43, 80, 84, 157, 162, 163, 172, 173, 174, 175, 193], "run": [44, 50, 51, 52, 53, 54, 67, 69, 72, 77, 78, 85, 133, 137, 154, 155, 156, 157, 158, 159, 160, 161, 177, 192], "rlspec": [44, 162, 192, 193], "save": [44, 67, 69, 72, 162, 163, 174, 175, 177, 193], "disk": [44, 67, 69, 72, 77, 80], "print": [45, 57, 59, 61, 63, 65, 137, 157], "sum": [45, 100, 106, 107, 108, 109, 182], "env_kwarg": [47, 162, 193], "seldonianmodel": [47, 77, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 141, 142, 143, 146, 147, 155, 160, 161, 192], "parameter": [47, 193], "dict": [47, 50, 53, 113, 118, 137, 141, 142, 143, 146, 147, 149, 151, 159, 160, 161, 162, 177], "pertain": [47, 162], "gamma": [47, 59, 162, 182, 193], "discount": [47, 59, 162, 182, 193], "factor": [47, 59, 162, 182, 193], "singl": [47, 51, 52, 53, 147, 151, 193], "pair": [47, 89, 92, 93, 146, 193], "get_probs_from_observations_and_act": [47, 192], "those": [47, 149], "agent": [49, 50, 51, 52, 53, 54, 192], "mani": [50, 162, 163], "consist": [50, 53, 131, 193], "same": [50, 131, 133, 146], "_i": [50, 193], "model_param": [52, 53], "none": [52, 53, 77, 80, 103, 148, 155, 157, 159, 160, 161, 162], "parallel": 53, "fals": [53, 59, 77, 100, 101, 102, 108, 109, 113, 121, 122, 137, 147, 149, 151, 157, 159, 160, 161, 162, 163, 174, 175, 177, 186, 193], "n_worker": 53, "arbitrari": [53, 59], "befor": [53, 131, 133, 134, 193], "process": [53, 157, 193], "cpu": [53, 133], "num_episod": 54, "wrapper": [54, 77, 138, 155, 157, 172, 173, 174, 175], "run_trial": [54, 192], "explic": 54, "rather": 54, "via": [54, 151, 193], "get_env_descript": [57, 59, 61, 63, 65, 192], "overrid": [57, 59, 61, 63, 65, 89, 141, 142, 143, 146, 147], "child": [57, 59, 61, 63, 65, 148, 149, 151, 193], "get_observ": [57, 59, 61, 63, 65, 192], "reset": [57, 59, 61, 63, 65, 151, 192], "initi": [57, 59, 61, 63, 65, 77, 137, 151, 159, 160, 161, 162], "start_visu": [57, 59, 61, 63, 65, 192], "turn": [57, 59, 61, 63, 65], "visual": [57, 59, 61, 63, 65, 144, 145, 148, 151, 191, 192, 193], "debugg": [57, 59, 61, 63, 65], "stop_visu": [57, 59, 61, 63, 65, 192], "off": [57, 59, 61, 63, 65], "out": [57, 59, 61, 63, 65, 131, 133, 137, 157], "size": [59, 110, 131, 133], "3": [59, 142, 147, 184, 186, 193], "squar": [59, 104, 105, 114, 115, 126, 142, 149, 193], "grid": 59, "cell": 59, "side": [59, 151], "distinct": 59, "terminal_st": 59, "occupi": 59, "time": [59, 110, 155], "timestep": [59, 81, 193], "max_tim": 59, "allow": 59, "expect": [59, 141, 142, 143, 146, 147, 149], "create_env_descript": [59, 192], "is_in_goal_st": [59, 192], "goal": [59, 193], "true": [59, 100, 102, 108, 109, 112, 119, 127, 128, 129, 131, 133, 141, 142, 143, 146, 147, 149, 159, 160, 161, 162, 163, 177, 193], "go": [59, 193], "back": [59, 131, 133, 134, 159, 160, 161], "between": [59, 100, 101, 102, 106, 107, 108, 109, 119, 121, 122, 124, 125, 127, 128, 146, 168, 193], "reach": 59, "next": 59, "update_posit": [59, 192], "posit": [59, 91, 95, 100, 101, 102, 106, 107, 108, 109, 113, 121, 122, 124, 125, 128, 142, 147, 149, 151, 193], "inform": [59, 193], "candid": [75, 76, 77, 135, 137, 141, 142, 143, 146, 147, 155, 157, 159, 160, 161, 162, 192], "candidate_dataset": 77, "n_safeti": [77, 142], "parse_tre": [77, 155, 159, 160, 161, 164, 192, 193], "primary_object": [77, 137, 138, 155, 157, 159, 160, 161], "optimization_techniqu": [77, 159, 160, 161, 193], "barrier_funct": [77, 159, 160, 161, 193], "optim": [77, 157, 159, 160, 161, 192, 193], "powel": [77, 193], "initial_solut": 77, "regim": [77, 79, 80, 83, 149, 151, 152, 155, 193], "supervised_learn": [77, 79, 80, 83, 151, 152, 155, 193], "write_logfil": [77, 157], "dataset": [77, 120, 126, 141, 142, 143, 146, 147, 152, 155, 157, 159, 160, 161, 162, 163, 186, 192], "length": [77, 88, 142, 149], "safeti": [77, 137, 141, 142, 143, 146, 147, 153, 154, 155, 157, 159, 160, 161, 162, 192], "when": [77, 100, 101, 102, 108, 109, 141, 143, 147, 151, 177, 193], "predict": [77, 88, 89, 91, 92, 93, 94, 95, 101, 102, 107, 112, 119, 121, 122, 127, 128, 129, 131, 133, 143, 147, 192, 193], "confid": [77, 141, 142, 143, 145, 146, 147, 148, 151, 162, 163, 193], "dure": [77, 149, 157, 159, 160, 161, 193], "parsetre": [77, 155, 159, 160, 164, 192, 193], "pars": [77, 139, 141, 144, 145, 146, 148, 149, 150, 151, 152, 155, 159, 160, 161, 164, 191, 193], "tree": [77, 139, 141, 144, 145, 146, 148, 149, 150, 151, 152, 155, 159, 160, 161, 164, 191, 193], "behavior": [77, 81, 137, 139, 149, 150, 151, 155, 159, 160, 161, 192], "sole": [77, 137, 159, 160, 161], "absenc": [77, 137, 159, 160, 161], "loss": [77, 111, 116, 117, 137, 149, 159, 160, 161, 193], "str": [77, 79, 80, 82, 83, 113, 118, 133, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 155, 157, 159, 160, 161, 162, 163, 171, 172, 173, 174, 175, 177], "g": [77, 79, 80, 82, 83, 113, 118, 133, 137, 141, 142, 143, 146, 147, 151, 152, 155, 159, 160, 161, 193], "gradient_desc": [77, 159, 160, 161, 192, 193], "categori": [77, 79, 80, 83, 151, 152, 155, 189], "machin": [77, 79, 80, 83, 86, 90, 97, 141, 142, 143, 146, 147, 151, 152, 155, 192, 193], "algorithm": [77, 78, 79, 80, 83, 85, 146, 151, 152, 155, 156, 157, 158, 159, 160, 161, 193], "reinforcement_learn": [77, 79, 80, 83, 151, 152, 155, 193], "write": [77, 147, 157, 193], "output": [77, 131, 133, 193], "evaluate_primary_object": [77, 155, 157, 192], "primari": [77, 137, 138, 155, 157, 159, 160, 161, 162, 177, 193], "fix": [77, 142, 155, 157, 193], "input": [77, 91, 95, 110, 131, 141, 142, 143, 146, 147, 171, 172, 182, 193], "gradient": [77, 114, 115, 116, 131, 133, 137, 138, 159, 160, 161, 162, 177, 193], "descent": [77, 137, 177, 193], "numpi": [77, 89, 91, 92, 93, 95, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 131, 133, 134, 141, 142, 143, 146, 147, 155, 157, 180, 182], "evalu": [77, 113, 114, 118, 141, 142, 143, 146, 147, 151, 155, 157], "get_constraint_upper_bound": [77, 192], "upper": [77, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 151, 155, 193], "objective_with_barri": [77, 192], "minimization_techniqu": 77, "barrier": [77, 193], "add": [77, 151], "larg": 77, "penalti": 77, "violat": [77, 151, 193], "nsf": [77, 157, 193], "build": [78, 139, 150, 151, 158], "load": [78, 80, 84, 172, 173, 193], "num_datapoint": [79, 83], "meta_inform": [79, 82, 83], "datafram": [79, 82, 83, 103, 123, 141, 142, 143, 146, 147, 151], "row": [79, 83, 112, 129, 143, 146, 177, 193], "rl": [79, 81, 82, 83, 151, 159, 182, 192, 193], "column": [79, 83, 112, 129, 131, 141, 142, 143, 146, 147, 151, 152, 193], "load_rl_dataset_from_csv": [80, 192, 193], "filenam": [80, 84, 172, 173, 174, 175, 189, 193], "metadata_filenam": [80, 193], "rldataset": [80, 192, 193], "csv": [80, 193], "episode_index": 80, "probability_of_act": 80, "load_rl_dataset_from_episode_fil": [80, 192, 193], "pickl": [80, 157, 173, 175, 193], "load_supervised_dataset": [80, 192, 193], "file_typ": 80, "superviseddataset": [80, 192, 193], "label": [80, 83, 87, 88, 89, 91, 92, 93, 94, 95, 102, 104, 105, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 126, 127, 128, 129, 131, 133, 141, 142, 143, 146, 147, 157, 177, 193], "sensit": [80, 157, 193], "extens": 80, "action_prob": 81, "episode_col_nam": 82, "o": 82, "r": [82, 116], "pi_b": 82, "sensitive_col_nam": 82, "sensitive_attr": [82, 83], "json": [84, 172, 174, 193], "main": [86, 150, 192], "classificationmodel": [87, 91, 95, 192, 193], "binari": [87, 88, 90, 111, 116], "multi": [87, 94, 117], "logist": [87, 88, 94, 111, 116, 117, 149], "regress": [87, 88, 89, 92, 93, 94, 96, 146, 149, 151, 152, 161, 193], "fit": [87, 88, 89, 92, 93, 94, 192, 193], "train": [87, 88, 89, 92, 93, 94, 193], "let": [87, 88, 94, 112, 129, 193], "datapoint": [87, 88, 94, 110, 112, 129, 155], "j": [87, 88, 94, 112, 129, 143], "includ": [87, 88, 94, 112, 129, 151, 193], "bia": [87, 88, 94, 112, 129], "term": [87, 88, 94, 112, 129, 137], "provi": [87, 88, 94, 112, 129, 193], "k": [87, 88, 94, 112, 129, 143], "baselogisticregressionmodel": [88, 94, 192], "have": [88, 91, 94, 95, 151, 193], "point": [88, 94, 111, 117, 137, 146, 172, 173, 184, 185, 186, 193], "linearregressionmodel": [89, 192, 193], "sever": [89, 142, 146, 193], "parent": [89, 90, 96, 97, 98, 142, 146], "assum": 89, "intercept": 89, "nxm": [89, 92, 93], "nx1": [89, 92, 93], "origin": 89, "squash": 89, "supervisedmodel": [90, 96, 133, 192], "classif": [90, 111, 117, 147, 149, 151, 161, 193], "onli": [90, 142, 177, 193], "support": [90, 149, 193], "classifi": [91, 95], "alwai": [91, 95, 137, 141, 142, 143, 146, 147, 151, 193], "regardless": [91, 95, 193], "regressionmodel": [92, 93, 192, 193], "ha": [95, 147, 149, 193], "prob": 95, "supervis": [98, 133, 149, 151, 161, 193], "neg": [100, 101, 102, 106, 108, 119, 121, 122, 124, 127, 149, 151], "rate": [100, 101, 102, 106, 107, 108, 109, 113, 119, 121, 122, 124, 125, 127, 128, 137, 147, 149, 151, 193], "whole": [100, 101, 102, 104, 105, 106, 107, 108, 109, 113, 151], "sampl": [100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 113, 115, 118, 123, 142, 180, 193], "being": [100, 106, 107, 108, 109, 121, 122, 124, 125, 127, 128, 141, 143, 147], "fact": [100, 108, 109], "wa": [100, 101, 102, 108, 109, 112, 129, 146, 147, 151, 193], "instanc": [100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 134], "probabilist": [101, 102], "averag": [101, 102, 111, 117, 177], "over": [101, 102, 103, 104, 105, 111, 113, 117, 155, 193], "truth": 101, "weighted_return": [103, 123], "unweight": [103, 123], "import": [103, 123, 137, 191, 193], "estim": [103, 123, 141, 142, 143, 147, 193], "mean": [104, 105, 115, 120, 126, 146, 149, 157, 184, 185, 186, 193], "error": [104, 105, 114, 115, 120, 126, 142, 146, 149, 192, 193], "y_hat": 104, "func": 110, "n": [110, 131, 177, 193], "batch_siz": [110, 137], "num_batch": 110, "batch": 110, "up": [110, 146, 151, 193], "measur": [110, 141, 143, 147, 149, 151, 155, 193], "l_i": [112, 129], "l_k": [112, 129], "element": [112, 129, 131, 133], "confus": [112, 129, 143], "correspond": [112, 129, 152, 181, 193], "statistic_nam": [113, 118], "data_dict": [113, 118, 141, 142, 143, 146, 147], "datas": [113, 118, 141, 142, 143, 146, 147], "statist": [113, 118, 141, 147, 149, 193], "fpr": [113, 118, 141, 149, 193], "analyt": 114, "w": 116, "t": [116, 141, 142, 143, 146, 147, 181], "perceptron": 116, "correct": [119, 180], "vector": [120, 123, 126, 131, 133, 134, 137, 141, 142, 143, 146, 147, 180], "subject": [121, 122, 127, 128, 193], "actual": [121, 122, 127, 128, 142, 193], "devic": [131, 133], "supervisedpytorchbasemodel": [131, 134, 192], "cnn": 131, "pytorch": [131, 133, 134], "two": [131, 149, 151, 193], "hidden": 131, "layer": 131, "follow": [131, 193], "input_dim": 131, "output_dim": 131, "backward_pass": [131, 133, 192], "external_grad": [131, 133], "do": [131, 133, 134, 192], "backward": [131, 133, 134], "pass": [131, 133, 134, 141, 142, 143, 146, 147, 151, 155, 157, 162, 193], "through": [131, 133, 134, 146, 151, 155], "respect": [131, 133], "torch": [131, 133], "tensor": [131, 133], "itself": [131, 133, 151], "org": [131, 133, 146], "tutori": [131, 133, 192, 193], "beginn": [131, 133], "blitz": [131, 133], "autograd_tutori": [131, 133], "html": [131, 133, 181], "differenti": [131, 133], "autograd": [131, 133, 137, 138, 159, 160, 161, 162], "more": [131, 133, 151, 193], "detail": [131, 133, 157, 193], "create_model": [131, 133, 192], "28": [131, 193], "them": 131, "channel": 131, "28x28": 131, "pixel": 131, "conv2d": 131, "relu": 131, "maxpool": 131, "twice": 131, "fulli": 131, "connect": 131, "10": [131, 193], "forward_pass": [131, 133, 192], "forward": [131, 133, 134], "should": [131, 133, 193], "get_model_param": [131, 133, 192], "arg": [131, 133, 189], "flatten": [131, 133], "1d": [131, 133], "get_param_s": [131, 133, 192], "pred_numpi": [131, 133], "rtype": [131, 133], "update_model_param": [131, 133, 192], "reshap": [131, 133], "zero_gradi": [131, 133, 192], "zero": [131, 133], "indic": [133, 143, 157, 167, 193], "hardwar": 133, "cuda": 133, "mp": 133, "obtain": [134, 138], "jacobian": 134, "d": 134, "pred": 134, "dtheta": 134, "result": [134, 193], "inherit": [134, 143, 147, 193], "fn": 134, "repres": [134, 141, 144, 145, 149, 151, 193], "oper": [134, 141, 145, 192, 193], "n_constraint": 137, "upper_bounds_funct": [137, 138], "theta_init": 137, "lambda_init": [137, 159, 160, 161], "batch_calcul": 137, "n_batch": 137, "100": [137, 142], "n_epoch": 137, "alpha_theta": [137, 159, 160, 161], "05": [137, 141, 142, 143, 146, 147, 193], "alpha_lamb": [137, 159, 160, 161], "beta_veloc": [137, 159, 160, 161], "9": [137, 159, 160, 161, 182, 193], "beta_rmsprop": [137, 159, 160, 161], "gradient_librari": [137, 138, 159, 160, 161], "verbos": [137, 159, 160, 161, 162, 163, 174, 175], "simultan": 137, "ascent": 137, "adam": [137, 159, 160, 161, 193], "lagrangian": [137, 177, 193], "l": [137, 157, 177, 193], "lambda": [137, 193], "f": [137, 146, 157, 177, 193], "lagrang": [137, 177], "multipli": [137, 151, 177], "done": 137, "find": [137, 193], "saddl": 137, "Being": 137, "part": [137, 193], "solut": [137, 151, 155, 157, 177, 193], "test": [137, 141, 142, 143, 146, 147, 153, 154, 155, 157, 159, 160, 161, 162, 177, 192], "No": [137, 193], "found": [137, 155, 157, 193], "decai": 137, "veloc": 137, "rmsprop": 137, "num_it": [137, 159, 160, 161], "iter": [137, 146, 193], "librari": [137, 138, 192, 193], "comput": [137, 138, 146, 147, 151, 159, 160, 161], "automat": [137, 138], "boolean": [137, 149, 162, 163, 175, 186, 193], "flag": [137, 162, 163, 175, 186, 193], "control": [137, 162, 163, 186, 193], "lower": [141, 142, 143, 144, 145, 146, 147, 148, 151], "inf": [141, 142, 143, 145, 146, 147], "conditional_column": [141, 142, 143, 146, 147], "leaf": [141, 144, 145, 155], "condit": [141, 142, 143, 146, 147, 151, 152], "node_typ": [141, 144], "equal": [141, 151, 152, 155, 193], "base_nod": 141, "delta": [141, 142, 143, 146, 147, 151, 152, 162, 163, 193], "share": [141, 142, 146], "put": [141, 142, 146], "measure_function_nam": 141, "measure_funct": [141, 193], "calculate_bound": [141, 142, 143, 146, 147, 192], "bound_method": [141, 142, 143, 146, 147], "calculate_data_forbound": [141, 142, 143, 146, 147, 192], "prepar": [141, 142, 143, 147], "calculate_valu": [141, 142, 143, 146, 147, 192], "etc": [141, 143, 145, 146, 147], "compute_hc_lowerbound": [141, 142, 143, 146, 147, 192], "high": [141, 142, 143, 146, 147], "level": [141, 142, 143, 146, 147, 151, 193], "compute_hc_upper_and_lowerbound": [141, 142, 143, 146, 147, 192], "compute_hc_upperbound": [141, 142, 143, 146, 147, 192], "independ": [141, 142, 143, 146, 147, 193], "mask_data": [141, 142, 143, 146, 147, 192], "mask": [141, 142, 143, 146, 147], "joint": [141, 142, 143, 146, 147], "AND": [141, 142, 143, 146, 147], "predict_hc_lowerbound": [141, 142, 143, 146, 147, 192], "predict_hc_upper_and_lowerbound": [141, 142, 143, 146, 147, 192], "predict_hc_upperbound": [141, 142, 143, 146, 147, 192], "zhat": [141, 142, 143, 146, 147, 192], "unbias": [141, 142, 143, 147], "basenod": [142, 143, 146, 147, 192], "custom": [142, 146, 149, 193], "cvar_alpha": 142, "alpha": 142, "definit": [142, 193], "consid": 142, "least": [142, 193], "var_alpha": 142, "largest": 142, "thoma": [142, 146], "miller": 142, "2019": [142, 146], "peopl": 142, "umass": 142, "pthoma": 142, "paper": 142, "thomas2019": 142, "pdf": 142, "theorem": 142, "threshold": [142, 162, 163], "cvar": 142, "sort": 142, "b": [142, 149, 151], "n_candid": 142, "cm_true_index": 143, "cm_pred_index": 143, "c_00": 143, "c_01": 143, "c_0k": 143, "______": 143, "_____": 143, "c_10": 143, "c_11": 143, "c_1k": 143, "c_k0": 143, "c_k1": 143, "c_kk": 143, "constant": [144, 151, 182, 193], "constant_nod": 144, "represent": [144, 145, 148, 149], "what": [144, 145, 148, 192], "displai": [144, 145, 148, 151, 177], "insid": [144, 145, 148], "box": [144, 145, 148, 193], "graph": [144, 145, 148, 151, 191], "intern": [145, 193], "non": 145, "These": [145, 193], "perform": [145, 149, 193], "wise": 146, "differ": [146, 193], "male": [146, 193], "femal": [146, 193], "present": [146, 151], "et": 146, "al": 146, "www": [146, 181], "scienc": 146, "stoken": 146, "author": 146, "token": 146, "st": 146, "119": 146, "full": [146, 177, 193], "figur": [146, 177, 193], "precalculate_data": [146, 192], "preconfigur": 146, "so": [146, 151, 193], "doe": [146, 151, 192], "need": [146, 148, 151, 152, 158, 193], "recalcul": 146, "panda": 146, "y_i": 146, "y_hat_i": 146, "m": [146, 151, 193], "y_j": 146, "y_hat_j": 146, "There": [146, 151, 193], "mai": [146, 171, 193], "n_male": 146, "n_femal": 146, "class_index": 147, "against": 147, "other": [147, 157, 193], "one": [147, 149, 151, 159, 160, 161, 162, 193], "thei": [147, 149, 177, 193], "fpr_": 147, "left": [148, 151, 193], "right": [148, 151, 193], "will_lower_bound": 148, "will_upper_bound": 148, "global": 149, "construct": [149, 193], "measure_functions_dict": [149, 192], "sub_regim": [149, 151, 152, 161, 193], "appear": [149, 151, 193], "recogn": 149, "special": [149, 193], "organ": 149, "sub": [149, 151, 152, 193], "pr": [149, 151, 193], "nr": 149, "tpr": [149, 193], "fnr": 149, "tnr": 149, "logistic_loss": 149, "mean_error": [149, 151, 192], "mean_squared_error": [149, 192, 193], "reinforc": [149, 193], "j_pi_new": [149, 193], "custom_base_node_dict": [149, 192], "map": 149, "node": [149, 151, 152, 155, 159, 160, 161, 192, 193], "op_mapp": [149, 192], "ast": [149, 151], "not_supported_op_mapp": [149, 192], "bounds_required_dict": [149, 192], "requir": [149, 151, 160, 191, 193], "If": [149, 151, 159, 160, 161, 162, 191, 192, 193], "children": [149, 151], "like": [149, 151, 193], "need_a_low": 149, "need_a_upp": 149, "need_b_low": 149, "need_b_upp": 149, "can": [151, 162, 163, 193], "ml": [151, 193], "user": [151, 193], "appropri": 151, "root": [151, 155], "assign": 151, "built": [151, 159, 160, 161, 162, 193], "constraint_str": [151, 152, 162, 163], "express": [151, 193], "n_node": 151, "n_base_nod": 151, "onc": [151, 193], "contribut": 151, "base_node_dict": 151, "keep": 151, "track": 151, "uniqu": 151, "been": [151, 193], "alreadi": [151, 193], "help": [151, 181], "handl": 151, "case": [151, 167, 193], "duplic": [151, 164], "node_fonts": 151, "fontsiz": 151, "graphviz": [151, 191], "available_measure_funct": 151, "_ab": [151, 192], "absolut": [151, 193], "interv": 151, "tupl": [151, 157, 193], "_add": [151, 192], "_assign_bounds_help": [151, 192], "lower_need": 151, "upper_need": 151, "travers": 151, "_assign_deltas_help": [151, 192], "weight_method": 151, "_ast2pt_nod": [151, 192], "ast_nod": 151, "_ast_tree_help": [151, 192], "make": [151, 177, 193], "recurs": 151, "_div": [151, 192], "divid": 151, "_evaluator_help": [151, 192], "_exp": [151, 192], "_max": [151, 192], "_min": [151, 192], "_mult": [151, 192], "_pow": [151, 192], "pow": 151, "_preprocess_constraint_str": [151, 192], "inequ": [151, 193], "move": 151, "everyth": 151, "final": 151, "form": [151, 193], "some": [151, 157, 193], "sure": 151, "mathemat": [151, 193], "written": [151, 193], "python": [151, 181, 191, 193], "syntax": 151, "_propagate_valu": [151, 192], "propag": [151, 155, 192], "_propagator_help": [151, 192], "_protect_nan": [151, 192], "bound_typ": 151, "nan": 151, "infin": 151, "postit": 151, "_sub": [151, 192], "subract": 151, "assign_bounds_need": [151, 192], "breadth": 151, "search": 151, "decid": 151, "eventu": 151, "necessari": [151, 193], "end": [151, 193], "care": 151, "assign_delta": [151, 192], "split": [151, 157, 193], "among": 151, "build_tre": [151, 192], "delta_weight_method": [151, 152], "create_from_ast": [151, 192], "structur": 151, "evaluate_constraint": [151, 192], "postord": 151, "logic": 151, "make_viz": [151, 192], "titl": 151, "diagram": 151, "top": [151, 193], "make_viz_help": [151, 192], "edg": 151, "digraph": 151, "propagate_bound": [151, 192], "reset_base_node_dict": [151, 192], "reset_data": 151, "less": [151, 155, 193], "frequent": 151, "defult": 152, "classifict": 152, "across": 152, "safety_dataset": 155, "batch_size_safeti": [155, 157, 159, 160, 161], "loop": 155, "spec": [157, 192], "introspect": 157, "complet": [157, 192, 193], "candidate_safety_split": [157, 192], "frac_data_in_safeti": [157, 159, 160, 161, 162, 163], "fraction": [157, 159, 160, 161, 162], "remain": [157, 159, 160, 161, 162], "f_c": 157, "f_": 157, "l_c": 157, "l_": 157, "s_c": 157, "s_": 157, "candidate_select": [157, 192], "branch": 157, "either": [157, 193], "safety_test": [157, 192, 193], "get_cs_result": [157, 192], "write_cs_logfil": [157, 193], "log": [157, 193], "passed_safeti": [157, 193], "run_safety_test": [157, 192], "candidate_solut": 157, "initial_solution_fn": [159, 160, 161, 162], "base_node_bound_method_dict": [159, 160, 161], "use_builtin_primary_gradient_fn": [159, 160, 161, 162], "custom_primary_gradient_fn": [159, 160, 161], "optimization_hyperparam": [159, 160, 161, 193], "005": [159, 160, 161], "95": [159, 160, 161], "hyper_search": [159, 160, 161], "200": [159, 160, 161], "use_batch": [159, 161], "regularization_hyperparam": [159, 160, 161], "rl_model": [159, 162, 192, 193], "exist": [159, 160, 161, 162], "fall": [159, 160, 161], "builtin": [159, 160, 161], "hyperparamet": [159, 160, 161, 193], "regular": [159, 160, 161], "save_dir": [162, 163], "later": [162, 163], "chang": [162, 163, 177], "directori": [162, 163, 171, 193], "pkl": [162, 163, 193], "glag": [162, 163], "metadata_pth": 163, "supervisedspec": [163, 192, 193], "array_in": 167, "argmax": 167, "multipl": [167, 193], "tie": 167, "val_in": 168, "min_val": 168, "max_val": 168, "limit": 168, "output_str": 169, "indent": 174, "abl": 175, "primary_objective_nam": [177, 193], "plot_running_avg": 177, "savenam": 177, "png": 177, "show": [177, 193], "evolut": [177, 193], "One": [177, 193], "subplot": [177, 193], "repeat": [177, 193], "plot": [177, 193], "ii": 177, "lambda_i": [177, 193], "iii": 177, "g_i": [177, 193], "iv": 177, "lagranian": 177, "sum_i": 177, "plt": 177, "relev": 177, "v": 180, "standard": [180, 184, 185, 186], "deviat": [180, 184, 185, 186], "bessel": 180, "nu": 181, "invers": [181, 193], "student": 181, "cdf": 181, "degre": 181, "freedom": 181, "matlab": 181, "mathwork": 181, "com": 181, "stat": 181, "arr": 182, "num_point": [184, 185, 186], "loc_x": [184, 185, 186], "loc_i": [184, 185, 186], "sigma_x": [184, 185, 186], "sigma_i": [184, 185, 186], "clip_min": [184, 186], "clip_max": [184, 186], "2d": [184, 185, 186], "distribut": [184, 185, 186], "clip": [184, 186], "option": [186, 193], "msg": 189, "lineno": 189, "seldonian": [191, 193], "pip": 191, "Then": 191, "system": 191, "wide": 191, "recommend": 191, "welcom": 192, "core": 192, "toolkit": [192, 193], "sourc": 192, "code": [192, 193], "host": 192, "github": 192, "overview": 192, "interfac": 192, "sa": 192, "start": [192, 193], "instal": 192, "api": [192, 193], "fourier": 192, "discrete_random_ag": 192, "function_approxim": 192, "linear_fa": 192, "linear_state_action_value_fa": 192, "construct_q_table_from_env_descript": 192, "parameterized_non_learning_softmax_ag": 192, "discretesoftmax": [192, 193], "keyboard_gridworld": 192, "mountain_car_rough_solut": 192, "check_space_typ": 192, "continuous_spac": 192, "rl_generate_dataset_and_spec_fil": 192, "get_constraint_str": 192, "get_env_kwarg": 192, "get_metadata_path": 192, "print_return_info": 192, "rl_runner": 192, "create_ag": 192, "run_all_tri": 192, "run_episod": 192, "run_episode_from_dict": 192, "run_trial_given_agent_and_env": 192, "mountaincar": 192, "n_step_mountaincar": 192, "simglucose_env": 192, "simglucos": 192, "generate_gridworld_episod": 192, "generate_mountaincar_episod": 192, "generate_simglucose_episod": 192, "get_max_ob": 192, "hyperparams_and_set": 192, "define_hyperparameter_and_setting_dict": 192, "candidateselect": [192, 193], "load_supervised_metadata": 192, "datasetload": [192, 193], "binarylogisticregressionmodel": 192, "boundedlinearregressionmodel": 192, "dummyclassifiermodel": 192, "linearregressionmodellistfeatur": 192, "multiclasslogisticregressionmodel": 192, "randomclassifiermodel": 192, "accuraci": 192, "false_negative_r": 192, "false_positive_r": 192, "is_estim": 192, "negative_r": 192, "positive_r": 192, "true_negative_r": 192, "true_positive_r": 192, "batcher": 192, "binary_logistic_loss": 192, "confusion_matrix": 192, "evaluate_statist": 192, "gradient_bounded_squared_error": 192, "gradient_mean_squared_error": 192, "gradient_binary_logistic_loss": 192, "multiclass_logistic_loss": 192, "sample_from_statist": 192, "vector_accuraci": 192, "vector_error": 192, "vector_false_negative_r": 192, "vector_false_positive_r": 192, "vector_is_estim": 192, "vector_negative_r": 192, "vector_positive_r": 192, "vector_squared_error": 192, "vector_true_negative_r": 192, "vector_true_positive_r": 192, "vector_confusion_matrix": 192, "pytorch_cnn": 192, "pytorchcnn": 192, "pytorch_model": 192, "pytorch_predict_vjp": 192, "gradient_descent_adam": 192, "setup_gradi": 192, "cvarsqebasenod": 192, "confusionmatrixbasenod": 192, "constantnod": 192, "internalnod": 192, "medcustombasenod": 192, "multiclassbasenod": 192, "make_parse_trees_from_constraint": 192, "safetytest": [192, 193], "seldonian_algorithm": [192, 193], "seldonianalgorithm": [192, 193], "createrlspec": [192, 193], "createsupervisedspec": [192, 193], "validate_parse_tre": 192, "util": [192, 193], "rl_util": 192, "argmax_multi": 192, "clamp": 192, "io_util": [192, 193], "dir_path": 192, "load_json": 192, "load_pickl": [192, 193], "save_json": 192, "save_pickl": 192, "plot_util": [192, 193], "plot_gradient_desc": [192, 193], "stats_util": 192, "stddev": 192, "tinv": 192, "weighted_sum_gamma": 192, "tutorial_util": 192, "generate_clipped_data": 192, "generate_data": 192, "make_synthetic_regression_dataset": 192, "warn": 192, "custom_warn": 192, "custom_formatwarn": 192, "document": 193, "homepag": 193, "In": 193, "page": 193, "few": 193, "hand": 193, "illustr": 193, "simul": 193, "realist": 193, "most": 193, "piec": 193, "cover": 193, "note": 193, "could": 193, "unifi": 193, "work": 193, "pattern": 193, "concept": 193, "conceptu": 193, "enforc": 193, "develop": 193, "design": 193, "applic": 193, "command": 193, "line": 193, "graphic": 193, "short": 193, "underli": 193, "discuss": 193, "below": 193, "well": 193, "manual": 193, "loader": 193, "comma": 193, "separ": 193, "header": 193, "categor": 193, "numer": 193, "might": 193, "look": 193, "622": 193, "491": 193, "56": 193, "439": 193, "93": 193, "707": 193, "64": 193, "663": 193, "65": 193, "557": 193, "09": 193, "711": 193, "37": 193, "731": 193, "31": 193, "509": 193, "33333": 193, "538": 193, "490": 193, "58": 193, "406": 193, "59": 193, "529": 193, "532": 193, "447": 193, "23": 193, "527": 193, "379": 193, "14": 193, "488": 193, "98333": 193, "455": 193, "18": 193, "440": 193, "570": 193, "86": 193, "417": 193, "54": 193, "453": 193, "53": 193, "425": 193, "87": 193, "475": 193, "63": 193, "476": 193, "11": 193, "407": 193, "15": 193, "97333": 193, "756": 193, "91": 193, "679": 193, "62": 193, "531": 193, "583": 193, "534": 193, "42": 193, "521": 193, "592": 193, "41": 193, "783": 193, "76": 193, "588": 193, "26": 193, "53333": 193, "hot": 193, "last": 193, "integ": 193, "25": 193, "second": 193, "partit": 193, "intention": 193, "exclud": 193, "kei": 193, "your": 193, "problem": 193, "label_column": 193, "try": 193, "sensitive_column": 193, "biggest": 193, "logisticregressionmodel": 193, "essenti": 193, "wrap": 193, "scikit": 193, "linearregress": 193, "unless": 193, "own": 193, "know": 193, "best": 193, "though": 193, "chosen": 193, "explicitli": 193, "thing": 193, "extend": 193, "py": 193, "_": 193, "directli": 193, "often": 193, "five": 193, "math": 193, "nativ": 193, "ab": 193, "exp": 193, "239": 193, "trigger": 193, "open": 193, "ad": 193, "quantiti": 193, "It": 193, "someth": 193, "wai": 193, "wrote": 193, "instruct": 193, "recal": 193, "leq": 193, "satisfi": 193, "howev": 193, "cumbersom": 193, "symbol": 193, "interpret": 193, "ident": 193, "themselv": 193, "tri": 193, "basic": 193, "plain": 193, "english": 193, "88": 193, "greater": 193, "commonli": 193, "fair": 193, "filter": 193, "atr1": 193, "atr2": 193, "placehold": 193, "parenthes": 193, "surround": 193, "statement": 193, "sai": 193, "r1": 193, "r2": 193, "stand": 193, "race": 193, "demograph": 193, "pariti": 193, "toler": 193, "ratio": 193, "dispar": 193, "impact": 193, "anoth": 193, "permit": 193, "belong": 193, "bundl": 193, "shown": 193, "block": 193, "At": 193, "broad": 193, "scope": 193, "throught": 193, "now": 193, "happen": 193, "even": 193, "small": 193, "techniqu": 193, "black": 193, "cost": 193, "forc": 193, "toward": 193, "feasibl": 193, "cg": 193, "nelder": 193, "mead": 193, "bfg": 193, "cma": 193, "scipi": 193, "minim": 193, "solver": 193, "covari": 193, "adapt": 193, "strategi": 193, "kkt": 193, "situat": 193, "contraint": 193, "conflict": 193, "vanilla": 193, "oscil": 193, "boundari": 193, "dampen": 193, "momentum": 193, "our": 193, "mitig": 193, "far": 193, "accept": 193, "hat": 193, "mathcal": 193, "ran": 193, "convent": 193, "candidate_selection_log": 193, "increas": 193, "overwritten": 193, "log_fil": 193, "candidate_selection_log0": 193, "cs_dict": 193, "produc": 193, "1500": 193, "red": 193, "area": 193, "middl": 193, "region": 193, "dot": 193, "its": 193, "deem": 193, "assembl": 193, "interact": 193}, "objects": {"": [[0, 0, 0, "-", "seldonian"]], "seldonian": [[1, 0, 0, "-", "RL"], [75, 0, 0, "-", "candidate_selection"], [78, 0, 0, "-", "dataset"], [85, 0, 0, "-", "models"], [135, 0, 0, "-", "optimizers"], [139, 0, 0, "-", "parse_tree"], [153, 0, 0, "-", "safety_test"], [156, 0, 0, "-", "seldonian_algorithm"], [158, 0, 0, "-", "spec"], [165, 0, 0, "-", "utils"], [187, 0, 0, "-", "warnings"]], "seldonian.RL": [[2, 0, 0, "-", "Agents"], [33, 0, 0, "-", "Env_Description"], [40, 0, 0, "-", "RL_generate_dataset_and_spec_file"], [46, 0, 0, "-", "RL_model"], [48, 0, 0, "-", "RL_runner"], [55, 0, 0, "-", "environments"], [66, 0, 0, "-", "generate_gridworld_episodes"], [68, 0, 0, "-", "generate_mountaincar_episodes"], [70, 0, 0, "-", "generate_simglucose_episodes"], [73, 0, 0, "-", "hyperparams_and_settings"]], "seldonian.RL.Agents": [[3, 0, 0, "-", "Agent"], [5, 0, 0, "-", "Bases"], [8, 0, 0, "-", "Discrete_Random_Agent"], [10, 0, 0, "-", "Function_Approximators"], [20, 0, 0, "-", "Parameterized_non_learning_softmax_agent"], [22, 0, 0, "-", "Policies"], [29, 0, 0, "-", "keyboard_gridworld"], [31, 0, 0, "-", "mountain_car_rough_solution"]], "seldonian.RL.Agents.Agent": [[4, 1, 1, "", "Agent"]], "seldonian.RL.Agents.Agent.Agent": [[4, 2, 1, "", "__init__"], [4, 2, 1, "", "__repr__"], [4, 2, 1, "", "choose_action"], [4, 2, 1, "", "get_params"], [4, 2, 1, "", "get_prob_this_action"], [4, 2, 1, "", "set_new_params"], [4, 2, 1, "", "update"]], "seldonian.RL.Agents.Bases": [[6, 0, 0, "-", "Fourier"]], "seldonian.RL.Agents.Bases.Fourier": [[7, 1, 1, "", "Fourier"]], "seldonian.RL.Agents.Bases.Fourier.Fourier": [[7, 2, 1, "", "__init__"], [7, 2, 1, "", "__repr__"], [7, 2, 1, "", "calculate_num_features"], [7, 2, 1, "", "construct_basis_matrix"], [7, 2, 1, "", "get_features"], [7, 2, 1, "", "get_normalized_observation"]], "seldonian.RL.Agents.Discrete_Random_Agent": [[9, 1, 1, "", "Discrete_Random_Agent"]], "seldonian.RL.Agents.Discrete_Random_Agent.Discrete_Random_Agent": [[9, 2, 1, "", "__init__"], [9, 2, 1, "", "__repr__"], [9, 2, 1, "", "choose_action"], [9, 2, 1, "", "get_params"], [9, 2, 1, "", "get_prob_this_action"], [9, 2, 1, "", "set_new_params"], [9, 2, 1, "", "update"]], "seldonian.RL.Agents.Function_Approximators": [[11, 0, 0, "-", "Function_Approximator"], [13, 0, 0, "-", "Linear_FA"], [16, 0, 0, "-", "Table"]], "seldonian.RL.Agents.Function_Approximators.Function_Approximator": [[12, 1, 1, "", "Function_Approximator"]], "seldonian.RL.Agents.Function_Approximators.Function_Approximator.Function_Approximator": [[12, 2, 1, "", "__init__"], [12, 2, 1, "", "__repr__"], [12, 2, 1, "", "set_new_params"]], "seldonian.RL.Agents.Function_Approximators.Linear_FA": [[14, 1, 1, "", "Linear_FA"], [15, 1, 1, "", "Linear_state_action_value_FA"]], "seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_FA": [[14, 2, 1, "", "__init__"], [14, 2, 1, "", "__repr__"], [14, 2, 1, "", "set_new_params"]], "seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_state_action_value_FA": [[15, 2, 1, "", "__init__"], [15, 2, 1, "", "__repr__"], [15, 2, 1, "", "set_new_params"]], "seldonian.RL.Agents.Function_Approximators.Table": [[17, 1, 1, "", "Q_Table"], [18, 1, 1, "", "Table"], [19, 3, 1, "", "construct_Q_Table_From_Env_Description"]], "seldonian.RL.Agents.Function_Approximators.Table.Q_Table": [[17, 2, 1, "", "__init__"], [17, 2, 1, "", "__repr__"], [17, 2, 1, "", "from_environment_state_to_0_indexed_state"], [17, 2, 1, "", "get_action_values_given_state"], [17, 2, 1, "", "get_action_values_given_zero_indexed_state"], [17, 2, 1, "", "set_new_params"]], "seldonian.RL.Agents.Function_Approximators.Table.Table": [[18, 2, 1, "", "__init__"], [18, 2, 1, "", "__repr__"], [18, 2, 1, "", "from_environment_state_to_0_indexed_state"], [18, 2, 1, "", "set_new_params"]], "seldonian.RL.Agents.Parameterized_non_learning_softmax_agent": [[21, 1, 1, "", "Parameterized_non_learning_softmax_agent"]], "seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.Parameterized_non_learning_softmax_agent": [[21, 2, 1, "", "__init__"], [21, 2, 1, "", "__repr__"], [21, 2, 1, "", "choose_action"], [21, 2, 1, "", "get_action_values"], [21, 2, 1, "", "get_params"], [21, 2, 1, "", "get_prob_this_action"], [21, 2, 1, "", "set_new_params"], [21, 2, 1, "", "update"]], "seldonian.RL.Agents.Policies": [[23, 0, 0, "-", "Policy"], [26, 0, 0, "-", "Softmax"]], "seldonian.RL.Agents.Policies.Policy": [[24, 1, 1, "", "Discrete_Action_Policy"], [25, 1, 1, "", "Policy"]], "seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy": [[24, 2, 1, "", "__init__"], [24, 2, 1, "", "__repr__"], [24, 2, 1, "", "choose_action"], [24, 2, 1, "", "construct_basis_and_linear_FA"], [24, 2, 1, "", "from_0_indexed_action_to_environment_action"], [24, 2, 1, "", "from_environment_action_to_0_indexed_action"], [24, 2, 1, "", "get_action_values_given_state"], [24, 2, 1, "", "get_params"], [24, 2, 1, "", "get_prob_this_action"], [24, 2, 1, "", "make_state_action_FA"], [24, 2, 1, "", "set_new_params"]], "seldonian.RL.Agents.Policies.Policy.Policy": [[25, 2, 1, "", "__init__"], [25, 2, 1, "", "__repr__"], [25, 2, 1, "", "choose_action"], [25, 2, 1, "", "get_params"], [25, 2, 1, "", "get_prob_this_action"], [25, 2, 1, "", "set_new_params"]], "seldonian.RL.Agents.Policies.Softmax": [[27, 1, 1, "", "DiscreteSoftmax"], [28, 1, 1, "", "Softmax"]], "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax": [[27, 2, 1, "", "__init__"], [27, 2, 1, "", "__repr__"], [27, 2, 1, "", "_arg"], [27, 2, 1, "", "_denom"], [27, 2, 1, "", "choose_action"], [27, 2, 1, "", "choose_action_from_action_values"], [27, 2, 1, "", "construct_basis_and_linear_FA"], [27, 2, 1, "", "from_0_indexed_action_to_environment_action"], [27, 2, 1, "", "from_environment_action_to_0_indexed_action"], [27, 2, 1, "", "get_action_probs_from_action_values"], [27, 2, 1, "", "get_action_values_given_state"], [27, 2, 1, "", "get_e_to_the_something_terms"], [27, 2, 1, "", "get_params"], [27, 2, 1, "", "get_prob_this_action"], [27, 2, 1, "", "make_state_action_FA"], [27, 2, 1, "", "set_new_params"]], "seldonian.RL.Agents.Policies.Softmax.Softmax": [[28, 2, 1, "", "__init__"], [28, 2, 1, "", "__repr__"], [28, 2, 1, "", "choose_action"], [28, 2, 1, "", "choose_action_from_action_values"], [28, 2, 1, "", "construct_basis_and_linear_FA"], [28, 2, 1, "", "from_0_indexed_action_to_environment_action"], [28, 2, 1, "", "from_environment_action_to_0_indexed_action"], [28, 2, 1, "", "get_action_probs_from_action_values"], [28, 2, 1, "", "get_action_values_given_state"], [28, 2, 1, "", "get_e_to_the_something_terms"], [28, 2, 1, "", "get_params"], [28, 2, 1, "", "get_prob_this_action"], [28, 2, 1, "", "make_state_action_FA"], [28, 2, 1, "", "set_new_params"]], "seldonian.RL.Agents.keyboard_gridworld": [[30, 1, 1, "", "Keyboard_gridworld"]], "seldonian.RL.Agents.keyboard_gridworld.Keyboard_gridworld": [[30, 2, 1, "", "__init__"], [30, 2, 1, "", "__repr__"], [30, 2, 1, "", "choose_action"], [30, 2, 1, "", "get_params"], [30, 2, 1, "", "get_prob_this_action"], [30, 2, 1, "", "set_new_params"], [30, 2, 1, "", "update"]], "seldonian.RL.Agents.mountain_car_rough_solution": [[32, 1, 1, "", "Mountain_car_rough_solution"]], "seldonian.RL.Agents.mountain_car_rough_solution.Mountain_car_rough_solution": [[32, 2, 1, "", "__init__"], [32, 2, 1, "", "__repr__"], [32, 2, 1, "", "choose_action"], [32, 2, 1, "", "get_params"], [32, 2, 1, "", "get_prob_this_action"], [32, 2, 1, "", "set_new_params"], [32, 2, 1, "", "update"]], "seldonian.RL.Env_Description": [[34, 0, 0, "-", "Env_Description"], [37, 0, 0, "-", "Spaces"]], "seldonian.RL.Env_Description.Env_Description": [[35, 1, 1, "", "Env_Description"], [36, 3, 1, "", "check_space_type"]], "seldonian.RL.Env_Description.Env_Description.Env_Description": [[35, 2, 1, "", "__init__"], [35, 2, 1, "", "__repr__"], [35, 2, 1, "", "get_min_action"], [35, 2, 1, "", "get_min_state"], [35, 2, 1, "", "get_num_actions"], [35, 2, 1, "", "get_num_observation_dims"], [35, 2, 1, "", "get_num_states"]], "seldonian.RL.Env_Description.Spaces": [[38, 1, 1, "", "Continuous_Space"], [39, 1, 1, "", "Discrete_Space"]], "seldonian.RL.Env_Description.Spaces.Continuous_Space": [[38, 2, 1, "", "__init__"], [38, 2, 1, "", "__repr__"], [38, 2, 1, "", "check_bounds_valid"], [38, 2, 1, "", "get_num_dims"]], "seldonian.RL.Env_Description.Spaces.Discrete_Space": [[39, 2, 1, "", "__init__"], [39, 2, 1, "", "__repr__"], [39, 2, 1, "", "get_num_values"]], "seldonian.RL.RL_generate_dataset_and_spec_file": [[41, 3, 1, "", "get_constraint_string"], [42, 3, 1, "", "get_env_kwargs"], [43, 3, 1, "", "get_metadata_path"], [44, 3, 1, "", "main"], [45, 3, 1, "", "print_return_info"]], "seldonian.RL.RL_model": [[47, 1, 1, "", "RL_model"]], "seldonian.RL.RL_model.RL_model": [[47, 2, 1, "", "__init__"], [47, 2, 1, "", "__repr__"], [47, 2, 1, "", "get_prob_this_action"], [47, 2, 1, "", "get_probs_from_observations_and_actions"]], "seldonian.RL.RL_runner": [[49, 3, 1, "", "create_agent"], [50, 3, 1, "", "run_all_trials"], [51, 3, 1, "", "run_episode"], [52, 3, 1, "", "run_episode_from_dict"], [53, 3, 1, "", "run_trial"], [54, 3, 1, "", "run_trial_given_agent_and_env"]], "seldonian.RL.environments": [[56, 0, 0, "-", "Environment"], [58, 0, 0, "-", "gridworld"], [60, 0, 0, "-", "mountaincar"], [62, 0, 0, "-", "n_step_mountaincar"], [64, 0, 0, "-", "simglucose_env"]], "seldonian.RL.environments.Environment": [[57, 1, 1, "", "Environment"]], "seldonian.RL.environments.Environment.Environment": [[57, 2, 1, "", "__init__"], [57, 2, 1, "", "__repr__"], [57, 2, 1, "", "get_env_description"], [57, 2, 1, "", "get_observation"], [57, 2, 1, "", "reset"], [57, 2, 1, "", "start_visualizing"], [57, 2, 1, "", "stop_visualizing"], [57, 2, 1, "", "terminated"], [57, 2, 1, "", "transition"], [57, 2, 1, "", "visualize"]], "seldonian.RL.environments.gridworld": [[59, 1, 1, "", "Gridworld"]], "seldonian.RL.environments.gridworld.Gridworld": [[59, 2, 1, "", "__init__"], [59, 2, 1, "", "__repr__"], [59, 2, 1, "", "create_env_description"], [59, 2, 1, "", "get_env_description"], [59, 2, 1, "", "get_observation"], [59, 2, 1, "", "is_in_goal_state"], [59, 2, 1, "", "reset"], [59, 2, 1, "", "start_visualizing"], [59, 2, 1, "", "stop_visualizing"], [59, 2, 1, "", "terminated"], [59, 2, 1, "", "transition"], [59, 2, 1, "", "update_position"], [59, 2, 1, "", "visualize"]], "seldonian.RL.environments.mountaincar": [[61, 1, 1, "", "Mountaincar"]], "seldonian.RL.environments.mountaincar.Mountaincar": [[61, 2, 1, "", "__init__"], [61, 2, 1, "", "__repr__"], [61, 2, 1, "", "get_env_description"], [61, 2, 1, "", "get_observation"], [61, 2, 1, "", "reset"], [61, 2, 1, "", "start_visualizing"], [61, 2, 1, "", "stop_visualizing"], [61, 2, 1, "", "terminated"], [61, 2, 1, "", "transition"], [61, 2, 1, "", "visualize"]], "seldonian.RL.environments.n_step_mountaincar": [[63, 1, 1, "", "N_step_mountaincar"]], "seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar": [[63, 2, 1, "", "__init__"], [63, 2, 1, "", "__repr__"], [63, 2, 1, "", "get_env_description"], [63, 2, 1, "", "get_observation"], [63, 2, 1, "", "reset"], [63, 2, 1, "", "start_visualizing"], [63, 2, 1, "", "stop_visualizing"], [63, 2, 1, "", "terminated"], [63, 2, 1, "", "transition"], [63, 2, 1, "", "visualize"]], "seldonian.RL.environments.simglucose_env": [[65, 1, 1, "", "Simglucose"]], "seldonian.RL.environments.simglucose_env.Simglucose": [[65, 2, 1, "", "__init__"], [65, 2, 1, "", "__repr__"], [65, 2, 1, "", "get_env_description"], [65, 2, 1, "", "get_observation"], [65, 2, 1, "", "reset"], [65, 2, 1, "", "start_visualizing"], [65, 2, 1, "", "stop_visualizing"], [65, 2, 1, "", "terminated"], [65, 2, 1, "", "transition"], [65, 2, 1, "", "visualize"]], "seldonian.RL.generate_gridworld_episodes": [[67, 3, 1, "", "main"]], "seldonian.RL.generate_mountaincar_episodes": [[69, 3, 1, "", "main"]], "seldonian.RL.generate_simglucose_episodes": [[71, 3, 1, "", "get_max_obs"], [72, 3, 1, "", "main"]], "seldonian.RL.hyperparams_and_settings": [[74, 3, 1, "", "define_hyperparameter_and_setting_dict"]], "seldonian.candidate_selection": [[76, 0, 0, "-", "candidate_selection"]], "seldonian.candidate_selection.candidate_selection": [[77, 1, 1, "", "CandidateSelection"]], "seldonian.candidate_selection.candidate_selection.CandidateSelection": [[77, 2, 1, "", "__init__"], [77, 2, 1, "", "__repr__"], [77, 2, 1, "", "evaluate_primary_objective"], [77, 2, 1, "", "get_constraint_upper_bounds"], [77, 2, 1, "", "objective_with_barrier"], [77, 2, 1, "", "run"]], "seldonian.dataset": [[79, 1, 1, "", "DataSet"], [80, 1, 1, "", "DataSetLoader"], [81, 1, 1, "", "Episode"], [82, 1, 1, "", "RLDataSet"], [83, 1, 1, "", "SupervisedDataSet"], [84, 3, 1, "", "load_supervised_metadata"]], "seldonian.dataset.DataSet": [[79, 2, 1, "", "__init__"], [79, 2, 1, "", "__repr__"]], "seldonian.dataset.DataSetLoader": [[80, 2, 1, "", "__init__"], [80, 2, 1, "", "__repr__"], [80, 2, 1, "", "load_RL_dataset_from_csv"], [80, 2, 1, "", "load_RL_dataset_from_episode_file"], [80, 2, 1, "", "load_supervised_dataset"]], "seldonian.dataset.Episode": [[81, 2, 1, "", "__init__"], [81, 2, 1, "", "__repr__"]], "seldonian.dataset.RLDataSet": [[82, 2, 1, "", "__init__"], [82, 2, 1, "", "__repr__"]], "seldonian.dataset.SupervisedDataSet": [[83, 2, 1, "", "__init__"], [83, 2, 1, "", "__repr__"]], "seldonian.models": [[86, 0, 0, "-", "models"], [99, 0, 0, "-", "objectives"], [130, 0, 0, "-", "pytorch_cnn"], [132, 0, 0, "-", "pytorch_model"]], "seldonian.models.models": [[87, 1, 1, "", "BaseLogisticRegressionModel"], [88, 1, 1, "", "BinaryLogisticRegressionModel"], [89, 1, 1, "", "BoundedLinearRegressionModel"], [90, 1, 1, "", "ClassificationModel"], [91, 1, 1, "", "DummyClassifierModel"], [92, 1, 1, "", "LinearRegressionModel"], [93, 1, 1, "", "LinearRegressionModelListFeatures"], [94, 1, 1, "", "MultiClassLogisticRegressionModel"], [95, 1, 1, "", "RandomClassifierModel"], [96, 1, 1, "", "RegressionModel"], [97, 1, 1, "", "SeldonianModel"], [98, 1, 1, "", "SupervisedModel"]], "seldonian.models.models.BaseLogisticRegressionModel": [[87, 2, 1, "", "__init__"], [87, 2, 1, "", "__repr__"], [87, 2, 1, "", "fit"]], "seldonian.models.models.BinaryLogisticRegressionModel": [[88, 2, 1, "", "__init__"], [88, 2, 1, "", "__repr__"], [88, 2, 1, "", "fit"], [88, 2, 1, "", "predict"]], "seldonian.models.models.BoundedLinearRegressionModel": [[89, 2, 1, "", "__init__"], [89, 2, 1, "", "__repr__"], [89, 2, 1, "", "fit"], [89, 2, 1, "", "predict"]], "seldonian.models.models.ClassificationModel": [[90, 2, 1, "", "__init__"], [90, 2, 1, "", "__repr__"]], "seldonian.models.models.DummyClassifierModel": [[91, 2, 1, "", "__init__"], [91, 2, 1, "", "__repr__"], [91, 2, 1, "", "predict"]], "seldonian.models.models.LinearRegressionModel": [[92, 2, 1, "", "__init__"], [92, 2, 1, "", "__repr__"], [92, 2, 1, "", "fit"], [92, 2, 1, "", "predict"]], "seldonian.models.models.LinearRegressionModelListFeatures": [[93, 2, 1, "", "__init__"], [93, 2, 1, "", "__repr__"], [93, 2, 1, "", "fit"], [93, 2, 1, "", "predict"]], "seldonian.models.models.MultiClassLogisticRegressionModel": [[94, 2, 1, "", "__init__"], [94, 2, 1, "", "__repr__"], [94, 2, 1, "", "fit"], [94, 2, 1, "", "predict"]], "seldonian.models.models.RandomClassifierModel": [[95, 2, 1, "", "__init__"], [95, 2, 1, "", "__repr__"], [95, 2, 1, "", "predict"]], "seldonian.models.models.RegressionModel": [[96, 2, 1, "", "__init__"], [96, 2, 1, "", "__repr__"]], "seldonian.models.models.SeldonianModel": [[97, 2, 1, "", "__init__"], [97, 2, 1, "", "__repr__"]], "seldonian.models.models.SupervisedModel": [[98, 2, 1, "", "__init__"], [98, 2, 1, "", "__repr__"]], "seldonian.models.objectives": [[100, 3, 1, "", "Accuracy"], [101, 3, 1, "", "False_Negative_Rate"], [102, 3, 1, "", "False_Positive_Rate"], [103, 3, 1, "", "IS_estimate"], [104, 3, 1, "", "Mean_Error"], [105, 3, 1, "", "Mean_Squared_Error"], [106, 3, 1, "", "Negative_Rate"], [107, 3, 1, "", "Positive_Rate"], [108, 3, 1, "", "True_Negative_Rate"], [109, 3, 1, "", "True_Positive_Rate"], [110, 3, 1, "", "batcher"], [111, 3, 1, "", "binary_logistic_loss"], [112, 3, 1, "", "confusion_matrix"], [113, 3, 1, "", "evaluate_statistic"], [114, 3, 1, "", "gradient_Bounded_Squared_Error"], [115, 3, 1, "", "gradient_Mean_Squared_Error"], [116, 3, 1, "", "gradient_binary_logistic_loss"], [117, 3, 1, "", "multiclass_logistic_loss"], [118, 3, 1, "", "sample_from_statistic"], [119, 3, 1, "", "vector_Accuracy"], [120, 3, 1, "", "vector_Error"], [121, 3, 1, "", "vector_False_Negative_Rate"], [122, 3, 1, "", "vector_False_Positive_Rate"], [123, 3, 1, "", "vector_IS_estimate"], [124, 3, 1, "", "vector_Negative_Rate"], [125, 3, 1, "", "vector_Positive_Rate"], [126, 3, 1, "", "vector_Squared_Error"], [127, 3, 1, "", "vector_True_Negative_Rate"], [128, 3, 1, "", "vector_True_Positive_Rate"], [129, 3, 1, "", "vector_confusion_matrix"]], "seldonian.models.pytorch_cnn": [[131, 1, 1, "", "PytorchCNN"]], "seldonian.models.pytorch_cnn.PytorchCNN": [[131, 2, 1, "", "__init__"], [131, 2, 1, "", "__repr__"], [131, 2, 1, "", "backward_pass"], [131, 2, 1, "", "create_model"], [131, 2, 1, "", "forward_pass"], [131, 2, 1, "", "get_model_params"], [131, 2, 1, "", "get_param_sizes"], [131, 2, 1, "", "predict"], [131, 2, 1, "", "update_model_params"], [131, 2, 1, "", "zero_gradients"]], "seldonian.models.pytorch_model": [[133, 1, 1, "", "SupervisedPytorchBaseModel"], [134, 3, 1, "", "pytorch_predict_vjp"]], "seldonian.models.pytorch_model.SupervisedPytorchBaseModel": [[133, 2, 1, "", "__init__"], [133, 2, 1, "", "__repr__"], [133, 2, 1, "", "backward_pass"], [133, 2, 1, "", "create_model"], [133, 2, 1, "", "forward_pass"], [133, 2, 1, "", "get_model_params"], [133, 2, 1, "", "get_param_sizes"], [133, 2, 1, "", "predict"], [133, 2, 1, "", "update_model_params"], [133, 2, 1, "", "zero_gradients"]], "seldonian.optimizers": [[136, 0, 0, "-", "gradient_descent"]], "seldonian.optimizers.gradient_descent": [[137, 3, 1, "", "gradient_descent_adam"], [138, 3, 1, "", "setup_gradients"]], "seldonian.parse_tree": [[140, 0, 0, "-", "nodes"], [149, 0, 0, "-", "operators"], [150, 0, 0, "-", "parse_tree"]], "seldonian.parse_tree.nodes": [[141, 1, 1, "", "BaseNode"], [142, 1, 1, "", "CVaRSQeBaseNode"], [143, 1, 1, "", "ConfusionMatrixBaseNode"], [144, 1, 1, "", "ConstantNode"], [145, 1, 1, "", "InternalNode"], [146, 1, 1, "", "MEDCustomBaseNode"], [147, 1, 1, "", "MultiClassBaseNode"], [148, 1, 1, "", "Node"]], "seldonian.parse_tree.nodes.BaseNode": [[141, 2, 1, "", "__init__"], [141, 2, 1, "", "__repr__"], [141, 2, 1, "", "calculate_bounds"], [141, 2, 1, "", "calculate_data_forbound"], [141, 2, 1, "", "calculate_value"], [141, 2, 1, "", "compute_HC_lowerbound"], [141, 2, 1, "", "compute_HC_upper_and_lowerbound"], [141, 2, 1, "", "compute_HC_upperbound"], [141, 2, 1, "", "mask_data"], [141, 2, 1, "", "predict_HC_lowerbound"], [141, 2, 1, "", "predict_HC_upper_and_lowerbound"], [141, 2, 1, "", "predict_HC_upperbound"], [141, 2, 1, "", "zhat"]], "seldonian.parse_tree.nodes.CVaRSQeBaseNode": [[142, 2, 1, "", "__init__"], [142, 2, 1, "", "__repr__"], [142, 2, 1, "", "calculate_bounds"], [142, 2, 1, "", "calculate_data_forbound"], [142, 2, 1, "", "calculate_value"], [142, 2, 1, "", "compute_HC_lowerbound"], [142, 2, 1, "", "compute_HC_upper_and_lowerbound"], [142, 2, 1, "", "compute_HC_upperbound"], [142, 2, 1, "", "mask_data"], [142, 2, 1, "", "predict_HC_lowerbound"], [142, 2, 1, "", "predict_HC_upper_and_lowerbound"], [142, 2, 1, "", "predict_HC_upperbound"], [142, 2, 1, "", "zhat"]], "seldonian.parse_tree.nodes.ConfusionMatrixBaseNode": [[143, 2, 1, "", "__init__"], [143, 2, 1, "", "__repr__"], [143, 2, 1, "", "calculate_bounds"], [143, 2, 1, "", "calculate_data_forbound"], [143, 2, 1, "", "calculate_value"], [143, 2, 1, "", "compute_HC_lowerbound"], [143, 2, 1, "", "compute_HC_upper_and_lowerbound"], [143, 2, 1, "", "compute_HC_upperbound"], [143, 2, 1, "", "mask_data"], [143, 2, 1, "", "predict_HC_lowerbound"], [143, 2, 1, "", "predict_HC_upper_and_lowerbound"], [143, 2, 1, "", "predict_HC_upperbound"], [143, 2, 1, "", "zhat"]], "seldonian.parse_tree.nodes.ConstantNode": [[144, 2, 1, "", "__init__"], [144, 2, 1, "", "__repr__"]], "seldonian.parse_tree.nodes.InternalNode": [[145, 2, 1, "", "__init__"], [145, 2, 1, "", "__repr__"]], "seldonian.parse_tree.nodes.MEDCustomBaseNode": [[146, 2, 1, "", "__init__"], [146, 2, 1, "", "__repr__"], [146, 2, 1, "", "calculate_bounds"], [146, 2, 1, "", "calculate_data_forbound"], [146, 2, 1, "", "calculate_value"], [146, 2, 1, "", "compute_HC_lowerbound"], [146, 2, 1, "", "compute_HC_upper_and_lowerbound"], [146, 2, 1, "", "compute_HC_upperbound"], [146, 2, 1, "", "mask_data"], [146, 2, 1, "", "precalculate_data"], [146, 2, 1, "", "predict_HC_lowerbound"], [146, 2, 1, "", "predict_HC_upper_and_lowerbound"], [146, 2, 1, "", "predict_HC_upperbound"], [146, 2, 1, "", "zhat"]], "seldonian.parse_tree.nodes.MultiClassBaseNode": [[147, 2, 1, "", "__init__"], [147, 2, 1, "", "__repr__"], [147, 2, 1, "", "calculate_bounds"], [147, 2, 1, "", "calculate_data_forbound"], [147, 2, 1, "", "calculate_value"], [147, 2, 1, "", "compute_HC_lowerbound"], [147, 2, 1, "", "compute_HC_upper_and_lowerbound"], [147, 2, 1, "", "compute_HC_upperbound"], [147, 2, 1, "", "mask_data"], [147, 2, 1, "", "predict_HC_lowerbound"], [147, 2, 1, "", "predict_HC_upper_and_lowerbound"], [147, 2, 1, "", "predict_HC_upperbound"], [147, 2, 1, "", "zhat"]], "seldonian.parse_tree.nodes.Node": [[148, 2, 1, "", "__init__"], [148, 2, 1, "", "__repr__"]], "seldonian.parse_tree.operators": [[149, 4, 1, "", "bounds_required_dict"], [149, 4, 1, "", "custom_base_node_dict"], [149, 4, 1, "", "measure_functions_dict"], [149, 4, 1, "", "not_supported_op_mapper"], [149, 4, 1, "", "op_mapper"]], "seldonian.parse_tree.parse_tree": [[151, 1, 1, "", "ParseTree"], [152, 3, 1, "", "make_parse_trees_from_constraints"]], "seldonian.parse_tree.parse_tree.ParseTree": [[151, 2, 1, "", "__init__"], [151, 2, 1, "", "__repr__"], [151, 2, 1, "", "_abs"], [151, 2, 1, "", "_add"], [151, 2, 1, "", "_assign_bounds_helper"], [151, 2, 1, "", "_assign_deltas_helper"], [151, 2, 1, "", "_ast2pt_node"], [151, 2, 1, "", "_ast_tree_helper"], [151, 2, 1, "", "_div"], [151, 2, 1, "", "_evaluator_helper"], [151, 2, 1, "", "_exp"], [151, 2, 1, "", "_max"], [151, 2, 1, "", "_min"], [151, 2, 1, "", "_mult"], [151, 2, 1, "", "_pow"], [151, 2, 1, "", "_preprocess_constraint_str"], [151, 2, 1, "", "_propagate_value"], [151, 2, 1, "", "_propagator_helper"], [151, 2, 1, "", "_protect_nan"], [151, 2, 1, "", "_sub"], [151, 2, 1, "", "assign_bounds_needed"], [151, 2, 1, "", "assign_deltas"], [151, 2, 1, "", "build_tree"], [151, 2, 1, "", "create_from_ast"], [151, 2, 1, "", "evaluate_constraint"], [151, 2, 1, "", "make_viz"], [151, 2, 1, "", "make_viz_helper"], [151, 2, 1, "", "propagate"], [151, 2, 1, "", "propagate_bounds"], [151, 2, 1, "", "reset_base_node_dict"]], "seldonian.safety_test": [[154, 0, 0, "-", "safety_test"]], "seldonian.safety_test.safety_test": [[155, 1, 1, "", "SafetyTest"]], "seldonian.safety_test.safety_test.SafetyTest": [[155, 2, 1, "", "__init__"], [155, 2, 1, "", "__repr__"], [155, 2, 1, "", "evaluate_primary_objective"], [155, 2, 1, "", "run"]], "seldonian.seldonian_algorithm": [[157, 1, 1, "", "SeldonianAlgorithm"]], "seldonian.seldonian_algorithm.SeldonianAlgorithm": [[157, 2, 1, "", "__init__"], [157, 2, 1, "", "__repr__"], [157, 2, 1, "", "candidate_safety_split"], [157, 2, 1, "", "candidate_selection"], [157, 2, 1, "", "evaluate_primary_objective"], [157, 2, 1, "", "get_cs_result"], [157, 2, 1, "", "run"], [157, 2, 1, "", "run_safety_test"], [157, 2, 1, "", "safety_test"]], "seldonian.spec": [[159, 1, 1, "", "RLSpec"], [160, 1, 1, "", "Spec"], [161, 1, 1, "", "SupervisedSpec"], [162, 3, 1, "", "createRLSpec"], [163, 3, 1, "", "createSupervisedSpec"], [164, 3, 1, "", "validate_parse_trees"]], "seldonian.spec.RLSpec": [[159, 2, 1, "", "__init__"], [159, 2, 1, "", "__repr__"]], "seldonian.spec.Spec": [[160, 2, 1, "", "__init__"], [160, 2, 1, "", "__repr__"]], "seldonian.spec.SupervisedSpec": [[161, 2, 1, "", "__init__"], [161, 2, 1, "", "__repr__"]], "seldonian.utils": [[166, 0, 0, "-", "RL_utils"], [170, 0, 0, "-", "io_utils"], [176, 0, 0, "-", "plot_utils"], [178, 0, 0, "-", "stats_utils"], [183, 0, 0, "-", "tutorial_utils"]], "seldonian.utils.RL_utils": [[167, 3, 1, "", "argmax_multi"], [168, 3, 1, "", "clamp"], [169, 3, 1, "", "error"]], "seldonian.utils.io_utils": [[171, 3, 1, "", "dir_path"], [172, 3, 1, "", "load_json"], [173, 3, 1, "", "load_pickle"], [174, 3, 1, "", "save_json"], [175, 3, 1, "", "save_pickle"]], "seldonian.utils.plot_utils": [[177, 3, 1, "", "plot_gradient_descent"]], "seldonian.utils.stats_utils": [[179, 3, 1, "", "softmax"], [180, 3, 1, "", "stddev"], [181, 3, 1, "", "tinv"], [182, 3, 1, "", "weighted_sum_gamma"]], "seldonian.utils.tutorial_utils": [[184, 3, 1, "", "generate_clipped_data"], [185, 3, 1, "", "generate_data"], [186, 3, 1, "", "make_synthetic_regression_dataset"]], "seldonian.warnings": [[188, 0, 0, "-", "custom_warnings"]], "seldonian.warnings.custom_warnings": [[189, 3, 1, "", "custom_formatwarning"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "data", "Python data"]}, "titleterms": {"seldonian": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192], "rl": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74], "agent": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32], "base": [5, 6, 7], "fourier": [6, 7], "discrete_random_ag": [8, 9], "function_approxim": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "linear_fa": [13, 14, 15], "linear_state_action_value_fa": 15, "tabl": [16, 17, 18, 19, 192], "q_tabl": 17, "construct_q_table_from_env_descript": 19, "parameterized_non_learning_softmax_ag": [20, 21], "polici": [22, 23, 24, 25, 26, 27, 28], "discrete_action_polici": 24, "softmax": [26, 27, 28, 179], "discretesoftmax": 27, "keyboard_gridworld": [29, 30], "mountain_car_rough_solut": [31, 32], "env_descript": [33, 34, 35, 36, 37, 38, 39], "check_space_typ": 36, "space": [37, 38, 39], "continuous_spac": 38, "discrete_spac": 39, "rl_generate_dataset_and_spec_fil": [40, 41, 42, 43, 44, 45], "get_constraint_str": 41, "get_env_kwarg": 42, "get_metadata_path": 43, "main": [44, 67, 69, 72], "print_return_info": 45, "rl_model": [46, 47], "rl_runner": [48, 49, 50, 51, 52, 53, 54], "create_ag": 49, "run_all_tri": 50, "run_episod": 51, "run_episode_from_dict": 52, "run_trial": 53, "run_trial_given_agent_and_env": 54, "environ": [55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65], "gridworld": [58, 59], "mountaincar": [60, 61], "n_step_mountaincar": [62, 63], "simglucose_env": [64, 65], "simglucos": 65, "generate_gridworld_episod": [66, 67], "generate_mountaincar_episod": [68, 69], "generate_simglucose_episod": [70, 71, 72], "get_max_ob": 71, "hyperparams_and_set": [73, 74], "define_hyperparameter_and_setting_dict": 74, "candidate_select": [75, 76, 77], "candidateselect": 77, "dataset": [78, 79, 80, 81, 82, 83, 84, 193], "datasetload": 80, "episod": 81, "rldataset": 82, "superviseddataset": 83, "load_supervised_metadata": 84, "model": [85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 193], "baselogisticregressionmodel": 87, "binarylogisticregressionmodel": 88, "boundedlinearregressionmodel": 89, "classificationmodel": 90, "dummyclassifiermodel": 91, "linearregressionmodel": 92, "linearregressionmodellistfeatur": 93, "multiclasslogisticregressionmodel": 94, "randomclassifiermodel": 95, "regressionmodel": 96, "seldonianmodel": 97, "supervisedmodel": 98, "object": [99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 193], "accuraci": 100, "false_negative_r": 101, "false_positive_r": 102, "is_estim": 103, "mean_error": 104, "mean_squared_error": 105, "negative_r": 106, "positive_r": 107, "true_negative_r": 108, "true_positive_r": 109, "batcher": 110, "binary_logistic_loss": 111, "confusion_matrix": 112, "evaluate_statist": 113, "gradient_bounded_squared_error": 114, "gradient_mean_squared_error": 115, "gradient_binary_logistic_loss": 116, "multiclass_logistic_loss": 117, "sample_from_statist": 118, "vector_accuraci": 119, "vector_error": 120, "vector_false_negative_r": 121, "vector_false_positive_r": 122, "vector_is_estim": 123, "vector_negative_r": 124, "vector_positive_r": 125, "vector_squared_error": 126, "vector_true_negative_r": 127, "vector_true_positive_r": 128, "vector_confusion_matrix": 129, "pytorch_cnn": [130, 131], "pytorchcnn": 131, "pytorch_model": [132, 133, 134], "supervisedpytorchbasemodel": 133, "pytorch_predict_vjp": 134, "optim": [135, 136, 137, 138], "gradient_desc": [136, 137, 138], "gradient_descent_adam": 137, "setup_gradi": 138, "parse_tre": [139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152], "node": [140, 141, 142, 143, 144, 145, 146, 147, 148], "basenod": 141, "cvarsqebasenod": 142, "confusionmatrixbasenod": 143, "constantnod": 144, "internalnod": 145, "medcustombasenod": 146, "multiclassbasenod": 147, "oper": 149, "parsetre": 151, "make_parse_trees_from_constraint": 152, "safety_test": [153, 154, 155], "safetytest": 155, "seldonian_algorithm": [156, 157], "seldonianalgorithm": 157, "spec": [158, 159, 160, 161, 162, 163, 164, 193], "rlspec": 159, "supervisedspec": 161, "createrlspec": 162, "createsupervisedspec": 163, "validate_parse_tre": 164, "util": [165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186], "rl_util": [166, 167, 168, 169], "argmax_multi": 167, "clamp": 168, "error": 169, "io_util": [170, 171, 172, 173, 174, 175], "dir_path": 171, "load_json": 172, "load_pickl": 173, "save_json": 174, "save_pickl": 175, "plot_util": [176, 177], "plot_gradient_desc": 177, "stats_util": [178, 179, 180, 181, 182], "stddev": 180, "tinv": 181, "weighted_sum_gamma": 182, "tutorial_util": [183, 184, 185, 186], "generate_clipped_data": 184, "generate_data": 185, "make_synthetic_regression_dataset": 186, "warn": [187, 188, 189], "custom_warn": [188, 189], "custom_formatwarn": 189, "api": 190, "get": 191, "start": 191, "instal": 191, "A": 191, "first": 191, "tutori": 191, "engin": 192, "document": 192, "content": 192, "overview": 193, "interfac": 193, "behavior": 193, "constraint": 193, "string": 193, "what": 193, "doe": 193, "sa": 193, "run": 193, "do": 193, "candid": 193, "select": 193, "safeti": 193, "test": 193}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"seldonian": [[0, "module-seldonian"]], "seldonian.RL": [[1, "module-seldonian.RL"]], "seldonian.RL.Agents": [[2, "module-seldonian.RL.Agents"]], "seldonian.RL.Agents.Agent": [[3, "module-seldonian.RL.Agents.Agent"]], "seldonian.RL.Agents.Agent.Agent": [[4, "seldonian-rl-agents-agent-agent"]], "seldonian.RL.Agents.Bases": [[5, "module-seldonian.RL.Agents.Bases"]], "seldonian.RL.Agents.Bases.Fourier": [[6, "module-seldonian.RL.Agents.Bases.Fourier"]], "seldonian.RL.Agents.Bases.Fourier.Fourier": [[7, "seldonian-rl-agents-bases-fourier-fourier"]], "seldonian.RL.Agents.Discrete_Random_Agent": [[8, "module-seldonian.RL.Agents.Discrete_Random_Agent"]], "seldonian.RL.Agents.Discrete_Random_Agent.Discrete_Random_Agent": [[9, "seldonian-rl-agents-discrete-random-agent-discrete-random-agent"]], "seldonian.RL.Agents.Function_Approximators": [[10, "module-seldonian.RL.Agents.Function_Approximators"]], "seldonian.RL.Agents.Function_Approximators.Function_Approximator": [[11, "module-seldonian.RL.Agents.Function_Approximators.Function_Approximator"]], "seldonian.RL.Agents.Function_Approximators.Function_Approximator.Function_Approximator": [[12, "seldonian-rl-agents-function-approximators-function-approximator-function-approximator"]], "seldonian.RL.Agents.Function_Approximators.Linear_FA": [[13, "module-seldonian.RL.Agents.Function_Approximators.Linear_FA"]], "seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_FA": [[14, "seldonian-rl-agents-function-approximators-linear-fa-linear-fa"]], "seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_state_action_value_FA": [[15, "seldonian-rl-agents-function-approximators-linear-fa-linear-state-action-value-fa"]], "seldonian.RL.Agents.Function_Approximators.Table": [[16, "module-seldonian.RL.Agents.Function_Approximators.Table"]], "seldonian.RL.Agents.Function_Approximators.Table.Q_Table": [[17, "seldonian-rl-agents-function-approximators-table-q-table"]], "seldonian.RL.Agents.Function_Approximators.Table.Table": [[18, "seldonian-rl-agents-function-approximators-table-table"]], "seldonian.RL.Agents.Function_Approximators.Table.construct_Q_Table_From_Env_Description": [[19, "seldonian-rl-agents-function-approximators-table-construct-q-table-from-env-description"]], "seldonian.RL.Agents.Parameterized_non_learning_softmax_agent": [[20, "module-seldonian.RL.Agents.Parameterized_non_learning_softmax_agent"]], "seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.Parameterized_non_learning_softmax_agent": [[21, "seldonian-rl-agents-parameterized-non-learning-softmax-agent-parameterized-non-learning-softmax-agent"]], "seldonian.RL.Agents.Policies": [[22, "module-seldonian.RL.Agents.Policies"]], "seldonian.RL.Agents.Policies.Policy": [[23, "module-seldonian.RL.Agents.Policies.Policy"]], "seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy": [[24, "seldonian-rl-agents-policies-policy-discrete-action-policy"]], "seldonian.RL.Agents.Policies.Policy.Policy": [[25, "seldonian-rl-agents-policies-policy-policy"]], "seldonian.RL.Agents.Policies.Softmax": [[26, "module-seldonian.RL.Agents.Policies.Softmax"]], "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax": [[27, "seldonian-rl-agents-policies-softmax-discretesoftmax"]], "seldonian.RL.Agents.Policies.Softmax.Softmax": [[28, "seldonian-rl-agents-policies-softmax-softmax"]], "seldonian.RL.Agents.keyboard_gridworld": [[29, "module-seldonian.RL.Agents.keyboard_gridworld"]], "seldonian.RL.Agents.keyboard_gridworld.Keyboard_gridworld": [[30, "seldonian-rl-agents-keyboard-gridworld-keyboard-gridworld"]], "seldonian.RL.Agents.mountain_car_rough_solution": [[31, "module-seldonian.RL.Agents.mountain_car_rough_solution"]], "seldonian.RL.Agents.mountain_car_rough_solution.Mountain_car_rough_solution": [[32, "seldonian-rl-agents-mountain-car-rough-solution-mountain-car-rough-solution"]], "seldonian.RL.Env_Description": [[33, "module-seldonian.RL.Env_Description"]], "seldonian.RL.Env_Description.Env_Description": [[34, "module-seldonian.RL.Env_Description.Env_Description"]], "seldonian.RL.Env_Description.Env_Description.Env_Description": [[35, "seldonian-rl-env-description-env-description-env-description"]], "seldonian.RL.Env_Description.Env_Description.check_space_type": [[36, "seldonian-rl-env-description-env-description-check-space-type"]], "seldonian.RL.Env_Description.Spaces": [[37, "module-seldonian.RL.Env_Description.Spaces"]], "seldonian.RL.Env_Description.Spaces.Continuous_Space": [[38, "seldonian-rl-env-description-spaces-continuous-space"]], "seldonian.RL.Env_Description.Spaces.Discrete_Space": [[39, "seldonian-rl-env-description-spaces-discrete-space"]], "seldonian.RL.RL_generate_dataset_and_spec_file": [[40, "module-seldonian.RL.RL_generate_dataset_and_spec_file"]], "seldonian.RL.RL_generate_dataset_and_spec_file.get_constraint_string": [[41, "seldonian-rl-rl-generate-dataset-and-spec-file-get-constraint-string"]], "seldonian.RL.RL_generate_dataset_and_spec_file.get_env_kwargs": [[42, "seldonian-rl-rl-generate-dataset-and-spec-file-get-env-kwargs"]], "seldonian.RL.RL_generate_dataset_and_spec_file.get_metadata_path": [[43, "seldonian-rl-rl-generate-dataset-and-spec-file-get-metadata-path"]], "seldonian.RL.RL_generate_dataset_and_spec_file.main": [[44, "seldonian-rl-rl-generate-dataset-and-spec-file-main"]], "seldonian.RL.RL_generate_dataset_and_spec_file.print_return_info": [[45, "seldonian-rl-rl-generate-dataset-and-spec-file-print-return-info"]], "seldonian.RL.RL_model": [[46, "module-seldonian.RL.RL_model"]], "seldonian.RL.RL_model.RL_model": [[47, "seldonian-rl-rl-model-rl-model"]], "seldonian.RL.RL_runner": [[48, "module-seldonian.RL.RL_runner"]], "seldonian.RL.RL_runner.create_agent": [[49, "seldonian-rl-rl-runner-create-agent"]], "seldonian.RL.RL_runner.run_all_trials": [[50, "seldonian-rl-rl-runner-run-all-trials"]], "seldonian.RL.RL_runner.run_episode": [[51, "seldonian-rl-rl-runner-run-episode"]], "seldonian.RL.RL_runner.run_episode_from_dict": [[52, "seldonian-rl-rl-runner-run-episode-from-dict"]], "seldonian.RL.RL_runner.run_trial": [[53, "seldonian-rl-rl-runner-run-trial"]], "seldonian.RL.RL_runner.run_trial_given_agent_and_env": [[54, "seldonian-rl-rl-runner-run-trial-given-agent-and-env"]], "seldonian.RL.environments": [[55, "module-seldonian.RL.environments"]], "seldonian.RL.environments.Environment": [[56, "module-seldonian.RL.environments.Environment"]], "seldonian.RL.environments.Environment.Environment": [[57, "seldonian-rl-environments-environment-environment"]], "seldonian.RL.environments.gridworld": [[58, "module-seldonian.RL.environments.gridworld"]], "seldonian.RL.environments.gridworld.Gridworld": [[59, "seldonian-rl-environments-gridworld-gridworld"]], "seldonian.RL.environments.mountaincar": [[60, "module-seldonian.RL.environments.mountaincar"]], "seldonian.RL.environments.mountaincar.Mountaincar": [[61, "seldonian-rl-environments-mountaincar-mountaincar"]], "seldonian.RL.environments.n_step_mountaincar": [[62, "module-seldonian.RL.environments.n_step_mountaincar"]], "seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar": [[63, "seldonian-rl-environments-n-step-mountaincar-n-step-mountaincar"]], "seldonian.RL.environments.simglucose_env": [[64, "module-seldonian.RL.environments.simglucose_env"]], "seldonian.RL.environments.simglucose_env.Simglucose": [[65, "seldonian-rl-environments-simglucose-env-simglucose"]], "seldonian.RL.generate_gridworld_episodes": [[66, "module-seldonian.RL.generate_gridworld_episodes"]], "seldonian.RL.generate_gridworld_episodes.main": [[67, "seldonian-rl-generate-gridworld-episodes-main"]], "seldonian.RL.generate_mountaincar_episodes": [[68, "module-seldonian.RL.generate_mountaincar_episodes"]], "seldonian.RL.generate_mountaincar_episodes.main": [[69, "seldonian-rl-generate-mountaincar-episodes-main"]], "seldonian.RL.generate_simglucose_episodes": [[70, "module-seldonian.RL.generate_simglucose_episodes"]], "seldonian.RL.generate_simglucose_episodes.get_max_obs": [[71, "seldonian-rl-generate-simglucose-episodes-get-max-obs"]], "seldonian.RL.generate_simglucose_episodes.main": [[72, "seldonian-rl-generate-simglucose-episodes-main"]], "seldonian.RL.hyperparams_and_settings": [[73, "module-seldonian.RL.hyperparams_and_settings"]], "seldonian.RL.hyperparams_and_settings.define_hyperparameter_and_setting_dict": [[74, "seldonian-rl-hyperparams-and-settings-define-hyperparameter-and-setting-dict"]], "seldonian.candidate_selection": [[75, "module-seldonian.candidate_selection"]], "seldonian.candidate_selection.candidate_selection": [[76, "module-seldonian.candidate_selection.candidate_selection"]], "seldonian.candidate_selection.candidate_selection.CandidateSelection": [[77, "seldonian-candidate-selection-candidate-selection-candidateselection"]], "seldonian.dataset": [[78, "module-seldonian.dataset"]], "seldonian.dataset.DataSet": [[79, "seldonian-dataset-dataset"]], "seldonian.dataset.DataSetLoader": [[80, "seldonian-dataset-datasetloader"]], "seldonian.dataset.Episode": [[81, "seldonian-dataset-episode"]], "seldonian.dataset.RLDataSet": [[82, "seldonian-dataset-rldataset"]], "seldonian.dataset.SupervisedDataSet": [[83, "seldonian-dataset-superviseddataset"]], "seldonian.dataset.load_supervised_metadata": [[84, "seldonian-dataset-load-supervised-metadata"]], "seldonian.models": [[85, "module-seldonian.models"]], "seldonian.models.models": [[86, "module-seldonian.models.models"]], "seldonian.models.models.BaseLogisticRegressionModel": [[87, "seldonian-models-models-baselogisticregressionmodel"]], "seldonian.models.models.BinaryLogisticRegressionModel": [[88, "seldonian-models-models-binarylogisticregressionmodel"]], "seldonian.models.models.BoundedLinearRegressionModel": [[89, "seldonian-models-models-boundedlinearregressionmodel"]], "seldonian.models.models.ClassificationModel": [[90, "seldonian-models-models-classificationmodel"]], "seldonian.models.models.DummyClassifierModel": [[91, "seldonian-models-models-dummyclassifiermodel"]], "seldonian.models.models.LinearRegressionModel": [[92, "seldonian-models-models-linearregressionmodel"]], "seldonian.models.models.LinearRegressionModelListFeatures": [[93, "seldonian-models-models-linearregressionmodellistfeatures"]], "seldonian.models.models.MultiClassLogisticRegressionModel": [[94, "seldonian-models-models-multiclasslogisticregressionmodel"]], "seldonian.models.models.RandomClassifierModel": [[95, "seldonian-models-models-randomclassifiermodel"]], "seldonian.models.models.RegressionModel": [[96, "seldonian-models-models-regressionmodel"]], "seldonian.models.models.SeldonianModel": [[97, "seldonian-models-models-seldonianmodel"]], "seldonian.models.models.SupervisedModel": [[98, "seldonian-models-models-supervisedmodel"]], "seldonian.models.objectives": [[99, "module-seldonian.models.objectives"]], "seldonian.models.objectives.Accuracy": [[100, "seldonian-models-objectives-accuracy"]], "seldonian.models.objectives.False_Negative_Rate": [[101, "seldonian-models-objectives-false-negative-rate"]], "seldonian.models.objectives.False_Positive_Rate": [[102, "seldonian-models-objectives-false-positive-rate"]], "seldonian.models.objectives.IS_estimate": [[103, "seldonian-models-objectives-is-estimate"]], "seldonian.models.objectives.Mean_Error": [[104, "seldonian-models-objectives-mean-error"]], "seldonian.models.objectives.Mean_Squared_Error": [[105, "seldonian-models-objectives-mean-squared-error"]], "seldonian.models.objectives.Negative_Rate": [[106, "seldonian-models-objectives-negative-rate"]], "seldonian.models.objectives.Positive_Rate": [[107, "seldonian-models-objectives-positive-rate"]], "seldonian.models.objectives.True_Negative_Rate": [[108, "seldonian-models-objectives-true-negative-rate"]], "seldonian.models.objectives.True_Positive_Rate": [[109, "seldonian-models-objectives-true-positive-rate"]], "seldonian.models.objectives.batcher": [[110, "seldonian-models-objectives-batcher"]], "seldonian.models.objectives.binary_logistic_loss": [[111, "seldonian-models-objectives-binary-logistic-loss"]], "seldonian.models.objectives.confusion_matrix": [[112, "seldonian-models-objectives-confusion-matrix"]], "seldonian.models.objectives.evaluate_statistic": [[113, "seldonian-models-objectives-evaluate-statistic"]], "seldonian.models.objectives.gradient_Bounded_Squared_Error": [[114, "seldonian-models-objectives-gradient-bounded-squared-error"]], "seldonian.models.objectives.gradient_Mean_Squared_Error": [[115, "seldonian-models-objectives-gradient-mean-squared-error"]], "seldonian.models.objectives.gradient_binary_logistic_loss": [[116, "seldonian-models-objectives-gradient-binary-logistic-loss"]], "seldonian.models.objectives.multiclass_logistic_loss": [[117, "seldonian-models-objectives-multiclass-logistic-loss"]], "seldonian.models.objectives.sample_from_statistic": [[118, "seldonian-models-objectives-sample-from-statistic"]], "seldonian.models.objectives.vector_Accuracy": [[119, "seldonian-models-objectives-vector-accuracy"]], "seldonian.models.objectives.vector_Error": [[120, "seldonian-models-objectives-vector-error"]], "seldonian.models.objectives.vector_False_Negative_Rate": [[121, "seldonian-models-objectives-vector-false-negative-rate"]], "seldonian.models.objectives.vector_False_Positive_Rate": [[122, "seldonian-models-objectives-vector-false-positive-rate"]], "seldonian.models.objectives.vector_IS_estimate": [[123, "seldonian-models-objectives-vector-is-estimate"]], "seldonian.models.objectives.vector_Negative_Rate": [[124, "seldonian-models-objectives-vector-negative-rate"]], "seldonian.models.objectives.vector_Positive_Rate": [[125, "seldonian-models-objectives-vector-positive-rate"]], "seldonian.models.objectives.vector_Squared_Error": [[126, "seldonian-models-objectives-vector-squared-error"]], "seldonian.models.objectives.vector_True_Negative_Rate": [[127, "seldonian-models-objectives-vector-true-negative-rate"]], "seldonian.models.objectives.vector_True_Positive_Rate": [[128, "seldonian-models-objectives-vector-true-positive-rate"]], "seldonian.models.objectives.vector_confusion_matrix": [[129, "seldonian-models-objectives-vector-confusion-matrix"]], "seldonian.models.pytorch_cnn": [[130, "module-seldonian.models.pytorch_cnn"]], "seldonian.models.pytorch_cnn.PytorchCNN": [[131, "seldonian-models-pytorch-cnn-pytorchcnn"]], "seldonian.models.pytorch_model": [[132, "module-seldonian.models.pytorch_model"]], "seldonian.models.pytorch_model.SupervisedPytorchBaseModel": [[133, "seldonian-models-pytorch-model-supervisedpytorchbasemodel"]], "seldonian.models.pytorch_model.pytorch_predict_vjp": [[134, "seldonian-models-pytorch-model-pytorch-predict-vjp"]], "seldonian.optimizers": [[135, "module-seldonian.optimizers"]], "seldonian.optimizers.gradient_descent": [[136, "module-seldonian.optimizers.gradient_descent"]], "seldonian.optimizers.gradient_descent.gradient_descent_adam": [[137, "seldonian-optimizers-gradient-descent-gradient-descent-adam"]], "seldonian.optimizers.gradient_descent.setup_gradients": [[138, "seldonian-optimizers-gradient-descent-setup-gradients"]], "seldonian.parse_tree": [[139, "module-seldonian.parse_tree"]], "seldonian.parse_tree.nodes": [[140, "module-seldonian.parse_tree.nodes"]], "seldonian.parse_tree.nodes.BaseNode": [[141, "seldonian-parse-tree-nodes-basenode"]], "seldonian.parse_tree.nodes.CVaRSQeBaseNode": [[142, "seldonian-parse-tree-nodes-cvarsqebasenode"]], "seldonian.parse_tree.nodes.ConfusionMatrixBaseNode": [[143, "seldonian-parse-tree-nodes-confusionmatrixbasenode"]], "seldonian.parse_tree.nodes.ConstantNode": [[144, "seldonian-parse-tree-nodes-constantnode"]], "seldonian.parse_tree.nodes.InternalNode": [[145, "seldonian-parse-tree-nodes-internalnode"]], "seldonian.parse_tree.nodes.MEDCustomBaseNode": [[146, "seldonian-parse-tree-nodes-medcustombasenode"]], "seldonian.parse_tree.nodes.MultiClassBaseNode": [[147, "seldonian-parse-tree-nodes-multiclassbasenode"]], "seldonian.parse_tree.nodes.Node": [[148, "seldonian-parse-tree-nodes-node"]], "seldonian.parse_tree.operators": [[149, "module-seldonian.parse_tree.operators"]], "seldonian.parse_tree.parse_tree": [[150, "module-seldonian.parse_tree.parse_tree"]], "seldonian.parse_tree.parse_tree.ParseTree": [[151, "seldonian-parse-tree-parse-tree-parsetree"]], "seldonian.parse_tree.parse_tree.make_parse_trees_from_constraints": [[152, "seldonian-parse-tree-parse-tree-make-parse-trees-from-constraints"]], "seldonian.safety_test": [[153, "module-seldonian.safety_test"]], "seldonian.safety_test.safety_test": [[154, "module-seldonian.safety_test.safety_test"]], "seldonian.safety_test.safety_test.SafetyTest": [[155, "seldonian-safety-test-safety-test-safetytest"]], "seldonian.seldonian_algorithm": [[156, "module-seldonian.seldonian_algorithm"]], "seldonian.seldonian_algorithm.SeldonianAlgorithm": [[157, "seldonian-seldonian-algorithm-seldonianalgorithm"]], "seldonian.spec": [[158, "module-seldonian.spec"]], "seldonian.spec.RLSpec": [[159, "seldonian-spec-rlspec"]], "seldonian.spec.Spec": [[160, "seldonian-spec-spec"]], "seldonian.spec.SupervisedSpec": [[161, "seldonian-spec-supervisedspec"]], "seldonian.spec.createRLSpec": [[162, "seldonian-spec-createrlspec"]], "seldonian.spec.createSupervisedSpec": [[163, "seldonian-spec-createsupervisedspec"]], "seldonian.spec.validate_parse_trees": [[164, "seldonian-spec-validate-parse-trees"]], "seldonian.utils": [[165, "module-seldonian.utils"]], "seldonian.utils.RL_utils": [[166, "module-seldonian.utils.RL_utils"]], "seldonian.utils.RL_utils.argmax_multi": [[167, "seldonian-utils-rl-utils-argmax-multi"]], "seldonian.utils.RL_utils.clamp": [[168, "seldonian-utils-rl-utils-clamp"]], "seldonian.utils.RL_utils.error": [[169, "seldonian-utils-rl-utils-error"]], "seldonian.utils.io_utils": [[170, "module-seldonian.utils.io_utils"]], "seldonian.utils.io_utils.dir_path": [[171, "seldonian-utils-io-utils-dir-path"]], "seldonian.utils.io_utils.load_json": [[172, "seldonian-utils-io-utils-load-json"]], "seldonian.utils.io_utils.load_pickle": [[173, "seldonian-utils-io-utils-load-pickle"]], "seldonian.utils.io_utils.save_json": [[174, "seldonian-utils-io-utils-save-json"]], "seldonian.utils.io_utils.save_pickle": [[175, "seldonian-utils-io-utils-save-pickle"]], "seldonian.utils.plot_utils": [[176, "module-seldonian.utils.plot_utils"]], "seldonian.utils.plot_utils.plot_gradient_descent": [[177, "seldonian-utils-plot-utils-plot-gradient-descent"]], "seldonian.utils.stats_utils": [[178, "module-seldonian.utils.stats_utils"]], "seldonian.utils.stats_utils.softmax": [[179, "seldonian-utils-stats-utils-softmax"]], "seldonian.utils.stats_utils.stddev": [[180, "seldonian-utils-stats-utils-stddev"]], "seldonian.utils.stats_utils.tinv": [[181, "seldonian-utils-stats-utils-tinv"]], "seldonian.utils.stats_utils.weighted_sum_gamma": [[182, "seldonian-utils-stats-utils-weighted-sum-gamma"]], "seldonian.utils.tutorial_utils": [[183, "module-seldonian.utils.tutorial_utils"]], "seldonian.utils.tutorial_utils.generate_clipped_data": [[184, "seldonian-utils-tutorial-utils-generate-clipped-data"]], "seldonian.utils.tutorial_utils.generate_data": [[185, "seldonian-utils-tutorial-utils-generate-data"]], "seldonian.utils.tutorial_utils.make_synthetic_regression_dataset": [[186, "seldonian-utils-tutorial-utils-make-synthetic-regression-dataset"]], "seldonian.warnings": [[187, "module-seldonian.warnings"]], "seldonian.warnings.custom_warnings": [[188, "module-seldonian.warnings.custom_warnings"]], "seldonian.warnings.custom_warnings.custom_formatwarning": [[189, "seldonian-warnings-custom-warnings-custom-formatwarning"]], "API": [[190, "api"]], "Getting Started": [[191, "getting-started"]], "Installation": [[191, "installation"]], "A first tutorial": [[191, "a-first-tutorial"]], "Seldonian Engine documentation": [[192, "seldonian-engine-documentation"]], "Table of contents": [[192, "table-of-contents"]], "Overview": [[193, "overview"]], "Interface": [[193, "interface"]], "Spec object": [[193, "spec-object"]], "Dataset object": [[193, "dataset-object"]], "Model object": [[193, "model-object"]], "Behavioral constraints": [[193, "behavioral-constraints"]], "Constraint strings": [[193, "constraint-strings"]], "What does SA.run() do?": [[193, "what-does-sa-run-do"]], "Candidate Selection": [[193, "candidate-selection"]], "Safety Test": [[193, "safety-test"]]}, "indexentries": {"module": [[0, "module-seldonian"], [1, "module-seldonian.RL"], [2, "module-seldonian.RL.Agents"], [3, "module-seldonian.RL.Agents.Agent"], [5, "module-seldonian.RL.Agents.Bases"], [6, "module-seldonian.RL.Agents.Bases.Fourier"], [8, "module-seldonian.RL.Agents.Discrete_Random_Agent"], [10, "module-seldonian.RL.Agents.Function_Approximators"], [11, "module-seldonian.RL.Agents.Function_Approximators.Function_Approximator"], [13, "module-seldonian.RL.Agents.Function_Approximators.Linear_FA"], [16, "module-seldonian.RL.Agents.Function_Approximators.Table"], [20, "module-seldonian.RL.Agents.Parameterized_non_learning_softmax_agent"], [22, "module-seldonian.RL.Agents.Policies"], [23, "module-seldonian.RL.Agents.Policies.Policy"], [26, "module-seldonian.RL.Agents.Policies.Softmax"], [29, "module-seldonian.RL.Agents.keyboard_gridworld"], [31, "module-seldonian.RL.Agents.mountain_car_rough_solution"], [33, "module-seldonian.RL.Env_Description"], [34, "module-seldonian.RL.Env_Description.Env_Description"], [37, "module-seldonian.RL.Env_Description.Spaces"], [40, "module-seldonian.RL.RL_generate_dataset_and_spec_file"], [46, "module-seldonian.RL.RL_model"], [48, "module-seldonian.RL.RL_runner"], [55, "module-seldonian.RL.environments"], [56, "module-seldonian.RL.environments.Environment"], [58, "module-seldonian.RL.environments.gridworld"], [60, "module-seldonian.RL.environments.mountaincar"], [62, "module-seldonian.RL.environments.n_step_mountaincar"], [64, "module-seldonian.RL.environments.simglucose_env"], [66, "module-seldonian.RL.generate_gridworld_episodes"], [68, "module-seldonian.RL.generate_mountaincar_episodes"], [70, "module-seldonian.RL.generate_simglucose_episodes"], [73, "module-seldonian.RL.hyperparams_and_settings"], [75, "module-seldonian.candidate_selection"], [76, "module-seldonian.candidate_selection.candidate_selection"], [78, "module-seldonian.dataset"], [85, "module-seldonian.models"], [86, "module-seldonian.models.models"], [99, "module-seldonian.models.objectives"], [130, "module-seldonian.models.pytorch_cnn"], [132, "module-seldonian.models.pytorch_model"], [135, "module-seldonian.optimizers"], [136, "module-seldonian.optimizers.gradient_descent"], [139, "module-seldonian.parse_tree"], [140, "module-seldonian.parse_tree.nodes"], [149, "module-seldonian.parse_tree.operators"], [150, "module-seldonian.parse_tree.parse_tree"], [153, "module-seldonian.safety_test"], [154, "module-seldonian.safety_test.safety_test"], [156, "module-seldonian.seldonian_algorithm"], [158, "module-seldonian.spec"], [165, "module-seldonian.utils"], [166, "module-seldonian.utils.RL_utils"], [170, "module-seldonian.utils.io_utils"], [176, "module-seldonian.utils.plot_utils"], [178, "module-seldonian.utils.stats_utils"], [183, "module-seldonian.utils.tutorial_utils"], [187, "module-seldonian.warnings"], [188, "module-seldonian.warnings.custom_warnings"]], "seldonian": [[0, "module-seldonian"]], "seldonian.rl": [[1, "module-seldonian.RL"]], "seldonian.rl.agents": [[2, "module-seldonian.RL.Agents"]], "seldonian.rl.agents.agent": [[3, "module-seldonian.RL.Agents.Agent"]], "agent (class in seldonian.rl.agents.agent)": [[4, "seldonian.RL.Agents.Agent.Agent"]], "__init__() (agent method)": [[4, "seldonian.RL.Agents.Agent.Agent.__init__"]], "__repr__() (agent method)": [[4, "seldonian.RL.Agents.Agent.Agent.__repr__"]], "choose_action() (agent method)": [[4, "seldonian.RL.Agents.Agent.Agent.choose_action"]], "get_params() (agent method)": [[4, "seldonian.RL.Agents.Agent.Agent.get_params"]], "get_prob_this_action() (agent method)": [[4, "seldonian.RL.Agents.Agent.Agent.get_prob_this_action"]], "set_new_params() (agent method)": [[4, "seldonian.RL.Agents.Agent.Agent.set_new_params"]], "update() (agent method)": [[4, "seldonian.RL.Agents.Agent.Agent.update"]], "seldonian.rl.agents.bases": [[5, "module-seldonian.RL.Agents.Bases"]], "seldonian.rl.agents.bases.fourier": [[6, "module-seldonian.RL.Agents.Bases.Fourier"]], "fourier (class in seldonian.rl.agents.bases.fourier)": [[7, "seldonian.RL.Agents.Bases.Fourier.Fourier"]], "__init__() (fourier method)": [[7, "seldonian.RL.Agents.Bases.Fourier.Fourier.__init__"]], "__repr__() (fourier method)": [[7, "seldonian.RL.Agents.Bases.Fourier.Fourier.__repr__"]], "calculate_num_features() (fourier method)": [[7, "seldonian.RL.Agents.Bases.Fourier.Fourier.calculate_num_features"]], "construct_basis_matrix() (fourier method)": [[7, "seldonian.RL.Agents.Bases.Fourier.Fourier.construct_basis_matrix"]], "get_features() (fourier method)": [[7, "seldonian.RL.Agents.Bases.Fourier.Fourier.get_features"]], "get_normalized_observation() (fourier method)": [[7, "seldonian.RL.Agents.Bases.Fourier.Fourier.get_normalized_observation"]], "seldonian.rl.agents.discrete_random_agent": [[8, "module-seldonian.RL.Agents.Discrete_Random_Agent"]], "discrete_random_agent (class in seldonian.rl.agents.discrete_random_agent)": [[9, "seldonian.RL.Agents.Discrete_Random_Agent.Discrete_Random_Agent"]], "__init__() (discrete_random_agent method)": [[9, "seldonian.RL.Agents.Discrete_Random_Agent.Discrete_Random_Agent.__init__"]], "__repr__() (discrete_random_agent method)": [[9, "seldonian.RL.Agents.Discrete_Random_Agent.Discrete_Random_Agent.__repr__"]], "choose_action() (discrete_random_agent method)": [[9, "seldonian.RL.Agents.Discrete_Random_Agent.Discrete_Random_Agent.choose_action"]], "get_params() (discrete_random_agent method)": [[9, "seldonian.RL.Agents.Discrete_Random_Agent.Discrete_Random_Agent.get_params"]], "get_prob_this_action() (discrete_random_agent method)": [[9, "seldonian.RL.Agents.Discrete_Random_Agent.Discrete_Random_Agent.get_prob_this_action"]], "set_new_params() (discrete_random_agent method)": [[9, "seldonian.RL.Agents.Discrete_Random_Agent.Discrete_Random_Agent.set_new_params"]], "update() (discrete_random_agent method)": [[9, "seldonian.RL.Agents.Discrete_Random_Agent.Discrete_Random_Agent.update"]], "seldonian.rl.agents.function_approximators": [[10, "module-seldonian.RL.Agents.Function_Approximators"]], "seldonian.rl.agents.function_approximators.function_approximator": [[11, "module-seldonian.RL.Agents.Function_Approximators.Function_Approximator"]], "function_approximator (class in seldonian.rl.agents.function_approximators.function_approximator)": [[12, "seldonian.RL.Agents.Function_Approximators.Function_Approximator.Function_Approximator"]], "__init__() (function_approximator method)": [[12, "seldonian.RL.Agents.Function_Approximators.Function_Approximator.Function_Approximator.__init__"]], "__repr__() (function_approximator method)": [[12, "seldonian.RL.Agents.Function_Approximators.Function_Approximator.Function_Approximator.__repr__"]], "set_new_params() (function_approximator method)": [[12, "seldonian.RL.Agents.Function_Approximators.Function_Approximator.Function_Approximator.set_new_params"]], "seldonian.rl.agents.function_approximators.linear_fa": [[13, "module-seldonian.RL.Agents.Function_Approximators.Linear_FA"]], "linear_fa (class in seldonian.rl.agents.function_approximators.linear_fa)": [[14, "seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_FA"]], "__init__() (linear_fa method)": [[14, "seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_FA.__init__"]], "__repr__() (linear_fa method)": [[14, "seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_FA.__repr__"]], "set_new_params() (linear_fa method)": [[14, "seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_FA.set_new_params"]], "linear_state_action_value_fa (class in seldonian.rl.agents.function_approximators.linear_fa)": [[15, "seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_state_action_value_FA"]], "__init__() (linear_state_action_value_fa method)": [[15, "seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_state_action_value_FA.__init__"]], "__repr__() (linear_state_action_value_fa method)": [[15, "seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_state_action_value_FA.__repr__"]], "set_new_params() (linear_state_action_value_fa method)": [[15, "seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_state_action_value_FA.set_new_params"]], "seldonian.rl.agents.function_approximators.table": [[16, "module-seldonian.RL.Agents.Function_Approximators.Table"]], "q_table (class in seldonian.rl.agents.function_approximators.table)": [[17, "seldonian.RL.Agents.Function_Approximators.Table.Q_Table"]], "__init__() (q_table method)": [[17, "seldonian.RL.Agents.Function_Approximators.Table.Q_Table.__init__"]], "__repr__() (q_table method)": [[17, "seldonian.RL.Agents.Function_Approximators.Table.Q_Table.__repr__"]], "from_environment_state_to_0_indexed_state() (q_table method)": [[17, "seldonian.RL.Agents.Function_Approximators.Table.Q_Table.from_environment_state_to_0_indexed_state"]], "get_action_values_given_state() (q_table method)": [[17, "seldonian.RL.Agents.Function_Approximators.Table.Q_Table.get_action_values_given_state"]], "get_action_values_given_zero_indexed_state() (q_table method)": [[17, "seldonian.RL.Agents.Function_Approximators.Table.Q_Table.get_action_values_given_zero_indexed_state"]], "set_new_params() (q_table method)": [[17, "seldonian.RL.Agents.Function_Approximators.Table.Q_Table.set_new_params"]], "table (class in seldonian.rl.agents.function_approximators.table)": [[18, "seldonian.RL.Agents.Function_Approximators.Table.Table"]], "__init__() (table method)": [[18, "seldonian.RL.Agents.Function_Approximators.Table.Table.__init__"]], "__repr__() (table method)": [[18, "seldonian.RL.Agents.Function_Approximators.Table.Table.__repr__"]], "from_environment_state_to_0_indexed_state() (table method)": [[18, "seldonian.RL.Agents.Function_Approximators.Table.Table.from_environment_state_to_0_indexed_state"]], "set_new_params() (table method)": [[18, "seldonian.RL.Agents.Function_Approximators.Table.Table.set_new_params"]], "construct_q_table_from_env_description() (in module seldonian.rl.agents.function_approximators.table)": [[19, "seldonian.RL.Agents.Function_Approximators.Table.construct_Q_Table_From_Env_Description"]], "seldonian.rl.agents.parameterized_non_learning_softmax_agent": [[20, "module-seldonian.RL.Agents.Parameterized_non_learning_softmax_agent"]], "parameterized_non_learning_softmax_agent (class in seldonian.rl.agents.parameterized_non_learning_softmax_agent)": [[21, "seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.Parameterized_non_learning_softmax_agent"]], "__init__() (parameterized_non_learning_softmax_agent method)": [[21, "seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.Parameterized_non_learning_softmax_agent.__init__"]], "__repr__() (parameterized_non_learning_softmax_agent method)": [[21, "seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.Parameterized_non_learning_softmax_agent.__repr__"]], "choose_action() (parameterized_non_learning_softmax_agent method)": [[21, "seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.Parameterized_non_learning_softmax_agent.choose_action"]], "get_action_values() (parameterized_non_learning_softmax_agent method)": [[21, "seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.Parameterized_non_learning_softmax_agent.get_action_values"]], "get_params() (parameterized_non_learning_softmax_agent method)": [[21, "seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.Parameterized_non_learning_softmax_agent.get_params"]], "get_prob_this_action() (parameterized_non_learning_softmax_agent method)": [[21, "seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.Parameterized_non_learning_softmax_agent.get_prob_this_action"]], "set_new_params() (parameterized_non_learning_softmax_agent method)": [[21, "seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.Parameterized_non_learning_softmax_agent.set_new_params"]], "update() (parameterized_non_learning_softmax_agent method)": [[21, "seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.Parameterized_non_learning_softmax_agent.update"]], "seldonian.rl.agents.policies": [[22, "module-seldonian.RL.Agents.Policies"]], "seldonian.rl.agents.policies.policy": [[23, "module-seldonian.RL.Agents.Policies.Policy"]], "discrete_action_policy (class in seldonian.rl.agents.policies.policy)": [[24, "seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy"]], "__init__() (discrete_action_policy method)": [[24, "seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy.__init__"]], "__repr__() (discrete_action_policy method)": [[24, "seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy.__repr__"]], "choose_action() (discrete_action_policy method)": [[24, "seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy.choose_action"]], "construct_basis_and_linear_fa() (discrete_action_policy method)": [[24, "seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy.construct_basis_and_linear_FA"]], "from_0_indexed_action_to_environment_action() (discrete_action_policy method)": [[24, "seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy.from_0_indexed_action_to_environment_action"]], "from_environment_action_to_0_indexed_action() (discrete_action_policy method)": [[24, "seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy.from_environment_action_to_0_indexed_action"]], "get_action_values_given_state() (discrete_action_policy method)": [[24, "seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy.get_action_values_given_state"]], "get_params() (discrete_action_policy method)": [[24, "seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy.get_params"]], "get_prob_this_action() (discrete_action_policy method)": [[24, "seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy.get_prob_this_action"]], "make_state_action_fa() (discrete_action_policy method)": [[24, "seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy.make_state_action_FA"]], "set_new_params() (discrete_action_policy method)": [[24, "seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy.set_new_params"]], "policy (class in seldonian.rl.agents.policies.policy)": [[25, "seldonian.RL.Agents.Policies.Policy.Policy"]], "__init__() (policy method)": [[25, "seldonian.RL.Agents.Policies.Policy.Policy.__init__"]], "__repr__() (policy method)": [[25, "seldonian.RL.Agents.Policies.Policy.Policy.__repr__"]], "choose_action() (policy method)": [[25, "seldonian.RL.Agents.Policies.Policy.Policy.choose_action"]], "get_params() (policy method)": [[25, "seldonian.RL.Agents.Policies.Policy.Policy.get_params"]], "get_prob_this_action() (policy method)": [[25, "seldonian.RL.Agents.Policies.Policy.Policy.get_prob_this_action"]], "set_new_params() (policy method)": [[25, "seldonian.RL.Agents.Policies.Policy.Policy.set_new_params"]], "seldonian.rl.agents.policies.softmax": [[26, "module-seldonian.RL.Agents.Policies.Softmax"]], "discretesoftmax (class in seldonian.rl.agents.policies.softmax)": [[27, "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax"]], "__init__() (discretesoftmax method)": [[27, "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax.__init__"]], "__repr__() (discretesoftmax method)": [[27, "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax.__repr__"]], "_arg() (discretesoftmax method)": [[27, "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax._arg"]], "_denom() (discretesoftmax method)": [[27, "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax._denom"]], "choose_action() (discretesoftmax method)": [[27, "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax.choose_action"]], "choose_action_from_action_values() (discretesoftmax method)": [[27, "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax.choose_action_from_action_values"]], "construct_basis_and_linear_fa() (discretesoftmax method)": [[27, "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax.construct_basis_and_linear_FA"]], "from_0_indexed_action_to_environment_action() (discretesoftmax method)": [[27, "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax.from_0_indexed_action_to_environment_action"]], "from_environment_action_to_0_indexed_action() (discretesoftmax method)": [[27, "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax.from_environment_action_to_0_indexed_action"]], "get_action_probs_from_action_values() (discretesoftmax method)": [[27, "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax.get_action_probs_from_action_values"]], "get_action_values_given_state() (discretesoftmax method)": [[27, "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax.get_action_values_given_state"]], "get_e_to_the_something_terms() (discretesoftmax method)": [[27, "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax.get_e_to_the_something_terms"]], "get_params() (discretesoftmax method)": [[27, "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax.get_params"]], "get_prob_this_action() (discretesoftmax method)": [[27, "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax.get_prob_this_action"]], "make_state_action_fa() (discretesoftmax method)": [[27, "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax.make_state_action_FA"]], "set_new_params() (discretesoftmax method)": [[27, "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax.set_new_params"]], "softmax (class in seldonian.rl.agents.policies.softmax)": [[28, "seldonian.RL.Agents.Policies.Softmax.Softmax"]], "__init__() (softmax method)": [[28, "seldonian.RL.Agents.Policies.Softmax.Softmax.__init__"]], "__repr__() (softmax method)": [[28, "seldonian.RL.Agents.Policies.Softmax.Softmax.__repr__"]], "choose_action() (softmax method)": [[28, "seldonian.RL.Agents.Policies.Softmax.Softmax.choose_action"]], "choose_action_from_action_values() (softmax method)": [[28, "seldonian.RL.Agents.Policies.Softmax.Softmax.choose_action_from_action_values"]], "construct_basis_and_linear_fa() (softmax method)": [[28, "seldonian.RL.Agents.Policies.Softmax.Softmax.construct_basis_and_linear_FA"]], "from_0_indexed_action_to_environment_action() (softmax method)": [[28, "seldonian.RL.Agents.Policies.Softmax.Softmax.from_0_indexed_action_to_environment_action"]], "from_environment_action_to_0_indexed_action() (softmax method)": [[28, "seldonian.RL.Agents.Policies.Softmax.Softmax.from_environment_action_to_0_indexed_action"]], "get_action_probs_from_action_values() (softmax method)": [[28, "seldonian.RL.Agents.Policies.Softmax.Softmax.get_action_probs_from_action_values"]], "get_action_values_given_state() (softmax method)": [[28, "seldonian.RL.Agents.Policies.Softmax.Softmax.get_action_values_given_state"]], "get_e_to_the_something_terms() (softmax method)": [[28, "seldonian.RL.Agents.Policies.Softmax.Softmax.get_e_to_the_something_terms"]], "get_params() (softmax method)": [[28, "seldonian.RL.Agents.Policies.Softmax.Softmax.get_params"]], "get_prob_this_action() (softmax method)": [[28, "seldonian.RL.Agents.Policies.Softmax.Softmax.get_prob_this_action"]], "make_state_action_fa() (softmax method)": [[28, "seldonian.RL.Agents.Policies.Softmax.Softmax.make_state_action_FA"]], "set_new_params() (softmax method)": [[28, "seldonian.RL.Agents.Policies.Softmax.Softmax.set_new_params"]], "seldonian.rl.agents.keyboard_gridworld": [[29, "module-seldonian.RL.Agents.keyboard_gridworld"]], "keyboard_gridworld (class in seldonian.rl.agents.keyboard_gridworld)": [[30, "seldonian.RL.Agents.keyboard_gridworld.Keyboard_gridworld"]], "__init__() (keyboard_gridworld method)": [[30, "seldonian.RL.Agents.keyboard_gridworld.Keyboard_gridworld.__init__"]], "__repr__() (keyboard_gridworld method)": [[30, "seldonian.RL.Agents.keyboard_gridworld.Keyboard_gridworld.__repr__"]], "choose_action() (keyboard_gridworld method)": [[30, "seldonian.RL.Agents.keyboard_gridworld.Keyboard_gridworld.choose_action"]], "get_params() (keyboard_gridworld method)": [[30, "seldonian.RL.Agents.keyboard_gridworld.Keyboard_gridworld.get_params"]], "get_prob_this_action() (keyboard_gridworld method)": [[30, "seldonian.RL.Agents.keyboard_gridworld.Keyboard_gridworld.get_prob_this_action"]], "set_new_params() (keyboard_gridworld method)": [[30, "seldonian.RL.Agents.keyboard_gridworld.Keyboard_gridworld.set_new_params"]], "update() (keyboard_gridworld method)": [[30, "seldonian.RL.Agents.keyboard_gridworld.Keyboard_gridworld.update"]], "seldonian.rl.agents.mountain_car_rough_solution": [[31, "module-seldonian.RL.Agents.mountain_car_rough_solution"]], "mountain_car_rough_solution (class in seldonian.rl.agents.mountain_car_rough_solution)": [[32, "seldonian.RL.Agents.mountain_car_rough_solution.Mountain_car_rough_solution"]], "__init__() (mountain_car_rough_solution method)": [[32, "seldonian.RL.Agents.mountain_car_rough_solution.Mountain_car_rough_solution.__init__"]], "__repr__() (mountain_car_rough_solution method)": [[32, "seldonian.RL.Agents.mountain_car_rough_solution.Mountain_car_rough_solution.__repr__"]], "choose_action() (mountain_car_rough_solution method)": [[32, "seldonian.RL.Agents.mountain_car_rough_solution.Mountain_car_rough_solution.choose_action"]], "get_params() (mountain_car_rough_solution method)": [[32, "seldonian.RL.Agents.mountain_car_rough_solution.Mountain_car_rough_solution.get_params"]], "get_prob_this_action() (mountain_car_rough_solution method)": [[32, "seldonian.RL.Agents.mountain_car_rough_solution.Mountain_car_rough_solution.get_prob_this_action"]], "set_new_params() (mountain_car_rough_solution method)": [[32, "seldonian.RL.Agents.mountain_car_rough_solution.Mountain_car_rough_solution.set_new_params"]], "update() (mountain_car_rough_solution method)": [[32, "seldonian.RL.Agents.mountain_car_rough_solution.Mountain_car_rough_solution.update"]], "seldonian.rl.env_description": [[33, "module-seldonian.RL.Env_Description"]], "seldonian.rl.env_description.env_description": [[34, "module-seldonian.RL.Env_Description.Env_Description"]], "env_description (class in seldonian.rl.env_description.env_description)": [[35, "seldonian.RL.Env_Description.Env_Description.Env_Description"]], "__init__() (env_description method)": [[35, "seldonian.RL.Env_Description.Env_Description.Env_Description.__init__"]], "__repr__() (env_description method)": [[35, "seldonian.RL.Env_Description.Env_Description.Env_Description.__repr__"]], "get_min_action() (env_description method)": [[35, "seldonian.RL.Env_Description.Env_Description.Env_Description.get_min_action"]], "get_min_state() (env_description method)": [[35, "seldonian.RL.Env_Description.Env_Description.Env_Description.get_min_state"]], "get_num_actions() (env_description method)": [[35, "seldonian.RL.Env_Description.Env_Description.Env_Description.get_num_actions"]], "get_num_observation_dims() (env_description method)": [[35, "seldonian.RL.Env_Description.Env_Description.Env_Description.get_num_observation_dims"]], "get_num_states() (env_description method)": [[35, "seldonian.RL.Env_Description.Env_Description.Env_Description.get_num_states"]], "check_space_type() (in module seldonian.rl.env_description.env_description)": [[36, "seldonian.RL.Env_Description.Env_Description.check_space_type"]], "seldonian.rl.env_description.spaces": [[37, "module-seldonian.RL.Env_Description.Spaces"]], "continuous_space (class in seldonian.rl.env_description.spaces)": [[38, "seldonian.RL.Env_Description.Spaces.Continuous_Space"]], "__init__() (continuous_space method)": [[38, "seldonian.RL.Env_Description.Spaces.Continuous_Space.__init__"]], "__repr__() (continuous_space method)": [[38, "seldonian.RL.Env_Description.Spaces.Continuous_Space.__repr__"]], "check_bounds_valid() (continuous_space method)": [[38, "seldonian.RL.Env_Description.Spaces.Continuous_Space.check_bounds_valid"]], "get_num_dims() (continuous_space method)": [[38, "seldonian.RL.Env_Description.Spaces.Continuous_Space.get_num_dims"]], "discrete_space (class in seldonian.rl.env_description.spaces)": [[39, "seldonian.RL.Env_Description.Spaces.Discrete_Space"]], "__init__() (discrete_space method)": [[39, "seldonian.RL.Env_Description.Spaces.Discrete_Space.__init__"]], "__repr__() (discrete_space method)": [[39, "seldonian.RL.Env_Description.Spaces.Discrete_Space.__repr__"]], "get_num_values() (discrete_space method)": [[39, "seldonian.RL.Env_Description.Spaces.Discrete_Space.get_num_values"]], "seldonian.rl.rl_generate_dataset_and_spec_file": [[40, "module-seldonian.RL.RL_generate_dataset_and_spec_file"]], "get_constraint_string() (in module seldonian.rl.rl_generate_dataset_and_spec_file)": [[41, "seldonian.RL.RL_generate_dataset_and_spec_file.get_constraint_string"]], "get_env_kwargs() (in module seldonian.rl.rl_generate_dataset_and_spec_file)": [[42, "seldonian.RL.RL_generate_dataset_and_spec_file.get_env_kwargs"]], "get_metadata_path() (in module seldonian.rl.rl_generate_dataset_and_spec_file)": [[43, "seldonian.RL.RL_generate_dataset_and_spec_file.get_metadata_path"]], "main() (in module seldonian.rl.rl_generate_dataset_and_spec_file)": [[44, "seldonian.RL.RL_generate_dataset_and_spec_file.main"]], "print_return_info() (in module seldonian.rl.rl_generate_dataset_and_spec_file)": [[45, "seldonian.RL.RL_generate_dataset_and_spec_file.print_return_info"]], "seldonian.rl.rl_model": [[46, "module-seldonian.RL.RL_model"]], "rl_model (class in seldonian.rl.rl_model)": [[47, "seldonian.RL.RL_model.RL_model"]], "__init__() (rl_model method)": [[47, "seldonian.RL.RL_model.RL_model.__init__"]], "__repr__() (rl_model method)": [[47, "seldonian.RL.RL_model.RL_model.__repr__"]], "get_prob_this_action() (rl_model method)": [[47, "seldonian.RL.RL_model.RL_model.get_prob_this_action"]], "get_probs_from_observations_and_actions() (rl_model method)": [[47, "seldonian.RL.RL_model.RL_model.get_probs_from_observations_and_actions"]], "seldonian.rl.rl_runner": [[48, "module-seldonian.RL.RL_runner"]], "create_agent() (in module seldonian.rl.rl_runner)": [[49, "seldonian.RL.RL_runner.create_agent"]], "run_all_trials() (in module seldonian.rl.rl_runner)": [[50, "seldonian.RL.RL_runner.run_all_trials"]], "run_episode() (in module seldonian.rl.rl_runner)": [[51, "seldonian.RL.RL_runner.run_episode"]], "run_episode_from_dict() (in module seldonian.rl.rl_runner)": [[52, "seldonian.RL.RL_runner.run_episode_from_dict"]], "run_trial() (in module seldonian.rl.rl_runner)": [[53, "seldonian.RL.RL_runner.run_trial"]], "run_trial_given_agent_and_env() (in module seldonian.rl.rl_runner)": [[54, "seldonian.RL.RL_runner.run_trial_given_agent_and_env"]], "seldonian.rl.environments": [[55, "module-seldonian.RL.environments"]], "seldonian.rl.environments.environment": [[56, "module-seldonian.RL.environments.Environment"]], "environment (class in seldonian.rl.environments.environment)": [[57, "seldonian.RL.environments.Environment.Environment"]], "__init__() (environment method)": [[57, "seldonian.RL.environments.Environment.Environment.__init__"]], "__repr__() (environment method)": [[57, "seldonian.RL.environments.Environment.Environment.__repr__"]], "get_env_description() (environment method)": [[57, "seldonian.RL.environments.Environment.Environment.get_env_description"]], "get_observation() (environment method)": [[57, "seldonian.RL.environments.Environment.Environment.get_observation"]], "reset() (environment method)": [[57, "seldonian.RL.environments.Environment.Environment.reset"]], "start_visualizing() (environment method)": [[57, "seldonian.RL.environments.Environment.Environment.start_visualizing"]], "stop_visualizing() (environment method)": [[57, "seldonian.RL.environments.Environment.Environment.stop_visualizing"]], "terminated() (environment method)": [[57, "seldonian.RL.environments.Environment.Environment.terminated"]], "transition() (environment method)": [[57, "seldonian.RL.environments.Environment.Environment.transition"]], "visualize() (environment method)": [[57, "seldonian.RL.environments.Environment.Environment.visualize"]], "seldonian.rl.environments.gridworld": [[58, "module-seldonian.RL.environments.gridworld"]], "gridworld (class in seldonian.rl.environments.gridworld)": [[59, "seldonian.RL.environments.gridworld.Gridworld"]], "__init__() (gridworld method)": [[59, "seldonian.RL.environments.gridworld.Gridworld.__init__"]], "__repr__() (gridworld method)": [[59, "seldonian.RL.environments.gridworld.Gridworld.__repr__"]], "create_env_description() (gridworld method)": [[59, "seldonian.RL.environments.gridworld.Gridworld.create_env_description"]], "get_env_description() (gridworld method)": [[59, "seldonian.RL.environments.gridworld.Gridworld.get_env_description"]], "get_observation() (gridworld method)": [[59, "seldonian.RL.environments.gridworld.Gridworld.get_observation"]], "is_in_goal_state() (gridworld method)": [[59, "seldonian.RL.environments.gridworld.Gridworld.is_in_goal_state"]], "reset() (gridworld method)": [[59, "seldonian.RL.environments.gridworld.Gridworld.reset"]], "start_visualizing() (gridworld method)": [[59, "seldonian.RL.environments.gridworld.Gridworld.start_visualizing"]], "stop_visualizing() (gridworld method)": [[59, "seldonian.RL.environments.gridworld.Gridworld.stop_visualizing"]], "terminated() (gridworld method)": [[59, "seldonian.RL.environments.gridworld.Gridworld.terminated"]], "transition() (gridworld method)": [[59, "seldonian.RL.environments.gridworld.Gridworld.transition"]], "update_position() (gridworld method)": [[59, "seldonian.RL.environments.gridworld.Gridworld.update_position"]], "visualize() (gridworld method)": [[59, "seldonian.RL.environments.gridworld.Gridworld.visualize"]], "seldonian.rl.environments.mountaincar": [[60, "module-seldonian.RL.environments.mountaincar"]], "mountaincar (class in seldonian.rl.environments.mountaincar)": [[61, "seldonian.RL.environments.mountaincar.Mountaincar"]], "__init__() (mountaincar method)": [[61, "seldonian.RL.environments.mountaincar.Mountaincar.__init__"]], "__repr__() (mountaincar method)": [[61, "seldonian.RL.environments.mountaincar.Mountaincar.__repr__"]], "get_env_description() (mountaincar method)": [[61, "seldonian.RL.environments.mountaincar.Mountaincar.get_env_description"]], "get_observation() (mountaincar method)": [[61, "seldonian.RL.environments.mountaincar.Mountaincar.get_observation"]], "reset() (mountaincar method)": [[61, "seldonian.RL.environments.mountaincar.Mountaincar.reset"]], "start_visualizing() (mountaincar method)": [[61, "seldonian.RL.environments.mountaincar.Mountaincar.start_visualizing"]], "stop_visualizing() (mountaincar method)": [[61, "seldonian.RL.environments.mountaincar.Mountaincar.stop_visualizing"]], "terminated() (mountaincar method)": [[61, "seldonian.RL.environments.mountaincar.Mountaincar.terminated"]], "transition() (mountaincar method)": [[61, "seldonian.RL.environments.mountaincar.Mountaincar.transition"]], "visualize() (mountaincar method)": [[61, "seldonian.RL.environments.mountaincar.Mountaincar.visualize"]], "seldonian.rl.environments.n_step_mountaincar": [[62, "module-seldonian.RL.environments.n_step_mountaincar"]], "n_step_mountaincar (class in seldonian.rl.environments.n_step_mountaincar)": [[63, "seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar"]], "__init__() (n_step_mountaincar method)": [[63, "seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar.__init__"]], "__repr__() (n_step_mountaincar method)": [[63, "seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar.__repr__"]], "get_env_description() (n_step_mountaincar method)": [[63, "seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar.get_env_description"]], "get_observation() (n_step_mountaincar method)": [[63, "seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar.get_observation"]], "reset() (n_step_mountaincar method)": [[63, "seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar.reset"]], "start_visualizing() (n_step_mountaincar method)": [[63, "seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar.start_visualizing"]], "stop_visualizing() (n_step_mountaincar method)": [[63, "seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar.stop_visualizing"]], "terminated() (n_step_mountaincar method)": [[63, "seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar.terminated"]], "transition() (n_step_mountaincar method)": [[63, "seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar.transition"]], "visualize() (n_step_mountaincar method)": [[63, "seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar.visualize"]], "seldonian.rl.environments.simglucose_env": [[64, "module-seldonian.RL.environments.simglucose_env"]], "simglucose (class in seldonian.rl.environments.simglucose_env)": [[65, "seldonian.RL.environments.simglucose_env.Simglucose"]], "__init__() (simglucose method)": [[65, "seldonian.RL.environments.simglucose_env.Simglucose.__init__"]], "__repr__() (simglucose method)": [[65, "seldonian.RL.environments.simglucose_env.Simglucose.__repr__"]], "get_env_description() (simglucose method)": [[65, "seldonian.RL.environments.simglucose_env.Simglucose.get_env_description"]], "get_observation() (simglucose method)": [[65, "seldonian.RL.environments.simglucose_env.Simglucose.get_observation"]], "reset() (simglucose method)": [[65, "seldonian.RL.environments.simglucose_env.Simglucose.reset"]], "start_visualizing() (simglucose method)": [[65, "seldonian.RL.environments.simglucose_env.Simglucose.start_visualizing"]], "stop_visualizing() (simglucose method)": [[65, "seldonian.RL.environments.simglucose_env.Simglucose.stop_visualizing"]], "terminated() (simglucose method)": [[65, "seldonian.RL.environments.simglucose_env.Simglucose.terminated"]], "transition() (simglucose method)": [[65, "seldonian.RL.environments.simglucose_env.Simglucose.transition"]], "visualize() (simglucose method)": [[65, "seldonian.RL.environments.simglucose_env.Simglucose.visualize"]], "seldonian.rl.generate_gridworld_episodes": [[66, "module-seldonian.RL.generate_gridworld_episodes"]], "main() (in module seldonian.rl.generate_gridworld_episodes)": [[67, "seldonian.RL.generate_gridworld_episodes.main"]], "seldonian.rl.generate_mountaincar_episodes": [[68, "module-seldonian.RL.generate_mountaincar_episodes"]], "main() (in module seldonian.rl.generate_mountaincar_episodes)": [[69, "seldonian.RL.generate_mountaincar_episodes.main"]], "seldonian.rl.generate_simglucose_episodes": [[70, "module-seldonian.RL.generate_simglucose_episodes"]], "get_max_obs() (in module seldonian.rl.generate_simglucose_episodes)": [[71, "seldonian.RL.generate_simglucose_episodes.get_max_obs"]], "main() (in module seldonian.rl.generate_simglucose_episodes)": [[72, "seldonian.RL.generate_simglucose_episodes.main"]], "seldonian.rl.hyperparams_and_settings": [[73, "module-seldonian.RL.hyperparams_and_settings"]], "define_hyperparameter_and_setting_dict() (in module seldonian.rl.hyperparams_and_settings)": [[74, "seldonian.RL.hyperparams_and_settings.define_hyperparameter_and_setting_dict"]], "seldonian.candidate_selection": [[75, "module-seldonian.candidate_selection"]], "seldonian.candidate_selection.candidate_selection": [[76, "module-seldonian.candidate_selection.candidate_selection"]], "candidateselection (class in seldonian.candidate_selection.candidate_selection)": [[77, "seldonian.candidate_selection.candidate_selection.CandidateSelection"]], "__init__() (candidateselection method)": [[77, "seldonian.candidate_selection.candidate_selection.CandidateSelection.__init__"]], "__repr__() (candidateselection method)": [[77, "seldonian.candidate_selection.candidate_selection.CandidateSelection.__repr__"]], "evaluate_primary_objective() (candidateselection method)": [[77, "seldonian.candidate_selection.candidate_selection.CandidateSelection.evaluate_primary_objective"]], "get_constraint_upper_bounds() (candidateselection method)": [[77, "seldonian.candidate_selection.candidate_selection.CandidateSelection.get_constraint_upper_bounds"]], "objective_with_barrier() (candidateselection method)": [[77, "seldonian.candidate_selection.candidate_selection.CandidateSelection.objective_with_barrier"]], "run() (candidateselection method)": [[77, "seldonian.candidate_selection.candidate_selection.CandidateSelection.run"]], "seldonian.dataset": [[78, "module-seldonian.dataset"]], "dataset (class in seldonian.dataset)": [[79, "seldonian.dataset.DataSet"]], "__init__() (dataset method)": [[79, "seldonian.dataset.DataSet.__init__"]], "__repr__() (dataset method)": [[79, "seldonian.dataset.DataSet.__repr__"]], "datasetloader (class in seldonian.dataset)": [[80, "seldonian.dataset.DataSetLoader"]], "__init__() (datasetloader method)": [[80, "seldonian.dataset.DataSetLoader.__init__"]], "__repr__() (datasetloader method)": [[80, "seldonian.dataset.DataSetLoader.__repr__"]], "load_rl_dataset_from_csv() (datasetloader method)": [[80, "seldonian.dataset.DataSetLoader.load_RL_dataset_from_csv"]], "load_rl_dataset_from_episode_file() (datasetloader method)": [[80, "seldonian.dataset.DataSetLoader.load_RL_dataset_from_episode_file"]], "load_supervised_dataset() (datasetloader method)": [[80, "seldonian.dataset.DataSetLoader.load_supervised_dataset"]], "episode (class in seldonian.dataset)": [[81, "seldonian.dataset.Episode"]], "__init__() (episode method)": [[81, "seldonian.dataset.Episode.__init__"]], "__repr__() (episode method)": [[81, "seldonian.dataset.Episode.__repr__"]], "rldataset (class in seldonian.dataset)": [[82, "seldonian.dataset.RLDataSet"]], "__init__() (rldataset method)": [[82, "seldonian.dataset.RLDataSet.__init__"]], "__repr__() (rldataset method)": [[82, "seldonian.dataset.RLDataSet.__repr__"]], "superviseddataset (class in seldonian.dataset)": [[83, "seldonian.dataset.SupervisedDataSet"]], "__init__() (superviseddataset method)": [[83, "seldonian.dataset.SupervisedDataSet.__init__"]], "__repr__() (superviseddataset method)": [[83, "seldonian.dataset.SupervisedDataSet.__repr__"]], "load_supervised_metadata() (in module seldonian.dataset)": [[84, "seldonian.dataset.load_supervised_metadata"]], "seldonian.models": [[85, "module-seldonian.models"]], "seldonian.models.models": [[86, "module-seldonian.models.models"]], "baselogisticregressionmodel (class in seldonian.models.models)": [[87, "seldonian.models.models.BaseLogisticRegressionModel"]], "__init__() (baselogisticregressionmodel method)": [[87, "seldonian.models.models.BaseLogisticRegressionModel.__init__"]], "__repr__() (baselogisticregressionmodel method)": [[87, "seldonian.models.models.BaseLogisticRegressionModel.__repr__"]], "fit() (baselogisticregressionmodel method)": [[87, "seldonian.models.models.BaseLogisticRegressionModel.fit"]], "binarylogisticregressionmodel (class in seldonian.models.models)": [[88, "seldonian.models.models.BinaryLogisticRegressionModel"]], "__init__() (binarylogisticregressionmodel method)": [[88, "seldonian.models.models.BinaryLogisticRegressionModel.__init__"]], "__repr__() (binarylogisticregressionmodel method)": [[88, "seldonian.models.models.BinaryLogisticRegressionModel.__repr__"]], "fit() (binarylogisticregressionmodel method)": [[88, "seldonian.models.models.BinaryLogisticRegressionModel.fit"]], "predict() (binarylogisticregressionmodel method)": [[88, "seldonian.models.models.BinaryLogisticRegressionModel.predict"]], "boundedlinearregressionmodel (class in seldonian.models.models)": [[89, "seldonian.models.models.BoundedLinearRegressionModel"]], "__init__() (boundedlinearregressionmodel method)": [[89, "seldonian.models.models.BoundedLinearRegressionModel.__init__"]], "__repr__() (boundedlinearregressionmodel method)": [[89, "seldonian.models.models.BoundedLinearRegressionModel.__repr__"]], "fit() (boundedlinearregressionmodel method)": [[89, "seldonian.models.models.BoundedLinearRegressionModel.fit"]], "predict() (boundedlinearregressionmodel method)": [[89, "seldonian.models.models.BoundedLinearRegressionModel.predict"]], "classificationmodel (class in seldonian.models.models)": [[90, "seldonian.models.models.ClassificationModel"]], "__init__() (classificationmodel method)": [[90, "seldonian.models.models.ClassificationModel.__init__"]], "__repr__() (classificationmodel method)": [[90, "seldonian.models.models.ClassificationModel.__repr__"]], "dummyclassifiermodel (class in seldonian.models.models)": [[91, "seldonian.models.models.DummyClassifierModel"]], "__init__() (dummyclassifiermodel method)": [[91, "seldonian.models.models.DummyClassifierModel.__init__"]], "__repr__() (dummyclassifiermodel method)": [[91, "seldonian.models.models.DummyClassifierModel.__repr__"]], "predict() (dummyclassifiermodel method)": [[91, "seldonian.models.models.DummyClassifierModel.predict"]], "linearregressionmodel (class in seldonian.models.models)": [[92, "seldonian.models.models.LinearRegressionModel"]], "__init__() (linearregressionmodel method)": [[92, "seldonian.models.models.LinearRegressionModel.__init__"]], "__repr__() (linearregressionmodel method)": [[92, "seldonian.models.models.LinearRegressionModel.__repr__"]], "fit() (linearregressionmodel method)": [[92, "seldonian.models.models.LinearRegressionModel.fit"]], "predict() (linearregressionmodel method)": [[92, "seldonian.models.models.LinearRegressionModel.predict"]], "linearregressionmodellistfeatures (class in seldonian.models.models)": [[93, "seldonian.models.models.LinearRegressionModelListFeatures"]], "__init__() (linearregressionmodellistfeatures method)": [[93, "seldonian.models.models.LinearRegressionModelListFeatures.__init__"]], "__repr__() (linearregressionmodellistfeatures method)": [[93, "seldonian.models.models.LinearRegressionModelListFeatures.__repr__"]], "fit() (linearregressionmodellistfeatures method)": [[93, "seldonian.models.models.LinearRegressionModelListFeatures.fit"]], "predict() (linearregressionmodellistfeatures method)": [[93, "seldonian.models.models.LinearRegressionModelListFeatures.predict"]], "multiclasslogisticregressionmodel (class in seldonian.models.models)": [[94, "seldonian.models.models.MultiClassLogisticRegressionModel"]], "__init__() (multiclasslogisticregressionmodel method)": [[94, "seldonian.models.models.MultiClassLogisticRegressionModel.__init__"]], "__repr__() (multiclasslogisticregressionmodel method)": [[94, "seldonian.models.models.MultiClassLogisticRegressionModel.__repr__"]], "fit() (multiclasslogisticregressionmodel method)": [[94, "seldonian.models.models.MultiClassLogisticRegressionModel.fit"]], "predict() (multiclasslogisticregressionmodel method)": [[94, "seldonian.models.models.MultiClassLogisticRegressionModel.predict"]], "randomclassifiermodel (class in seldonian.models.models)": [[95, "seldonian.models.models.RandomClassifierModel"]], "__init__() (randomclassifiermodel method)": [[95, "seldonian.models.models.RandomClassifierModel.__init__"]], "__repr__() (randomclassifiermodel method)": [[95, "seldonian.models.models.RandomClassifierModel.__repr__"]], "predict() (randomclassifiermodel method)": [[95, "seldonian.models.models.RandomClassifierModel.predict"]], "regressionmodel (class in seldonian.models.models)": [[96, "seldonian.models.models.RegressionModel"]], "__init__() (regressionmodel method)": [[96, "seldonian.models.models.RegressionModel.__init__"]], "__repr__() (regressionmodel method)": [[96, "seldonian.models.models.RegressionModel.__repr__"]], "seldonianmodel (class in seldonian.models.models)": [[97, "seldonian.models.models.SeldonianModel"]], "__init__() (seldonianmodel method)": [[97, "seldonian.models.models.SeldonianModel.__init__"]], "__repr__() (seldonianmodel method)": [[97, "seldonian.models.models.SeldonianModel.__repr__"]], "supervisedmodel (class in seldonian.models.models)": [[98, "seldonian.models.models.SupervisedModel"]], "__init__() (supervisedmodel method)": [[98, "seldonian.models.models.SupervisedModel.__init__"]], "__repr__() (supervisedmodel method)": [[98, "seldonian.models.models.SupervisedModel.__repr__"]], "seldonian.models.objectives": [[99, "module-seldonian.models.objectives"]], "accuracy() (in module seldonian.models.objectives)": [[100, "seldonian.models.objectives.Accuracy"]], "false_negative_rate() (in module seldonian.models.objectives)": [[101, "seldonian.models.objectives.False_Negative_Rate"]], "false_positive_rate() (in module seldonian.models.objectives)": [[102, "seldonian.models.objectives.False_Positive_Rate"]], "is_estimate() (in module seldonian.models.objectives)": [[103, "seldonian.models.objectives.IS_estimate"]], "mean_error() (in module seldonian.models.objectives)": [[104, "seldonian.models.objectives.Mean_Error"]], "mean_squared_error() (in module seldonian.models.objectives)": [[105, "seldonian.models.objectives.Mean_Squared_Error"]], "negative_rate() (in module seldonian.models.objectives)": [[106, "seldonian.models.objectives.Negative_Rate"]], "positive_rate() (in module seldonian.models.objectives)": [[107, "seldonian.models.objectives.Positive_Rate"]], "true_negative_rate() (in module seldonian.models.objectives)": [[108, "seldonian.models.objectives.True_Negative_Rate"]], "true_positive_rate() (in module seldonian.models.objectives)": [[109, "seldonian.models.objectives.True_Positive_Rate"]], "batcher() (in module seldonian.models.objectives)": [[110, "seldonian.models.objectives.batcher"]], "binary_logistic_loss() (in module seldonian.models.objectives)": [[111, "seldonian.models.objectives.binary_logistic_loss"]], "confusion_matrix() (in module seldonian.models.objectives)": [[112, "seldonian.models.objectives.confusion_matrix"]], "evaluate_statistic() (in module seldonian.models.objectives)": [[113, "seldonian.models.objectives.evaluate_statistic"]], "gradient_bounded_squared_error() (in module seldonian.models.objectives)": [[114, "seldonian.models.objectives.gradient_Bounded_Squared_Error"]], "gradient_mean_squared_error() (in module seldonian.models.objectives)": [[115, "seldonian.models.objectives.gradient_Mean_Squared_Error"]], "gradient_binary_logistic_loss() (in module seldonian.models.objectives)": [[116, "seldonian.models.objectives.gradient_binary_logistic_loss"]], "multiclass_logistic_loss() (in module seldonian.models.objectives)": [[117, "seldonian.models.objectives.multiclass_logistic_loss"]], "sample_from_statistic() (in module seldonian.models.objectives)": [[118, "seldonian.models.objectives.sample_from_statistic"]], "vector_accuracy() (in module seldonian.models.objectives)": [[119, "seldonian.models.objectives.vector_Accuracy"]], "vector_error() (in module seldonian.models.objectives)": [[120, "seldonian.models.objectives.vector_Error"]], "vector_false_negative_rate() (in module seldonian.models.objectives)": [[121, "seldonian.models.objectives.vector_False_Negative_Rate"]], "vector_false_positive_rate() (in module seldonian.models.objectives)": [[122, "seldonian.models.objectives.vector_False_Positive_Rate"]], "vector_is_estimate() (in module seldonian.models.objectives)": [[123, "seldonian.models.objectives.vector_IS_estimate"]], "vector_negative_rate() (in module seldonian.models.objectives)": [[124, "seldonian.models.objectives.vector_Negative_Rate"]], "vector_positive_rate() (in module seldonian.models.objectives)": [[125, "seldonian.models.objectives.vector_Positive_Rate"]], "vector_squared_error() (in module seldonian.models.objectives)": [[126, "seldonian.models.objectives.vector_Squared_Error"]], "vector_true_negative_rate() (in module seldonian.models.objectives)": [[127, "seldonian.models.objectives.vector_True_Negative_Rate"]], "vector_true_positive_rate() (in module seldonian.models.objectives)": [[128, "seldonian.models.objectives.vector_True_Positive_Rate"]], "vector_confusion_matrix() (in module seldonian.models.objectives)": [[129, "seldonian.models.objectives.vector_confusion_matrix"]], "seldonian.models.pytorch_cnn": [[130, "module-seldonian.models.pytorch_cnn"]], "pytorchcnn (class in seldonian.models.pytorch_cnn)": [[131, "seldonian.models.pytorch_cnn.PytorchCNN"]], "__init__() (pytorchcnn method)": [[131, "seldonian.models.pytorch_cnn.PytorchCNN.__init__"]], "__repr__() (pytorchcnn method)": [[131, "seldonian.models.pytorch_cnn.PytorchCNN.__repr__"]], "backward_pass() (pytorchcnn method)": [[131, "seldonian.models.pytorch_cnn.PytorchCNN.backward_pass"]], "create_model() (pytorchcnn method)": [[131, "seldonian.models.pytorch_cnn.PytorchCNN.create_model"]], "forward_pass() (pytorchcnn method)": [[131, "seldonian.models.pytorch_cnn.PytorchCNN.forward_pass"]], "get_model_params() (pytorchcnn method)": [[131, "seldonian.models.pytorch_cnn.PytorchCNN.get_model_params"]], "get_param_sizes() (pytorchcnn method)": [[131, "seldonian.models.pytorch_cnn.PytorchCNN.get_param_sizes"]], "predict() (pytorchcnn method)": [[131, "seldonian.models.pytorch_cnn.PytorchCNN.predict"]], "update_model_params() (pytorchcnn method)": [[131, "seldonian.models.pytorch_cnn.PytorchCNN.update_model_params"]], "zero_gradients() (pytorchcnn method)": [[131, "seldonian.models.pytorch_cnn.PytorchCNN.zero_gradients"]], "seldonian.models.pytorch_model": [[132, "module-seldonian.models.pytorch_model"]], "supervisedpytorchbasemodel (class in seldonian.models.pytorch_model)": [[133, "seldonian.models.pytorch_model.SupervisedPytorchBaseModel"]], "__init__() (supervisedpytorchbasemodel method)": [[133, "seldonian.models.pytorch_model.SupervisedPytorchBaseModel.__init__"]], "__repr__() (supervisedpytorchbasemodel method)": [[133, "seldonian.models.pytorch_model.SupervisedPytorchBaseModel.__repr__"]], "backward_pass() (supervisedpytorchbasemodel method)": [[133, "seldonian.models.pytorch_model.SupervisedPytorchBaseModel.backward_pass"]], "create_model() (supervisedpytorchbasemodel method)": [[133, "seldonian.models.pytorch_model.SupervisedPytorchBaseModel.create_model"]], "forward_pass() (supervisedpytorchbasemodel method)": [[133, "seldonian.models.pytorch_model.SupervisedPytorchBaseModel.forward_pass"]], "get_model_params() (supervisedpytorchbasemodel method)": [[133, "seldonian.models.pytorch_model.SupervisedPytorchBaseModel.get_model_params"]], "get_param_sizes() (supervisedpytorchbasemodel method)": [[133, "seldonian.models.pytorch_model.SupervisedPytorchBaseModel.get_param_sizes"]], "predict() (supervisedpytorchbasemodel method)": [[133, "seldonian.models.pytorch_model.SupervisedPytorchBaseModel.predict"]], "update_model_params() (supervisedpytorchbasemodel method)": [[133, "seldonian.models.pytorch_model.SupervisedPytorchBaseModel.update_model_params"]], "zero_gradients() (supervisedpytorchbasemodel method)": [[133, "seldonian.models.pytorch_model.SupervisedPytorchBaseModel.zero_gradients"]], "pytorch_predict_vjp() (in module seldonian.models.pytorch_model)": [[134, "seldonian.models.pytorch_model.pytorch_predict_vjp"]], "seldonian.optimizers": [[135, "module-seldonian.optimizers"]], "seldonian.optimizers.gradient_descent": [[136, "module-seldonian.optimizers.gradient_descent"]], "gradient_descent_adam() (in module seldonian.optimizers.gradient_descent)": [[137, "seldonian.optimizers.gradient_descent.gradient_descent_adam"]], "setup_gradients() (in module seldonian.optimizers.gradient_descent)": [[138, "seldonian.optimizers.gradient_descent.setup_gradients"]], "seldonian.parse_tree": [[139, "module-seldonian.parse_tree"]], "seldonian.parse_tree.nodes": [[140, "module-seldonian.parse_tree.nodes"]], "basenode (class in seldonian.parse_tree.nodes)": [[141, "seldonian.parse_tree.nodes.BaseNode"]], "__init__() (basenode method)": [[141, "seldonian.parse_tree.nodes.BaseNode.__init__"]], "__repr__() (basenode method)": [[141, "seldonian.parse_tree.nodes.BaseNode.__repr__"]], "calculate_bounds() (basenode method)": [[141, "seldonian.parse_tree.nodes.BaseNode.calculate_bounds"]], "calculate_data_forbound() (basenode method)": [[141, "seldonian.parse_tree.nodes.BaseNode.calculate_data_forbound"]], "calculate_value() (basenode method)": [[141, "seldonian.parse_tree.nodes.BaseNode.calculate_value"]], "compute_hc_lowerbound() (basenode method)": [[141, "seldonian.parse_tree.nodes.BaseNode.compute_HC_lowerbound"]], "compute_hc_upper_and_lowerbound() (basenode method)": [[141, "seldonian.parse_tree.nodes.BaseNode.compute_HC_upper_and_lowerbound"]], "compute_hc_upperbound() (basenode method)": [[141, "seldonian.parse_tree.nodes.BaseNode.compute_HC_upperbound"]], "mask_data() (basenode method)": [[141, "seldonian.parse_tree.nodes.BaseNode.mask_data"]], "predict_hc_lowerbound() (basenode method)": [[141, "seldonian.parse_tree.nodes.BaseNode.predict_HC_lowerbound"]], "predict_hc_upper_and_lowerbound() (basenode method)": [[141, "seldonian.parse_tree.nodes.BaseNode.predict_HC_upper_and_lowerbound"]], "predict_hc_upperbound() (basenode method)": [[141, "seldonian.parse_tree.nodes.BaseNode.predict_HC_upperbound"]], "zhat() (basenode method)": [[141, "seldonian.parse_tree.nodes.BaseNode.zhat"]], "cvarsqebasenode (class in seldonian.parse_tree.nodes)": [[142, "seldonian.parse_tree.nodes.CVaRSQeBaseNode"]], "__init__() (cvarsqebasenode method)": [[142, "seldonian.parse_tree.nodes.CVaRSQeBaseNode.__init__"]], "__repr__() (cvarsqebasenode method)": [[142, "seldonian.parse_tree.nodes.CVaRSQeBaseNode.__repr__"]], "calculate_bounds() (cvarsqebasenode method)": [[142, "seldonian.parse_tree.nodes.CVaRSQeBaseNode.calculate_bounds"]], "calculate_data_forbound() (cvarsqebasenode method)": [[142, "seldonian.parse_tree.nodes.CVaRSQeBaseNode.calculate_data_forbound"]], "calculate_value() (cvarsqebasenode method)": [[142, "seldonian.parse_tree.nodes.CVaRSQeBaseNode.calculate_value"]], "compute_hc_lowerbound() (cvarsqebasenode method)": [[142, "seldonian.parse_tree.nodes.CVaRSQeBaseNode.compute_HC_lowerbound"]], "compute_hc_upper_and_lowerbound() (cvarsqebasenode method)": [[142, "seldonian.parse_tree.nodes.CVaRSQeBaseNode.compute_HC_upper_and_lowerbound"]], "compute_hc_upperbound() (cvarsqebasenode method)": [[142, "seldonian.parse_tree.nodes.CVaRSQeBaseNode.compute_HC_upperbound"]], "mask_data() (cvarsqebasenode method)": [[142, "seldonian.parse_tree.nodes.CVaRSQeBaseNode.mask_data"]], "predict_hc_lowerbound() (cvarsqebasenode method)": [[142, "seldonian.parse_tree.nodes.CVaRSQeBaseNode.predict_HC_lowerbound"]], "predict_hc_upper_and_lowerbound() (cvarsqebasenode method)": [[142, "seldonian.parse_tree.nodes.CVaRSQeBaseNode.predict_HC_upper_and_lowerbound"]], "predict_hc_upperbound() (cvarsqebasenode method)": [[142, "seldonian.parse_tree.nodes.CVaRSQeBaseNode.predict_HC_upperbound"]], "zhat() (cvarsqebasenode method)": [[142, "seldonian.parse_tree.nodes.CVaRSQeBaseNode.zhat"]], "confusionmatrixbasenode (class in seldonian.parse_tree.nodes)": [[143, "seldonian.parse_tree.nodes.ConfusionMatrixBaseNode"]], "__init__() (confusionmatrixbasenode method)": [[143, "seldonian.parse_tree.nodes.ConfusionMatrixBaseNode.__init__"]], "__repr__() (confusionmatrixbasenode method)": [[143, "seldonian.parse_tree.nodes.ConfusionMatrixBaseNode.__repr__"]], "calculate_bounds() (confusionmatrixbasenode method)": [[143, "seldonian.parse_tree.nodes.ConfusionMatrixBaseNode.calculate_bounds"]], "calculate_data_forbound() (confusionmatrixbasenode method)": [[143, "seldonian.parse_tree.nodes.ConfusionMatrixBaseNode.calculate_data_forbound"]], "calculate_value() (confusionmatrixbasenode method)": [[143, "seldonian.parse_tree.nodes.ConfusionMatrixBaseNode.calculate_value"]], "compute_hc_lowerbound() (confusionmatrixbasenode method)": [[143, "seldonian.parse_tree.nodes.ConfusionMatrixBaseNode.compute_HC_lowerbound"]], "compute_hc_upper_and_lowerbound() (confusionmatrixbasenode method)": [[143, "seldonian.parse_tree.nodes.ConfusionMatrixBaseNode.compute_HC_upper_and_lowerbound"]], "compute_hc_upperbound() (confusionmatrixbasenode method)": [[143, "seldonian.parse_tree.nodes.ConfusionMatrixBaseNode.compute_HC_upperbound"]], "mask_data() (confusionmatrixbasenode method)": [[143, "seldonian.parse_tree.nodes.ConfusionMatrixBaseNode.mask_data"]], "predict_hc_lowerbound() (confusionmatrixbasenode method)": [[143, "seldonian.parse_tree.nodes.ConfusionMatrixBaseNode.predict_HC_lowerbound"]], "predict_hc_upper_and_lowerbound() (confusionmatrixbasenode method)": [[143, "seldonian.parse_tree.nodes.ConfusionMatrixBaseNode.predict_HC_upper_and_lowerbound"]], "predict_hc_upperbound() (confusionmatrixbasenode method)": [[143, "seldonian.parse_tree.nodes.ConfusionMatrixBaseNode.predict_HC_upperbound"]], "zhat() (confusionmatrixbasenode method)": [[143, "seldonian.parse_tree.nodes.ConfusionMatrixBaseNode.zhat"]], "constantnode (class in seldonian.parse_tree.nodes)": [[144, "seldonian.parse_tree.nodes.ConstantNode"]], "__init__() (constantnode method)": [[144, "seldonian.parse_tree.nodes.ConstantNode.__init__"]], "__repr__() (constantnode method)": [[144, "seldonian.parse_tree.nodes.ConstantNode.__repr__"]], "internalnode (class in seldonian.parse_tree.nodes)": [[145, "seldonian.parse_tree.nodes.InternalNode"]], "__init__() (internalnode method)": [[145, "seldonian.parse_tree.nodes.InternalNode.__init__"]], "__repr__() (internalnode method)": [[145, "seldonian.parse_tree.nodes.InternalNode.__repr__"]], "medcustombasenode (class in seldonian.parse_tree.nodes)": [[146, "seldonian.parse_tree.nodes.MEDCustomBaseNode"]], "__init__() (medcustombasenode method)": [[146, "seldonian.parse_tree.nodes.MEDCustomBaseNode.__init__"]], "__repr__() (medcustombasenode method)": [[146, "seldonian.parse_tree.nodes.MEDCustomBaseNode.__repr__"]], "calculate_bounds() (medcustombasenode method)": [[146, "seldonian.parse_tree.nodes.MEDCustomBaseNode.calculate_bounds"]], "calculate_data_forbound() (medcustombasenode method)": [[146, "seldonian.parse_tree.nodes.MEDCustomBaseNode.calculate_data_forbound"]], "calculate_value() (medcustombasenode method)": [[146, "seldonian.parse_tree.nodes.MEDCustomBaseNode.calculate_value"]], "compute_hc_lowerbound() (medcustombasenode method)": [[146, "seldonian.parse_tree.nodes.MEDCustomBaseNode.compute_HC_lowerbound"]], "compute_hc_upper_and_lowerbound() (medcustombasenode method)": [[146, "seldonian.parse_tree.nodes.MEDCustomBaseNode.compute_HC_upper_and_lowerbound"]], "compute_hc_upperbound() (medcustombasenode method)": [[146, "seldonian.parse_tree.nodes.MEDCustomBaseNode.compute_HC_upperbound"]], "mask_data() (medcustombasenode method)": [[146, "seldonian.parse_tree.nodes.MEDCustomBaseNode.mask_data"]], "precalculate_data() (medcustombasenode method)": [[146, "seldonian.parse_tree.nodes.MEDCustomBaseNode.precalculate_data"]], "predict_hc_lowerbound() (medcustombasenode method)": [[146, "seldonian.parse_tree.nodes.MEDCustomBaseNode.predict_HC_lowerbound"]], "predict_hc_upper_and_lowerbound() (medcustombasenode method)": [[146, "seldonian.parse_tree.nodes.MEDCustomBaseNode.predict_HC_upper_and_lowerbound"]], "predict_hc_upperbound() (medcustombasenode method)": [[146, "seldonian.parse_tree.nodes.MEDCustomBaseNode.predict_HC_upperbound"]], "zhat() (medcustombasenode method)": [[146, "seldonian.parse_tree.nodes.MEDCustomBaseNode.zhat"]], "multiclassbasenode (class in seldonian.parse_tree.nodes)": [[147, "seldonian.parse_tree.nodes.MultiClassBaseNode"]], "__init__() (multiclassbasenode method)": [[147, "seldonian.parse_tree.nodes.MultiClassBaseNode.__init__"]], "__repr__() (multiclassbasenode method)": [[147, "seldonian.parse_tree.nodes.MultiClassBaseNode.__repr__"]], "calculate_bounds() (multiclassbasenode method)": [[147, "seldonian.parse_tree.nodes.MultiClassBaseNode.calculate_bounds"]], "calculate_data_forbound() (multiclassbasenode method)": [[147, "seldonian.parse_tree.nodes.MultiClassBaseNode.calculate_data_forbound"]], "calculate_value() (multiclassbasenode method)": [[147, "seldonian.parse_tree.nodes.MultiClassBaseNode.calculate_value"]], "compute_hc_lowerbound() (multiclassbasenode method)": [[147, "seldonian.parse_tree.nodes.MultiClassBaseNode.compute_HC_lowerbound"]], "compute_hc_upper_and_lowerbound() (multiclassbasenode method)": [[147, "seldonian.parse_tree.nodes.MultiClassBaseNode.compute_HC_upper_and_lowerbound"]], "compute_hc_upperbound() (multiclassbasenode method)": [[147, "seldonian.parse_tree.nodes.MultiClassBaseNode.compute_HC_upperbound"]], "mask_data() (multiclassbasenode method)": [[147, "seldonian.parse_tree.nodes.MultiClassBaseNode.mask_data"]], "predict_hc_lowerbound() (multiclassbasenode method)": [[147, "seldonian.parse_tree.nodes.MultiClassBaseNode.predict_HC_lowerbound"]], "predict_hc_upper_and_lowerbound() (multiclassbasenode method)": [[147, "seldonian.parse_tree.nodes.MultiClassBaseNode.predict_HC_upper_and_lowerbound"]], "predict_hc_upperbound() (multiclassbasenode method)": [[147, "seldonian.parse_tree.nodes.MultiClassBaseNode.predict_HC_upperbound"]], "zhat() (multiclassbasenode method)": [[147, "seldonian.parse_tree.nodes.MultiClassBaseNode.zhat"]], "node (class in seldonian.parse_tree.nodes)": [[148, "seldonian.parse_tree.nodes.Node"]], "__init__() (node method)": [[148, "seldonian.parse_tree.nodes.Node.__init__"]], "__repr__() (node method)": [[148, "seldonian.parse_tree.nodes.Node.__repr__"]], "bounds_required_dict (in module seldonian.parse_tree.operators)": [[149, "seldonian.parse_tree.operators.bounds_required_dict"]], "custom_base_node_dict (in module seldonian.parse_tree.operators)": [[149, "seldonian.parse_tree.operators.custom_base_node_dict"]], "measure_functions_dict (in module seldonian.parse_tree.operators)": [[149, "seldonian.parse_tree.operators.measure_functions_dict"]], "not_supported_op_mapper (in module seldonian.parse_tree.operators)": [[149, "seldonian.parse_tree.operators.not_supported_op_mapper"]], "op_mapper (in module seldonian.parse_tree.operators)": [[149, "seldonian.parse_tree.operators.op_mapper"]], "seldonian.parse_tree.operators": [[149, "module-seldonian.parse_tree.operators"]], "seldonian.parse_tree.parse_tree": [[150, "module-seldonian.parse_tree.parse_tree"]], "parsetree (class in seldonian.parse_tree.parse_tree)": [[151, "seldonian.parse_tree.parse_tree.ParseTree"]], "__init__() (parsetree method)": [[151, "seldonian.parse_tree.parse_tree.ParseTree.__init__"]], "__repr__() (parsetree method)": [[151, "seldonian.parse_tree.parse_tree.ParseTree.__repr__"]], "_abs() (parsetree method)": [[151, "seldonian.parse_tree.parse_tree.ParseTree._abs"]], "_add() (parsetree method)": [[151, "seldonian.parse_tree.parse_tree.ParseTree._add"]], "_assign_bounds_helper() (parsetree method)": [[151, "seldonian.parse_tree.parse_tree.ParseTree._assign_bounds_helper"]], "_assign_deltas_helper() (parsetree method)": [[151, "seldonian.parse_tree.parse_tree.ParseTree._assign_deltas_helper"]], "_ast2pt_node() (parsetree method)": [[151, "seldonian.parse_tree.parse_tree.ParseTree._ast2pt_node"]], "_ast_tree_helper() (parsetree method)": [[151, "seldonian.parse_tree.parse_tree.ParseTree._ast_tree_helper"]], "_div() (parsetree method)": [[151, "seldonian.parse_tree.parse_tree.ParseTree._div"]], "_evaluator_helper() (parsetree method)": [[151, "seldonian.parse_tree.parse_tree.ParseTree._evaluator_helper"]], "_exp() (parsetree method)": [[151, "seldonian.parse_tree.parse_tree.ParseTree._exp"]], "_max() (parsetree method)": [[151, "seldonian.parse_tree.parse_tree.ParseTree._max"]], "_min() (parsetree method)": [[151, "seldonian.parse_tree.parse_tree.ParseTree._min"]], "_mult() (parsetree method)": [[151, "seldonian.parse_tree.parse_tree.ParseTree._mult"]], "_pow() (parsetree method)": [[151, "seldonian.parse_tree.parse_tree.ParseTree._pow"]], "_preprocess_constraint_str() (parsetree method)": [[151, "seldonian.parse_tree.parse_tree.ParseTree._preprocess_constraint_str"]], "_propagate_value() (parsetree method)": [[151, "seldonian.parse_tree.parse_tree.ParseTree._propagate_value"]], "_propagator_helper() (parsetree method)": [[151, "seldonian.parse_tree.parse_tree.ParseTree._propagator_helper"]], "_protect_nan() (parsetree method)": [[151, "seldonian.parse_tree.parse_tree.ParseTree._protect_nan"]], "_sub() (parsetree method)": [[151, "seldonian.parse_tree.parse_tree.ParseTree._sub"]], "assign_bounds_needed() (parsetree method)": [[151, "seldonian.parse_tree.parse_tree.ParseTree.assign_bounds_needed"]], "assign_deltas() (parsetree method)": [[151, "seldonian.parse_tree.parse_tree.ParseTree.assign_deltas"]], "build_tree() (parsetree method)": [[151, "seldonian.parse_tree.parse_tree.ParseTree.build_tree"]], "create_from_ast() (parsetree method)": [[151, "seldonian.parse_tree.parse_tree.ParseTree.create_from_ast"]], "evaluate_constraint() (parsetree method)": [[151, "seldonian.parse_tree.parse_tree.ParseTree.evaluate_constraint"]], "make_viz() (parsetree method)": [[151, "seldonian.parse_tree.parse_tree.ParseTree.make_viz"]], "make_viz_helper() (parsetree method)": [[151, "seldonian.parse_tree.parse_tree.ParseTree.make_viz_helper"]], "propagate() (parsetree method)": [[151, "seldonian.parse_tree.parse_tree.ParseTree.propagate"]], "propagate_bounds() (parsetree method)": [[151, "seldonian.parse_tree.parse_tree.ParseTree.propagate_bounds"]], "reset_base_node_dict() (parsetree method)": [[151, "seldonian.parse_tree.parse_tree.ParseTree.reset_base_node_dict"]], "make_parse_trees_from_constraints() (in module seldonian.parse_tree.parse_tree)": [[152, "seldonian.parse_tree.parse_tree.make_parse_trees_from_constraints"]], "seldonian.safety_test": [[153, "module-seldonian.safety_test"]], "seldonian.safety_test.safety_test": [[154, "module-seldonian.safety_test.safety_test"]], "safetytest (class in seldonian.safety_test.safety_test)": [[155, "seldonian.safety_test.safety_test.SafetyTest"]], "__init__() (safetytest method)": [[155, "seldonian.safety_test.safety_test.SafetyTest.__init__"]], "__repr__() (safetytest method)": [[155, "seldonian.safety_test.safety_test.SafetyTest.__repr__"]], "evaluate_primary_objective() (safetytest method)": [[155, "seldonian.safety_test.safety_test.SafetyTest.evaluate_primary_objective"]], "run() (safetytest method)": [[155, "seldonian.safety_test.safety_test.SafetyTest.run"]], "seldonian.seldonian_algorithm": [[156, "module-seldonian.seldonian_algorithm"]], "seldonianalgorithm (class in seldonian.seldonian_algorithm)": [[157, "seldonian.seldonian_algorithm.SeldonianAlgorithm"]], "__init__() (seldonianalgorithm method)": [[157, "seldonian.seldonian_algorithm.SeldonianAlgorithm.__init__"]], "__repr__() (seldonianalgorithm method)": [[157, "seldonian.seldonian_algorithm.SeldonianAlgorithm.__repr__"]], "candidate_safety_split() (seldonianalgorithm method)": [[157, "seldonian.seldonian_algorithm.SeldonianAlgorithm.candidate_safety_split"]], "candidate_selection() (seldonianalgorithm method)": [[157, "seldonian.seldonian_algorithm.SeldonianAlgorithm.candidate_selection"]], "evaluate_primary_objective() (seldonianalgorithm method)": [[157, "seldonian.seldonian_algorithm.SeldonianAlgorithm.evaluate_primary_objective"]], "get_cs_result() (seldonianalgorithm method)": [[157, "seldonian.seldonian_algorithm.SeldonianAlgorithm.get_cs_result"]], "run() (seldonianalgorithm method)": [[157, "seldonian.seldonian_algorithm.SeldonianAlgorithm.run"]], "run_safety_test() (seldonianalgorithm method)": [[157, "seldonian.seldonian_algorithm.SeldonianAlgorithm.run_safety_test"]], "safety_test() (seldonianalgorithm method)": [[157, "seldonian.seldonian_algorithm.SeldonianAlgorithm.safety_test"]], "seldonian.spec": [[158, "module-seldonian.spec"]], "rlspec (class in seldonian.spec)": [[159, "seldonian.spec.RLSpec"]], "__init__() (rlspec method)": [[159, "seldonian.spec.RLSpec.__init__"]], "__repr__() (rlspec method)": [[159, "seldonian.spec.RLSpec.__repr__"]], "spec (class in seldonian.spec)": [[160, "seldonian.spec.Spec"]], "__init__() (spec method)": [[160, "seldonian.spec.Spec.__init__"]], "__repr__() (spec method)": [[160, "seldonian.spec.Spec.__repr__"]], "supervisedspec (class in seldonian.spec)": [[161, "seldonian.spec.SupervisedSpec"]], "__init__() (supervisedspec method)": [[161, "seldonian.spec.SupervisedSpec.__init__"]], "__repr__() (supervisedspec method)": [[161, "seldonian.spec.SupervisedSpec.__repr__"]], "createrlspec() (in module seldonian.spec)": [[162, "seldonian.spec.createRLSpec"]], "createsupervisedspec() (in module seldonian.spec)": [[163, "seldonian.spec.createSupervisedSpec"]], "validate_parse_trees() (in module seldonian.spec)": [[164, "seldonian.spec.validate_parse_trees"]], "seldonian.utils": [[165, "module-seldonian.utils"]], "seldonian.utils.rl_utils": [[166, "module-seldonian.utils.RL_utils"]], "argmax_multi() (in module seldonian.utils.rl_utils)": [[167, "seldonian.utils.RL_utils.argmax_multi"]], "clamp() (in module seldonian.utils.rl_utils)": [[168, "seldonian.utils.RL_utils.clamp"]], "error() (in module seldonian.utils.rl_utils)": [[169, "seldonian.utils.RL_utils.error"]], "seldonian.utils.io_utils": [[170, "module-seldonian.utils.io_utils"]], "dir_path() (in module seldonian.utils.io_utils)": [[171, "seldonian.utils.io_utils.dir_path"]], "load_json() (in module seldonian.utils.io_utils)": [[172, "seldonian.utils.io_utils.load_json"]], "load_pickle() (in module seldonian.utils.io_utils)": [[173, "seldonian.utils.io_utils.load_pickle"]], "save_json() (in module seldonian.utils.io_utils)": [[174, "seldonian.utils.io_utils.save_json"]], "save_pickle() (in module seldonian.utils.io_utils)": [[175, "seldonian.utils.io_utils.save_pickle"]], "seldonian.utils.plot_utils": [[176, "module-seldonian.utils.plot_utils"]], "plot_gradient_descent() (in module seldonian.utils.plot_utils)": [[177, "seldonian.utils.plot_utils.plot_gradient_descent"]], "seldonian.utils.stats_utils": [[178, "module-seldonian.utils.stats_utils"]], "softmax() (in module seldonian.utils.stats_utils)": [[179, "seldonian.utils.stats_utils.softmax"]], "stddev() (in module seldonian.utils.stats_utils)": [[180, "seldonian.utils.stats_utils.stddev"]], "tinv() (in module seldonian.utils.stats_utils)": [[181, "seldonian.utils.stats_utils.tinv"]], "weighted_sum_gamma() (in module seldonian.utils.stats_utils)": [[182, "seldonian.utils.stats_utils.weighted_sum_gamma"]], "seldonian.utils.tutorial_utils": [[183, "module-seldonian.utils.tutorial_utils"]], "generate_clipped_data() (in module seldonian.utils.tutorial_utils)": [[184, "seldonian.utils.tutorial_utils.generate_clipped_data"]], "generate_data() (in module seldonian.utils.tutorial_utils)": [[185, "seldonian.utils.tutorial_utils.generate_data"]], "make_synthetic_regression_dataset() (in module seldonian.utils.tutorial_utils)": [[186, "seldonian.utils.tutorial_utils.make_synthetic_regression_dataset"]], "seldonian.warnings": [[187, "module-seldonian.warnings"]], "seldonian.warnings.custom_warnings": [[188, "module-seldonian.warnings.custom_warnings"]], "custom_formatwarning() (in module seldonian.warnings.custom_warnings)": [[189, "seldonian.warnings.custom_warnings.custom_formatwarning"]]}})