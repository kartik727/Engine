Search.setIndex({"docnames": ["_autosummary/interface", "_autosummary/interface.cli_supervised", "_autosummary/interface.cli_supervised.run_interface", "_autosummary/interface.command_line_interface", "_autosummary/interface.command_line_interface.run_interface", "_autosummary/seldonian", "_autosummary/seldonian.RL", "_autosummary/seldonian.RL.environments", "_autosummary/seldonian.RL.environments.gridworld3x3", "_autosummary/seldonian.RL.environments.gridworld3x3.Environment", "_autosummary/seldonian.RL.environments.mountaincar", "_autosummary/seldonian.RL.environments.mountaincar.Basis", "_autosummary/seldonian.RL.environments.mountaincar.Environment", "_autosummary/seldonian.RL.environments.mountaincar.FourierBasis", "_autosummary/seldonian.RL.environments.mountaincar.Linear_Softmax", "_autosummary/seldonian.RL.environments.mountaincar.Mountaincar", "_autosummary/seldonian.RL.environments.mountaincar.Policy", "_autosummary/seldonian.RL.environments.mountaincar.increment_counter", "_autosummary/seldonian.candidate_selection", "_autosummary/seldonian.candidate_selection.candidate_selection", "_autosummary/seldonian.candidate_selection.candidate_selection.CandidateSelection", "_autosummary/seldonian.dataset", "_autosummary/seldonian.dataset.DataSet", "_autosummary/seldonian.dataset.DataSetLoader", "_autosummary/seldonian.dataset.Episode", "_autosummary/seldonian.dataset.RLDataSet", "_autosummary/seldonian.dataset.SupervisedDataSet", "_autosummary/seldonian.models", "_autosummary/seldonian.models.model", "_autosummary/seldonian.models.model.ClassificationModel", "_autosummary/seldonian.models.model.LinearClassifierModel", "_autosummary/seldonian.models.model.LinearRegressionModel", "_autosummary/seldonian.models.model.LinearSoftmaxModel", "_autosummary/seldonian.models.model.LogisticRegressionModel", "_autosummary/seldonian.models.model.RLModel", "_autosummary/seldonian.models.model.RegressionModel", "_autosummary/seldonian.models.model.SGDClassifierModel", "_autosummary/seldonian.models.model.SeldonianModel", "_autosummary/seldonian.models.model.SupervisedModel", "_autosummary/seldonian.models.model.TabularSoftmaxModel", "_autosummary/seldonian.optimizers", "_autosummary/seldonian.optimizers.gradient_descent", "_autosummary/seldonian.optimizers.gradient_descent.gradient_descent_adam", "_autosummary/seldonian.optimizers.gradient_descent.handle_gradients", "_autosummary/seldonian.parse_tree", "_autosummary/seldonian.parse_tree.nodes", "_autosummary/seldonian.parse_tree.nodes.BaseNode", "_autosummary/seldonian.parse_tree.nodes.ConstantNode", "_autosummary/seldonian.parse_tree.nodes.InternalNode", "_autosummary/seldonian.parse_tree.nodes.MEDCustomBaseNode", "_autosummary/seldonian.parse_tree.nodes.Node", "_autosummary/seldonian.parse_tree.operators", "_autosummary/seldonian.parse_tree.parse_tree", "_autosummary/seldonian.parse_tree.parse_tree.ParseTree", "_autosummary/seldonian.safety_test", "_autosummary/seldonian.safety_test.safety_test", "_autosummary/seldonian.safety_test.safety_test.SafetyTest", "_autosummary/seldonian.seldonian_algorithm", "_autosummary/seldonian.seldonian_algorithm.seldonian_algorithm", "_autosummary/seldonian.spec", "_autosummary/seldonian.spec.RLSpec", "_autosummary/seldonian.spec.Spec", "_autosummary/seldonian.spec.SupervisedSpec", "_autosummary/seldonian.utils", "_autosummary/seldonian.utils.io_utils", "_autosummary/seldonian.utils.io_utils.dir_path", "_autosummary/seldonian.utils.io_utils.load_json", "_autosummary/seldonian.utils.io_utils.load_pickle", "_autosummary/seldonian.utils.io_utils.save_pickle", "_autosummary/seldonian.utils.io_utils.yes_or_no_input", "_autosummary/seldonian.utils.stats_utils", "_autosummary/seldonian.utils.stats_utils.generate_data", "_autosummary/seldonian.utils.stats_utils.stddev", "_autosummary/seldonian.utils.stats_utils.tinv", "_autosummary/seldonian.utils.stats_utils.weighted_sum_gamma", "_autosummary/seldonian.warnings", "_autosummary/seldonian.warnings.custom_warnings", "_autosummary/seldonian.warnings.custom_warnings.custom_formatwarning", "api", "getting_started", "glossary", "index", "overview"], "filenames": ["_autosummary/interface.rst", "_autosummary/interface.cli_supervised.rst", "_autosummary/interface.cli_supervised.run_interface.rst", "_autosummary/interface.command_line_interface.rst", "_autosummary/interface.command_line_interface.run_interface.rst", "_autosummary/seldonian.rst", "_autosummary/seldonian.RL.rst", "_autosummary/seldonian.RL.environments.rst", "_autosummary/seldonian.RL.environments.gridworld3x3.rst", "_autosummary/seldonian.RL.environments.gridworld3x3.Environment.rst", "_autosummary/seldonian.RL.environments.mountaincar.rst", "_autosummary/seldonian.RL.environments.mountaincar.Basis.rst", "_autosummary/seldonian.RL.environments.mountaincar.Environment.rst", "_autosummary/seldonian.RL.environments.mountaincar.FourierBasis.rst", "_autosummary/seldonian.RL.environments.mountaincar.Linear_Softmax.rst", "_autosummary/seldonian.RL.environments.mountaincar.Mountaincar.rst", "_autosummary/seldonian.RL.environments.mountaincar.Policy.rst", "_autosummary/seldonian.RL.environments.mountaincar.increment_counter.rst", "_autosummary/seldonian.candidate_selection.rst", "_autosummary/seldonian.candidate_selection.candidate_selection.rst", "_autosummary/seldonian.candidate_selection.candidate_selection.CandidateSelection.rst", "_autosummary/seldonian.dataset.rst", "_autosummary/seldonian.dataset.DataSet.rst", "_autosummary/seldonian.dataset.DataSetLoader.rst", "_autosummary/seldonian.dataset.Episode.rst", "_autosummary/seldonian.dataset.RLDataSet.rst", "_autosummary/seldonian.dataset.SupervisedDataSet.rst", "_autosummary/seldonian.models.rst", "_autosummary/seldonian.models.model.rst", "_autosummary/seldonian.models.model.ClassificationModel.rst", "_autosummary/seldonian.models.model.LinearClassifierModel.rst", "_autosummary/seldonian.models.model.LinearRegressionModel.rst", "_autosummary/seldonian.models.model.LinearSoftmaxModel.rst", "_autosummary/seldonian.models.model.LogisticRegressionModel.rst", "_autosummary/seldonian.models.model.RLModel.rst", "_autosummary/seldonian.models.model.RegressionModel.rst", "_autosummary/seldonian.models.model.SGDClassifierModel.rst", "_autosummary/seldonian.models.model.SeldonianModel.rst", "_autosummary/seldonian.models.model.SupervisedModel.rst", "_autosummary/seldonian.models.model.TabularSoftmaxModel.rst", "_autosummary/seldonian.optimizers.rst", "_autosummary/seldonian.optimizers.gradient_descent.rst", "_autosummary/seldonian.optimizers.gradient_descent.gradient_descent_adam.rst", "_autosummary/seldonian.optimizers.gradient_descent.handle_gradients.rst", "_autosummary/seldonian.parse_tree.rst", "_autosummary/seldonian.parse_tree.nodes.rst", "_autosummary/seldonian.parse_tree.nodes.BaseNode.rst", "_autosummary/seldonian.parse_tree.nodes.ConstantNode.rst", "_autosummary/seldonian.parse_tree.nodes.InternalNode.rst", "_autosummary/seldonian.parse_tree.nodes.MEDCustomBaseNode.rst", "_autosummary/seldonian.parse_tree.nodes.Node.rst", "_autosummary/seldonian.parse_tree.operators.rst", "_autosummary/seldonian.parse_tree.parse_tree.rst", "_autosummary/seldonian.parse_tree.parse_tree.ParseTree.rst", "_autosummary/seldonian.safety_test.rst", "_autosummary/seldonian.safety_test.safety_test.rst", "_autosummary/seldonian.safety_test.safety_test.SafetyTest.rst", "_autosummary/seldonian.seldonian_algorithm.rst", "_autosummary/seldonian.seldonian_algorithm.seldonian_algorithm.rst", "_autosummary/seldonian.spec.rst", "_autosummary/seldonian.spec.RLSpec.rst", "_autosummary/seldonian.spec.Spec.rst", "_autosummary/seldonian.spec.SupervisedSpec.rst", "_autosummary/seldonian.utils.rst", "_autosummary/seldonian.utils.io_utils.rst", "_autosummary/seldonian.utils.io_utils.dir_path.rst", "_autosummary/seldonian.utils.io_utils.load_json.rst", "_autosummary/seldonian.utils.io_utils.load_pickle.rst", "_autosummary/seldonian.utils.io_utils.save_pickle.rst", "_autosummary/seldonian.utils.io_utils.yes_or_no_input.rst", "_autosummary/seldonian.utils.stats_utils.rst", "_autosummary/seldonian.utils.stats_utils.generate_data.rst", "_autosummary/seldonian.utils.stats_utils.stddev.rst", "_autosummary/seldonian.utils.stats_utils.tinv.rst", "_autosummary/seldonian.utils.stats_utils.weighted_sum_gamma.rst", "_autosummary/seldonian.warnings.rst", "_autosummary/seldonian.warnings.custom_warnings.rst", "_autosummary/seldonian.warnings.custom_warnings.custom_formatwarning.rst", "api.rst", "getting_started.rst", "glossary.rst", "index.rst", "overview.rst"], "titles": ["interface", "interface.cli_supervised", "interface.cli_supervised.run_interface", "interface.command_line_interface", "interface.command_line_interface.run_interface", "seldonian", "seldonian.RL", "seldonian.RL.environments", "seldonian.RL.environments.gridworld3x3", "seldonian.RL.environments.gridworld3x3.Environment", "seldonian.RL.environments.mountaincar", "seldonian.RL.environments.mountaincar.Basis", "seldonian.RL.environments.mountaincar.Environment", "seldonian.RL.environments.mountaincar.FourierBasis", "seldonian.RL.environments.mountaincar.Linear_Softmax", "seldonian.RL.environments.mountaincar.Mountaincar", "seldonian.RL.environments.mountaincar.Policy", "seldonian.RL.environments.mountaincar.increment_counter", "seldonian.candidate_selection", "seldonian.candidate_selection.candidate_selection", "seldonian.candidate_selection.candidate_selection.CandidateSelection", "seldonian.dataset", "seldonian.dataset.DataSet", "seldonian.dataset.DataSetLoader", "seldonian.dataset.Episode", "seldonian.dataset.RLDataSet", "seldonian.dataset.SupervisedDataSet", "seldonian.models", "seldonian.models.model", "seldonian.models.model.ClassificationModel", "seldonian.models.model.LinearClassifierModel", "seldonian.models.model.LinearRegressionModel", "seldonian.models.model.LinearSoftmaxModel", "seldonian.models.model.LogisticRegressionModel", "seldonian.models.model.RLModel", "seldonian.models.model.RegressionModel", "seldonian.models.model.SGDClassifierModel", "seldonian.models.model.SeldonianModel", "seldonian.models.model.SupervisedModel", "seldonian.models.model.TabularSoftmaxModel", "seldonian.optimizers", "seldonian.optimizers.gradient_descent", "seldonian.optimizers.gradient_descent.gradient_descent_adam", "seldonian.optimizers.gradient_descent.handle_gradients", "seldonian.parse_tree", "seldonian.parse_tree.nodes", "seldonian.parse_tree.nodes.BaseNode", "seldonian.parse_tree.nodes.ConstantNode", "seldonian.parse_tree.nodes.InternalNode", "seldonian.parse_tree.nodes.MEDCustomBaseNode", "seldonian.parse_tree.nodes.Node", "seldonian.parse_tree.operators", "seldonian.parse_tree.parse_tree", "seldonian.parse_tree.parse_tree.ParseTree", "seldonian.safety_test", "seldonian.safety_test.safety_test", "seldonian.safety_test.safety_test.SafetyTest", "seldonian.seldonian_algorithm", "seldonian.seldonian_algorithm.seldonian_algorithm", "seldonian.spec", "seldonian.spec.RLSpec", "seldonian.spec.Spec", "seldonian.spec.SupervisedSpec", "seldonian.utils", "seldonian.utils.io_utils", "seldonian.utils.io_utils.dir_path", "seldonian.utils.io_utils.load_json", "seldonian.utils.io_utils.load_pickle", "seldonian.utils.io_utils.save_pickle", "seldonian.utils.io_utils.yes_or_no_input", "seldonian.utils.stats_utils", "seldonian.utils.stats_utils.generate_data", "seldonian.utils.stats_utils.stddev", "seldonian.utils.stats_utils.tinv", "seldonian.utils.stats_utils.weighted_sum_gamma", "seldonian.warnings", "seldonian.warnings.custom_warnings", "seldonian.warnings.custom_warnings.custom_formatwarning", "API", "Getting Started", "Glossary", "Seldonian Engine documentation", "Overview"], "terms": {"seldonian": [0, 1, 3, 79, 80, 82], "packag": [0, 5, 82], "modul": [0, 5, 6, 7, 18, 19, 27, 28, 32, 39, 40, 44, 51, 52, 54, 55, 57, 59, 60, 63, 75, 77, 82], "command": [1, 2, 3, 4, 69, 79], "line": [1, 2, 3, 4, 12, 15, 69, 79], "supervis": [1, 3, 20, 22, 23, 26, 38, 51, 53, 56, 62, 79, 80, 82], "learn": [1, 3, 15, 20, 22, 23, 26, 28, 29, 35, 37, 38, 42, 46, 49, 51, 53, 56, 62, 79, 80, 82], "algorithm": [1, 3, 20, 21, 22, 23, 26, 27, 49, 53, 56, 57, 58, 59, 60, 61, 62, 79, 80, 81, 82], "usag": [1, 3], "python": [1, 3, 53, 73, 79, 82], "py": [1, 3, 79], "data_pth": [1, 2, 3, 4], "metadata_pth": [1, 2, 3, 4], "include_sensitive_column": [1, 2, 4, 23, 26], "include_intercept_term": [1, 2, 4, 23, 26, 79], "save_dir": [1, 2, 4], "function": [1, 3, 8, 9, 10, 20, 39, 41, 42, 46, 51, 53, 57, 60, 61, 62, 64, 70, 73, 76, 79, 80, 82], "fals": [2, 4, 9, 12, 13, 20, 23, 26, 29, 30, 33, 36, 42, 51, 53, 60, 61, 62, 68, 79, 82], "run": [2, 4, 20, 21, 27, 42, 55, 56, 57, 58, 59, 60, 61, 62, 79, 82], "paramet": [2, 4, 9, 14, 16, 20, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 42, 46, 47, 48, 49, 50, 53, 56, 58, 60, 61, 62, 65, 66, 67, 68, 69, 71, 72, 73, 74, 79], "str": [2, 4, 9, 20, 22, 23, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 39, 42, 46, 47, 48, 49, 50, 53, 56, 60, 61, 62, 65, 66, 67, 68, 69], "path": [2, 4, 65], "main": [2, 4, 28, 52, 82], "dataset": [2, 4, 12, 20, 31, 32, 34, 35, 39, 46, 49, 56, 60, 61, 62, 79, 81, 82], "file": [2, 4, 9, 23, 66, 67, 68, 79, 81], "metadata": [2, 4, 22, 23, 25, 26, 32, 34, 39, 42, 79, 81], "json": [2, 4, 66, 82], "bool": [2, 9, 12, 15, 20, 23, 42, 50, 53, 56, 60, 61, 62, 69], "default": [2, 9, 23, 30, 31, 32, 33, 39, 42, 50, 53, 56, 60, 61, 62, 79, 82], "whether": [2, 9, 20, 23, 26, 42, 50, 53, 56, 58, 60, 61, 62, 65, 79], "includ": [2, 26, 36, 42, 53, 82], "sensit": [2, 23, 26, 80, 82], "column": [2, 22, 23, 26, 36, 46, 49, 53, 79, 82], "dure": [2, 20, 23, 26, 51, 58, 60, 61, 62, 79, 82], "train": [2, 23, 26, 29, 30, 31, 33, 35, 36, 38, 82], "predict": [2, 20, 26, 29, 30, 31, 33, 36, 79, 80, 82], "add": [2, 20, 26, 53, 79], "ones": [2, 23, 26, 79], "first": [2, 26, 36, 53, 79, 82], "engin": [5, 51, 79, 82], "3x3": [8, 9], "gridworld": [8, 9, 39], "state": [8, 9, 12, 15, 24, 32, 39, 53, 82], "0": [8, 9, 15, 29, 30, 32, 33, 36, 42, 46, 49, 56, 60, 61, 62, 71, 74, 79, 82], "8": [8, 9, 12, 79, 82], "reward": [8, 9, 12, 15, 24, 51, 74], "everywher": [8, 9], "except": [8, 9], "r": [8, 9, 12, 15, 25, 29, 30, 33, 36, 79], "1": [8, 9, 15, 29, 30, 32, 33, 36, 46, 56, 60, 71, 77, 79, 80, 82], "cell": [8, 9], "7": [8, 9, 79], "bottom": [8, 9], "middl": [8, 9], "right": [8, 9, 15, 50, 53], "action": [8, 9, 12, 15, 24, 32, 39], "ar": [8, 9, 20, 51, 53, 56, 60, 61, 62, 74, 79, 80, 81, 82], "2": [8, 9, 49, 79, 82], "3": [8, 9, 79], "up": [8, 9, 49, 53, 79, 82], "down": [8, 9], "left": [8, 9, 15, 50, 53], "respect": [8, 9], "an": [8, 9, 36, 46, 50, 51, 60, 61, 62, 65, 66, 67, 68, 69, 74, 79, 80, 82], "episod": [8, 9, 12, 15, 25, 32, 34, 39, 81], "start": [8, 9, 81, 82], "top": [8, 9, 53], "termin": [8, 9, 12, 15], "timeout": [8, 9], "occur": [8, 9], "class": [8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 59, 60, 61, 62, 82], "base": [9, 11, 12, 13, 14, 15, 16, 20, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 46, 47, 48, 49, 50, 51, 53, 56, 60, 61, 62, 79], "object": [9, 11, 15, 16, 20, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 42, 46, 49, 50, 53, 56, 58, 59, 60, 61, 62, 66, 67, 68, 79, 80, 81], "__init__": [9, 11, 12, 13, 14, 15, 16, 20, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 46, 47, 48, 49, 50, 53, 56, 60, 61, 62], "variabl": [9, 32, 46, 47, 49, 50, 51, 53, 56, 60, 61, 62, 79], "gamma": [9, 12, 56, 74], "float": [9, 12, 15, 29, 30, 31, 32, 33, 34, 35, 36, 39, 42, 46, 47, 49, 50, 53, 56, 60, 61, 62, 71, 72, 73, 74], "discount": [9, 12, 56], "factor": [9, 56], "when": [9, 20, 29, 30, 33, 36, 46, 53, 82], "calcul": [9, 12, 29, 30, 31, 32, 33, 34, 35, 36, 39, 42, 46, 49, 53, 56, 60, 61, 62, 74], "return": [9, 11, 12, 13, 14, 15, 16, 20, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 42, 46, 49, 51, 53, 56, 58, 60, 61, 62, 69, 72, 73, 74, 79, 82], "int": [9, 12, 14, 15, 20, 32, 39, 42, 46, 49, 50, 53, 71, 73], "The": [9, 15, 20, 22, 23, 26, 29, 30, 31, 32, 33, 34, 35, 36, 39, 42, 46, 47, 48, 49, 50, 51, 53, 56, 60, 61, 62, 68, 69, 71, 74, 79, 80, 81, 82], "number": [9, 29, 30, 33, 36, 42, 46, 49, 53, 71, 79, 82], "timestep": [9, 12, 15, 24], "after": 9, "which": [9, 29, 30, 33, 36, 46, 48, 49, 51, 53, 60, 61, 62, 79, 80, 82], "we": [9, 46, 49, 53, 79, 82], "agent": [9, 15], "regardless": 9, "numpi": [9, 14, 16, 20, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 46, 49, 56, 72, 74, 79], "ndarrai": [9, 12, 15, 16, 20, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 46, 49, 56, 72, 74], "possibl": [9, 32, 39, 56], "reward_dict": 9, "dict": [9, 29, 30, 31, 32, 33, 34, 35, 36, 39, 42, 46, 49, 51, 53, 60, 61, 62], "map": [9, 51], "pair": [9, 29, 30, 31, 35, 36, 38, 49], "environ_dict": 9, "next": [9, 12, 15], "initial_st": 9, "where": [9, 20, 42, 46, 49, 53, 74, 79, 82], "each": [9, 24, 25, 29, 30, 31, 32, 33, 34, 35, 36, 39, 46, 49, 51, 53, 79, 82], "terminal_st": 9, "current_st": 9, "current": [9, 29, 82], "initial_weight": 9, "initi": [9, 12, 15, 20, 42, 53, 60, 61, 62, 79], "weight": [9, 20, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 42, 46, 49, 51, 58, 60, 61, 62, 74, 79, 82], "s": [9, 15, 46, 49, 53, 72, 73, 79, 82], "polici": [9, 14, 39, 51, 80, 81, 82], "model": [9, 15, 20, 23, 42, 46, 49, 56, 58, 60, 61, 62, 79, 80, 81, 82], "param_weight": 9, "__repr__": [9, 11, 12, 13, 14, 15, 16, 20, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 46, 47, 48, 49, 50, 53, 56, 60, 61, 62], "repr": [9, 11, 12, 13, 14, 15, 16, 20, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 53, 56, 60, 61, 62], "self": [9, 11, 12, 13, 14, 15, 16, 20, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 53, 56, 60, 61, 62], "method": [9, 11, 12, 13, 14, 15, 16, 20, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 42, 46, 47, 48, 49, 50, 53, 56, 60, 61, 62, 79, 82], "_arg": 9, "helper": [9, 39, 53], "pi": [9, 24, 25], "_denom": 9, "calc_j": 9, "n_episod": [9, 12], "parallel": [9, 12], "true": [9, 12, 29, 30, 33, 36, 42, 46, 49, 51, 56, 60, 61, 62, 79, 82], "n_worker": [9, 12], "expect": [9, 12, 46, 49, 51], "sum": [9, 12, 29, 30, 33, 36, 74, 82], "gener": [9, 71, 79, 82], "us": [9, 12, 15, 20, 23, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 42, 46, 49, 51, 53, 56, 60, 61, 62, 73, 74, 79, 80, 82], "new": [9, 51, 81, 82], "perform": [9, 48, 51, 82], "multipl": [9, 79], "worker": 9, "data": [9, 20, 23, 32, 34, 39, 46, 49, 53, 56, 60, 61, 62, 68, 71, 72, 79, 81], "multiprocess": 9, "j": 9, "type": [9, 20, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 42, 46, 49, 56, 58, 72, 73, 74, 80], "generate_data": [9, 12, 79, 81], "savenam": [9, 12], "none": [9, 14, 16, 20, 50, 60, 61, 62], "list": [9, 20, 22, 24, 25, 26, 46, 49, 51, 53, 56, 60, 61, 62, 79, 82], "episode_index": 9, "probability_of_act": 9, "name": [9, 20, 22, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 39, 42, 46, 47, 48, 49, 50, 51, 53, 60, 61, 62, 79, 82], "save": [9, 68], "datafram": [9, 22, 25, 26, 32, 34, 39, 46, 49, 53, 79], "generate_episod": 9, "return_index": 9, "entir": 9, "part": [9, 82], "generate_episodes_par": 9, "thi": [9, 15, 29, 30, 32, 33, 35, 36, 37, 38, 46, 49, 50, 53, 60, 79, 80, 81, 82], "appli": [9, 39, 80, 82], "tabular": [9, 39], "softmax": [9, 32, 39], "get": [9, 14, 16, 20, 32, 53, 81], "probabl": [9, 24, 29, 30, 32, 33, 36, 53, 73, 79, 80], "given": [9, 12, 20, 32, 36, 39, 46, 49, 53, 60, 61, 62, 82], "posit": [9, 12, 15, 29, 30, 33, 36, 51, 53, 82], "between": [9, 29, 30, 33, 36, 49, 82], "correspond": [9, 73], "reset": [9, 12, 15, 53], "take_step": 9, "take": [9, 12, 15, 32, 58, 79], "chang": 9, "attribut": [12, 15, 25, 26, 53, 80, 82], "next_stat": [12, 15], "transit": [12, 15], "calc_j_from_df": 12, "df": [12, 26, 79], "header": [12, 82], "nextstat": [12, 15], "comput": [12, 15, 42, 49, 53, 60, 61, 62, 79], "pendulum": [12, 15], "euler": [12, 15], "approxim": [12, 15], "dynam": [12, 15], "configur": [12, 15], "step": [12, 15, 79], "tupl": [12, 15, 53, 58], "one": [12, 15, 32, 51, 53, 60, 61, 62, 80, 82], "time": [12, 15], "greater": [12, 15, 79, 82], "than": [12, 15, 53, 56, 79, 82], "max": [12, 15, 82], "pass": [12, 15, 46, 49, 56, 58, 79], "finish": [12, 15], "rang": [13, 79], "dorder": 13, "iorder": 13, "both": [13, 53, 79], "basi": [13, 14, 81], "n_action": 14, "get_param": [14, 16], "vector": [14, 16, 31, 32, 34, 35, 36, 39, 42, 46, 49, 72, 79, 82], "set_param": [14, 16], "param": [14, 16], "set": [14, 16, 36, 44, 47, 79, 82], "cart": 15, "pole": 15, "describ": [15, 23], "687": 15, "cours": 15, "materi": 15, "domain": 15, "balanc": 15, "must": [15, 46, 82], "move": 15, "forward": 15, "backward": 15, "keep": [15, 53], "from": [15, 23, 29, 30, 31, 32, 35, 36, 38, 39, 44, 49, 52, 53, 60, 66, 67, 69, 79, 80, 82], "fall": [15, 60, 61, 62], "alwai": [15, 46, 49, 53], "see": [15, 49, 60, 61, 62, 79, 80, 81, 82], "work": 15, "florian": 15, "2007": 15, "correct": [15, 72], "equat": 15, "system": [15, 79, 80], "observ": [15, 29, 30, 31, 33, 35, 36, 46, 49], "barrow": 15, "phil": 15, "thoma": [15, 49], "2019": [15, 49], "written": [15, 53, 82], "blossom": 15, "metevi": 15, "scott": 15, "jordan": 15, "counter": 17, "maxdigit": 17, "candid": [18, 19, 20, 40, 46, 49, 56, 58, 60, 61, 62, 79, 80, 81], "select": [18, 19, 20, 40, 46, 49, 56, 58, 60, 61, 62, 79, 80, 81], "candidate_dataset": 20, "n_safeti": 20, "parse_tre": [20, 56, 60, 61, 62, 79, 81, 82], "primary_object": [20, 42, 43, 60, 61, 62, 79], "optimization_techniqu": [20, 60, 61, 62], "barrier_funct": [20, 60, 61, 62], "optim": [20, 58, 60, 61, 62, 79, 80, 81, 82], "powel": 20, "initial_solut": [20, 79], "regim": [20, 22, 23, 26, 51, 53, 56, 79, 80, 82], "write_logfil": 20, "kwarg": [20, 22, 23, 25, 26, 42, 46, 47, 48, 49, 53, 56, 77], "seldonianmodel": [20, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 46, 49, 56, 60, 61, 62, 81], "contain": [20, 23, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 42, 46, 49, 51, 53, 56, 60, 61, 62, 79, 82], "length": [20, 51], "safeti": [20, 46, 49, 54, 55, 56, 58, 60, 61, 62, 79, 80, 81], "confid": [20, 46, 49, 50, 53, 56, 60, 61, 62, 79, 80, 82], "bound": [20, 42, 46, 47, 49, 50, 51, 53, 56, 60, 61, 62, 79, 82], "parsetre": [20, 56, 60, 61, 62, 79, 81], "pars": [20, 44, 46, 47, 48, 49, 50, 51, 52, 53, 56, 60, 61, 62, 79], "tree": [20, 44, 46, 47, 48, 49, 50, 51, 52, 53, 56, 60, 61, 62, 79], "behavior": [20, 42, 44, 51, 52, 53, 56, 60, 61, 62, 79, 80, 81], "constraint": [20, 42, 44, 51, 52, 53, 56, 60, 61, 62, 79, 80, 81], "would": [20, 42, 51, 60, 61, 62], "sole": [20, 42, 60, 61, 62], "absenc": [20, 42, 60, 61, 62], "i": [20, 42, 53, 60, 61, 62, 79, 82], "e": [20, 22, 23, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 39, 42, 46, 49, 53, 56, 60, 61, 62, 79, 80, 82], "loss": [20, 29, 30, 33, 36, 42, 51, 60, 61, 62, 80], "g": [20, 22, 23, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 39, 42, 46, 49, 53, 56, 60, 61, 62, 80], "gradient_desc": [20, 60, 61, 62, 81], "string": [20, 47, 48, 50, 51, 53, 60, 61, 62, 79, 82], "categori": [20, 22, 23, 26, 53, 56, 77], "machin": [20, 22, 23, 26, 28, 29, 35, 36, 37, 38, 46, 49, 53, 56, 79, 80], "rl": [20, 22, 23, 24, 25, 26, 32, 34, 39, 53, 56, 60, 74, 81, 82], "write": [20, 79], "output": [20, 79], "disk": [20, 23], "evaluate_primary_object": 20, "theta": [20, 29, 30, 31, 32, 33, 34, 35, 36, 39, 42, 46, 49, 79, 82], "valu": [20, 31, 35, 42, 46, 47, 49, 53, 69, 79, 82], "primari": [20, 30, 31, 32, 33, 39, 42, 60, 61, 62, 79, 80, 82], "wrapper": [20, 66, 67, 68], "fix": 20, "input": [20, 46, 49, 65, 66, 69, 74, 79, 80, 82], "gradient": [20, 29, 30, 33, 36, 42, 60, 61, 62, 82], "descent": [20, 42, 82], "get_constraint_upper_bound": 20, "upper": [20, 42, 46, 47, 48, 49, 50, 53, 56, 79, 82], "arrai": [20, 23, 29, 30, 33, 36, 51, 74, 79], "objective_with_barri": 20, "minimization_techniqu": 20, "barrier": [20, 82], "larg": 20, "penalti": 20, "ani": [20, 82], "violat": [20, 53, 82], "nsf": [20, 58, 79, 82], "build": [21, 44, 52, 53, 59], "load": [21, 23, 66, 67], "meta_inform": [22, 25, 26, 79], "hold": [22, 24, 25, 26], "all": [22, 26, 29, 32, 34, 35, 37, 38, 39, 50, 53, 56, 79, 82], "load_rl_dataset": 23, "filenam": [23, 66, 67, 68, 77], "metadata_filenam": 23, "file_typ": 23, "csv": 23, "creat": [23, 46, 49, 53, 79, 82], "rldataset": [23, 81], "you": [23, 53, 68, 79, 81, 82], "want": [23, 53, 68, 79, 82], "extens": 23, "load_supervised_dataset": 23, "superviseddataset": [23, 79, 81], "pre": 23, "append": [23, 79], "featur": [23, 29, 30, 31, 33, 35, 36, 38, 46, 49, 79, 80], "o": 25, "label_column": [26, 79, 82], "sensitive_column_nam": 26, "panda": [26, 34, 39, 49, 79], "full": [26, 79, 82], "target": 26, "label": [26, 29, 30, 31, 33, 35, 36, 38, 46, 49, 79], "supervisedmodel": [29, 35, 81], "parent": [29, 32, 35, 37, 38, 49], "classif": [29, 30, 33, 36, 51, 53, 80, 82], "librari": [29, 35, 37, 38, 42, 60, 80, 81, 82], "onli": [29, 56, 80, 82], "support": [29, 36, 51, 80, 82], "binari": [29, 30, 33, 36], "accuraci": [29, 30, 33, 36], "x": [29, 30, 31, 32, 33, 35, 36, 38, 49, 71, 79], "y": [29, 30, 31, 33, 35, 36, 38, 49, 71, 79], "evaluate_statist": [29, 30, 31, 32, 33, 34, 35, 36, 39], "statistic_nam": [29, 30, 31, 32, 33, 34, 35, 36, 39], "data_dict": [29, 30, 31, 32, 33, 34, 35, 36, 39, 46, 49], "evalu": [29, 30, 31, 32, 33, 34, 35, 36, 39, 42, 46, 49, 53], "provid": [29, 30, 31, 32, 33, 34, 35, 36, 39, 53, 60, 61, 62, 69, 80, 82], "statist": [29, 30, 31, 32, 33, 34, 35, 36, 39, 46, 51, 56, 60, 61, 62, 79, 82], "whole": [29, 30, 31, 32, 33, 34, 35, 36, 39, 53], "sampl": [29, 30, 31, 32, 33, 34, 35, 36, 39, 72, 79], "fpr": [29, 30, 33, 36, 46, 51, 82], "rate": [29, 30, 33, 36, 42, 51, 53, 82], "over": [29, 30, 31, 32, 33, 34, 35, 36, 39, 56, 82], "fit": [29, 30, 31, 33, 35, 36, 38], "nxm": [29, 30, 31, 35, 36, 38], "nx1": [29, 30, 31, 35, 36, 38], "gradient_sample_logistic_loss": [29, 30, 33, 36], "logist": [29, 30, 33, 36, 51], "w": [29, 30, 33, 36, 79], "t": [29, 30, 33, 36, 46, 49, 73, 79], "perceptron": [29, 30, 33, 36], "sample_false_negative_r": [29, 30, 33, 36], "neg": [29, 30, 33, 36, 51, 53], "being": [29, 30, 33, 36, 46], "fact": [29, 30, 33, 36], "wa": [29, 30, 33, 36, 49, 82], "sample_false_positive_r": [29, 30, 33, 36], "sample_negative_r": [29, 30, 33, 36], "sample_positive_r": [29, 30, 33, 36], "normal": [29, 30, 32, 33, 36, 56, 60, 71, 79, 80], "sample_from_statist": [29, 30, 31, 32, 33, 34, 35, 36, 39], "sample_logistic_loss": [29, 30, 33, 36], "sample_perceptron_loss": [29, 30, 33, 36], "fraction": [29, 30, 33, 36, 60, 61, 62, 79], "incorrect": [29, 30, 33, 36], "vector_false_negative_r": [29, 30, 33, 36], "subject": [29, 30, 33, 36, 79, 82], "actual": [29, 30, 33, 36, 82], "vector_false_positive_r": [29, 30, 33, 36], "vector_negative_r": [29, 30, 33, 36], "vector_positive_r": [29, 30, 33, 36], "vector_true_negative_r": [29, 30, 33, 36], "vector_true_positive_r": [29, 30, 33, 36], "vector_logistic_loss": [29, 30, 33, 36], "classificationmodel": [30, 33, 36, 81], "implement": [30, 31, 33, 36, 42, 73, 81, 82], "linear": [30, 31, 32, 36, 79], "classifi": 30, "regress": [30, 31, 33, 35, 49, 51, 53, 79, 80, 82], "default_object": [30, 31, 32, 33, 39], "make": [30, 36, 53, 79, 80], "regressionmodel": [31, 81], "mean": [31, 35, 49, 51, 79, 80, 82], "squar": [31, 35, 51, 79, 80, 82], "error": [31, 35, 49, 51, 79, 80, 82], "mean_squared_error": [31, 35, 51, 79, 82], "sample_mean_error": [31, 35], "sample_mean_squared_error": [31, 35, 79], "vector_mean_error": [31, 35], "vector_mean_squared_error": [31, 35], "environ": [32, 39, 60, 79, 81, 82], "rlmodel": [32, 39, 81], "mountaincar": [32, 81], "is_estim": 32, "unweight": [32, 34, 39], "import": [32, 34, 39, 79, 82], "estim": [32, 34, 39, 46], "overrid": [32, 46, 49], "so": [32, 49, 82], "can": [32, 53, 79, 82], "IS": [32, 34, 39], "apply_polici": [32, 39], "A": [32, 34, 39, 51, 53, 60, 61, 62, 65, 66, 67, 68, 81, 82], "defin": [32, 51, 79, 80], "j_pi_new": [32, 34, 39, 51, 82], "get_p": 32, "probabilit": 32, "encod": 32, "sample_is_estim": [32, 34, 39], "vector_is_estim": [32, 34, 39], "have": [33, 53, 79, 80, 82], "offset": 36, "upper_bounds_funct": [42, 43], "theta_init": 42, "lambda_init": [42, 60, 61, 62], "alpha_theta": [42, 60, 61, 62], "05": [42, 46, 49, 82], "alpha_lamb": [42, 60, 61, 62], "beta_veloc": [42, 60, 61, 62], "9": [42, 60, 61, 62, 74, 79], "beta_rmsprop": [42, 60, 61, 62], "num_it": [42, 60, 61, 62], "200": [42, 60, 61, 62], "gradient_librari": [42, 43], "autograd": [42, 60, 61, 62, 79], "store_valu": 42, "verbos": [42, 60, 61, 62, 68], "simultan": [42, 79, 80, 82], "ascent": [42, 82], "adam": [42, 60, 61, 62, 82], "lagrangian": [42, 82], "l": [42, 82], "lambda": [42, 82], "f": [42, 49, 82], "lagrang": [42, 82], "multipli": [42, 53, 82], "done": 42, "find": [42, 79, 82], "saddl": [42, 82], "point": [42, 49, 66, 67, 71, 82], "term": 42, "exponenti": [42, 53], "decai": 42, "veloc": 42, "rmsprop": 42, "iter": [42, 49, 79], "automat": 42, "variou": 42, "quantiti": 42, "solut": [42, 53, 56, 58, 79, 82], "dictionari": [42, 51], "about": [42, 53, 79, 82], "lower": [46, 47, 48, 49, 50, 53], "inf": [46, 48, 49], "conditional_column": [46, 49], "leaf": [46, 47, 48, 56], "measur": [46, 51, 53, 82], "condit": [46, 49, 53], "node_typ": [46, 47], "equal": [46, 53, 56, 79, 82], "base_nod": 46, "delta": [46, 49, 53, 79, 80, 82], "share": [46, 49], "put": [46, 49, 79], "measure_function_nam": 46, "repres": [46, 47, 48, 51, 53], "measure_funct": [46, 82], "oper": [46, 48, 81, 82], "calculate_bound": [46, 49], "bound_method": [46, 49, 56, 60, 61, 62, 79], "test": [46, 49, 54, 55, 56, 58, 60, 61, 62, 79, 80, 81], "calculate_data_forbound": [46, 49], "prepar": 46, "calculate_valu": [46, 49], "etc": [46, 48, 49], "compute_hc_lowerbound": [46, 49], "datas": [46, 49], "high": [46, 49, 79, 80], "level": [46, 49, 53, 79, 80, 82], "compute_hc_upper_and_lowerbound": [46, 49], "depend": [46, 49, 79, 82], "equival": [46, 49], "call": [46, 49, 79, 80, 82], "compute_hc_upperbound": [46, 49], "independ": [46, 49], "mask_datafram": [46, 49], "mask": [46, 49], "joint": [46, 49], "AND": [46, 49], "predict_hc_lowerbound": [46, 49], "predict_hc_upper_and_lowerbound": [46, 49], "predict_hc_upperbound": [46, 49], "zhat": [46, 49], "unbias": 46, "constant": [47, 53, 74], "constant_nod": 47, "represent": [47, 48, 50, 51], "also": [47, 48, 50, 79, 80, 82], "what": [47, 48, 50, 79, 82], "displai": [47, 48, 50, 53], "insid": [47, 48, 50, 79, 82], "box": [47, 48, 50, 82], "visual": [47, 48, 50, 53, 79], "graph": [47, 48, 50, 53, 79], "intern": 48, "non": 48, "These": [48, 82], "basenod": [49, 81], "custom": [49, 51, 82], "wise": 49, "differ": [49, 79, 82], "male": [49, 82], "femal": [49, 82], "et": 49, "al": 49, "scienc": [49, 82], "paper": [49, 82], "figur": 49, "sever": 49, "same": [49, 69], "precalculate_data": 49, "preconfigur": 49, "doe": [49, 53, 80], "need": [49, 50, 53, 59, 79, 82], "recalcul": 49, "through": [49, 53], "y_i": 49, "y_hat_i": 49, "m": [49, 53, 82], "y_j": 49, "y_hat_j": 49, "epsilon": 49, "There": [49, 53, 82], "mai": [49, 65, 82], "row": [49, 79, 82], "min": [49, 82], "n_male": 49, "n_femal": 49, "index": [50, 74], "child": [50, 51, 53, 60, 61, 62], "will_lower_bound": 50, "will_upper_bound": 50, "global": [51, 82], "construct": 51, "measure_functions_dict": 51, "sub_regim": [51, 53, 79, 82], "appear": [51, 53, 82], "recogn": [51, 82], "special": [51, 82], "organ": 51, "sub": [51, 53, 80], "For": [51, 79, 82], "refer": 51, "here": [51, 79, 82], "pr": [51, 53, 82], "nr": 51, "tpr": [51, 82], "fnr": 51, "tnr": 51, "logistic_loss": 51, "mean_error": [51, 53], "reinforc": [51, 80, 82], "custom_base_node_dict": 51, "node": [51, 53, 56, 79, 81], "op_mapp": 51, "ast": [51, 53], "those": 51, "thei": [51, 69, 82], "not_supported_op_mapp": 51, "Not": 51, "bounds_required_dict": 51, "specifi": [51, 53, 82], "requir": [51, 53, 61, 79, 82], "If": [51, 53, 60, 61, 62, 69, 79, 81], "ha": [51, 82], "two": [51, 53, 79, 82], "children": [51, 53], "b": [51, 53], "boolean": [51, 79], "4": [51, 79, 82], "like": [51, 53, 79, 82], "need_a_low": 51, "need_a_upp": 51, "need_b_low": 51, "need_b_upp": 51, "singl": [53, 79], "maximum": [53, 56, 82], "ml": 53, "determin": 53, "user": [53, 69, 80, 82], "appropri": 53, "root": [53, 56], "via": 53, "assign": [53, 79], "built": [53, 60, 61, 62, 82], "constraint_str": [53, 79], "express": 53, "n_node": 53, "total": 53, "n_base_nod": 53, "more": [53, 82], "onc": [53, 79], "contribut": 53, "base_node_dict": 53, "track": 53, "uniqu": [53, 79], "been": 53, "alreadi": [53, 79], "help": [53, 73], "handl": 53, "case": [53, 79, 82], "duplic": 53, "node_fonts": 53, "fontsiz": 53, "graphviz": [53, 79], "available_measure_funct": 53, "_ab": 53, "absolut": [53, 82], "interv": [53, 56], "_add": 53, "_assign_bounds_help": 53, "lower_need": 53, "upper_need": 53, "travers": 53, "_assign_deltas_help": 53, "weight_method": [53, 79], "how": [53, 82], "_ast2pt_nod": 53, "ast_nod": 53, "_ast_tree_help": 53, "recurs": 53, "_div": 53, "divid": 53, "_evaluator_help": 53, "_exp": 53, "_max": 53, "_min": 53, "minimum": [53, 56, 82], "_mult": 53, "_pow": 53, "pow": 53, "_propagate_valu": 53, "propag": [53, 56], "_propagator_help": 53, "_protect_nan": 53, "bound_typ": 53, "nan": 53, "infin": 53, "postit": 53, "_sub": 53, "subract": 53, "assign_bounds_need": [53, 79], "breadth": 53, "search": 53, "decid": [53, 79, 82], "eventu": 53, "necessari": 53, "becaus": [53, 82], "end": 53, "care": 53, "assign_delta": [53, 79], "split": [53, 79, 82], "among": 53, "create_from_ast": [53, 79], "structur": 53, "mathemat": [53, 82], "syntax": 53, "evaluate_constraint": 53, "itself": 53, "postord": 53, "logic": 53, "make_viz": 53, "titl": 53, "diagram": 53, "make_viz_help": 53, "edg": 53, "digraph": 53, "propagate_bound": 53, "reset_base_node_dict": 53, "reset_data": 53, "cach": 53, "less": [53, 56, 79, 82], "frequent": 53, "relev": 56, "normalize_return": [56, 60], "min_return": 56, "max_return": 56, "candidate_solut": [56, 79, 82], "ttest": [56, 60, 61, 62, 79], "loop": 56, "found": [56, 58, 79, 82], "spec": [58, 79, 81], "specif": [58, 59, 60, 61, 62, 82], "obect": 58, "passed_safeti": [58, 79], "indic": [58, 79], "model_class": [60, 61, 62, 79], "frac_data_in_safeti": [60, 61, 62, 79], "initial_solution_fn": [60, 61, 62, 79], "rl_environment_obj": 60, "use_builtin_primary_gradient_fn": [60, 61, 62], "custom_primary_gradient_fn": [60, 61, 62], "optimization_hyperparam": [60, 61, 62], "005": [60, 61, 62], "95": [60, 61, 62], "hyper_search": [60, 61, 62], "5": [60, 61, 62, 79, 82], "regularization_hyperparam": [60, 61, 62], "instanc": [60, 61, 62], "remain": [60, 61, 62], "exist": [60, 61, 62], "back": [60, 61, 62], "builtin": [60, 61, 62], "hyperparamet": [60, 61, 62, 79], "regular": [60, 61, 62], "usable_opt_dict": [60, 61, 62], "show": [60, 61, 62, 69, 82], "accept": [60, 61, 62], "techniqu": [60, 61, 62, 82], "check": 65, "directori": 65, "pickl": [67, 68], "abl": 68, "str_to_show": 69, "default_str": 69, "default_v": 69, "ye": 69, "question": 69, "gather": 69, "invalid": 69, "answer": 69, "let": [69, 79], "them": [69, 82], "know": 69, "again": 69, "shown": 69, "enter": 69, "noth": 69, "numpoint": [71, 79], "loc_x": [71, 79], "loc_i": [71, 79], "sigma_x": [71, 79], "sigma_i": [71, 79], "2d": 71, "random": [71, 79], "center": 71, "distribut": [71, 79], "dimens": 71, "standard": [71, 72, 79], "deviat": [71, 72], "v": 72, "bessel": 72, "p": 73, "nu": 73, "invers": [73, 82], "student": [73, 79], "cdf": 73, "degre": 73, "freedom": 73, "matlab": 73, "http": 73, "www": 73, "mathwork": 73, "com": 73, "stat": 73, "html": 73, "arr": 74, "msg": 77, "lineno": 77, "arg": 77, "To": [79, 82], "pip": 79, "Then": 79, "wide": 79, "consid": 79, "problem": [79, 80, 82], "contin": 79, "goal": 79, "solv": 79, "could": 79, "univari": 79, "mse": 79, "minim": 79, "just": 79, "intercept": 79, "slope": 79, "now": 79, "suppos": 79, "follow": [79, 82], "ensur": [79, 80, 82], "least": [79, 82], "25": 79, "fulli": 79, "formul": 79, "g_": 79, "mathrm": 79, "_squar": 79, "_error": 79, "_1": 79, "_2": 79, "while": [79, 80], "align": 79, "notic": 79, "second": 79, "conflict": [79, 82], "attempt": 79, "satisfi": [79, 80, 82], "cannot": 79, "No": 79, "code": [79, 81, 82], "some": 79, "synthet": 79, "consist": [79, 82], "togeth": 79, "did": 79, "abov": 79, "underli": 79, "In": [79, 80, 82], "zero": 79, "vs": 79, "inform": [79, 82], "ignor": 79, "mani": [79, 82], "api": [79, 81, 82], "doc": 79, "supervisedspec": [79, 81], "out": 79, "do": [79, 82], "enumer": 79, "comment": 79, "below": [79, 82], "np": 79, "thinli": 79, "wrap": 79, "version": 79, "pd": 79, "linearregressionmodel": [79, 81], "seldonian_algorithm": [79, 81, 82], "__name__": 79, "__main__": 79, "seed": 79, "1000": 79, "def": 79, "plu": 79, "nois": 79, "metadataa": 79, "feature1": 79, "hstack": 79, "expand_dim": 79, "axi": 79, "conveni": 79, "matrix": 79, "ii": 79, "len": 79, "fill": 79, "6": [79, 82], "your": [79, 82], "math": 79, "10": 79, "hidden": 79, "won": 79, "worri": 79, "11": [79, 82], "print": 79, "copi": 79, "virtual": 79, "should": [79, 80, 82], "20": 79, "30": 79, "40": 79, "16911355": 79, "1738146": 79, "last": 79, "few": 79, "script": [79, 82], "someth": 79, "although": 79, "exact": 79, "might": [79, 82], "slightli": 79, "criteria": 80, "fair": [80, 82], "met": 80, "tbd": 80, "often": 80, "simpli": 80, "interfac": [80, 81], "interact": [80, 82], "other": 80, "paradigm": 80, "adopt": 80, "design": [80, 82], "enforc": 80, "against": 80, "discrimin": 80, "gender": 80, "race": [80, 82], "common": 80, "exampl": [80, 81, 82], "sometim": 80, "protect": 80, "pertain": 80, "within": [80, 82], "welcom": 81, "core": 81, "sourc": 81, "host": 81, "github": 81, "complet": [81, 82], "overview": 81, "instal": 81, "simpl": [81, 82], "gridworld3x3": 81, "increment_count": 81, "fourierbasi": 81, "linear_softmax": 81, "candidate_select": 81, "candidateselect": [81, 82], "datasetload": 81, "linearclassifiermodel": 81, "linearsoftmaxmodel": 81, "logisticregressionmodel": 81, "sgdclassifiermodel": 81, "tabularsoftmaxmodel": 81, "gradient_descent_adam": 81, "handle_gradi": 81, "constantnod": 81, "internalnod": 81, "medcustombasenod": 81, "safety_test": 81, "safetytest": [81, 82], "rlspec": 81, "util": 81, "io_util": 81, "dir_path": 81, "load_json": 81, "load_pickl": 81, "save_pickl": 81, "yes_or_no_input": 81, "stats_util": 81, "stddev": 81, "tinv": 81, "weighted_sum_gamma": 81, "warn": 81, "custom_warn": 81, "custom_formatwarn": 81, "cli_supervis": 81, "run_interfac": 81, "command_line_interfac": [81, 82], "glossari": 81, "document": 82, "sa": 82, "detail": 82, "descript": 82, "umass": 82, "ai": 82, "page": 82, "At": 82, "broadest": 82, "scope": 82, "three": 82, "compon": 82, "option": 82, "cli": 82, "graphic": 82, "gui": 82, "develop": 82, "It": 82, "much": 82, "comma": 82, "separ": 82, "newlin": 82, "look": 82, "622": 82, "491": 82, "56": 82, "439": 82, "93": 82, "707": 82, "64": 82, "663": 82, "65": 82, "557": 82, "09": 82, "711": 82, "37": 82, "731": 82, "31": 82, "509": 82, "33333": 82, "538": 82, "490": 82, "58": 82, "406": 82, "59": 82, "529": 82, "532": 82, "28": 82, "447": 82, "23": 82, "527": 82, "379": 82, "14": 82, "488": 82, "98333": 82, "455": 82, "18": 82, "440": 82, "570": 82, "86": 82, "417": 82, "54": 82, "453": 82, "53": 82, "425": 82, "87": 82, "475": 82, "63": 82, "476": 82, "407": 82, "15": 82, "97333": 82, "756": 82, "91": 82, "679": 82, "62": 82, "531": 82, "583": 82, "534": 82, "42": 82, "521": 82, "592": 82, "41": 82, "783": 82, "76": 82, "588": 82, "26": 82, "53333": 82, "befor": 82, "valid": 82, "partit": 82, "intention": 82, "exclud": 82, "format": 82, "properti": 82, "kei": 82, "either": 82, "try": 82, "sensitive_column": 82, "rl_environment_nam": 82, "definit": 82, "g_i": 82, "_i": 82, "_": 82, "n": 82, "directli": 82, "nativ": 82, "ab": 82, "exp": 82, "certain": 82, "associ": 82, "interpret": 82, "correctli": 82, "most": 82, "basic": 82, "plain": 82, "english": 82, "rememb": 82, "framework": 82, "leq": 82, "omit": 82, "88": 82, "cover": 82, "howev": 82, "commonli": 82, "atr1": 82, "atr2": 82, "placehold": 82, "parenthes": 82, "surround": 82, "statement": 82, "r1": 82, "r2": 82, "demograph": 82, "pariti": 82, "toler": 82, "ratio": 82, "dispar": 82, "impact": 82, "yet": 82, "anoth": 82, "permit": 82, "belong": 82, "note": 82, "short": 82, "edit": 82, "practic": 82, "modifi": 82, "assembl": 82, "obtain": 82, "black": 82, "shape": 82, "ad": 82, "cost": 82, "forc": 82, "toward": 82, "feasibl": 82, "mathcal": 82, "mathbf": 82, "lambda_i": 82, "ith": 82, "kkt": 82, "theorem": 82, "optima": 82, "quad": 82, "ldot": 82, "situat": 82, "contraint": 82, "vanilla": 82, "result": 82, "oscil": 82, "boundari": 82, "dampen": 82, "momentum": 82, "our": 82, "mitig": 82, "far": 82}, "objects": {"": [[0, 0, 0, "-", "interface"], [5, 0, 0, "-", "seldonian"]], "interface": [[1, 0, 0, "-", "cli_supervised"], [3, 0, 0, "-", "command_line_interface"]], "interface.cli_supervised": [[2, 1, 1, "", "run_interface"]], "interface.command_line_interface": [[4, 1, 1, "", "run_interface"]], "seldonian": [[6, 0, 0, "-", "RL"], [18, 0, 0, "-", "candidate_selection"], [21, 0, 0, "-", "dataset"], [27, 0, 0, "-", "models"], [40, 0, 0, "-", "optimizers"], [44, 0, 0, "-", "parse_tree"], [54, 0, 0, "-", "safety_test"], [57, 0, 0, "-", "seldonian_algorithm"], [59, 0, 0, "-", "spec"], [63, 0, 0, "-", "utils"], [75, 0, 0, "-", "warnings"]], "seldonian.RL": [[7, 0, 0, "-", "environments"]], "seldonian.RL.environments": [[8, 0, 0, "-", "gridworld3x3"], [10, 0, 0, "-", "mountaincar"]], "seldonian.RL.environments.gridworld3x3": [[9, 2, 1, "", "Environment"]], "seldonian.RL.environments.gridworld3x3.Environment": [[9, 3, 1, "", "__init__"], [9, 3, 1, "", "__repr__"], [9, 3, 1, "", "_arg"], [9, 3, 1, "", "_denom"], [9, 3, 1, "", "calc_J"], [9, 3, 1, "", "generate_data"], [9, 3, 1, "", "generate_episode"], [9, 3, 1, "", "generate_episodes_par"], [9, 3, 1, "", "pi"], [9, 3, 1, "", "reset"], [9, 3, 1, "", "take_step"]], "seldonian.RL.environments.mountaincar": [[11, 2, 1, "", "Basis"], [12, 2, 1, "", "Environment"], [13, 2, 1, "", "FourierBasis"], [14, 2, 1, "", "Linear_Softmax"], [15, 2, 1, "", "Mountaincar"], [16, 2, 1, "", "Policy"], [17, 1, 1, "", "increment_counter"]], "seldonian.RL.environments.mountaincar.Basis": [[11, 3, 1, "", "__init__"], [11, 3, 1, "", "__repr__"]], "seldonian.RL.environments.mountaincar.Environment": [[12, 3, 1, "", "R"], [12, 3, 1, "", "__init__"], [12, 3, 1, "", "__repr__"], [12, 3, 1, "", "calc_J_from_df"], [12, 3, 1, "", "generate_data"], [12, 3, 1, "", "nextState"], [12, 3, 1, "", "reset"], [12, 3, 1, "", "step"], [12, 3, 1, "", "terminal"]], "seldonian.RL.environments.mountaincar.FourierBasis": [[13, 3, 1, "", "__init__"], [13, 3, 1, "", "__repr__"]], "seldonian.RL.environments.mountaincar.Linear_Softmax": [[14, 3, 1, "", "__init__"], [14, 3, 1, "", "__repr__"], [14, 3, 1, "", "get_params"], [14, 3, 1, "", "set_params"]], "seldonian.RL.environments.mountaincar.Mountaincar": [[15, 3, 1, "", "R"], [15, 3, 1, "", "__init__"], [15, 3, 1, "", "__repr__"], [15, 3, 1, "", "nextState"], [15, 3, 1, "", "reset"], [15, 3, 1, "", "step"], [15, 3, 1, "", "terminal"]], "seldonian.RL.environments.mountaincar.Policy": [[16, 3, 1, "", "__init__"], [16, 3, 1, "", "__repr__"], [16, 3, 1, "", "get_params"], [16, 3, 1, "", "set_params"]], "seldonian.candidate_selection": [[19, 0, 0, "-", "candidate_selection"]], "seldonian.candidate_selection.candidate_selection": [[20, 2, 1, "", "CandidateSelection"]], "seldonian.candidate_selection.candidate_selection.CandidateSelection": [[20, 3, 1, "", "__init__"], [20, 3, 1, "", "__repr__"], [20, 3, 1, "", "evaluate_primary_objective"], [20, 3, 1, "", "get_constraint_upper_bounds"], [20, 3, 1, "", "objective_with_barrier"], [20, 3, 1, "", "run"]], "seldonian.dataset": [[22, 2, 1, "", "DataSet"], [23, 2, 1, "", "DataSetLoader"], [24, 2, 1, "", "Episode"], [25, 2, 1, "", "RLDataSet"], [26, 2, 1, "", "SupervisedDataSet"]], "seldonian.dataset.DataSet": [[22, 3, 1, "", "__init__"], [22, 3, 1, "", "__repr__"]], "seldonian.dataset.DataSetLoader": [[23, 3, 1, "", "__init__"], [23, 3, 1, "", "__repr__"], [23, 3, 1, "", "load_RL_dataset"], [23, 3, 1, "", "load_supervised_dataset"]], "seldonian.dataset.Episode": [[24, 3, 1, "", "__init__"], [24, 3, 1, "", "__repr__"]], "seldonian.dataset.RLDataSet": [[25, 3, 1, "", "__init__"], [25, 3, 1, "", "__repr__"]], "seldonian.dataset.SupervisedDataSet": [[26, 3, 1, "", "__init__"], [26, 3, 1, "", "__repr__"]], "seldonian.models": [[28, 0, 0, "-", "model"]], "seldonian.models.model": [[29, 2, 1, "", "ClassificationModel"], [30, 2, 1, "", "LinearClassifierModel"], [31, 2, 1, "", "LinearRegressionModel"], [32, 2, 1, "", "LinearSoftmaxModel"], [33, 2, 1, "", "LogisticRegressionModel"], [34, 2, 1, "", "RLModel"], [35, 2, 1, "", "RegressionModel"], [36, 2, 1, "", "SGDClassifierModel"], [37, 2, 1, "", "SeldonianModel"], [38, 2, 1, "", "SupervisedModel"], [39, 2, 1, "", "TabularSoftmaxModel"]], "seldonian.models.model.ClassificationModel": [[29, 3, 1, "", "__init__"], [29, 3, 1, "", "__repr__"], [29, 3, 1, "", "accuracy"], [29, 3, 1, "", "evaluate_statistic"], [29, 3, 1, "", "fit"], [29, 3, 1, "", "gradient_sample_logistic_loss"], [29, 3, 1, "", "sample_False_Negative_Rate"], [29, 3, 1, "", "sample_False_Positive_Rate"], [29, 3, 1, "", "sample_Negative_Rate"], [29, 3, 1, "", "sample_Positive_Rate"], [29, 3, 1, "", "sample_from_statistic"], [29, 3, 1, "", "sample_logistic_loss"], [29, 3, 1, "", "sample_perceptron_loss"], [29, 3, 1, "", "vector_False_Negative_Rate"], [29, 3, 1, "", "vector_False_Positive_Rate"], [29, 3, 1, "", "vector_Negative_Rate"], [29, 3, 1, "", "vector_Positive_Rate"], [29, 3, 1, "", "vector_True_Negative_Rate"], [29, 3, 1, "", "vector_True_Positive_Rate"], [29, 3, 1, "", "vector_logistic_loss"]], "seldonian.models.model.LinearClassifierModel": [[30, 3, 1, "", "__init__"], [30, 3, 1, "", "__repr__"], [30, 3, 1, "", "accuracy"], [30, 3, 1, "", "default_objective"], [30, 3, 1, "", "evaluate_statistic"], [30, 3, 1, "", "fit"], [30, 3, 1, "", "gradient_sample_logistic_loss"], [30, 3, 1, "", "predict"], [30, 3, 1, "", "sample_False_Negative_Rate"], [30, 3, 1, "", "sample_False_Positive_Rate"], [30, 3, 1, "", "sample_Negative_Rate"], [30, 3, 1, "", "sample_Positive_Rate"], [30, 3, 1, "", "sample_from_statistic"], [30, 3, 1, "", "sample_logistic_loss"], [30, 3, 1, "", "sample_perceptron_loss"], [30, 3, 1, "", "vector_False_Negative_Rate"], [30, 3, 1, "", "vector_False_Positive_Rate"], [30, 3, 1, "", "vector_Negative_Rate"], [30, 3, 1, "", "vector_Positive_Rate"], [30, 3, 1, "", "vector_True_Negative_Rate"], [30, 3, 1, "", "vector_True_Positive_Rate"], [30, 3, 1, "", "vector_logistic_loss"]], "seldonian.models.model.LinearRegressionModel": [[31, 3, 1, "", "__init__"], [31, 3, 1, "", "__repr__"], [31, 3, 1, "", "default_objective"], [31, 3, 1, "", "evaluate_statistic"], [31, 3, 1, "", "fit"], [31, 3, 1, "", "predict"], [31, 3, 1, "", "sample_Mean_Error"], [31, 3, 1, "", "sample_Mean_Squared_Error"], [31, 3, 1, "", "sample_from_statistic"], [31, 3, 1, "", "vector_Mean_Error"], [31, 3, 1, "", "vector_Mean_Squared_Error"]], "seldonian.models.model.LinearSoftmaxModel": [[32, 3, 1, "", "IS_estimate"], [32, 3, 1, "", "__init__"], [32, 3, 1, "", "__repr__"], [32, 3, 1, "", "apply_policy"], [32, 3, 1, "", "default_objective"], [32, 3, 1, "", "evaluate_statistic"], [32, 3, 1, "", "get_p"], [32, 3, 1, "", "sample_IS_estimate"], [32, 3, 1, "", "sample_from_statistic"], [32, 3, 1, "", "vector_IS_estimate"]], "seldonian.models.model.LogisticRegressionModel": [[33, 3, 1, "", "__init__"], [33, 3, 1, "", "__repr__"], [33, 3, 1, "", "accuracy"], [33, 3, 1, "", "default_objective"], [33, 3, 1, "", "evaluate_statistic"], [33, 3, 1, "", "fit"], [33, 3, 1, "", "gradient_sample_logistic_loss"], [33, 3, 1, "", "predict"], [33, 3, 1, "", "sample_False_Negative_Rate"], [33, 3, 1, "", "sample_False_Positive_Rate"], [33, 3, 1, "", "sample_Negative_Rate"], [33, 3, 1, "", "sample_Positive_Rate"], [33, 3, 1, "", "sample_from_statistic"], [33, 3, 1, "", "sample_logistic_loss"], [33, 3, 1, "", "sample_perceptron_loss"], [33, 3, 1, "", "vector_False_Negative_Rate"], [33, 3, 1, "", "vector_False_Positive_Rate"], [33, 3, 1, "", "vector_Negative_Rate"], [33, 3, 1, "", "vector_Positive_Rate"], [33, 3, 1, "", "vector_True_Negative_Rate"], [33, 3, 1, "", "vector_True_Positive_Rate"], [33, 3, 1, "", "vector_logistic_loss"]], "seldonian.models.model.RLModel": [[34, 3, 1, "", "__init__"], [34, 3, 1, "", "__repr__"], [34, 3, 1, "", "evaluate_statistic"], [34, 3, 1, "", "sample_IS_estimate"], [34, 3, 1, "", "sample_from_statistic"], [34, 3, 1, "", "vector_IS_estimate"]], "seldonian.models.model.RegressionModel": [[35, 3, 1, "", "__init__"], [35, 3, 1, "", "__repr__"], [35, 3, 1, "", "evaluate_statistic"], [35, 3, 1, "", "fit"], [35, 3, 1, "", "sample_Mean_Error"], [35, 3, 1, "", "sample_Mean_Squared_Error"], [35, 3, 1, "", "sample_from_statistic"], [35, 3, 1, "", "vector_Mean_Error"], [35, 3, 1, "", "vector_Mean_Squared_Error"]], "seldonian.models.model.SGDClassifierModel": [[36, 3, 1, "", "__init__"], [36, 3, 1, "", "__repr__"], [36, 3, 1, "", "accuracy"], [36, 3, 1, "", "evaluate_statistic"], [36, 3, 1, "", "fit"], [36, 3, 1, "", "gradient_sample_logistic_loss"], [36, 3, 1, "", "predict"], [36, 3, 1, "", "sample_False_Negative_Rate"], [36, 3, 1, "", "sample_False_Positive_Rate"], [36, 3, 1, "", "sample_Negative_Rate"], [36, 3, 1, "", "sample_Positive_Rate"], [36, 3, 1, "", "sample_from_statistic"], [36, 3, 1, "", "sample_logistic_loss"], [36, 3, 1, "", "sample_perceptron_loss"], [36, 3, 1, "", "vector_False_Negative_Rate"], [36, 3, 1, "", "vector_False_Positive_Rate"], [36, 3, 1, "", "vector_Negative_Rate"], [36, 3, 1, "", "vector_Positive_Rate"], [36, 3, 1, "", "vector_True_Negative_Rate"], [36, 3, 1, "", "vector_True_Positive_Rate"], [36, 3, 1, "", "vector_logistic_loss"]], "seldonian.models.model.SeldonianModel": [[37, 3, 1, "", "__init__"], [37, 3, 1, "", "__repr__"]], "seldonian.models.model.SupervisedModel": [[38, 3, 1, "", "__init__"], [38, 3, 1, "", "__repr__"], [38, 3, 1, "", "fit"]], "seldonian.models.model.TabularSoftmaxModel": [[39, 3, 1, "", "__init__"], [39, 3, 1, "", "__repr__"], [39, 3, 1, "", "apply_policy"], [39, 3, 1, "", "default_objective"], [39, 3, 1, "", "evaluate_statistic"], [39, 3, 1, "", "sample_IS_estimate"], [39, 3, 1, "", "sample_from_statistic"], [39, 3, 1, "", "vector_IS_estimate"]], "seldonian.optimizers": [[41, 0, 0, "-", "gradient_descent"]], "seldonian.optimizers.gradient_descent": [[42, 1, 1, "", "gradient_descent_adam"], [43, 1, 1, "", "handle_gradients"]], "seldonian.parse_tree": [[45, 0, 0, "-", "nodes"], [51, 0, 0, "-", "operators"], [52, 0, 0, "-", "parse_tree"]], "seldonian.parse_tree.nodes": [[46, 2, 1, "", "BaseNode"], [47, 2, 1, "", "ConstantNode"], [48, 2, 1, "", "InternalNode"], [49, 2, 1, "", "MEDCustomBaseNode"], [50, 2, 1, "", "Node"]], "seldonian.parse_tree.nodes.BaseNode": [[46, 3, 1, "", "__init__"], [46, 3, 1, "", "__repr__"], [46, 3, 1, "", "calculate_bounds"], [46, 3, 1, "", "calculate_data_forbound"], [46, 3, 1, "", "calculate_value"], [46, 3, 1, "", "compute_HC_lowerbound"], [46, 3, 1, "", "compute_HC_upper_and_lowerbound"], [46, 3, 1, "", "compute_HC_upperbound"], [46, 3, 1, "", "mask_dataframe"], [46, 3, 1, "", "predict_HC_lowerbound"], [46, 3, 1, "", "predict_HC_upper_and_lowerbound"], [46, 3, 1, "", "predict_HC_upperbound"], [46, 3, 1, "", "zhat"]], "seldonian.parse_tree.nodes.ConstantNode": [[47, 3, 1, "", "__init__"], [47, 3, 1, "", "__repr__"]], "seldonian.parse_tree.nodes.InternalNode": [[48, 3, 1, "", "__init__"], [48, 3, 1, "", "__repr__"]], "seldonian.parse_tree.nodes.MEDCustomBaseNode": [[49, 3, 1, "", "__init__"], [49, 3, 1, "", "__repr__"], [49, 3, 1, "", "calculate_bounds"], [49, 3, 1, "", "calculate_data_forbound"], [49, 3, 1, "", "calculate_value"], [49, 3, 1, "", "compute_HC_lowerbound"], [49, 3, 1, "", "compute_HC_upper_and_lowerbound"], [49, 3, 1, "", "compute_HC_upperbound"], [49, 3, 1, "", "mask_dataframe"], [49, 3, 1, "", "precalculate_data"], [49, 3, 1, "", "predict_HC_lowerbound"], [49, 3, 1, "", "predict_HC_upper_and_lowerbound"], [49, 3, 1, "", "predict_HC_upperbound"], [49, 3, 1, "", "zhat"]], "seldonian.parse_tree.nodes.Node": [[50, 3, 1, "", "__init__"], [50, 3, 1, "", "__repr__"]], "seldonian.parse_tree.operators": [[51, 4, 1, "", "bounds_required_dict"], [51, 4, 1, "", "custom_base_node_dict"], [51, 4, 1, "", "measure_functions_dict"], [51, 4, 1, "", "not_supported_op_mapper"], [51, 4, 1, "", "op_mapper"]], "seldonian.parse_tree.parse_tree": [[53, 2, 1, "", "ParseTree"]], "seldonian.parse_tree.parse_tree.ParseTree": [[53, 3, 1, "", "__init__"], [53, 3, 1, "", "__repr__"], [53, 3, 1, "", "_abs"], [53, 3, 1, "", "_add"], [53, 3, 1, "", "_assign_bounds_helper"], [53, 3, 1, "", "_assign_deltas_helper"], [53, 3, 1, "", "_ast2pt_node"], [53, 3, 1, "", "_ast_tree_helper"], [53, 3, 1, "", "_div"], [53, 3, 1, "", "_evaluator_helper"], [53, 3, 1, "", "_exp"], [53, 3, 1, "", "_max"], [53, 3, 1, "", "_min"], [53, 3, 1, "", "_mult"], [53, 3, 1, "", "_pow"], [53, 3, 1, "", "_propagate_value"], [53, 3, 1, "", "_propagator_helper"], [53, 3, 1, "", "_protect_nan"], [53, 3, 1, "", "_sub"], [53, 3, 1, "", "assign_bounds_needed"], [53, 3, 1, "", "assign_deltas"], [53, 3, 1, "", "create_from_ast"], [53, 3, 1, "", "evaluate_constraint"], [53, 3, 1, "", "make_viz"], [53, 3, 1, "", "make_viz_helper"], [53, 3, 1, "", "propagate"], [53, 3, 1, "", "propagate_bounds"], [53, 3, 1, "", "reset_base_node_dict"]], "seldonian.safety_test": [[55, 0, 0, "-", "safety_test"]], "seldonian.safety_test.safety_test": [[56, 2, 1, "", "SafetyTest"]], "seldonian.safety_test.safety_test.SafetyTest": [[56, 3, 1, "", "__init__"], [56, 3, 1, "", "__repr__"], [56, 3, 1, "", "run"]], "seldonian.seldonian_algorithm": [[58, 1, 1, "", "seldonian_algorithm"]], "seldonian.spec": [[60, 2, 1, "", "RLSpec"], [61, 2, 1, "", "Spec"], [62, 2, 1, "", "SupervisedSpec"]], "seldonian.spec.RLSpec": [[60, 3, 1, "", "__init__"], [60, 3, 1, "", "__repr__"]], "seldonian.spec.Spec": [[61, 3, 1, "", "__init__"], [61, 3, 1, "", "__repr__"]], "seldonian.spec.SupervisedSpec": [[62, 3, 1, "", "__init__"], [62, 3, 1, "", "__repr__"]], "seldonian.utils": [[64, 0, 0, "-", "io_utils"], [70, 0, 0, "-", "stats_utils"]], "seldonian.utils.io_utils": [[65, 1, 1, "", "dir_path"], [66, 1, 1, "", "load_json"], [67, 1, 1, "", "load_pickle"], [68, 1, 1, "", "save_pickle"], [69, 1, 1, "", "yes_or_no_input"]], "seldonian.utils.stats_utils": [[71, 1, 1, "", "generate_data"], [72, 1, 1, "", "stddev"], [73, 1, 1, "", "tinv"], [74, 1, 1, "", "weighted_sum_gamma"]], "seldonian.warnings": [[76, 0, 0, "-", "custom_warnings"]], "seldonian.warnings.custom_warnings": [[77, 1, 1, "", "custom_formatwarning"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "data", "Python data"]}, "titleterms": {"interfac": [0, 1, 2, 3, 4, 82], "cli_supervis": [1, 2], "run_interfac": [2, 4], "command_line_interfac": [3, 4], "seldonian": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 81], "rl": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "environ": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "gridworld3x3": [8, 9], "mountaincar": [10, 11, 12, 13, 14, 15, 16, 17], "basi": 11, "fourierbasi": 13, "linear_softmax": 14, "polici": 16, "increment_count": 17, "candidate_select": [18, 19, 20], "candidateselect": 20, "dataset": [21, 22, 23, 24, 25, 26], "datasetload": 23, "episod": 24, "rldataset": 25, "superviseddataset": 26, "model": [27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39], "classificationmodel": 29, "linearclassifiermodel": 30, "linearregressionmodel": 31, "linearsoftmaxmodel": 32, "logisticregressionmodel": 33, "rlmodel": 34, "regressionmodel": 35, "sgdclassifiermodel": 36, "seldonianmodel": 37, "supervisedmodel": 38, "tabularsoftmaxmodel": 39, "optim": [40, 41, 42, 43], "gradient_desc": [41, 42, 43], "gradient_descent_adam": 42, "handle_gradi": 43, "parse_tre": [44, 45, 46, 47, 48, 49, 50, 51, 52, 53], "node": [45, 46, 47, 48, 49, 50], "basenod": 46, "constantnod": 47, "internalnod": 48, "medcustombasenod": 49, "oper": 51, "parsetre": 53, "safety_test": [54, 55, 56], "safetytest": 56, "seldonian_algorithm": [57, 58], "spec": [59, 60, 61, 62, 82], "rlspec": 60, "supervisedspec": 62, "util": [63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74], "io_util": [64, 65, 66, 67, 68, 69], "dir_path": 65, "load_json": 66, "load_pickl": 67, "save_pickl": 68, "yes_or_no_input": 69, "stats_util": [70, 71, 72, 73, 74], "generate_data": 71, "stddev": 72, "tinv": 73, "weighted_sum_gamma": 74, "warn": [75, 76, 77], "custom_warn": [76, 77], "custom_formatwarn": 77, "api": 78, "get": 79, "start": 79, "instal": 79, "A": 79, "simpl": 79, "complet": 79, "exampl": 79, "glossari": 80, "engin": 81, "document": 81, "tabl": 81, "content": 81, "overview": 82, "data": 82, "file": 82, "metadata": 82, "behavior": 82, "constraint": 82, "object": 82, "candid": 82, "select": 82, "safeti": 82, "test": 82}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 56}})