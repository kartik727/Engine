Search.setIndex({"docnames": ["_autosummary/interface", "_autosummary/interface.cli_supervised", "_autosummary/interface.cli_supervised.run_interface", "_autosummary/interface.command_line_interface", "_autosummary/interface.command_line_interface.run_interface", "_autosummary/seldonian", "_autosummary/seldonian.RL", "_autosummary/seldonian.RL.environments", "_autosummary/seldonian.RL.environments.gridworld3x3", "_autosummary/seldonian.RL.environments.gridworld3x3.Environment", "_autosummary/seldonian.RL.environments.mountaincar", "_autosummary/seldonian.RL.environments.mountaincar.Basis", "_autosummary/seldonian.RL.environments.mountaincar.Environment", "_autosummary/seldonian.RL.environments.mountaincar.FourierBasis", "_autosummary/seldonian.RL.environments.mountaincar.Linear_Softmax", "_autosummary/seldonian.RL.environments.mountaincar.Mountaincar", "_autosummary/seldonian.RL.environments.mountaincar.Policy", "_autosummary/seldonian.RL.environments.mountaincar.increment_counter", "_autosummary/seldonian.candidate_selection", "_autosummary/seldonian.candidate_selection.candidate_selection", "_autosummary/seldonian.candidate_selection.candidate_selection.CandidateSelection", "_autosummary/seldonian.dataset", "_autosummary/seldonian.dataset.DataSet", "_autosummary/seldonian.dataset.DataSetLoader", "_autosummary/seldonian.dataset.RLDataSet", "_autosummary/seldonian.dataset.SupervisedDataSet", "_autosummary/seldonian.models", "_autosummary/seldonian.models.model", "_autosummary/seldonian.models.model.ClassificationModel", "_autosummary/seldonian.models.model.LinearClassifierModel", "_autosummary/seldonian.models.model.LinearRegressionModel", "_autosummary/seldonian.models.model.LinearSoftmaxModel", "_autosummary/seldonian.models.model.LogisticRegressionModel", "_autosummary/seldonian.models.model.RLModel", "_autosummary/seldonian.models.model.RegressionModel", "_autosummary/seldonian.models.model.SGDClassifierModel", "_autosummary/seldonian.models.model.SeldonianModel", "_autosummary/seldonian.models.model.SupervisedModel", "_autosummary/seldonian.models.model.TabularSoftmaxModel", "_autosummary/seldonian.optimizers", "_autosummary/seldonian.optimizers.gradient_descent", "_autosummary/seldonian.optimizers.gradient_descent.gradient_descent_adam", "_autosummary/seldonian.parse_tree", "_autosummary/seldonian.parse_tree.nodes", "_autosummary/seldonian.parse_tree.nodes.BaseNode", "_autosummary/seldonian.parse_tree.nodes.ConstantNode", "_autosummary/seldonian.parse_tree.nodes.InternalNode", "_autosummary/seldonian.parse_tree.nodes.MEDCustomBaseNode", "_autosummary/seldonian.parse_tree.nodes.Node", "_autosummary/seldonian.parse_tree.operators", "_autosummary/seldonian.parse_tree.parse_tree", "_autosummary/seldonian.parse_tree.parse_tree.ParseTree", "_autosummary/seldonian.safety_test", "_autosummary/seldonian.safety_test.safety_test", "_autosummary/seldonian.safety_test.safety_test.SafetyTest", "_autosummary/seldonian.seldonian_algorithm", "_autosummary/seldonian.seldonian_algorithm.seldonian_algorithm", "_autosummary/seldonian.spec", "_autosummary/seldonian.spec.RLSpec", "_autosummary/seldonian.spec.Spec", "_autosummary/seldonian.spec.SupervisedSpec", "_autosummary/seldonian.utils", "_autosummary/seldonian.utils.io_utils", "_autosummary/seldonian.utils.io_utils.dir_path", "_autosummary/seldonian.utils.io_utils.load_json", "_autosummary/seldonian.utils.io_utils.load_pickle", "_autosummary/seldonian.utils.io_utils.save_pickle", "_autosummary/seldonian.utils.io_utils.yes_or_no_input", "_autosummary/seldonian.utils.stats_utils", "_autosummary/seldonian.utils.stats_utils.generate_data", "_autosummary/seldonian.utils.stats_utils.stddev", "_autosummary/seldonian.utils.stats_utils.tinv", "_autosummary/seldonian.utils.stats_utils.weighted_sum_gamma", "_autosummary/seldonian.warnings", "_autosummary/seldonian.warnings.custom_warnings", "_autosummary/seldonian.warnings.custom_warnings.custom_formatwarning", "api", "getting_started", "glossary", "index", "overview", "usage"], "filenames": ["_autosummary/interface.rst", "_autosummary/interface.cli_supervised.rst", "_autosummary/interface.cli_supervised.run_interface.rst", "_autosummary/interface.command_line_interface.rst", "_autosummary/interface.command_line_interface.run_interface.rst", "_autosummary/seldonian.rst", "_autosummary/seldonian.RL.rst", "_autosummary/seldonian.RL.environments.rst", "_autosummary/seldonian.RL.environments.gridworld3x3.rst", "_autosummary/seldonian.RL.environments.gridworld3x3.Environment.rst", "_autosummary/seldonian.RL.environments.mountaincar.rst", "_autosummary/seldonian.RL.environments.mountaincar.Basis.rst", "_autosummary/seldonian.RL.environments.mountaincar.Environment.rst", "_autosummary/seldonian.RL.environments.mountaincar.FourierBasis.rst", "_autosummary/seldonian.RL.environments.mountaincar.Linear_Softmax.rst", "_autosummary/seldonian.RL.environments.mountaincar.Mountaincar.rst", "_autosummary/seldonian.RL.environments.mountaincar.Policy.rst", "_autosummary/seldonian.RL.environments.mountaincar.increment_counter.rst", "_autosummary/seldonian.candidate_selection.rst", "_autosummary/seldonian.candidate_selection.candidate_selection.rst", "_autosummary/seldonian.candidate_selection.candidate_selection.CandidateSelection.rst", "_autosummary/seldonian.dataset.rst", "_autosummary/seldonian.dataset.DataSet.rst", "_autosummary/seldonian.dataset.DataSetLoader.rst", "_autosummary/seldonian.dataset.RLDataSet.rst", "_autosummary/seldonian.dataset.SupervisedDataSet.rst", "_autosummary/seldonian.models.rst", "_autosummary/seldonian.models.model.rst", "_autosummary/seldonian.models.model.ClassificationModel.rst", "_autosummary/seldonian.models.model.LinearClassifierModel.rst", "_autosummary/seldonian.models.model.LinearRegressionModel.rst", "_autosummary/seldonian.models.model.LinearSoftmaxModel.rst", "_autosummary/seldonian.models.model.LogisticRegressionModel.rst", "_autosummary/seldonian.models.model.RLModel.rst", "_autosummary/seldonian.models.model.RegressionModel.rst", "_autosummary/seldonian.models.model.SGDClassifierModel.rst", "_autosummary/seldonian.models.model.SeldonianModel.rst", "_autosummary/seldonian.models.model.SupervisedModel.rst", "_autosummary/seldonian.models.model.TabularSoftmaxModel.rst", "_autosummary/seldonian.optimizers.rst", "_autosummary/seldonian.optimizers.gradient_descent.rst", "_autosummary/seldonian.optimizers.gradient_descent.gradient_descent_adam.rst", "_autosummary/seldonian.parse_tree.rst", "_autosummary/seldonian.parse_tree.nodes.rst", "_autosummary/seldonian.parse_tree.nodes.BaseNode.rst", "_autosummary/seldonian.parse_tree.nodes.ConstantNode.rst", "_autosummary/seldonian.parse_tree.nodes.InternalNode.rst", "_autosummary/seldonian.parse_tree.nodes.MEDCustomBaseNode.rst", "_autosummary/seldonian.parse_tree.nodes.Node.rst", "_autosummary/seldonian.parse_tree.operators.rst", "_autosummary/seldonian.parse_tree.parse_tree.rst", "_autosummary/seldonian.parse_tree.parse_tree.ParseTree.rst", "_autosummary/seldonian.safety_test.rst", "_autosummary/seldonian.safety_test.safety_test.rst", "_autosummary/seldonian.safety_test.safety_test.SafetyTest.rst", "_autosummary/seldonian.seldonian_algorithm.rst", "_autosummary/seldonian.seldonian_algorithm.seldonian_algorithm.rst", "_autosummary/seldonian.spec.rst", "_autosummary/seldonian.spec.RLSpec.rst", "_autosummary/seldonian.spec.Spec.rst", "_autosummary/seldonian.spec.SupervisedSpec.rst", "_autosummary/seldonian.utils.rst", "_autosummary/seldonian.utils.io_utils.rst", "_autosummary/seldonian.utils.io_utils.dir_path.rst", "_autosummary/seldonian.utils.io_utils.load_json.rst", "_autosummary/seldonian.utils.io_utils.load_pickle.rst", "_autosummary/seldonian.utils.io_utils.save_pickle.rst", "_autosummary/seldonian.utils.io_utils.yes_or_no_input.rst", "_autosummary/seldonian.utils.stats_utils.rst", "_autosummary/seldonian.utils.stats_utils.generate_data.rst", "_autosummary/seldonian.utils.stats_utils.stddev.rst", "_autosummary/seldonian.utils.stats_utils.tinv.rst", "_autosummary/seldonian.utils.stats_utils.weighted_sum_gamma.rst", "_autosummary/seldonian.warnings.rst", "_autosummary/seldonian.warnings.custom_warnings.rst", "_autosummary/seldonian.warnings.custom_warnings.custom_formatwarning.rst", "api.rst", "getting_started.rst", "glossary.rst", "index.rst", "overview.rst", "usage.rst"], "titles": ["interface", "interface.cli_supervised", "interface.cli_supervised.run_interface", "interface.command_line_interface", "interface.command_line_interface.run_interface", "seldonian", "seldonian.RL", "seldonian.RL.environments", "seldonian.RL.environments.gridworld3x3", "seldonian.RL.environments.gridworld3x3.Environment", "seldonian.RL.environments.mountaincar", "seldonian.RL.environments.mountaincar.Basis", "seldonian.RL.environments.mountaincar.Environment", "seldonian.RL.environments.mountaincar.FourierBasis", "seldonian.RL.environments.mountaincar.Linear_Softmax", "seldonian.RL.environments.mountaincar.Mountaincar", "seldonian.RL.environments.mountaincar.Policy", "seldonian.RL.environments.mountaincar.increment_counter", "seldonian.candidate_selection", "seldonian.candidate_selection.candidate_selection", "seldonian.candidate_selection.candidate_selection.CandidateSelection", "seldonian.dataset", "seldonian.dataset.DataSet", "seldonian.dataset.DataSetLoader", "seldonian.dataset.RLDataSet", "seldonian.dataset.SupervisedDataSet", "seldonian.models", "seldonian.models.model", "seldonian.models.model.ClassificationModel", "seldonian.models.model.LinearClassifierModel", "seldonian.models.model.LinearRegressionModel", "seldonian.models.model.LinearSoftmaxModel", "seldonian.models.model.LogisticRegressionModel", "seldonian.models.model.RLModel", "seldonian.models.model.RegressionModel", "seldonian.models.model.SGDClassifierModel", "seldonian.models.model.SeldonianModel", "seldonian.models.model.SupervisedModel", "seldonian.models.model.TabularSoftmaxModel", "seldonian.optimizers", "seldonian.optimizers.gradient_descent", "seldonian.optimizers.gradient_descent.gradient_descent_adam", "seldonian.parse_tree", "seldonian.parse_tree.nodes", "seldonian.parse_tree.nodes.BaseNode", "seldonian.parse_tree.nodes.ConstantNode", "seldonian.parse_tree.nodes.InternalNode", "seldonian.parse_tree.nodes.MEDCustomBaseNode", "seldonian.parse_tree.nodes.Node", "seldonian.parse_tree.operators", "seldonian.parse_tree.parse_tree", "seldonian.parse_tree.parse_tree.ParseTree", "seldonian.safety_test", "seldonian.safety_test.safety_test", "seldonian.safety_test.safety_test.SafetyTest", "seldonian.seldonian_algorithm", "seldonian.seldonian_algorithm.seldonian_algorithm", "seldonian.spec", "seldonian.spec.RLSpec", "seldonian.spec.Spec", "seldonian.spec.SupervisedSpec", "seldonian.utils", "seldonian.utils.io_utils", "seldonian.utils.io_utils.dir_path", "seldonian.utils.io_utils.load_json", "seldonian.utils.io_utils.load_pickle", "seldonian.utils.io_utils.save_pickle", "seldonian.utils.io_utils.yes_or_no_input", "seldonian.utils.stats_utils", "seldonian.utils.stats_utils.generate_data", "seldonian.utils.stats_utils.stddev", "seldonian.utils.stats_utils.tinv", "seldonian.utils.stats_utils.weighted_sum_gamma", "seldonian.warnings", "seldonian.warnings.custom_warnings", "seldonian.warnings.custom_warnings.custom_formatwarning", "API", "Getting Started", "Glossary", "Seldonian Engine documentation", "Overview", "Usage"], "terms": {"seldonian": [0, 1, 3, 77, 78, 80, 81], "packag": [0, 5, 80], "modul": [0, 5, 6, 7, 18, 19, 26, 27, 31, 38, 39, 42, 49, 50, 52, 53, 55, 57, 58, 61, 73, 75, 80], "command": [1, 2, 3, 4, 67, 77], "line": [1, 2, 3, 4, 12, 15, 67, 77], "supervis": [1, 3, 20, 22, 23, 25, 37, 51, 54, 60, 77, 78, 80], "learn": [1, 3, 15, 20, 22, 23, 25, 27, 28, 34, 36, 37, 41, 44, 47, 51, 54, 60, 77, 78, 80], "algorithm": [1, 3, 20, 21, 22, 23, 25, 26, 47, 51, 54, 55, 56, 57, 58, 59, 60, 77, 78, 79, 80], "usag": [1, 3, 77, 79], "python": [1, 3, 51, 71, 77], "py": [1, 3, 77], "data_pth": [1, 2, 3, 4, 77], "metadata_pth": [1, 2, 3, 4, 77], "include_sensitive_column": [1, 2, 4, 23, 25, 77], "include_intercept_term": [1, 2, 4, 23, 25, 77], "save_dir": [1, 2, 4, 77], "function": [1, 3, 8, 9, 10, 20, 38, 40, 41, 44, 49, 51, 55, 58, 59, 60, 62, 68, 71, 74, 78, 80], "fals": [2, 4, 9, 12, 13, 20, 23, 25, 28, 29, 32, 35, 41, 51, 58, 59, 60, 66], "run": [2, 4, 20, 21, 26, 41, 53, 54, 55, 56, 57, 58, 59, 60, 77, 80], "paramet": [2, 4, 9, 14, 16, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 41, 44, 45, 46, 47, 48, 51, 54, 56, 58, 59, 60, 63, 64, 65, 66, 67, 69, 70, 71, 72, 80], "str": [2, 4, 9, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 38, 44, 45, 46, 47, 48, 49, 51, 54, 58, 59, 60, 63, 64, 65, 66, 67], "path": [2, 4, 63, 77], "main": [2, 4, 27, 50, 80], "dataset": [2, 4, 12, 20, 30, 31, 33, 34, 38, 44, 47, 54, 58, 59, 60, 77, 79, 80], "file": [2, 4, 9, 23, 64, 65, 66, 77, 79], "metadata": [2, 4, 22, 24, 25, 31, 33, 38, 41, 77, 79], "json": [2, 4, 64, 80], "bool": [2, 9, 12, 15, 20, 41, 48, 51, 54, 58, 59, 60, 67], "default": [2, 9, 29, 30, 31, 32, 38, 48, 51, 54, 58, 59, 60, 80], "whether": [2, 9, 20, 23, 25, 41, 48, 51, 54, 58, 59, 60, 63], "includ": [2, 9, 23, 25, 35, 41, 51, 80], "sensit": [2, 23, 25, 78, 80], "column": [2, 9, 22, 23, 24, 25, 35, 44, 47, 80], "dure": [2, 20, 23, 25, 49, 58, 59, 60], "train": [2, 23, 25, 28, 29, 30, 32, 34, 35, 37, 80], "predict": [2, 20, 23, 25, 28, 29, 30, 32, 35, 78, 80], "add": [2, 20, 23, 25, 51], "ones": [2, 23, 25], "first": [2, 23, 25, 35, 51, 77, 81], "engin": [5, 80, 81], "3x3": [8, 9], "gridworld": [8, 9, 38], "state": [8, 9, 12, 15, 31, 38, 51], "0": [8, 9, 15, 28, 29, 31, 32, 35, 41, 44, 47, 54, 58, 69, 72, 80], "8": [8, 9, 12, 80], "reward": [8, 9, 12, 15, 72], "everywher": [8, 9], "except": [8, 9], "r": [8, 9, 12, 15, 28, 29, 32, 35], "1": [8, 9, 15, 28, 29, 31, 32, 35, 44, 54, 58, 69, 75, 78, 80], "cell": [8, 9], "7": [8, 9], "bottom": [8, 9], "middl": [8, 9], "right": [8, 9, 15, 48, 51], "action": [8, 9, 12, 15, 31, 38], "ar": [8, 9, 20, 49, 51, 54, 58, 59, 60, 72, 77, 78, 79, 80], "2": [8, 9, 41, 47, 80], "3": [8, 9], "up": [8, 9, 47, 51], "down": [8, 9], "left": [8, 9, 15, 48, 51], "respect": [8, 9], "an": [8, 9, 35, 44, 48, 49, 58, 59, 60, 63, 64, 65, 66, 67, 72, 77, 78, 80], "episod": [8, 9, 12, 15, 31, 33, 38], "start": [8, 9, 79], "top": [8, 9, 51], "termin": [8, 9, 12, 15], "timeout": [8, 9], "occur": [8, 9], "class": [8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 57, 58, 59, 60, 80], "base": [9, 11, 12, 13, 14, 15, 16, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 44, 45, 46, 47, 48, 49, 51, 54, 58, 59, 60], "object": [9, 11, 15, 16, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 41, 44, 47, 48, 51, 54, 56, 57, 58, 59, 60, 64, 65, 66, 78, 79], "__init__": [9, 11, 12, 13, 14, 15, 16, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 44, 45, 46, 47, 48, 51, 54, 58, 59, 60], "variabl": [9, 23, 31, 38, 44, 45, 47, 48, 49, 51, 54, 58, 59, 60], "gamma": [9, 12, 54, 72], "float": [9, 12, 15, 28, 29, 30, 31, 32, 33, 34, 35, 38, 41, 44, 45, 47, 48, 51, 54, 58, 59, 60, 69, 70, 71, 72], "discount": [9, 12, 54], "factor": [9, 54], "when": [9, 20, 28, 29, 32, 35, 44, 51, 80], "calcul": [9, 12, 28, 29, 30, 31, 32, 33, 34, 35, 38, 41, 44, 47, 51, 54, 58, 59, 60, 72], "return": [9, 11, 12, 13, 14, 15, 16, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 41, 44, 47, 51, 54, 58, 59, 60, 67, 70, 71, 72], "int": [9, 12, 14, 15, 20, 31, 38, 41, 44, 47, 48, 51, 69, 71], "The": [9, 15, 20, 22, 23, 25, 28, 29, 30, 31, 32, 33, 34, 35, 38, 41, 44, 45, 46, 47, 48, 51, 54, 58, 59, 60, 66, 67, 69, 72, 77, 78, 79, 80], "number": [9, 28, 29, 32, 35, 41, 44, 47, 51, 69, 80], "timestep": [9, 12, 15], "after": 9, "which": [9, 28, 29, 32, 35, 44, 46, 47, 49, 51, 58, 59, 60, 78, 80], "we": [9, 44, 47, 51, 77, 80], "agent": [9, 15], "regardless": 9, "numpi": [9, 14, 16, 20, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 44, 47, 54, 70, 72], "ndarrai": [9, 12, 15, 16, 20, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 44, 47, 54, 70, 72], "possibl": [9, 31, 38, 54], "reward_dict": 9, "dict": [9, 28, 29, 30, 31, 32, 33, 34, 35, 38, 41, 44, 47, 49, 51, 58, 59, 60], "map": [9, 49], "pair": [9, 28, 29, 30, 34, 35, 37, 47], "environ_dict": 9, "next": [9, 12, 15], "initial_st": 9, "where": [9, 20, 44, 47, 51, 72], "each": [9, 28, 29, 30, 31, 32, 33, 34, 35, 38, 44, 47, 49, 51, 80], "terminal_st": 9, "current_st": 9, "current": [9, 28, 80], "initial_weight": 9, "initi": [9, 12, 15, 20, 41, 51, 58, 59, 60], "weight": [9, 20, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 41, 44, 47, 58, 59, 60, 72], "s": [9, 15, 44, 47, 51, 70, 71, 77], "polici": [9, 14, 38, 78, 79], "model": [9, 15, 20, 41, 44, 47, 54, 58, 59, 60, 78, 79], "param_weight": 9, "__repr__": [9, 11, 12, 13, 14, 15, 16, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 44, 45, 46, 47, 48, 51, 54, 58, 59, 60], "repr": [9, 11, 12, 13, 14, 15, 16, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 51, 54, 58, 59, 60], "self": [9, 11, 12, 13, 14, 15, 16, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 51, 54, 58, 59, 60], "method": [9, 11, 12, 13, 14, 15, 16, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 41, 44, 45, 46, 47, 48, 51, 54, 58, 59, 60], "_arg": [9, 38], "helper": [9, 38, 51], "pi": 9, "_denom": [9, 38], "calc_j": 9, "n_episod": [9, 12], "parallel": [9, 12], "true": [9, 12, 28, 29, 32, 35, 41, 44, 47, 54, 58, 59, 60, 80], "n_worker": [9, 12], "expect": [9, 12, 44, 47], "sum": [9, 12, 28, 29, 32, 35, 72], "gener": [9, 69, 80], "us": [9, 12, 15, 20, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 44, 47, 49, 51, 54, 58, 59, 60, 71, 72, 77, 80, 81], "new": [9, 79], "perform": [9, 46], "multipl": 9, "worker": 9, "data": [9, 20, 23, 31, 33, 38, 44, 47, 51, 54, 58, 59, 60, 66, 69, 70, 77, 79], "multiprocess": 9, "j": 9, "type": [9, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 41, 44, 47, 70, 71, 72, 78], "generate_data": [9, 12, 79], "savenam": [9, 12], "none": [9, 14, 16, 20, 48, 58, 59, 60], "header": [9, 12, 80], "panda": [9, 22, 24, 25, 33, 38, 47], "datafram": [9, 22, 24, 25, 31, 33, 38, 44, 47], "consist": [9, 80], "episode_index": 9, "probability_of_act": 9, "name": [9, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 38, 44, 45, 46, 47, 48, 49, 58, 59, 60, 80], "save": [9, 66], "generate_episod": 9, "return_index": 9, "entir": 9, "part": [9, 80], "generate_episodes_par": 9, "thi": [9, 15, 28, 29, 31, 32, 34, 35, 36, 37, 44, 47, 48, 51, 58, 77, 78, 79, 80], "appli": [9, 38, 78, 80], "tabular": [9, 38], "softmax": [9, 31, 38], "get": [9, 14, 16, 20, 31, 51, 79], "probabl": [9, 28, 29, 31, 32, 35, 51, 71, 78], "given": [9, 12, 20, 31, 35, 38, 44, 47, 51, 58, 59, 60], "posit": [9, 12, 15, 28, 29, 32, 35, 80], "between": [9, 28, 29, 32, 35, 47, 80], "correspond": [9, 71], "reset": [9, 12, 15, 51], "take_step": 9, "take": [9, 12, 15, 31, 56], "chang": 9, "attribut": [12, 15, 23, 25, 51, 78, 80], "next_stat": [12, 15], "transit": [12, 15], "calc_j_from_df": 12, "df": [12, 22, 24, 25], "nextstat": [12, 15], "comput": [12, 15, 47, 51, 58, 59, 60], "pendulum": [12, 15], "euler": [12, 15], "approxim": [12, 15], "dynam": [12, 15], "configur": [12, 15], "step": [12, 15], "tupl": [12, 15, 51], "one": [12, 15, 31, 49, 51, 58, 59, 60, 78, 80], "time": [12, 15], "greater": [12, 15, 80], "than": [12, 15, 51, 80], "max": [12, 15], "pass": [12, 15, 44, 47, 54], "finish": [12, 15], "rang": 13, "dorder": 13, "iorder": 13, "both": [13, 51], "basi": [13, 14, 79], "n_action": 14, "get_param": [14, 16], "vector": [14, 16, 30, 31, 33, 34, 35, 38, 44, 47, 70], "set_param": [14, 16], "param": [14, 16], "set": [14, 16, 35, 42, 45, 80], "cart": 15, "pole": 15, "describ": 15, "687": 15, "cours": 15, "materi": 15, "domain": 15, "balanc": 15, "must": [15, 44, 80], "move": 15, "forward": 15, "backward": 15, "keep": [15, 51], "from": [15, 23, 28, 29, 30, 31, 34, 35, 37, 38, 42, 47, 50, 51, 58, 64, 65, 67, 77, 78, 80], "fall": [15, 58, 59, 60], "alwai": [15, 44, 47, 51], "see": [15, 47, 58, 59, 60, 77, 78, 79, 80], "work": 15, "florian": 15, "2007": 15, "correct": [15, 70], "equat": 15, "system": [15, 78, 81], "observ": [15, 28, 29, 30, 32, 34, 35, 44, 47], "barrow": 15, "phil": 15, "thoma": [15, 47], "2019": [15, 47], "written": [15, 51], "blossom": 15, "metevi": 15, "scott": 15, "jordan": 15, "counter": 17, "maxdigit": 17, "candid": [18, 19, 20, 39, 44, 47, 54, 58, 59, 60, 78, 79], "select": [18, 19, 20, 39, 44, 47, 54, 58, 59, 60, 78, 79], "candidate_dataset": 20, "n_safeti": 20, "parse_tre": [20, 54, 58, 59, 60, 79, 80], "primary_object": [20, 41, 58, 59, 60], "optimization_techniqu": [20, 58, 59, 60], "barrier_funct": [20, 58, 59, 60], "optim": [20, 58, 59, 60, 78, 79], "powel": 20, "initial_solut": 20, "regim": [20, 22, 23, 25, 51, 54, 78, 80], "write_logfil": 20, "kwarg": [20, 22, 23, 24, 25, 41, 44, 45, 46, 47, 51, 54, 75], "seldonianmodel": [20, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 44, 47, 54, 58, 59, 60, 79], "contain": [20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 41, 44, 47, 49, 51, 54, 58, 59, 60, 80], "length": [20, 49], "safeti": [20, 44, 47, 52, 53, 54, 58, 59, 60, 77, 78, 80], "confid": [20, 44, 47, 48, 51, 54, 58, 59, 60, 78, 80], "bound": [20, 41, 44, 45, 47, 48, 49, 51, 54, 58, 59, 60], "list": [20, 22, 23, 24, 25, 44, 47, 49, 54, 58, 59, 60, 80], "parsetre": [20, 54, 58, 59, 60, 79], "pars": [20, 42, 44, 45, 46, 47, 48, 49, 50, 51, 54, 58, 59, 60, 79, 81], "tree": [20, 42, 44, 45, 46, 47, 48, 49, 50, 51, 54, 58, 59, 60, 79, 81], "behavior": [20, 41, 42, 49, 50, 51, 54, 58, 59, 60, 78, 79], "constraint": [20, 41, 42, 49, 50, 51, 54, 58, 59, 60, 77, 78, 79], "would": [20, 41, 49, 58, 59, 60], "sole": [20, 41, 58, 59, 60], "absenc": [20, 41, 58, 59, 60], "i": [20, 41, 58, 59, 60, 80], "e": [20, 22, 23, 25, 28, 29, 30, 31, 32, 33, 34, 35, 38, 41, 44, 47, 51, 54, 58, 59, 60, 78, 80], "loss": [20, 28, 29, 32, 35, 41, 58, 59, 60, 78], "g": [20, 22, 23, 25, 28, 29, 30, 31, 32, 33, 34, 35, 38, 44, 47, 51, 54, 58, 59, 60, 78], "gradient_desc": [20, 58, 59, 60, 79], "string": [20, 45, 46, 48, 49, 51, 58, 59, 60, 80], "categori": [20, 22, 23, 25, 51, 54, 75], "machin": [20, 22, 23, 25, 27, 28, 34, 35, 36, 37, 44, 47, 51, 54, 78], "rl": [20, 22, 23, 24, 25, 31, 33, 38, 51, 54, 58, 72, 79, 80], "write": 20, "output": 20, "disk": [20, 23], "evaluate_primary_object": 20, "theta": [20, 28, 29, 30, 31, 32, 33, 34, 35, 38, 41, 44, 47], "valu": [20, 30, 34, 41, 44, 45, 47, 51, 67], "primari": [20, 29, 30, 31, 32, 38, 58, 59, 60, 78], "wrapper": [20, 64, 65, 66], "fix": 20, "input": [20, 44, 47, 63, 64, 67, 72, 78], "gradient": [20, 28, 29, 32, 35, 41, 58, 59, 60], "descent": [20, 41], "get_constraint_upper_bound": 20, "upper": [20, 41, 44, 45, 46, 47, 48, 51, 54], "objective_with_barri": 20, "minimization_techniqu": 20, "barrier": 20, "larg": 20, "penalti": 20, "ani": 20, "violat": [20, 51], "build": [21, 42, 50, 51, 57], "load": [21, 23, 64, 65], "meta_inform": [22, 24, 25], "hold": [22, 24, 25], "full": [22, 24, 25], "all": [22, 23, 24, 25, 28, 31, 33, 34, 36, 37, 38, 48, 51, 54, 80], "column_nam": 23, "sensitive_column_nam": [23, 25], "label_column": [23, 25, 80], "target": [23, 25], "label": [23, 25, 28, 29, 30, 32, 34, 35, 37, 44, 47], "from_csv": 23, "csv_file": 23, "creat": [23, 44, 47, 51, 80], "csv": 23, "filenam": [23, 64, 65, 66, 75], "you": [23, 51, 66, 79, 80, 81], "want": [23, 51, 66, 77, 80, 81], "from_pickl": 23, "pkl_file": 23, "pickl": [23, 65, 66], "supervisedmodel": [28, 34, 79], "parent": [28, 31, 34, 36, 37, 47], "classif": [28, 29, 32, 35, 51, 78, 80], "librari": [28, 34, 36, 37, 58, 78, 79, 80], "onli": [28, 54, 78], "support": [28, 35, 49, 78], "binari": [28, 29, 32, 35], "accuraci": [28, 29, 32, 35], "x": [28, 29, 30, 31, 32, 34, 35, 37, 47, 69], "y": [28, 29, 30, 32, 34, 35, 37, 47, 69], "featur": [28, 29, 30, 32, 34, 35, 37, 44, 47, 78], "evaluate_statist": [28, 29, 30, 31, 32, 33, 34, 35, 38], "statistic_nam": [28, 29, 30, 31, 32, 33, 34, 35, 38], "data_dict": [28, 29, 30, 31, 32, 33, 34, 35, 38, 44, 47], "evalu": [28, 29, 30, 31, 32, 33, 34, 35, 38, 41, 44, 47, 51], "provid": [28, 29, 30, 31, 32, 33, 34, 35, 38, 49, 58, 59, 60, 67, 78, 80], "statist": [28, 29, 30, 31, 32, 33, 34, 35, 38, 44, 49, 54, 58, 59, 60, 80], "whole": [28, 29, 30, 31, 32, 33, 34, 35, 38, 51, 80], "sampl": [28, 29, 30, 31, 32, 33, 34, 35, 38, 70], "fpr": [28, 29, 32, 35, 44], "rate": [28, 29, 32, 35, 41, 80], "over": [28, 29, 30, 31, 32, 33, 34, 35, 38, 54], "fit": [28, 29, 30, 32, 34, 35, 37], "nx1": [28, 29, 30, 34, 35, 37], "gradient_sample_logistic_loss": [28, 29, 32, 35], "logist": [28, 29, 32, 35], "w": [28, 29, 32, 35], "t": [28, 29, 32, 35, 44, 47, 71], "perceptron": [28, 29, 32, 35], "sample_false_negative_r": [28, 29, 32, 35], "neg": [28, 29, 32, 35, 51], "being": [28, 29, 32, 35, 44], "fact": [28, 29, 32, 35], "wa": [28, 29, 32, 35, 47], "sample_false_positive_r": [28, 29, 32, 35], "sample_negative_r": [28, 29, 32, 35], "sample_positive_r": [28, 29, 32, 35], "normal": [28, 29, 31, 32, 35, 54, 58, 69, 78], "sample_from_statist": [28, 29, 30, 31, 32, 33, 34, 35, 38], "sample_logistic_loss": [28, 29, 32, 35], "sample_perceptron_loss": [28, 29, 32, 35], "fraction": [28, 29, 32, 35, 58, 59, 60], "incorrect": [28, 29, 32, 35], "vector_false_negative_r": [28, 29, 32, 35], "subject": [28, 29, 32, 35], "actual": [28, 29, 32, 35], "vector_false_positive_r": [28, 29, 32, 35], "vector_negative_r": [28, 29, 32, 35], "vector_positive_r": [28, 29, 32, 35], "vector_true_negative_r": [28, 29, 32, 35], "vector_true_positive_r": [28, 29, 32, 35], "vector_logistic_loss": [28, 29, 32, 35], "arrai": [28, 29, 32, 35, 41, 49, 72], "classificationmodel": [29, 32, 35, 79], "implement": [29, 30, 32, 35, 41, 71, 79, 80], "linear": [29, 30, 31, 35, 77], "classifi": 29, "regress": [29, 30, 32, 34, 47, 51, 77, 78, 80], "default_object": [29, 30, 31, 32, 38], "make": [29, 35, 51, 78], "regressionmodel": [30, 79], "mean": [30, 34, 47, 49, 78, 80], "squar": [30, 34, 78, 80], "error": [30, 34, 47, 78, 80], "mean_squared_error": [30, 34, 80], "sample_mean_error": [30, 34], "sample_mean_squared_error": [30, 34], "vector_mean_error": [30, 34], "vector_mean_squared_error": [30, 34], "environ": [31, 38, 58, 79, 80], "rlmodel": [31, 38, 79], "mountaincar": [31, 79], "is_estim": 31, "unweight": [31, 33, 38], "import": [31, 33, 38, 77, 80], "estim": [31, 33, 38, 44], "overrid": [31, 44, 47], "so": [31, 47, 80], "can": [31, 51, 77, 80], "IS": [31, 33, 38], "apply_polici": [31, 38], "A": [31, 33, 38, 49, 58, 59, 60, 63, 64, 65, 66, 80], "defin": [31, 49], "j_pi_new": [31, 33, 38], "get_p": 31, "probabilit": 31, "encod": 31, "sample_is_estim": [31, 33, 38], "vector_is_estim": [31, 33, 38], "have": [32, 49, 51, 78, 80], "offset": 35, "upper_bound_funct": 41, "theta_init": 41, "lambda_init": 41, "5": 41, "alpha_theta": 41, "05": [41, 44, 47, 80], "alpha_lamb": 41, "beta_veloc": 41, "9": [41, 72], "beta_rmsprop": 41, "num_it": 41, "200": 41, "store_valu": 41, "verbos": [41, 66], "adam": [41, 58, 59, 60], "lagrang": 41, "multipli": [41, 51], "term": 41, "lambda": 41, "exponenti": [41, 51], "decai": 41, "veloc": 41, "rmsprop": 41, "iter": [41, 47], "variou": 41, "quantiti": 41, "solut": [41, 51, 54], "dictionari": [41, 49], "about": [41, 51], "lower": [44, 45, 46, 47, 48, 51], "inf": [44, 46, 47], "conditional_column": [44, 47], "leaf": [44, 45, 46, 54], "measur": [44, 80], "condit": [44, 47], "node_typ": [44, 45], "equal": [44, 51], "base_nod": 44, "delta": [44, 47, 51, 78, 80], "share": [44, 47], "put": [44, 47], "measure_function_nam": 44, "repres": [44, 45, 46, 49, 51], "measure_funct": [44, 49], "oper": [44, 46, 79, 80], "calculate_bound": [44, 47], "bound_method": [44, 47, 54, 58, 59, 60], "test": [44, 47, 52, 53, 54, 58, 59, 60, 78, 80], "calculate_data_forbound": [44, 47], "prepar": 44, "calculate_valu": [44, 47], "etc": [44, 46, 47], "compute_hc_lowerbound": [44, 47], "datas": [44, 47], "high": [44, 47, 78], "level": [44, 47, 51, 78, 80], "compute_hc_upper_and_lowerbound": [44, 47], "depend": [44, 47, 80], "equival": [44, 47], "call": [44, 47, 78, 80], "compute_hc_upperbound": [44, 47], "independ": [44, 47], "mask_datafram": [44, 47], "mask": [44, 47], "joint": [44, 47], "AND": [44, 47], "predict_hc_lowerbound": [44, 47], "predict_hc_upper_and_lowerbound": [44, 47], "predict_hc_upperbound": [44, 47], "zhat": [44, 47], "unbias": 44, "constant": [45, 51, 72], "constant_nod": 45, "represent": [45, 46, 48, 49], "also": [45, 46, 48, 78], "what": [45, 46, 48, 77, 80], "displai": [45, 46, 48, 51], "insid": [45, 46, 48], "box": [45, 46, 48], "visual": [45, 46, 48, 51, 81], "graph": [45, 46, 48, 51, 81], "intern": 46, "non": 46, "These": [46, 80], "basenod": [47, 79], "custom": [47, 49, 80], "wise": 47, "differ": [47, 80], "male": [47, 80], "femal": [47, 80], "point": [47, 64, 65, 69], "et": 47, "al": 47, "scienc": [47, 80], "paper": [47, 80], "figur": 47, "sever": 47, "same": [47, 67], "precalculate_data": 47, "preconfigur": 47, "doe": [47, 51, 78], "need": [47, 48, 51, 57, 77], "recalcul": 47, "through": [47, 51, 77], "y_i": 47, "y_hat_i": 47, "m": [47, 51, 80], "y_j": 47, "y_hat_j": 47, "f": [47, 80], "epsilon": 47, "There": [47, 51, 80], "mai": [47, 63, 80], "row": 47, "min": 47, "n_male": 47, "n_femal": 47, "index": [48, 72], "child": [48, 49, 51, 58, 59, 60], "will_lower_bound": 48, "will_upper_bound": 48, "global": 49, "construct": 49, "short": 49, "hand": 49, "recogn": [49, 80], "specif": [49, 56, 57, 58, 59, 60, 77, 79], "interfac": [49, 77, 78, 79], "custom_base_node_dict": 49, "node": [49, 51, 54, 79], "appear": [49, 51, 80], "op_mapp": 49, "ast": [49, 51], "those": 49, "thei": [49, 67, 80], "not_supported_op_mapp": 49, "Not": 49, "bounds_required_dict": 49, "specifi": [49, 51], "requir": [49, 51, 59, 77, 80, 81], "If": [49, 51, 58, 59, 60, 67, 79, 80, 81], "ha": [49, 80], "two": [49, 51, 77], "children": [49, 51], "b": [49, 51], "boolean": 49, "4": [49, 80], "like": [49, 51, 80], "need_a_low": 49, "need_a_upp": 49, "need_b_low": 49, "need_b_upp": 49, "sub_regim": [51, 80], "singl": 51, "maximum": [51, 54], "sub": [51, 78], "ml": 51, "root": [51, 54], "via": 51, "assign": 51, "built": [51, 58, 59, 60, 80], "constraint_str": 51, "express": 51, "n_node": 51, "total": 51, "n_base_nod": 51, "pr": [51, 80], "more": 51, "onc": 51, "contribut": 51, "base_node_dict": 51, "track": 51, "uniqu": 51, "been": 51, "alreadi": 51, "help": [51, 71], "handl": 51, "case": [51, 80], "duplic": 51, "node_fonts": 51, "fontsiz": 51, "graphviz": [51, 81], "_ab": 51, "absolut": [51, 80], "interv": [51, 54], "_add": 51, "_assign_bounds_help": 51, "lower_need": 51, "upper_need": 51, "travers": 51, "_assign_deltas_help": 51, "weight_method": 51, "how": [51, 80], "_ast2pt_nod": 51, "ast_nod": 51, "_ast_tree_help": 51, "recurs": 51, "_div": 51, "divid": 51, "_evaluator_help": 51, "_exp": 51, "_max": 51, "_min": 51, "minimum": [51, 54], "_mult": 51, "_pow": 51, "pow": 51, "_propagate_valu": 51, "propag": [51, 54], "_propagator_help": 51, "_protect_nan": 51, "bound_typ": 51, "nan": 51, "infin": 51, "postit": 51, "_sub": 51, "subract": 51, "assign_bounds_need": 51, "breadth": 51, "search": 51, "decid": 51, "eventu": 51, "necessari": 51, "becaus": 51, "end": 51, "care": 51, "assign_delta": 51, "split": [51, 80], "among": 51, "create_from_ast": 51, "structur": 51, "mathemat": [51, 80], "syntax": 51, "evaluate_constraint": 51, "itself": 51, "postord": 51, "logic": 51, "make_viz": 51, "titl": 51, "diagram": 51, "make_viz_help": 51, "edg": 51, "digraph": 51, "propagate_bound": 51, "reset_base_node_dict": 51, "reset_data": 51, "cach": 51, "less": [51, 80], "frequent": 51, "relev": 54, "normalize_return": [54, 58], "min_return": 54, "max_return": 54, "candidate_solut": 54, "ttest": [54, 58, 59, 60], "loop": 54, "found": 54, "spec": [56, 79], "obect": 56, "model_class": [58, 59, 60], "frac_data_in_safeti": [58, 59, 60], "initial_solution_fn": [58, 59, 60], "rl_environment_obj": 58, "use_builtin_primary_gradient_fn": [58, 59, 60], "custom_primary_gradient_fn": [58, 59, 60], "optimization_hyperparam": [58, 59, 60], "regularization_hyperparam": [58, 59, 60], "instanc": [58, 59, 60], "remain": [58, 59, 60], "exist": [58, 59, 60], "autograd": [58, 59, 60], "back": [58, 59, 60], "builtin": [58, 59, 60], "hyperparamet": [58, 59, 60], "regular": [58, 59, 60], "usable_opt_dict": [58, 59, 60], "show": [58, 59, 60, 67], "accept": [58, 59, 60], "techniqu": [58, 59, 60], "check": 63, "directori": 63, "abl": 66, "str_to_show": 67, "default_str": 67, "default_v": 67, "user": [67, 78, 80], "ye": 67, "question": 67, "gather": 67, "invalid": 67, "answer": 67, "let": [67, 77], "them": [67, 80], "know": 67, "again": 67, "shown": 67, "enter": 67, "noth": 67, "numpoint": 69, "loc_x": 69, "loc_i": 69, "sigma_x": 69, "sigma_i": 69, "2d": 69, "random": 69, "center": 69, "distribut": 69, "dimens": 69, "standard": [69, 70], "deviat": [69, 70], "v": 70, "bessel": 70, "p": 71, "nu": 71, "invers": 71, "student": 71, "cdf": 71, "degre": 71, "freedom": 71, "matlab": 71, "http": 71, "www": 71, "mathwork": 71, "com": 71, "stat": 71, "html": 71, "arr": 72, "msg": 75, "lineno": 75, "arg": 75, "exampl": [77, 78, 80], "ai": [77, 80], "tutori": 77, "go": 77, "acquaint": 77, "mani": [77, 80], "most": 77, "piec": 77, "libari": 77, "tell": 77, "cli": [77, 80], "look": [77, 80], "document": [77, 80], "cli_supervis": [77, 79], "argument": 77, "download": 77, "sourc": [77, 79], "code": [77, 79], "repositori": 77, "github": [77, 79], "other": [77, 78], "option": [77, 80], "criteria": 78, "fair": 78, "ensur": [78, 80], "met": 78, "while": 78, "simultan": 78, "tbd": 78, "often": [78, 80], "simpli": 78, "satisfi": [78, 80], "interact": [78, 80], "paradigm": 78, "adopt": 78, "reinforc": [78, 80], "problem": [78, 80], "design": 78, "enforc": [78, 80], "In": [78, 80], "against": 78, "should": [78, 80], "discrimin": 78, "gender": 78, "race": 78, "common": 78, "sometim": 78, "protect": 78, "pertain": 78, "within": [78, 80], "welcom": 79, "core": 79, "host": 79, "complet": [79, 80], "overview": 79, "api": [79, 80], "gridworld3x3": 79, "increment_count": 79, "fourierbasi": 79, "linear_softmax": 79, "candidate_select": 79, "candidateselect": 79, "datasetload": 79, "rldataset": 79, "superviseddataset": 79, "linearclassifiermodel": 79, "linearregressionmodel": 79, "linearsoftmaxmodel": 79, "logisticregressionmodel": 79, "sgdclassifiermodel": 79, "tabularsoftmaxmodel": 79, "gradient_descent_adam": 79, "constantnod": 79, "internalnod": 79, "medcustombasenod": 79, "safety_test": 79, "safetytest": 79, "seldonian_algorithm": 79, "rlspec": 79, "supervisedspec": 79, "util": 79, "io_util": 79, "dir_path": 79, "load_json": 79, "load_pickl": 79, "save_pickl": 79, "yes_or_no_input": 79, "stats_util": 79, "stddev": 79, "tinv": 79, "weighted_sum_gamma": 79, "warn": 79, "custom_warn": 79, "custom_formatwarn": 79, "run_interfac": 79, "command_line_interfac": [79, 80], "instal": 79, "glossari": 79, "sa": 80, "For": 80, "detail": 80, "descript": 80, "umass": 80, "page": 80, "At": 80, "broadest": 80, "scope": 80, "three": 80, "below": 80, "compon": 80, "graphic": 80, "gui": 80, "develop": 80, "its": 80, "entireti": 80, "modifi": 80, "own": 80, "script": 80, "comma": 80, "separ": 80, "might": 80, "622": 80, "6": 80, "491": 80, "56": 80, "439": 80, "93": 80, "707": 80, "64": 80, "663": 80, "65": 80, "557": 80, "09": 80, "711": 80, "37": 80, "731": 80, "31": 80, "509": 80, "33333": 80, "538": 80, "490": 80, "58": 80, "406": 80, "59": 80, "529": 80, "532": 80, "28": 80, "447": 80, "23": 80, "527": 80, "379": 80, "14": 80, "488": 80, "98333": 80, "455": 80, "18": 80, "440": 80, "570": 80, "86": 80, "417": 80, "54": 80, "453": 80, "53": 80, "425": 80, "87": 80, "475": 80, "63": 80, "476": 80, "11": 80, "407": 80, "15": 80, "97333": 80, "756": 80, "91": 80, "679": 80, "62": 80, "531": 80, "583": 80, "534": 80, "42": 80, "521": 80, "592": 80, "41": 80, "783": 80, "76": 80, "588": 80, "26": 80, "53333": 80, "befor": 80, "valid": 80, "partit": 80, "your": 80, "intention": 80, "exclud": 80, "format": 80, "properti": 80, "It": 80, "kei": 80, "either": 80, "try": 80, "sensitive_column": 80, "rl_environment_nam": 80, "definit": 80, "g_i": 80, "_i": 80, "_": 80, "n": 80, "directli": 80, "certain": 80, "special": 80, "associ": 80, "basic": 80, "plain": 80, "english": 80, "find": 80, "confus": 80, "rememb": 80, "here": 80, "88": 80, "tpr": 80, "cover": 80, "desir": 80, "some": 80, "ab": 80, "demograph": 80, "pariti": 80, "toler": 80, "explain": 80, "hyperparam": 80, "To": 81, "pip": 81, "venv": 81, "wide": 81}, "objects": {"": [[0, 0, 0, "-", "interface"], [5, 0, 0, "-", "seldonian"]], "interface": [[1, 0, 0, "-", "cli_supervised"], [3, 0, 0, "-", "command_line_interface"]], "interface.cli_supervised": [[2, 1, 1, "", "run_interface"]], "interface.command_line_interface": [[4, 1, 1, "", "run_interface"]], "seldonian": [[6, 0, 0, "-", "RL"], [18, 0, 0, "-", "candidate_selection"], [21, 0, 0, "-", "dataset"], [26, 0, 0, "-", "models"], [39, 0, 0, "-", "optimizers"], [42, 0, 0, "-", "parse_tree"], [52, 0, 0, "-", "safety_test"], [55, 0, 0, "-", "seldonian_algorithm"], [57, 0, 0, "-", "spec"], [61, 0, 0, "-", "utils"], [73, 0, 0, "-", "warnings"]], "seldonian.RL": [[7, 0, 0, "-", "environments"]], "seldonian.RL.environments": [[8, 0, 0, "-", "gridworld3x3"], [10, 0, 0, "-", "mountaincar"]], "seldonian.RL.environments.gridworld3x3": [[9, 2, 1, "", "Environment"]], "seldonian.RL.environments.gridworld3x3.Environment": [[9, 3, 1, "", "__init__"], [9, 3, 1, "", "__repr__"], [9, 3, 1, "", "_arg"], [9, 3, 1, "", "_denom"], [9, 3, 1, "", "calc_J"], [9, 3, 1, "", "generate_data"], [9, 3, 1, "", "generate_episode"], [9, 3, 1, "", "generate_episodes_par"], [9, 3, 1, "", "pi"], [9, 3, 1, "", "reset"], [9, 3, 1, "", "take_step"]], "seldonian.RL.environments.mountaincar": [[11, 2, 1, "", "Basis"], [12, 2, 1, "", "Environment"], [13, 2, 1, "", "FourierBasis"], [14, 2, 1, "", "Linear_Softmax"], [15, 2, 1, "", "Mountaincar"], [16, 2, 1, "", "Policy"], [17, 1, 1, "", "increment_counter"]], "seldonian.RL.environments.mountaincar.Basis": [[11, 3, 1, "", "__init__"], [11, 3, 1, "", "__repr__"]], "seldonian.RL.environments.mountaincar.Environment": [[12, 3, 1, "", "R"], [12, 3, 1, "", "__init__"], [12, 3, 1, "", "__repr__"], [12, 3, 1, "", "calc_J_from_df"], [12, 3, 1, "", "generate_data"], [12, 3, 1, "", "nextState"], [12, 3, 1, "", "reset"], [12, 3, 1, "", "step"], [12, 3, 1, "", "terminal"]], "seldonian.RL.environments.mountaincar.FourierBasis": [[13, 3, 1, "", "__init__"], [13, 3, 1, "", "__repr__"]], "seldonian.RL.environments.mountaincar.Linear_Softmax": [[14, 3, 1, "", "__init__"], [14, 3, 1, "", "__repr__"], [14, 3, 1, "", "get_params"], [14, 3, 1, "", "set_params"]], "seldonian.RL.environments.mountaincar.Mountaincar": [[15, 3, 1, "", "R"], [15, 3, 1, "", "__init__"], [15, 3, 1, "", "__repr__"], [15, 3, 1, "", "nextState"], [15, 3, 1, "", "reset"], [15, 3, 1, "", "step"], [15, 3, 1, "", "terminal"]], "seldonian.RL.environments.mountaincar.Policy": [[16, 3, 1, "", "__init__"], [16, 3, 1, "", "__repr__"], [16, 3, 1, "", "get_params"], [16, 3, 1, "", "set_params"]], "seldonian.candidate_selection": [[19, 0, 0, "-", "candidate_selection"]], "seldonian.candidate_selection.candidate_selection": [[20, 2, 1, "", "CandidateSelection"]], "seldonian.candidate_selection.candidate_selection.CandidateSelection": [[20, 3, 1, "", "__init__"], [20, 3, 1, "", "__repr__"], [20, 3, 1, "", "evaluate_primary_objective"], [20, 3, 1, "", "get_constraint_upper_bound"], [20, 3, 1, "", "objective_with_barrier"], [20, 3, 1, "", "run"]], "seldonian.dataset": [[22, 2, 1, "", "DataSet"], [23, 2, 1, "", "DataSetLoader"], [24, 2, 1, "", "RLDataSet"], [25, 2, 1, "", "SupervisedDataSet"]], "seldonian.dataset.DataSet": [[22, 3, 1, "", "__init__"], [22, 3, 1, "", "__repr__"]], "seldonian.dataset.DataSetLoader": [[23, 3, 1, "", "__init__"], [23, 3, 1, "", "__repr__"], [23, 3, 1, "", "from_csv"], [23, 3, 1, "", "from_pickle"]], "seldonian.dataset.RLDataSet": [[24, 3, 1, "", "__init__"], [24, 3, 1, "", "__repr__"]], "seldonian.dataset.SupervisedDataSet": [[25, 3, 1, "", "__init__"], [25, 3, 1, "", "__repr__"]], "seldonian.models": [[27, 0, 0, "-", "model"]], "seldonian.models.model": [[28, 2, 1, "", "ClassificationModel"], [29, 2, 1, "", "LinearClassifierModel"], [30, 2, 1, "", "LinearRegressionModel"], [31, 2, 1, "", "LinearSoftmaxModel"], [32, 2, 1, "", "LogisticRegressionModel"], [33, 2, 1, "", "RLModel"], [34, 2, 1, "", "RegressionModel"], [35, 2, 1, "", "SGDClassifierModel"], [36, 2, 1, "", "SeldonianModel"], [37, 2, 1, "", "SupervisedModel"], [38, 2, 1, "", "TabularSoftmaxModel"]], "seldonian.models.model.ClassificationModel": [[28, 3, 1, "", "__init__"], [28, 3, 1, "", "__repr__"], [28, 3, 1, "", "accuracy"], [28, 3, 1, "", "evaluate_statistic"], [28, 3, 1, "", "fit"], [28, 3, 1, "", "gradient_sample_logistic_loss"], [28, 3, 1, "", "sample_False_Negative_Rate"], [28, 3, 1, "", "sample_False_Positive_Rate"], [28, 3, 1, "", "sample_Negative_Rate"], [28, 3, 1, "", "sample_Positive_Rate"], [28, 3, 1, "", "sample_from_statistic"], [28, 3, 1, "", "sample_logistic_loss"], [28, 3, 1, "", "sample_perceptron_loss"], [28, 3, 1, "", "vector_False_Negative_Rate"], [28, 3, 1, "", "vector_False_Positive_Rate"], [28, 3, 1, "", "vector_Negative_Rate"], [28, 3, 1, "", "vector_Positive_Rate"], [28, 3, 1, "", "vector_True_Negative_Rate"], [28, 3, 1, "", "vector_True_Positive_Rate"], [28, 3, 1, "", "vector_logistic_loss"]], "seldonian.models.model.LinearClassifierModel": [[29, 3, 1, "", "__init__"], [29, 3, 1, "", "__repr__"], [29, 3, 1, "", "accuracy"], [29, 3, 1, "", "default_objective"], [29, 3, 1, "", "evaluate_statistic"], [29, 3, 1, "", "fit"], [29, 3, 1, "", "gradient_sample_logistic_loss"], [29, 3, 1, "", "predict"], [29, 3, 1, "", "sample_False_Negative_Rate"], [29, 3, 1, "", "sample_False_Positive_Rate"], [29, 3, 1, "", "sample_Negative_Rate"], [29, 3, 1, "", "sample_Positive_Rate"], [29, 3, 1, "", "sample_from_statistic"], [29, 3, 1, "", "sample_logistic_loss"], [29, 3, 1, "", "sample_perceptron_loss"], [29, 3, 1, "", "vector_False_Negative_Rate"], [29, 3, 1, "", "vector_False_Positive_Rate"], [29, 3, 1, "", "vector_Negative_Rate"], [29, 3, 1, "", "vector_Positive_Rate"], [29, 3, 1, "", "vector_True_Negative_Rate"], [29, 3, 1, "", "vector_True_Positive_Rate"], [29, 3, 1, "", "vector_logistic_loss"]], "seldonian.models.model.LinearRegressionModel": [[30, 3, 1, "", "__init__"], [30, 3, 1, "", "__repr__"], [30, 3, 1, "", "default_objective"], [30, 3, 1, "", "evaluate_statistic"], [30, 3, 1, "", "fit"], [30, 3, 1, "", "predict"], [30, 3, 1, "", "sample_Mean_Error"], [30, 3, 1, "", "sample_Mean_Squared_Error"], [30, 3, 1, "", "sample_from_statistic"], [30, 3, 1, "", "vector_Mean_Error"], [30, 3, 1, "", "vector_Mean_Squared_Error"]], "seldonian.models.model.LinearSoftmaxModel": [[31, 3, 1, "", "IS_estimate"], [31, 3, 1, "", "__init__"], [31, 3, 1, "", "__repr__"], [31, 3, 1, "", "apply_policy"], [31, 3, 1, "", "default_objective"], [31, 3, 1, "", "evaluate_statistic"], [31, 3, 1, "", "get_p"], [31, 3, 1, "", "sample_IS_estimate"], [31, 3, 1, "", "sample_from_statistic"], [31, 3, 1, "", "vector_IS_estimate"]], "seldonian.models.model.LogisticRegressionModel": [[32, 3, 1, "", "__init__"], [32, 3, 1, "", "__repr__"], [32, 3, 1, "", "accuracy"], [32, 3, 1, "", "default_objective"], [32, 3, 1, "", "evaluate_statistic"], [32, 3, 1, "", "fit"], [32, 3, 1, "", "gradient_sample_logistic_loss"], [32, 3, 1, "", "predict"], [32, 3, 1, "", "sample_False_Negative_Rate"], [32, 3, 1, "", "sample_False_Positive_Rate"], [32, 3, 1, "", "sample_Negative_Rate"], [32, 3, 1, "", "sample_Positive_Rate"], [32, 3, 1, "", "sample_from_statistic"], [32, 3, 1, "", "sample_logistic_loss"], [32, 3, 1, "", "sample_perceptron_loss"], [32, 3, 1, "", "vector_False_Negative_Rate"], [32, 3, 1, "", "vector_False_Positive_Rate"], [32, 3, 1, "", "vector_Negative_Rate"], [32, 3, 1, "", "vector_Positive_Rate"], [32, 3, 1, "", "vector_True_Negative_Rate"], [32, 3, 1, "", "vector_True_Positive_Rate"], [32, 3, 1, "", "vector_logistic_loss"]], "seldonian.models.model.RLModel": [[33, 3, 1, "", "__init__"], [33, 3, 1, "", "__repr__"], [33, 3, 1, "", "evaluate_statistic"], [33, 3, 1, "", "sample_IS_estimate"], [33, 3, 1, "", "sample_from_statistic"], [33, 3, 1, "", "vector_IS_estimate"]], "seldonian.models.model.RegressionModel": [[34, 3, 1, "", "__init__"], [34, 3, 1, "", "__repr__"], [34, 3, 1, "", "evaluate_statistic"], [34, 3, 1, "", "fit"], [34, 3, 1, "", "sample_Mean_Error"], [34, 3, 1, "", "sample_Mean_Squared_Error"], [34, 3, 1, "", "sample_from_statistic"], [34, 3, 1, "", "vector_Mean_Error"], [34, 3, 1, "", "vector_Mean_Squared_Error"]], "seldonian.models.model.SGDClassifierModel": [[35, 3, 1, "", "__init__"], [35, 3, 1, "", "__repr__"], [35, 3, 1, "", "accuracy"], [35, 3, 1, "", "evaluate_statistic"], [35, 3, 1, "", "fit"], [35, 3, 1, "", "gradient_sample_logistic_loss"], [35, 3, 1, "", "predict"], [35, 3, 1, "", "sample_False_Negative_Rate"], [35, 3, 1, "", "sample_False_Positive_Rate"], [35, 3, 1, "", "sample_Negative_Rate"], [35, 3, 1, "", "sample_Positive_Rate"], [35, 3, 1, "", "sample_from_statistic"], [35, 3, 1, "", "sample_logistic_loss"], [35, 3, 1, "", "sample_perceptron_loss"], [35, 3, 1, "", "vector_False_Negative_Rate"], [35, 3, 1, "", "vector_False_Positive_Rate"], [35, 3, 1, "", "vector_Negative_Rate"], [35, 3, 1, "", "vector_Positive_Rate"], [35, 3, 1, "", "vector_True_Negative_Rate"], [35, 3, 1, "", "vector_True_Positive_Rate"], [35, 3, 1, "", "vector_logistic_loss"]], "seldonian.models.model.SeldonianModel": [[36, 3, 1, "", "__init__"], [36, 3, 1, "", "__repr__"]], "seldonian.models.model.SupervisedModel": [[37, 3, 1, "", "__init__"], [37, 3, 1, "", "__repr__"], [37, 3, 1, "", "fit"]], "seldonian.models.model.TabularSoftmaxModel": [[38, 3, 1, "", "__init__"], [38, 3, 1, "", "__repr__"], [38, 3, 1, "", "_arg"], [38, 3, 1, "", "_denom"], [38, 3, 1, "", "apply_policy"], [38, 3, 1, "", "default_objective"], [38, 3, 1, "", "evaluate_statistic"], [38, 3, 1, "", "sample_IS_estimate"], [38, 3, 1, "", "sample_from_statistic"], [38, 3, 1, "", "vector_IS_estimate"]], "seldonian.optimizers": [[40, 0, 0, "-", "gradient_descent"]], "seldonian.optimizers.gradient_descent": [[41, 1, 1, "", "gradient_descent_adam"]], "seldonian.parse_tree": [[43, 0, 0, "-", "nodes"], [49, 0, 0, "-", "operators"], [50, 0, 0, "-", "parse_tree"]], "seldonian.parse_tree.nodes": [[44, 2, 1, "", "BaseNode"], [45, 2, 1, "", "ConstantNode"], [46, 2, 1, "", "InternalNode"], [47, 2, 1, "", "MEDCustomBaseNode"], [48, 2, 1, "", "Node"]], "seldonian.parse_tree.nodes.BaseNode": [[44, 3, 1, "", "__init__"], [44, 3, 1, "", "__repr__"], [44, 3, 1, "", "calculate_bounds"], [44, 3, 1, "", "calculate_data_forbound"], [44, 3, 1, "", "calculate_value"], [44, 3, 1, "", "compute_HC_lowerbound"], [44, 3, 1, "", "compute_HC_upper_and_lowerbound"], [44, 3, 1, "", "compute_HC_upperbound"], [44, 3, 1, "", "mask_dataframe"], [44, 3, 1, "", "predict_HC_lowerbound"], [44, 3, 1, "", "predict_HC_upper_and_lowerbound"], [44, 3, 1, "", "predict_HC_upperbound"], [44, 3, 1, "", "zhat"]], "seldonian.parse_tree.nodes.ConstantNode": [[45, 3, 1, "", "__init__"], [45, 3, 1, "", "__repr__"]], "seldonian.parse_tree.nodes.InternalNode": [[46, 3, 1, "", "__init__"], [46, 3, 1, "", "__repr__"]], "seldonian.parse_tree.nodes.MEDCustomBaseNode": [[47, 3, 1, "", "__init__"], [47, 3, 1, "", "__repr__"], [47, 3, 1, "", "calculate_bounds"], [47, 3, 1, "", "calculate_data_forbound"], [47, 3, 1, "", "calculate_value"], [47, 3, 1, "", "compute_HC_lowerbound"], [47, 3, 1, "", "compute_HC_upper_and_lowerbound"], [47, 3, 1, "", "compute_HC_upperbound"], [47, 3, 1, "", "mask_dataframe"], [47, 3, 1, "", "precalculate_data"], [47, 3, 1, "", "predict_HC_lowerbound"], [47, 3, 1, "", "predict_HC_upper_and_lowerbound"], [47, 3, 1, "", "predict_HC_upperbound"], [47, 3, 1, "", "zhat"]], "seldonian.parse_tree.nodes.Node": [[48, 3, 1, "", "__init__"], [48, 3, 1, "", "__repr__"]], "seldonian.parse_tree.operators": [[49, 4, 1, "", "bounds_required_dict"], [49, 4, 1, "", "custom_base_node_dict"], [49, 4, 1, "", "measure_functions"], [49, 4, 1, "", "not_supported_op_mapper"], [49, 4, 1, "", "op_mapper"]], "seldonian.parse_tree.parse_tree": [[51, 2, 1, "", "ParseTree"]], "seldonian.parse_tree.parse_tree.ParseTree": [[51, 3, 1, "", "__init__"], [51, 3, 1, "", "__repr__"], [51, 3, 1, "", "_abs"], [51, 3, 1, "", "_add"], [51, 3, 1, "", "_assign_bounds_helper"], [51, 3, 1, "", "_assign_deltas_helper"], [51, 3, 1, "", "_ast2pt_node"], [51, 3, 1, "", "_ast_tree_helper"], [51, 3, 1, "", "_div"], [51, 3, 1, "", "_evaluator_helper"], [51, 3, 1, "", "_exp"], [51, 3, 1, "", "_max"], [51, 3, 1, "", "_min"], [51, 3, 1, "", "_mult"], [51, 3, 1, "", "_pow"], [51, 3, 1, "", "_propagate_value"], [51, 3, 1, "", "_propagator_helper"], [51, 3, 1, "", "_protect_nan"], [51, 3, 1, "", "_sub"], [51, 3, 1, "", "assign_bounds_needed"], [51, 3, 1, "", "assign_deltas"], [51, 3, 1, "", "create_from_ast"], [51, 3, 1, "", "evaluate_constraint"], [51, 3, 1, "", "make_viz"], [51, 3, 1, "", "make_viz_helper"], [51, 3, 1, "", "propagate"], [51, 3, 1, "", "propagate_bounds"], [51, 3, 1, "", "reset_base_node_dict"]], "seldonian.safety_test": [[53, 0, 0, "-", "safety_test"]], "seldonian.safety_test.safety_test": [[54, 2, 1, "", "SafetyTest"]], "seldonian.safety_test.safety_test.SafetyTest": [[54, 3, 1, "", "__init__"], [54, 3, 1, "", "__repr__"], [54, 3, 1, "", "run"]], "seldonian.seldonian_algorithm": [[56, 1, 1, "", "seldonian_algorithm"]], "seldonian.spec": [[58, 2, 1, "", "RLSpec"], [59, 2, 1, "", "Spec"], [60, 2, 1, "", "SupervisedSpec"]], "seldonian.spec.RLSpec": [[58, 3, 1, "", "__init__"], [58, 3, 1, "", "__repr__"]], "seldonian.spec.Spec": [[59, 3, 1, "", "__init__"], [59, 3, 1, "", "__repr__"]], "seldonian.spec.SupervisedSpec": [[60, 3, 1, "", "__init__"], [60, 3, 1, "", "__repr__"]], "seldonian.utils": [[62, 0, 0, "-", "io_utils"], [68, 0, 0, "-", "stats_utils"]], "seldonian.utils.io_utils": [[63, 1, 1, "", "dir_path"], [64, 1, 1, "", "load_json"], [65, 1, 1, "", "load_pickle"], [66, 1, 1, "", "save_pickle"], [67, 1, 1, "", "yes_or_no_input"]], "seldonian.utils.stats_utils": [[69, 1, 1, "", "generate_data"], [70, 1, 1, "", "stddev"], [71, 1, 1, "", "tinv"], [72, 1, 1, "", "weighted_sum_gamma"]], "seldonian.warnings": [[74, 0, 0, "-", "custom_warnings"]], "seldonian.warnings.custom_warnings": [[75, 1, 1, "", "custom_formatwarning"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "data", "Python data"]}, "titleterms": {"interfac": [0, 1, 2, 3, 4, 80], "cli_supervis": [1, 2], "run_interfac": [2, 4], "command_line_interfac": [3, 4], "seldonian": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 79], "rl": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "environ": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "gridworld3x3": [8, 9], "mountaincar": [10, 11, 12, 13, 14, 15, 16, 17], "basi": 11, "fourierbasi": 13, "linear_softmax": 14, "polici": 16, "increment_count": 17, "candidate_select": [18, 19, 20], "candidateselect": 20, "dataset": [21, 22, 23, 24, 25], "datasetload": 23, "rldataset": 24, "superviseddataset": 25, "model": [26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38], "classificationmodel": 28, "linearclassifiermodel": 29, "linearregressionmodel": 30, "linearsoftmaxmodel": 31, "logisticregressionmodel": 32, "rlmodel": 33, "regressionmodel": 34, "sgdclassifiermodel": 35, "seldonianmodel": 36, "supervisedmodel": 37, "tabularsoftmaxmodel": 38, "optim": [39, 40, 41], "gradient_desc": [40, 41], "gradient_descent_adam": 41, "parse_tre": [42, 43, 44, 45, 46, 47, 48, 49, 50, 51], "node": [43, 44, 45, 46, 47, 48], "basenod": 44, "constantnod": 45, "internalnod": 46, "medcustombasenod": 47, "oper": 49, "parsetre": 51, "safety_test": [52, 53, 54], "safetytest": 54, "seldonian_algorithm": [55, 56], "spec": [57, 58, 59, 60, 80], "rlspec": 58, "supervisedspec": 60, "util": [61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72], "io_util": [62, 63, 64, 65, 66, 67], "dir_path": 63, "load_json": 64, "load_pickl": 65, "save_pickl": 66, "yes_or_no_input": 67, "stats_util": [68, 69, 70, 71, 72], "generate_data": 69, "stddev": 70, "tinv": 71, "weighted_sum_gamma": 72, "warn": [73, 74, 75], "custom_warn": [74, 75], "custom_formatwarn": 75, "api": 76, "get": 77, "start": 77, "glossari": 78, "engin": 79, "document": 79, "tabl": 79, "content": 79, "overview": 80, "data": 80, "file": 80, "metadata": 80, "behavior": 80, "constraint": 80, "pars": 80, "tree": 80, "specif": 80, "object": 80, "candid": 80, "select": 80, "usag": 81, "instal": 81}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 56}})