Search.setIndex({"docnames": ["_autosummary/seldonian", "_autosummary/seldonian.RL", "_autosummary/seldonian.RL.Agents", "_autosummary/seldonian.RL.Agents.Agent", "_autosummary/seldonian.RL.Agents.Agent.Agent", "_autosummary/seldonian.RL.Agents.Bases", "_autosummary/seldonian.RL.Agents.Bases.Fourier", "_autosummary/seldonian.RL.Agents.Bases.Fourier.Fourier", "_autosummary/seldonian.RL.Agents.Discrete_Random_Agent", "_autosummary/seldonian.RL.Agents.Discrete_Random_Agent.Discrete_Random_Agent", "_autosummary/seldonian.RL.Agents.Function_Approximators", "_autosummary/seldonian.RL.Agents.Function_Approximators.Function_Approximator", "_autosummary/seldonian.RL.Agents.Function_Approximators.Function_Approximator.Function_Approximator", "_autosummary/seldonian.RL.Agents.Function_Approximators.Linear_FA", "_autosummary/seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_FA", "_autosummary/seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_state_action_value_FA", "_autosummary/seldonian.RL.Agents.Function_Approximators.Table", "_autosummary/seldonian.RL.Agents.Function_Approximators.Table.Q_Table", "_autosummary/seldonian.RL.Agents.Function_Approximators.Table.Table", "_autosummary/seldonian.RL.Agents.Function_Approximators.Table.construct_Q_Table_From_Env_Description", "_autosummary/seldonian.RL.Agents.Parameterized_non_learning_softmax_agent", "_autosummary/seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.Parameterized_non_learning_softmax_agent", "_autosummary/seldonian.RL.Agents.Policies", "_autosummary/seldonian.RL.Agents.Policies.Policy", "_autosummary/seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy", "_autosummary/seldonian.RL.Agents.Policies.Policy.Policy", "_autosummary/seldonian.RL.Agents.Policies.Softmax", "_autosummary/seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax", "_autosummary/seldonian.RL.Agents.Policies.Softmax.Softmax", "_autosummary/seldonian.RL.Agents.keyboard_gridworld", "_autosummary/seldonian.RL.Agents.keyboard_gridworld.Keyboard_gridworld", "_autosummary/seldonian.RL.Agents.mountain_car_rough_solution", "_autosummary/seldonian.RL.Agents.mountain_car_rough_solution.Mountain_car_rough_solution", "_autosummary/seldonian.RL.Env_Description", "_autosummary/seldonian.RL.Env_Description.Env_Description", "_autosummary/seldonian.RL.Env_Description.Env_Description.Env_Description", "_autosummary/seldonian.RL.Env_Description.Env_Description.check_space_type", "_autosummary/seldonian.RL.Env_Description.Spaces", "_autosummary/seldonian.RL.Env_Description.Spaces.Continuous_Space", "_autosummary/seldonian.RL.Env_Description.Spaces.Discrete_Space", "_autosummary/seldonian.RL.RL_generate_dataset_and_spec_file", "_autosummary/seldonian.RL.RL_generate_dataset_and_spec_file.get_constraint_string", "_autosummary/seldonian.RL.RL_generate_dataset_and_spec_file.get_env_kwargs", "_autosummary/seldonian.RL.RL_generate_dataset_and_spec_file.get_metadata_path", "_autosummary/seldonian.RL.RL_generate_dataset_and_spec_file.main", "_autosummary/seldonian.RL.RL_generate_dataset_and_spec_file.print_return_info", "_autosummary/seldonian.RL.RL_model", "_autosummary/seldonian.RL.RL_model.RL_model", "_autosummary/seldonian.RL.RL_runner", "_autosummary/seldonian.RL.RL_runner.create_agent", "_autosummary/seldonian.RL.RL_runner.create_env", "_autosummary/seldonian.RL.RL_runner.run_all_trials", "_autosummary/seldonian.RL.RL_runner.run_episode", "_autosummary/seldonian.RL.RL_runner.run_episode_from_dict", "_autosummary/seldonian.RL.RL_runner.run_trial", "_autosummary/seldonian.RL.RL_runner.run_trial_given_agent_and_env", "_autosummary/seldonian.RL.environments", "_autosummary/seldonian.RL.environments.Environment", "_autosummary/seldonian.RL.environments.Environment.Environment", "_autosummary/seldonian.RL.environments.gridworld", "_autosummary/seldonian.RL.environments.gridworld.Gridworld", "_autosummary/seldonian.RL.environments.mountaincar", "_autosummary/seldonian.RL.environments.mountaincar.Mountaincar", "_autosummary/seldonian.RL.environments.n_step_mountaincar", "_autosummary/seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar", "_autosummary/seldonian.RL.environments.simglucose_env", "_autosummary/seldonian.RL.environments.simglucose_env.Simglucose", "_autosummary/seldonian.RL.generate_gridworld_episodes", "_autosummary/seldonian.RL.generate_gridworld_episodes.main", "_autosummary/seldonian.RL.generate_mountaincar_episodes", "_autosummary/seldonian.RL.generate_mountaincar_episodes.main", "_autosummary/seldonian.RL.generate_simglucose_episodes", "_autosummary/seldonian.RL.generate_simglucose_episodes.get_max_obs", "_autosummary/seldonian.RL.generate_simglucose_episodes.main", "_autosummary/seldonian.RL.hyperparams_and_settings", "_autosummary/seldonian.RL.hyperparams_and_settings.define_hyperparameter_and_setting_dict", "_autosummary/seldonian.candidate_selection", "_autosummary/seldonian.candidate_selection.candidate_selection", "_autosummary/seldonian.candidate_selection.candidate_selection.CandidateSelection", "_autosummary/seldonian.dataset", "_autosummary/seldonian.dataset.DataSet", "_autosummary/seldonian.dataset.DataSetLoader", "_autosummary/seldonian.dataset.Episode", "_autosummary/seldonian.dataset.RLDataSet", "_autosummary/seldonian.dataset.SupervisedDataSet", "_autosummary/seldonian.models", "_autosummary/seldonian.models.models", "_autosummary/seldonian.models.models.BaseLogisticRegressionModel", "_autosummary/seldonian.models.models.BinaryLogisticRegressionModel", "_autosummary/seldonian.models.models.BoundedLinearRegressionModel", "_autosummary/seldonian.models.models.ClassificationModel", "_autosummary/seldonian.models.models.DummyClassifierModel", "_autosummary/seldonian.models.models.LinearRegressionModel", "_autosummary/seldonian.models.models.MultiClassLogisticRegressionModel", "_autosummary/seldonian.models.models.RandomClassifierModel", "_autosummary/seldonian.models.models.RegressionModel", "_autosummary/seldonian.models.models.SeldonianModel", "_autosummary/seldonian.models.models.SupervisedModel", "_autosummary/seldonian.models.objectives", "_autosummary/seldonian.models.objectives.False_Negative_Rate", "_autosummary/seldonian.models.objectives.False_Positive_Rate", "_autosummary/seldonian.models.objectives.IS_estimate", "_autosummary/seldonian.models.objectives.Mean_Error", "_autosummary/seldonian.models.objectives.Mean_Squared_Error", "_autosummary/seldonian.models.objectives.Negative_Rate", "_autosummary/seldonian.models.objectives.Positive_Rate", "_autosummary/seldonian.models.objectives.True_Negative_Rate", "_autosummary/seldonian.models.objectives.True_Positive_Rate", "_autosummary/seldonian.models.objectives.binary_logistic_loss", "_autosummary/seldonian.models.objectives.confusion_matrix", "_autosummary/seldonian.models.objectives.evaluate_statistic", "_autosummary/seldonian.models.objectives.gradient_Bounded_Squared_Error", "_autosummary/seldonian.models.objectives.gradient_Mean_Squared_Error", "_autosummary/seldonian.models.objectives.gradient_binary_logistic_loss", "_autosummary/seldonian.models.objectives.multiclass_logistic_loss", "_autosummary/seldonian.models.objectives.sample_from_statistic", "_autosummary/seldonian.models.objectives.vector_Error", "_autosummary/seldonian.models.objectives.vector_False_Negative_Rate", "_autosummary/seldonian.models.objectives.vector_False_Positive_Rate", "_autosummary/seldonian.models.objectives.vector_IS_estimate", "_autosummary/seldonian.models.objectives.vector_Negative_Rate", "_autosummary/seldonian.models.objectives.vector_Positive_Rate", "_autosummary/seldonian.models.objectives.vector_Squared_Error", "_autosummary/seldonian.models.objectives.vector_True_Negative_Rate", "_autosummary/seldonian.models.objectives.vector_True_Positive_Rate", "_autosummary/seldonian.models.objectives.vector_confusion_matrix", "_autosummary/seldonian.optimizers", "_autosummary/seldonian.optimizers.gradient_descent", "_autosummary/seldonian.optimizers.gradient_descent.gradient_descent_adam", "_autosummary/seldonian.optimizers.gradient_descent.setup_gradients", "_autosummary/seldonian.parse_tree", "_autosummary/seldonian.parse_tree.nodes", "_autosummary/seldonian.parse_tree.nodes.BaseNode", "_autosummary/seldonian.parse_tree.nodes.CVaRSQeBaseNode", "_autosummary/seldonian.parse_tree.nodes.ConfusionMatrixBaseNode", "_autosummary/seldonian.parse_tree.nodes.ConstantNode", "_autosummary/seldonian.parse_tree.nodes.InternalNode", "_autosummary/seldonian.parse_tree.nodes.MEDCustomBaseNode", "_autosummary/seldonian.parse_tree.nodes.MultiClassBaseNode", "_autosummary/seldonian.parse_tree.nodes.Node", "_autosummary/seldonian.parse_tree.operators", "_autosummary/seldonian.parse_tree.parse_tree", "_autosummary/seldonian.parse_tree.parse_tree.ParseTree", "_autosummary/seldonian.parse_tree.parse_tree.make_parse_trees_from_constraints", "_autosummary/seldonian.safety_test", "_autosummary/seldonian.safety_test.safety_test", "_autosummary/seldonian.safety_test.safety_test.SafetyTest", "_autosummary/seldonian.seldonian_algorithm", "_autosummary/seldonian.seldonian_algorithm.SeldonianAlgorithm", "_autosummary/seldonian.spec", "_autosummary/seldonian.spec.RLSpec", "_autosummary/seldonian.spec.Spec", "_autosummary/seldonian.spec.SupervisedSpec", "_autosummary/seldonian.spec.createRLSpec", "_autosummary/seldonian.spec.createSupervisedSpec", "_autosummary/seldonian.spec.validate_parse_trees", "_autosummary/seldonian.utils", "_autosummary/seldonian.utils.RL_utils", "_autosummary/seldonian.utils.RL_utils.argmax_multi", "_autosummary/seldonian.utils.RL_utils.clamp", "_autosummary/seldonian.utils.RL_utils.error", "_autosummary/seldonian.utils.io_utils", "_autosummary/seldonian.utils.io_utils.dir_path", "_autosummary/seldonian.utils.io_utils.load_json", "_autosummary/seldonian.utils.io_utils.load_pickle", "_autosummary/seldonian.utils.io_utils.load_supervised_metadata", "_autosummary/seldonian.utils.io_utils.save_json", "_autosummary/seldonian.utils.io_utils.save_pickle", "_autosummary/seldonian.utils.plot_utils", "_autosummary/seldonian.utils.plot_utils.plot_gradient_descent", "_autosummary/seldonian.utils.stats_utils", "_autosummary/seldonian.utils.stats_utils.softmax", "_autosummary/seldonian.utils.stats_utils.stddev", "_autosummary/seldonian.utils.stats_utils.tinv", "_autosummary/seldonian.utils.stats_utils.weighted_sum_gamma", "_autosummary/seldonian.utils.tutorial_utils", "_autosummary/seldonian.utils.tutorial_utils.generate_clipped_data", "_autosummary/seldonian.utils.tutorial_utils.generate_data", "_autosummary/seldonian.utils.tutorial_utils.make_synthetic_regression_dataset", "_autosummary/seldonian.warnings", "_autosummary/seldonian.warnings.custom_warnings", "_autosummary/seldonian.warnings.custom_warnings.custom_formatwarning", "api", "getting_started", "index", "overview"], "filenames": ["_autosummary/seldonian.rst", "_autosummary/seldonian.RL.rst", "_autosummary/seldonian.RL.Agents.rst", "_autosummary/seldonian.RL.Agents.Agent.rst", "_autosummary/seldonian.RL.Agents.Agent.Agent.rst", "_autosummary/seldonian.RL.Agents.Bases.rst", "_autosummary/seldonian.RL.Agents.Bases.Fourier.rst", "_autosummary/seldonian.RL.Agents.Bases.Fourier.Fourier.rst", "_autosummary/seldonian.RL.Agents.Discrete_Random_Agent.rst", "_autosummary/seldonian.RL.Agents.Discrete_Random_Agent.Discrete_Random_Agent.rst", "_autosummary/seldonian.RL.Agents.Function_Approximators.rst", "_autosummary/seldonian.RL.Agents.Function_Approximators.Function_Approximator.rst", "_autosummary/seldonian.RL.Agents.Function_Approximators.Function_Approximator.Function_Approximator.rst", "_autosummary/seldonian.RL.Agents.Function_Approximators.Linear_FA.rst", "_autosummary/seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_FA.rst", "_autosummary/seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_state_action_value_FA.rst", "_autosummary/seldonian.RL.Agents.Function_Approximators.Table.rst", "_autosummary/seldonian.RL.Agents.Function_Approximators.Table.Q_Table.rst", "_autosummary/seldonian.RL.Agents.Function_Approximators.Table.Table.rst", "_autosummary/seldonian.RL.Agents.Function_Approximators.Table.construct_Q_Table_From_Env_Description.rst", "_autosummary/seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.rst", "_autosummary/seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.Parameterized_non_learning_softmax_agent.rst", "_autosummary/seldonian.RL.Agents.Policies.rst", "_autosummary/seldonian.RL.Agents.Policies.Policy.rst", "_autosummary/seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy.rst", "_autosummary/seldonian.RL.Agents.Policies.Policy.Policy.rst", "_autosummary/seldonian.RL.Agents.Policies.Softmax.rst", "_autosummary/seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax.rst", "_autosummary/seldonian.RL.Agents.Policies.Softmax.Softmax.rst", "_autosummary/seldonian.RL.Agents.keyboard_gridworld.rst", "_autosummary/seldonian.RL.Agents.keyboard_gridworld.Keyboard_gridworld.rst", "_autosummary/seldonian.RL.Agents.mountain_car_rough_solution.rst", "_autosummary/seldonian.RL.Agents.mountain_car_rough_solution.Mountain_car_rough_solution.rst", "_autosummary/seldonian.RL.Env_Description.rst", "_autosummary/seldonian.RL.Env_Description.Env_Description.rst", "_autosummary/seldonian.RL.Env_Description.Env_Description.Env_Description.rst", "_autosummary/seldonian.RL.Env_Description.Env_Description.check_space_type.rst", "_autosummary/seldonian.RL.Env_Description.Spaces.rst", "_autosummary/seldonian.RL.Env_Description.Spaces.Continuous_Space.rst", "_autosummary/seldonian.RL.Env_Description.Spaces.Discrete_Space.rst", "_autosummary/seldonian.RL.RL_generate_dataset_and_spec_file.rst", "_autosummary/seldonian.RL.RL_generate_dataset_and_spec_file.get_constraint_string.rst", "_autosummary/seldonian.RL.RL_generate_dataset_and_spec_file.get_env_kwargs.rst", "_autosummary/seldonian.RL.RL_generate_dataset_and_spec_file.get_metadata_path.rst", "_autosummary/seldonian.RL.RL_generate_dataset_and_spec_file.main.rst", "_autosummary/seldonian.RL.RL_generate_dataset_and_spec_file.print_return_info.rst", "_autosummary/seldonian.RL.RL_model.rst", "_autosummary/seldonian.RL.RL_model.RL_model.rst", "_autosummary/seldonian.RL.RL_runner.rst", "_autosummary/seldonian.RL.RL_runner.create_agent.rst", "_autosummary/seldonian.RL.RL_runner.create_env.rst", "_autosummary/seldonian.RL.RL_runner.run_all_trials.rst", "_autosummary/seldonian.RL.RL_runner.run_episode.rst", "_autosummary/seldonian.RL.RL_runner.run_episode_from_dict.rst", "_autosummary/seldonian.RL.RL_runner.run_trial.rst", "_autosummary/seldonian.RL.RL_runner.run_trial_given_agent_and_env.rst", "_autosummary/seldonian.RL.environments.rst", "_autosummary/seldonian.RL.environments.Environment.rst", "_autosummary/seldonian.RL.environments.Environment.Environment.rst", "_autosummary/seldonian.RL.environments.gridworld.rst", "_autosummary/seldonian.RL.environments.gridworld.Gridworld.rst", "_autosummary/seldonian.RL.environments.mountaincar.rst", "_autosummary/seldonian.RL.environments.mountaincar.Mountaincar.rst", "_autosummary/seldonian.RL.environments.n_step_mountaincar.rst", "_autosummary/seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar.rst", "_autosummary/seldonian.RL.environments.simglucose_env.rst", "_autosummary/seldonian.RL.environments.simglucose_env.Simglucose.rst", "_autosummary/seldonian.RL.generate_gridworld_episodes.rst", "_autosummary/seldonian.RL.generate_gridworld_episodes.main.rst", "_autosummary/seldonian.RL.generate_mountaincar_episodes.rst", "_autosummary/seldonian.RL.generate_mountaincar_episodes.main.rst", "_autosummary/seldonian.RL.generate_simglucose_episodes.rst", "_autosummary/seldonian.RL.generate_simglucose_episodes.get_max_obs.rst", "_autosummary/seldonian.RL.generate_simglucose_episodes.main.rst", "_autosummary/seldonian.RL.hyperparams_and_settings.rst", "_autosummary/seldonian.RL.hyperparams_and_settings.define_hyperparameter_and_setting_dict.rst", "_autosummary/seldonian.candidate_selection.rst", "_autosummary/seldonian.candidate_selection.candidate_selection.rst", "_autosummary/seldonian.candidate_selection.candidate_selection.CandidateSelection.rst", "_autosummary/seldonian.dataset.rst", "_autosummary/seldonian.dataset.DataSet.rst", "_autosummary/seldonian.dataset.DataSetLoader.rst", "_autosummary/seldonian.dataset.Episode.rst", "_autosummary/seldonian.dataset.RLDataSet.rst", "_autosummary/seldonian.dataset.SupervisedDataSet.rst", "_autosummary/seldonian.models.rst", "_autosummary/seldonian.models.models.rst", "_autosummary/seldonian.models.models.BaseLogisticRegressionModel.rst", "_autosummary/seldonian.models.models.BinaryLogisticRegressionModel.rst", "_autosummary/seldonian.models.models.BoundedLinearRegressionModel.rst", "_autosummary/seldonian.models.models.ClassificationModel.rst", "_autosummary/seldonian.models.models.DummyClassifierModel.rst", "_autosummary/seldonian.models.models.LinearRegressionModel.rst", "_autosummary/seldonian.models.models.MultiClassLogisticRegressionModel.rst", "_autosummary/seldonian.models.models.RandomClassifierModel.rst", "_autosummary/seldonian.models.models.RegressionModel.rst", "_autosummary/seldonian.models.models.SeldonianModel.rst", "_autosummary/seldonian.models.models.SupervisedModel.rst", "_autosummary/seldonian.models.objectives.rst", "_autosummary/seldonian.models.objectives.False_Negative_Rate.rst", "_autosummary/seldonian.models.objectives.False_Positive_Rate.rst", "_autosummary/seldonian.models.objectives.IS_estimate.rst", "_autosummary/seldonian.models.objectives.Mean_Error.rst", "_autosummary/seldonian.models.objectives.Mean_Squared_Error.rst", "_autosummary/seldonian.models.objectives.Negative_Rate.rst", "_autosummary/seldonian.models.objectives.Positive_Rate.rst", "_autosummary/seldonian.models.objectives.True_Negative_Rate.rst", "_autosummary/seldonian.models.objectives.True_Positive_Rate.rst", "_autosummary/seldonian.models.objectives.binary_logistic_loss.rst", "_autosummary/seldonian.models.objectives.confusion_matrix.rst", "_autosummary/seldonian.models.objectives.evaluate_statistic.rst", "_autosummary/seldonian.models.objectives.gradient_Bounded_Squared_Error.rst", "_autosummary/seldonian.models.objectives.gradient_Mean_Squared_Error.rst", "_autosummary/seldonian.models.objectives.gradient_binary_logistic_loss.rst", "_autosummary/seldonian.models.objectives.multiclass_logistic_loss.rst", "_autosummary/seldonian.models.objectives.sample_from_statistic.rst", "_autosummary/seldonian.models.objectives.vector_Error.rst", "_autosummary/seldonian.models.objectives.vector_False_Negative_Rate.rst", "_autosummary/seldonian.models.objectives.vector_False_Positive_Rate.rst", "_autosummary/seldonian.models.objectives.vector_IS_estimate.rst", "_autosummary/seldonian.models.objectives.vector_Negative_Rate.rst", "_autosummary/seldonian.models.objectives.vector_Positive_Rate.rst", "_autosummary/seldonian.models.objectives.vector_Squared_Error.rst", "_autosummary/seldonian.models.objectives.vector_True_Negative_Rate.rst", "_autosummary/seldonian.models.objectives.vector_True_Positive_Rate.rst", "_autosummary/seldonian.models.objectives.vector_confusion_matrix.rst", "_autosummary/seldonian.optimizers.rst", "_autosummary/seldonian.optimizers.gradient_descent.rst", "_autosummary/seldonian.optimizers.gradient_descent.gradient_descent_adam.rst", "_autosummary/seldonian.optimizers.gradient_descent.setup_gradients.rst", "_autosummary/seldonian.parse_tree.rst", "_autosummary/seldonian.parse_tree.nodes.rst", "_autosummary/seldonian.parse_tree.nodes.BaseNode.rst", "_autosummary/seldonian.parse_tree.nodes.CVaRSQeBaseNode.rst", "_autosummary/seldonian.parse_tree.nodes.ConfusionMatrixBaseNode.rst", "_autosummary/seldonian.parse_tree.nodes.ConstantNode.rst", "_autosummary/seldonian.parse_tree.nodes.InternalNode.rst", "_autosummary/seldonian.parse_tree.nodes.MEDCustomBaseNode.rst", "_autosummary/seldonian.parse_tree.nodes.MultiClassBaseNode.rst", "_autosummary/seldonian.parse_tree.nodes.Node.rst", "_autosummary/seldonian.parse_tree.operators.rst", "_autosummary/seldonian.parse_tree.parse_tree.rst", "_autosummary/seldonian.parse_tree.parse_tree.ParseTree.rst", "_autosummary/seldonian.parse_tree.parse_tree.make_parse_trees_from_constraints.rst", "_autosummary/seldonian.safety_test.rst", "_autosummary/seldonian.safety_test.safety_test.rst", "_autosummary/seldonian.safety_test.safety_test.SafetyTest.rst", "_autosummary/seldonian.seldonian_algorithm.rst", "_autosummary/seldonian.seldonian_algorithm.SeldonianAlgorithm.rst", "_autosummary/seldonian.spec.rst", "_autosummary/seldonian.spec.RLSpec.rst", "_autosummary/seldonian.spec.Spec.rst", "_autosummary/seldonian.spec.SupervisedSpec.rst", "_autosummary/seldonian.spec.createRLSpec.rst", "_autosummary/seldonian.spec.createSupervisedSpec.rst", "_autosummary/seldonian.spec.validate_parse_trees.rst", "_autosummary/seldonian.utils.rst", "_autosummary/seldonian.utils.RL_utils.rst", "_autosummary/seldonian.utils.RL_utils.argmax_multi.rst", "_autosummary/seldonian.utils.RL_utils.clamp.rst", "_autosummary/seldonian.utils.RL_utils.error.rst", "_autosummary/seldonian.utils.io_utils.rst", "_autosummary/seldonian.utils.io_utils.dir_path.rst", "_autosummary/seldonian.utils.io_utils.load_json.rst", "_autosummary/seldonian.utils.io_utils.load_pickle.rst", "_autosummary/seldonian.utils.io_utils.load_supervised_metadata.rst", "_autosummary/seldonian.utils.io_utils.save_json.rst", "_autosummary/seldonian.utils.io_utils.save_pickle.rst", "_autosummary/seldonian.utils.plot_utils.rst", "_autosummary/seldonian.utils.plot_utils.plot_gradient_descent.rst", "_autosummary/seldonian.utils.stats_utils.rst", "_autosummary/seldonian.utils.stats_utils.softmax.rst", "_autosummary/seldonian.utils.stats_utils.stddev.rst", "_autosummary/seldonian.utils.stats_utils.tinv.rst", "_autosummary/seldonian.utils.stats_utils.weighted_sum_gamma.rst", "_autosummary/seldonian.utils.tutorial_utils.rst", "_autosummary/seldonian.utils.tutorial_utils.generate_clipped_data.rst", "_autosummary/seldonian.utils.tutorial_utils.generate_data.rst", "_autosummary/seldonian.utils.tutorial_utils.make_synthetic_regression_dataset.rst", "_autosummary/seldonian.warnings.rst", "_autosummary/seldonian.warnings.custom_warnings.rst", "_autosummary/seldonian.warnings.custom_warnings.custom_formatwarning.rst", "api.rst", "getting_started.rst", "index.rst", "overview.rst"], "titles": ["seldonian", "seldonian.RL", "seldonian.RL.Agents", "seldonian.RL.Agents.Agent", "seldonian.RL.Agents.Agent.Agent", "seldonian.RL.Agents.Bases", "seldonian.RL.Agents.Bases.Fourier", "seldonian.RL.Agents.Bases.Fourier.Fourier", "seldonian.RL.Agents.Discrete_Random_Agent", "seldonian.RL.Agents.Discrete_Random_Agent.Discrete_Random_Agent", "seldonian.RL.Agents.Function_Approximators", "seldonian.RL.Agents.Function_Approximators.Function_Approximator", "seldonian.RL.Agents.Function_Approximators.Function_Approximator.Function_Approximator", "seldonian.RL.Agents.Function_Approximators.Linear_FA", "seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_FA", "seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_state_action_value_FA", "seldonian.RL.Agents.Function_Approximators.Table", "seldonian.RL.Agents.Function_Approximators.Table.Q_Table", "seldonian.RL.Agents.Function_Approximators.Table.Table", "seldonian.RL.Agents.Function_Approximators.Table.construct_Q_Table_From_Env_Description", "seldonian.RL.Agents.Parameterized_non_learning_softmax_agent", "seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.Parameterized_non_learning_softmax_agent", "seldonian.RL.Agents.Policies", "seldonian.RL.Agents.Policies.Policy", "seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy", "seldonian.RL.Agents.Policies.Policy.Policy", "seldonian.RL.Agents.Policies.Softmax", "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax", "seldonian.RL.Agents.Policies.Softmax.Softmax", "seldonian.RL.Agents.keyboard_gridworld", "seldonian.RL.Agents.keyboard_gridworld.Keyboard_gridworld", "seldonian.RL.Agents.mountain_car_rough_solution", "seldonian.RL.Agents.mountain_car_rough_solution.Mountain_car_rough_solution", "seldonian.RL.Env_Description", "seldonian.RL.Env_Description.Env_Description", "seldonian.RL.Env_Description.Env_Description.Env_Description", "seldonian.RL.Env_Description.Env_Description.check_space_type", "seldonian.RL.Env_Description.Spaces", "seldonian.RL.Env_Description.Spaces.Continuous_Space", "seldonian.RL.Env_Description.Spaces.Discrete_Space", "seldonian.RL.RL_generate_dataset_and_spec_file", "seldonian.RL.RL_generate_dataset_and_spec_file.get_constraint_string", "seldonian.RL.RL_generate_dataset_and_spec_file.get_env_kwargs", "seldonian.RL.RL_generate_dataset_and_spec_file.get_metadata_path", "seldonian.RL.RL_generate_dataset_and_spec_file.main", "seldonian.RL.RL_generate_dataset_and_spec_file.print_return_info", "seldonian.RL.RL_model", "seldonian.RL.RL_model.RL_model", "seldonian.RL.RL_runner", "seldonian.RL.RL_runner.create_agent", "seldonian.RL.RL_runner.create_env", "seldonian.RL.RL_runner.run_all_trials", "seldonian.RL.RL_runner.run_episode", "seldonian.RL.RL_runner.run_episode_from_dict", "seldonian.RL.RL_runner.run_trial", "seldonian.RL.RL_runner.run_trial_given_agent_and_env", "seldonian.RL.environments", "seldonian.RL.environments.Environment", "seldonian.RL.environments.Environment.Environment", "seldonian.RL.environments.gridworld", "seldonian.RL.environments.gridworld.Gridworld", "seldonian.RL.environments.mountaincar", "seldonian.RL.environments.mountaincar.Mountaincar", "seldonian.RL.environments.n_step_mountaincar", "seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar", "seldonian.RL.environments.simglucose_env", "seldonian.RL.environments.simglucose_env.Simglucose", "seldonian.RL.generate_gridworld_episodes", "seldonian.RL.generate_gridworld_episodes.main", "seldonian.RL.generate_mountaincar_episodes", "seldonian.RL.generate_mountaincar_episodes.main", "seldonian.RL.generate_simglucose_episodes", "seldonian.RL.generate_simglucose_episodes.get_max_obs", "seldonian.RL.generate_simglucose_episodes.main", "seldonian.RL.hyperparams_and_settings", "seldonian.RL.hyperparams_and_settings.define_hyperparameter_and_setting_dict", "seldonian.candidate_selection", "seldonian.candidate_selection.candidate_selection", "seldonian.candidate_selection.candidate_selection.CandidateSelection", "seldonian.dataset", "seldonian.dataset.DataSet", "seldonian.dataset.DataSetLoader", "seldonian.dataset.Episode", "seldonian.dataset.RLDataSet", "seldonian.dataset.SupervisedDataSet", "seldonian.models", "seldonian.models.models", "seldonian.models.models.BaseLogisticRegressionModel", "seldonian.models.models.BinaryLogisticRegressionModel", "seldonian.models.models.BoundedLinearRegressionModel", "seldonian.models.models.ClassificationModel", "seldonian.models.models.DummyClassifierModel", "seldonian.models.models.LinearRegressionModel", "seldonian.models.models.MultiClassLogisticRegressionModel", "seldonian.models.models.RandomClassifierModel", "seldonian.models.models.RegressionModel", "seldonian.models.models.SeldonianModel", "seldonian.models.models.SupervisedModel", "seldonian.models.objectives", "seldonian.models.objectives.False_Negative_Rate", "seldonian.models.objectives.False_Positive_Rate", "seldonian.models.objectives.IS_estimate", "seldonian.models.objectives.Mean_Error", "seldonian.models.objectives.Mean_Squared_Error", "seldonian.models.objectives.Negative_Rate", "seldonian.models.objectives.Positive_Rate", "seldonian.models.objectives.True_Negative_Rate", "seldonian.models.objectives.True_Positive_Rate", "seldonian.models.objectives.binary_logistic_loss", "seldonian.models.objectives.confusion_matrix", "seldonian.models.objectives.evaluate_statistic", "seldonian.models.objectives.gradient_Bounded_Squared_Error", "seldonian.models.objectives.gradient_Mean_Squared_Error", "seldonian.models.objectives.gradient_binary_logistic_loss", "seldonian.models.objectives.multiclass_logistic_loss", "seldonian.models.objectives.sample_from_statistic", "seldonian.models.objectives.vector_Error", "seldonian.models.objectives.vector_False_Negative_Rate", "seldonian.models.objectives.vector_False_Positive_Rate", "seldonian.models.objectives.vector_IS_estimate", "seldonian.models.objectives.vector_Negative_Rate", "seldonian.models.objectives.vector_Positive_Rate", "seldonian.models.objectives.vector_Squared_Error", "seldonian.models.objectives.vector_True_Negative_Rate", "seldonian.models.objectives.vector_True_Positive_Rate", "seldonian.models.objectives.vector_confusion_matrix", "seldonian.optimizers", "seldonian.optimizers.gradient_descent", "seldonian.optimizers.gradient_descent.gradient_descent_adam", "seldonian.optimizers.gradient_descent.setup_gradients", "seldonian.parse_tree", "seldonian.parse_tree.nodes", "seldonian.parse_tree.nodes.BaseNode", "seldonian.parse_tree.nodes.CVaRSQeBaseNode", "seldonian.parse_tree.nodes.ConfusionMatrixBaseNode", "seldonian.parse_tree.nodes.ConstantNode", "seldonian.parse_tree.nodes.InternalNode", "seldonian.parse_tree.nodes.MEDCustomBaseNode", "seldonian.parse_tree.nodes.MultiClassBaseNode", "seldonian.parse_tree.nodes.Node", "seldonian.parse_tree.operators", "seldonian.parse_tree.parse_tree", "seldonian.parse_tree.parse_tree.ParseTree", "seldonian.parse_tree.parse_tree.make_parse_trees_from_constraints", "seldonian.safety_test", "seldonian.safety_test.safety_test", "seldonian.safety_test.safety_test.SafetyTest", "seldonian.seldonian_algorithm", "seldonian.seldonian_algorithm.SeldonianAlgorithm", "seldonian.spec", "seldonian.spec.RLSpec", "seldonian.spec.Spec", "seldonian.spec.SupervisedSpec", "seldonian.spec.createRLSpec", "seldonian.spec.createSupervisedSpec", "seldonian.spec.validate_parse_trees", "seldonian.utils", "seldonian.utils.RL_utils", "seldonian.utils.RL_utils.argmax_multi", "seldonian.utils.RL_utils.clamp", "seldonian.utils.RL_utils.error", "seldonian.utils.io_utils", "seldonian.utils.io_utils.dir_path", "seldonian.utils.io_utils.load_json", "seldonian.utils.io_utils.load_pickle", "seldonian.utils.io_utils.load_supervised_metadata", "seldonian.utils.io_utils.save_json", "seldonian.utils.io_utils.save_pickle", "seldonian.utils.plot_utils", "seldonian.utils.plot_utils.plot_gradient_descent", "seldonian.utils.stats_utils", "seldonian.utils.stats_utils.softmax", "seldonian.utils.stats_utils.stddev", "seldonian.utils.stats_utils.tinv", "seldonian.utils.stats_utils.weighted_sum_gamma", "seldonian.utils.tutorial_utils", "seldonian.utils.tutorial_utils.generate_clipped_data", "seldonian.utils.tutorial_utils.generate_data", "seldonian.utils.tutorial_utils.make_synthetic_regression_dataset", "seldonian.warnings", "seldonian.warnings.custom_warnings", "seldonian.warnings.custom_warnings.custom_formatwarning", "API", "Getting Started", "Seldonian Engine documentation", "Overview"], "terms": {"engin": [0, 140, 183, 185], "packag": [0, 185], "modul": [0, 1, 2, 5, 10, 22, 33, 56, 76, 77, 85, 86, 126, 130, 140, 141, 144, 145, 147, 149, 156, 179, 181, 185], "class": [3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 37, 38, 39, 46, 47, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 104, 105, 106, 107, 109, 114, 125, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 145, 146, 147, 148, 149, 150, 151, 152, 185], "base": [4, 9, 12, 14, 15, 17, 18, 21, 24, 25, 27, 28, 30, 32, 35, 38, 39, 47, 58, 60, 62, 64, 66, 78, 80, 81, 82, 83, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 146, 148, 150, 151, 152, 184, 185], "object": [4, 7, 9, 12, 14, 15, 19, 21, 24, 25, 27, 28, 35, 38, 39, 44, 45, 58, 60, 78, 80, 81, 82, 83, 84, 96, 128, 129, 132, 133, 134, 137, 138, 139, 142, 146, 148, 149, 150, 151, 152, 153, 154, 155, 163, 164, 166, 167, 169, 184], "__init__": [4, 7, 9, 12, 14, 15, 17, 18, 21, 24, 25, 27, 28, 30, 32, 35, 38, 39, 47, 58, 60, 62, 64, 66, 78, 80, 81, 82, 83, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 132, 133, 134, 135, 136, 137, 138, 139, 142, 146, 148, 150, 151, 152, 184], "__repr__": [4, 7, 9, 12, 14, 15, 17, 18, 21, 24, 25, 27, 28, 30, 32, 35, 38, 39, 47, 58, 60, 62, 64, 66, 78, 80, 81, 82, 83, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 132, 133, 134, 135, 136, 137, 138, 139, 142, 146, 148, 150, 151, 152, 184], "return": [4, 7, 9, 12, 14, 15, 17, 18, 19, 21, 24, 25, 27, 28, 30, 32, 35, 38, 39, 41, 42, 43, 45, 47, 49, 50, 51, 52, 53, 54, 55, 58, 60, 62, 64, 66, 78, 80, 81, 82, 83, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 128, 132, 133, 134, 137, 138, 140, 142, 146, 148, 150, 151, 152, 158, 169, 172, 173, 174, 185], "repr": [4, 7, 9, 12, 14, 15, 17, 18, 21, 24, 25, 27, 28, 30, 32, 35, 38, 39, 47, 58, 60, 62, 64, 66, 78, 80, 81, 82, 83, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 142, 146, 148, 150, 151, 152], "self": [4, 7, 9, 12, 14, 15, 17, 18, 21, 24, 25, 27, 28, 30, 32, 35, 38, 39, 47, 58, 60, 62, 64, 66, 78, 80, 81, 82, 83, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 142, 146, 148, 150, 151, 152], "method": [4, 7, 9, 12, 14, 15, 17, 18, 21, 24, 25, 27, 28, 30, 32, 35, 38, 39, 47, 58, 60, 62, 64, 66, 78, 80, 81, 82, 83, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 128, 132, 133, 134, 135, 136, 137, 138, 139, 142, 143, 146, 148, 150, 151, 152, 185], "choose_act": [4, 9, 21, 24, 25, 27, 28, 30, 32, 184], "observ": [4, 7, 9, 21, 24, 25, 27, 28, 30, 32, 35, 38, 39, 47, 58, 62, 64, 66, 82, 88, 91, 93, 94, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 132, 133, 134, 137, 138, 185], "choos": [4, 9, 30, 32, 185], "an": [4, 7, 9, 14, 15, 19, 21, 24, 25, 27, 28, 30, 32, 35, 49, 50, 54, 58, 60, 62, 64, 66, 132, 133, 134, 138, 139, 140, 162, 163, 164, 166, 167, 174, 185], "action": [4, 9, 15, 17, 21, 24, 25, 27, 28, 30, 32, 35, 38, 39, 47, 58, 60, 62, 64, 66, 81, 82, 185], "given": [4, 7, 9, 17, 19, 21, 24, 25, 27, 28, 30, 32, 41, 42, 43, 47, 58, 60, 62, 64, 66, 78, 129, 132, 133, 134, 137, 138, 142, 143, 146, 148, 185], "To": [4, 9, 30, 32, 183], "overridden": [4, 9, 25, 30, 32], "paramet": [4, 7, 9, 12, 14, 15, 17, 18, 19, 21, 24, 25, 27, 28, 30, 32, 35, 36, 38, 39, 45, 47, 49, 50, 51, 52, 53, 54, 55, 58, 60, 62, 64, 66, 78, 80, 81, 82, 83, 84, 87, 88, 89, 91, 92, 93, 94, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 142, 143, 146, 148, 150, 151, 152, 153, 154, 155, 162, 163, 164, 165, 166, 167, 169, 172, 173, 174, 176, 177, 178, 185], "The": [4, 9, 14, 15, 17, 18, 21, 27, 28, 30, 32, 38, 60, 78, 80, 81, 84, 87, 88, 89, 91, 92, 93, 94, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 146, 148, 150, 151, 152, 153, 154, 165, 167, 169, 174, 176, 177, 178, 184, 185], "current": [4, 9, 21, 24, 25, 27, 28, 30, 32, 58, 60, 62, 64, 66, 90, 185], "type": [4, 9, 19, 21, 24, 27, 28, 30, 32, 36, 47, 49, 50, 52, 53, 60, 78, 87, 88, 89, 91, 92, 93, 94, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 128, 132, 133, 134, 137, 138, 142, 146, 148, 172, 173, 174, 185], "depend": [4, 9, 21, 24, 27, 28, 30, 32, 132, 133, 134, 137, 138, 185], "environ": [4, 7, 9, 14, 15, 17, 18, 19, 21, 24, 27, 28, 30, 32, 35, 41, 42, 43, 47, 49, 50, 51, 52, 53, 54, 55, 153, 184, 185], "get_param": [4, 9, 21, 24, 25, 27, 28, 30, 32, 184], "retriev": [4, 9, 30, 32], "": [4, 9, 21, 30, 32, 35, 132, 133, 134, 137, 138, 142, 172, 173, 185], "polici": [4, 9, 21, 30, 32, 47, 54, 82, 140, 153, 184, 185], "get_prob_this_act": [4, 9, 21, 24, 25, 27, 28, 30, 32, 47, 184], "get": [4, 7, 9, 17, 21, 24, 25, 27, 28, 30, 32, 35, 38, 39, 47, 58, 60, 62, 64, 66, 78, 109, 125, 142, 146, 148, 184, 185], "probabl": [4, 9, 17, 21, 24, 25, 27, 28, 30, 32, 47, 82, 88, 91, 93, 94, 99, 100, 104, 105, 106, 107, 109, 117, 118, 120, 121, 123, 124, 125, 133, 142, 173, 185], "provid": [4, 9, 30, 32, 35, 110, 115, 142, 148, 150, 151, 152, 153, 185], "i": [4, 9, 21, 24, 27, 28, 30, 32, 38, 45, 51, 60, 78, 87, 88, 89, 93, 99, 100, 101, 104, 105, 106, 107, 109, 117, 118, 119, 120, 121, 123, 124, 125, 128, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 146, 148, 150, 151, 152, 162, 169, 183, 184, 185], "set_new_param": [4, 9, 12, 14, 15, 17, 18, 21, 24, 25, 27, 28, 30, 32, 184], "theta": [4, 9, 30, 32, 78, 88, 89, 91, 92, 93, 94, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 128, 132, 133, 134, 137, 138, 146, 148, 185], "updat": [4, 9, 21, 25, 30, 32, 60, 184], "model": [4, 9, 12, 14, 15, 17, 18, 30, 32, 47, 78, 81, 128, 132, 133, 134, 137, 138, 146, 148, 150, 151, 152, 153, 154, 184], "next_observ": [4, 9, 21, 30, 32], "reward": [4, 9, 21, 30, 32, 45, 60, 81, 82, 140, 174, 185], "termin": [4, 9, 21, 30, 32, 58, 60, 62, 64, 66, 184], "accord": [4, 9, 21, 30, 32], "learn": [4, 9, 21, 30, 32, 78, 80, 81, 84, 86, 90, 96, 97, 128, 132, 133, 134, 137, 138, 140, 142, 143, 146, 152, 184, 185], "rule": [4, 9, 21, 30, 32], "overriden": [4, 9, 30, 32], "after": [4, 9, 21, 30, 32], "taken": [4, 9, 21, 30, 32, 35, 47], "take": [4, 9, 21, 24, 25, 30, 32, 47, 185], "bool": [4, 9, 21, 30, 32, 60, 78, 81, 139, 142, 146, 150, 151, 152, 153, 169], "whether": [4, 9, 21, 24, 27, 28, 30, 32, 54, 60, 78, 81, 84, 139, 142, 146, 148, 150, 151, 152, 153, 154, 162, 169, 178, 185], "hyperparam_and_setting_dict": [7, 21, 24, 27, 28], "env_desc": 7, "basi": [7, 14, 15, 24, 27, 28], "us": [7, 14, 15, 21, 27, 30, 38, 39, 45, 47, 54, 58, 62, 64, 66, 78, 81, 87, 88, 89, 92, 93, 128, 129, 132, 133, 134, 137, 138, 140, 142, 148, 150, 151, 152, 153, 154, 173, 174, 178, 183, 185], "linear": [7, 14, 15, 24, 27, 28, 89, 92], "valu": [7, 15, 17, 27, 28, 39, 78, 116, 122, 128, 132, 133, 134, 135, 137, 138, 142, 146, 148, 176, 178, 185], "function": [7, 12, 14, 15, 16, 21, 24, 27, 28, 34, 40, 48, 60, 67, 69, 71, 74, 78, 89, 98, 127, 128, 129, 132, 134, 138, 140, 141, 142, 143, 146, 149, 150, 151, 152, 153, 154, 157, 161, 168, 169, 170, 173, 175, 180, 185], "approxim": [7, 12, 14, 15, 21, 24, 27, 28], "see": [7, 133, 137, 150, 151, 152, 184, 185], "http": [7, 133, 137, 173], "irl": 7, "c": [7, 109, 125, 133, 134], "brown": 7, "edu": [7, 133], "fb": 7, "php": 7, "refer": [7, 140, 185], "hyperparameter_and_setting_dict": [7, 24, 27, 28, 49, 50, 51, 53, 54], "specifi": [7, 24, 27, 28, 49, 50, 51, 54, 55, 140, 142, 150, 151, 152, 185], "number": [7, 17, 18, 24, 27, 28, 35, 38, 39, 49, 50, 51, 54, 55, 60, 87, 88, 93, 105, 109, 125, 128, 132, 133, 134, 137, 138, 142, 176, 177, 178, 185], "episod": [7, 24, 27, 28, 44, 45, 49, 50, 51, 52, 53, 54, 55, 68, 70, 72, 73, 81, 83, 101, 119, 184, 185], "per": [7, 24, 27, 28, 49, 50, 51, 169], "trial": [7, 24, 27, 28, 44, 49, 50, 51, 54, 68, 70, 73], "env_descript": [7, 9, 14, 15, 19, 21, 24, 27, 28, 30, 60, 184], "access": [7, 9, 14, 15, 19, 21, 24, 27, 28, 35], "attribut": [7, 9, 14, 15, 19, 21, 24, 27, 28, 35, 60, 83, 84, 134, 138, 142, 185], "calculate_num_featur": [7, 184], "order": [7, 185], "max_coupled_var": 7, "num_obs_dim": 7, "determin": [7, 128, 142, 153, 154], "featur": [7, 14, 15, 87, 88, 89, 91, 92, 93, 94, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 132, 133, 134, 137, 138, 185], "construct_basis_matrix": [7, 184], "creat": [7, 19, 24, 27, 28, 44, 49, 50, 60, 81, 132, 133, 134, 137, 138, 142, 143, 148, 153, 154, 185], "matrix": [7, 109, 125, 134, 185], "get_featur": [7, 184], "ob": [7, 17, 18, 21, 24, 25, 27, 28, 35, 58, 60, 62, 64, 66, 81, 142], "get_normalized_observ": [7, 184], "normal": [7, 105, 176, 177, 178], "act": 9, "discret": [9, 24, 27, 28, 35, 36, 39], "space": [9, 24, 27, 28, 35, 36, 60, 184], "pick": 9, "uniform": 9, "random": [9, 176, 177, 178], "capabl": [9, 18], "new_param": [12, 14, 15, 17, 18, 21, 24, 25, 27, 28, 47], "set": [12, 14, 15, 17, 18, 21, 24, 27, 28, 54, 130, 134, 135, 148, 185], "new": [12, 14, 15, 17, 18, 58, 62, 64, 66, 140, 184, 185], "weight": [12, 14, 15, 17, 18, 21, 24, 27, 28, 47, 78, 87, 88, 89, 91, 92, 93, 94, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 128, 132, 133, 134, 137, 138, 140, 142, 143, 146, 148, 150, 151, 152, 153, 174, 185], "encod": [14, 15, 185], "A": [15, 17, 19, 27, 47, 55, 58, 60, 62, 64, 66, 83, 119, 134, 138, 140, 142, 150, 151, 152, 162, 163, 164, 166, 167, 184], "state": [15, 17, 18, 21, 35, 60], "min_stat": [17, 18], "num_stat": [17, 18, 60], "num_act": 17, "q": [17, 19, 27], "contain": [17, 21, 25, 60, 78, 81, 84, 86, 101, 110, 115, 119, 128, 132, 133, 134, 137, 138, 140, 142, 146, 148, 150, 151, 152, 154, 185], "transit": [17, 58, 60, 62, 64, 66, 184], "int": [17, 18, 27, 39, 60, 78, 109, 125, 128, 132, 133, 134, 137, 138, 139, 142, 173, 176, 177, 178], "smallest": [17, 18], "total": [17, 18, 39, 142], "from_environment_state_to_0_indexed_st": [17, 18, 184], "env_stat": [17, 18], "convert": [17, 18, 24, 27, 28], "0": [17, 18, 24, 27, 28, 38, 89, 94, 99, 100, 104, 105, 106, 107, 117, 118, 120, 121, 123, 124, 128, 132, 133, 134, 137, 138, 142, 146, 150, 151, 152, 153, 174, 176, 177, 178, 185], "index": [17, 18, 24, 27, 28, 109, 125, 134, 138, 139, 174, 185], "you": [17, 18, 81, 142, 146, 167, 169, 183, 184, 185], "want": [17, 18, 36, 81, 138, 142, 146, 167, 169, 183, 185], "get_action_values_given_st": [17, 24, 27, 28, 184], "state_number_not_zero_index": 17, "possibl": [17, 21, 24, 27, 28, 35, 58, 60, 62, 64, 66, 133, 185], "environment": 17, "specif": [17, 24, 27, 28, 49, 50, 148, 149, 150, 151, 152, 185], "arrai": [17, 21, 24, 27, 28, 38, 47, 78, 87, 88, 93, 109, 125, 140, 174, 185], "get_action_values_given_zero_indexed_st": [17, 184], "zero_indexed_state_numb": 17, "hold": [18, 80, 82, 83, 84], "reindex": 18, "descript": [19, 24, 27, 28, 58, 60, 62, 64, 66, 185], "q_tabl": [19, 21, 184], "parametr": 21, "softmax": [21, 184, 185], "pi": 21, "frac": 21, "e": [21, 45, 78, 80, 81, 83, 110, 115, 128, 132, 133, 134, 137, 138, 142, 143, 146, 150, 151, 152, 185], "p": [21, 173, 185], "sum_": 21, "addit": [21, 185], "info": [21, 128, 148], "about": [21, 128, 142, 185], "data": [21, 78, 81, 88, 93, 101, 108, 114, 119, 132, 133, 134, 137, 138, 142, 146, 148, 150, 151, 152, 153, 154, 166, 167, 172, 176, 177, 178, 185], "gener": [21, 24, 28, 176, 177, 178, 185], "variabl": [21, 38, 60, 132, 133, 134, 135, 137, 138, 139, 140, 142], "fa": 21, "select": [21, 24, 25, 27, 28, 76, 77, 78, 126, 128, 132, 133, 134, 137, 138, 146, 148, 150, 151, 152, 153, 184], "get_action_valu": [21, 184], "all": [21, 24, 27, 28, 47, 58, 80, 84, 90, 95, 96, 97, 101, 108, 114, 134, 138, 139, 142, 146, 185], "from": [21, 24, 27, 28, 49, 50, 81, 82, 89, 92, 130, 137, 141, 142, 148, 163, 164, 165, 178, 185], "thi": [21, 47, 58, 60, 62, 64, 66, 104, 105, 109, 111, 117, 118, 120, 121, 123, 124, 125, 128, 132, 133, 134, 137, 138, 139, 142, 148, 176, 178, 184, 185], "float": [21, 27, 28, 47, 60, 91, 94, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 128, 132, 133, 134, 135, 136, 137, 138, 139, 142, 148, 150, 151, 152, 153, 154, 172, 173, 174, 176, 177, 178, 185], "Not": [21, 30, 140], "implement": [21, 25, 58, 60, 62, 64, 66, 88, 89, 91, 92, 93, 94, 128, 173, 185], "where": [24, 27, 55, 78, 128, 132, 133, 134, 137, 138, 142, 146, 148, 153, 154, 166, 169, 174, 185], "ar": [24, 27, 36, 38, 55, 78, 133, 134, 140, 142, 146, 155, 169, 174, 184, 185], "defin": [24, 25, 38, 133, 140, 185], "how": [24, 25, 142, 185], "construct_basis_and_linear_fa": [24, 27, 28, 184], "dictionari": [24, 27, 28, 49, 50, 55, 128, 140, 148, 150, 151, 152, 165, 169, 185], "from_0_indexed_action_to_environment_act": [24, 27, 28, 184], "action_0_index": [24, 27, 28], "env": [24, 27, 28, 42, 52, 53, 55], "from_environment_action_to_0_indexed_act": [24, 27, 28, 184], "env_act": [24, 27, 28], "make_state_action_fa": [24, 27, 28, 184], "contin": [24, 27, 28, 36], "four": [25, 185], "which": [25, 36, 51, 104, 132, 133, 134, 136, 137, 138, 140, 142, 185], "must": [25, 132, 185], "ani": [25, 78, 143, 185], "both": [27, 142, 185], "faster": 27, "than": [27, 38, 55, 133, 142, 146, 185], "just": [27, 148], "becaus": [27, 142, 169], "cach": [27, 142], "lookup": 27, "tabl": 27, "_arg": [27, 184], "helper": [27, 60, 142], "acceler": 27, "calcul": [27, 60, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 114, 116, 117, 118, 119, 120, 121, 122, 128, 132, 133, 134, 137, 138, 142, 146, 174, 185], "_denom": [27, 184], "choose_action_from_action_valu": [27, 28, 184], "action_valu": [27, 28], "list": [27, 28, 45, 47, 51, 54, 55, 78, 80, 81, 82, 83, 84, 132, 133, 134, 137, 138, 140, 142, 143, 146, 150, 151, 152, 153, 154, 155, 185], "param": [27, 28, 105, 111], "get_action_probs_from_action_valu": [27, 28, 184], "get_e_to_the_something_term": [27, 28, 184], "exponenti": [27, 28, 128, 142], "obsertavt": [27, 28], "obserav": [27, 28], "discrete_action_polici": [28, 184], "debug": [30, 45, 58, 62, 64, 66, 128, 148], "gridworld": [30, 184], "intend": 30, "public": 30, "observation_spac": 35, "action_spac": 35, "describ": [35, 60, 81], "conveni": [35, 142, 143, 153, 154, 185], "continu": [35, 38], "made": 35, "get_min_act": [35, 184], "first": [35, 138, 142, 184, 185], "get_min_st": [35, 184], "get_num_act": [35, 184], "get_num_observation_dim": [35, 184], "dimens": [35, 38, 176, 177, 178], "get_num_st": [35, 184], "also": [35, 135, 136, 139, 142, 174, 185], "call": [35, 132, 133, 134, 137, 138, 174, 185], "here": [35, 140, 185], "desired_typ": 36, "valid": [36, 38, 142, 185], "ensur": [36, 155, 185], "equival": [36, 132, 133, 134, 137, 138], "discrete_spac": [36, 184], "continous_spac": 36, "we": [36, 132, 133, 134, 137, 138, 142, 183, 185], "match": 36, "bound": [38, 78, 89, 111, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 146, 150, 151, 152, 185], "np": 38, "ndarrai": [38, 78, 89, 91, 92, 94, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 132, 133, 134, 137, 138, 146, 148, 172, 174], "shape": [38, 87, 88, 93, 109, 125, 185], "num_dim": 38, "2": [38, 137, 138, 166, 185], "min": [38, 39, 137, 185], "max": [38, 39, 185], "each": [38, 51, 82, 83, 88, 91, 93, 94, 104, 105, 106, 107, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 132, 133, 134, 137, 138, 140, 142, 143, 150, 151, 152, 169, 185], "For": [38, 138, 140, 185], "exampl": [38, 138, 185], "3d": 38, "x": [38, 87, 88, 89, 91, 92, 93, 94, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 116, 117, 118, 120, 121, 122, 123, 124, 125, 134, 137, 171, 176, 177, 178], "1": [38, 88, 99, 100, 104, 105, 106, 107, 117, 118, 120, 121, 123, 124, 132, 133, 134, 138, 176, 177, 178, 181, 185], "y": [38, 87, 88, 89, 92, 93, 99, 100, 102, 103, 106, 107, 108, 109, 111, 112, 113, 114, 116, 117, 118, 122, 123, 124, 125, 137, 176, 177, 178], "5": [38, 94, 150, 151, 152, 185], "4": [38, 133, 140, 185], "z": [38, 133], "12": 38, "6": [38, 150, 152, 153, 185], "8": [38, 54, 185], "would": [38, 78, 128, 138, 140, 150, 151, 152, 185], "check_bounds_valid": [38, 184], "check": [38, 60, 142, 162], "format": [38, 81, 185], "maximum": [38, 39, 60, 133, 142], "larger": [38, 133], "minimum": [38, 39, 133, 142, 185], "get_num_dim": [38, 184], "get_num_valu": [39, 184], "env_nam": [41, 42, 43], "name": [41, 42, 43, 78, 80, 81, 83, 84, 110, 115, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 150, 151, 152, 185], "default": [41, 42, 81, 128, 129, 139, 142, 143, 150, 151, 152, 153, 154, 185], "constraint": [41, 78, 128, 129, 130, 138, 140, 141, 142, 143, 146, 150, 151, 152, 153, 154, 155, 169, 184], "string": [41, 78, 135, 136, 139, 140, 142, 143, 150, 151, 152, 153, 154, 184], "kwarg": [42, 47, 78, 80, 81, 83, 84, 99, 100, 104, 105, 106, 107, 115, 117, 118, 120, 121, 123, 124, 128, 132, 133, 134, 135, 136, 137, 138, 142, 146, 153, 181], "path": [43, 154, 162, 169], "metadata": [43, 80, 81, 83, 84, 101, 119, 128, 154, 165, 185], "file": [43, 81, 148, 153, 154, 163, 164, 165, 166, 167, 185], "run": [44, 51, 52, 53, 54, 55, 68, 70, 73, 78, 79, 85, 128, 145, 146, 147, 148, 149, 150, 151, 152, 184], "rlspec": [44, 153, 184, 185], "save": [44, 68, 70, 73, 153, 154, 166, 167, 169, 185], "disk": [44, 68, 70, 73, 78, 81], "print": [45, 58, 60, 62, 64, 66, 128, 148], "sum": [45, 104, 105, 106, 107, 174], "env_kwarg": [47, 153, 185], "seldonianmodel": [47, 78, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 132, 133, 134, 137, 138, 146, 151, 152, 184], "parameter": [47, 185], "dict": [47, 51, 54, 110, 115, 128, 132, 133, 134, 137, 138, 140, 142, 150, 151, 152, 153, 169], "pertain": [47, 153], "gamma": [47, 60, 153, 174, 185], "discount": [47, 60, 153, 174, 185], "factor": [47, 60, 153, 174, 185], "singl": [47, 52, 53, 54, 138, 142, 185], "pair": [47, 89, 92, 137, 185], "get_probs_from_observations_and_act": [47, 184], "those": [47, 140], "agent": [49, 50, 51, 52, 53, 54, 55, 184], "mani": 51, "consist": [51, 54, 185], "same": [51, 137], "_i": [51, 185], "model_param": [53, 54], "none": [53, 54, 78, 81, 139, 150, 151, 152, 153], "parallel": 54, "fals": [54, 60, 78, 81, 84, 99, 100, 106, 107, 110, 117, 118, 128, 138, 140, 142, 148, 150, 151, 152, 153, 154, 166, 167, 169, 178, 185], "n_worker": 54, "arbitrari": [54, 60], "befor": [54, 185], "process": [54, 148, 185], "cpu": 54, "num_episod": 55, "wrapper": [55, 78, 129, 146, 148, 163, 164, 166, 167], "run_trial": [55, 184], "explic": 55, "rather": 55, "via": [55, 142, 185], "get_env_descript": [58, 60, 62, 64, 66, 184], "overrid": [58, 60, 62, 64, 66, 89, 132, 133, 134, 137, 138], "child": [58, 60, 62, 64, 66, 139, 140, 142, 185], "get_observ": [58, 60, 62, 64, 66, 184], "reset": [58, 60, 62, 64, 66, 142, 184], "initi": [58, 60, 62, 64, 66, 78, 128, 142, 150, 151, 152, 153], "start_visu": [58, 60, 62, 64, 66, 184], "turn": [58, 60, 62, 64, 66], "visual": [58, 60, 62, 64, 66, 135, 136, 139, 142, 183, 184, 185], "debugg": [58, 60, 62, 64, 66], "stop_visu": [58, 60, 62, 64, 66, 184], "off": [58, 60, 62, 64, 66], "out": [58, 60, 62, 64, 66, 128, 148], "size": 60, "3": [60, 133, 138, 176, 178, 185], "squar": [60, 102, 103, 111, 112, 122, 133, 140, 185], "grid": 60, "cell": 60, "side": [60, 142], "distinct": 60, "terminal_st": 60, "occupi": 60, "time": 60, "timestep": [60, 82, 185], "max_tim": 60, "allow": 60, "expect": [60, 132, 133, 134, 137, 138, 140], "create_env_descript": [60, 184], "is_in_goal_st": [60, 184], "goal": [60, 185], "true": [60, 100, 106, 107, 109, 123, 124, 125, 132, 133, 134, 137, 138, 140, 150, 151, 152, 153, 154, 169, 185], "go": [60, 185], "back": [60, 150, 151, 152], "between": [60, 99, 100, 104, 105, 106, 107, 117, 118, 120, 121, 123, 124, 137, 159, 185], "reach": 60, "next": 60, "update_posit": [60, 184], "posit": [60, 91, 94, 99, 100, 104, 105, 106, 107, 110, 117, 118, 120, 121, 124, 133, 138, 140, 142, 185], "inform": [60, 185], "candid": [76, 77, 78, 126, 128, 132, 133, 134, 137, 138, 146, 148, 150, 151, 152, 153, 184], "candidate_dataset": 78, "n_safeti": [78, 133], "parse_tre": [78, 146, 150, 151, 152, 155, 184, 185], "primary_object": [78, 128, 129, 146, 148, 150, 151, 152], "optimization_techniqu": [78, 150, 151, 152, 185], "barrier_funct": [78, 150, 151, 152, 185], "optim": [78, 148, 150, 151, 152, 184, 185], "powel": [78, 185], "initial_solut": 78, "regim": [78, 80, 81, 140, 142, 143, 146, 185], "supervised_learn": [78, 80, 81, 142, 143, 146, 185], "write_logfil": [78, 148], "dataset": [78, 116, 122, 132, 133, 134, 137, 138, 143, 146, 148, 150, 151, 152, 153, 154, 178, 184], "length": [78, 88, 133, 140], "safeti": [78, 128, 132, 133, 134, 137, 138, 144, 145, 146, 148, 150, 151, 152, 153, 184], "when": [78, 99, 100, 106, 107, 132, 134, 138, 142, 169, 185], "predict": [78, 84, 88, 89, 91, 92, 93, 94, 99, 100, 105, 109, 117, 118, 123, 124, 125, 134, 138, 184, 185], "confid": [78, 132, 133, 134, 136, 137, 138, 139, 142, 153, 154, 185], "dure": [78, 81, 84, 140, 148, 150, 151, 152, 185], "parsetre": [78, 146, 150, 151, 155, 184, 185], "pars": [78, 130, 132, 135, 136, 137, 139, 140, 141, 142, 143, 146, 150, 151, 152, 155, 183, 185], "tree": [78, 130, 132, 135, 136, 137, 139, 140, 141, 142, 143, 146, 150, 151, 152, 155, 183, 185], "behavior": [78, 82, 128, 130, 140, 141, 142, 146, 150, 151, 152, 184], "sole": [78, 128, 150, 151, 152], "absenc": [78, 128, 150, 151, 152], "loss": [78, 108, 113, 114, 128, 140, 150, 151, 152, 185], "str": [78, 80, 81, 83, 84, 110, 115, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 142, 143, 146, 148, 150, 151, 152, 153, 154, 162, 163, 164, 166, 167, 169], "g": [78, 80, 81, 83, 110, 115, 128, 132, 133, 134, 137, 138, 142, 143, 146, 150, 151, 152, 185], "gradient_desc": [78, 150, 151, 152, 184, 185], "categori": [78, 80, 81, 142, 143, 146, 181], "machin": [78, 80, 81, 86, 90, 96, 132, 133, 134, 137, 138, 142, 143, 146, 184, 185], "algorithm": [78, 79, 80, 81, 85, 137, 142, 143, 146, 147, 148, 149, 150, 151, 152, 185], "reinforcement_learn": [78, 80, 81, 142, 143, 146, 185], "write": [78, 138, 148, 185], "output": [78, 185], "evaluate_primary_object": [78, 146, 148, 184], "primari": [78, 128, 129, 146, 148, 150, 151, 152, 153, 169, 185], "fix": [78, 133, 146, 148, 185], "input": [78, 91, 94, 132, 133, 134, 137, 138, 162, 163, 174, 185], "gradient": [78, 111, 112, 113, 128, 129, 150, 151, 152, 153, 169, 185], "descent": [78, 128, 169, 185], "numpi": [78, 89, 91, 92, 94, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 132, 133, 134, 137, 138, 146, 148, 172, 174], "evalu": [78, 110, 111, 115, 132, 133, 134, 137, 138, 142, 146, 148], "get_constraint_upper_bound": [78, 184], "upper": [78, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 142, 146, 185], "objective_with_barri": [78, 184], "minimization_techniqu": 78, "barrier": [78, 185], "add": [78, 142], "larg": 78, "penalti": 78, "violat": [78, 142, 185], "nsf": [78, 148, 185], "build": [79, 130, 141, 142, 149], "load": [79, 81, 163, 164, 165, 185], "meta_inform": [80, 83, 84], "datafram": [80, 83, 84, 101, 119, 132, 133, 134, 137, 138, 142], "column": [80, 81, 84, 109, 125, 132, 133, 134, 137, 138, 142, 143, 185], "load_rl_dataset_from_csv": [81, 184, 185], "filenam": [81, 163, 164, 165, 166, 167, 181, 185], "metadata_filenam": [81, 185], "rldataset": [81, 184, 185], "csv": [81, 185], "episode_index": 81, "probability_of_act": 81, "load_rl_dataset_from_episode_fil": [81, 184, 185], "pickl": [81, 148, 164, 167, 185], "load_supervised_dataset": [81, 184, 185], "include_sensitive_column": [81, 84], "file_typ": 81, "superviseddataset": [81, 184, 185], "sensit": [81, 84, 185], "train": [81, 84, 87, 88, 89, 92, 93, 185], "extens": 81, "action_prob": 82, "rl": [82, 83, 142, 150, 174, 184, 185], "o": 83, "r": [83, 113], "pi_b": 83, "df": 84, "label_column": [84, 185], "sensitive_column_nam": 84, "supervis": [84, 97, 140, 142, 152, 185], "panda": [84, 137], "full": [84, 137, 169, 185], "target": 84, "label": [84, 87, 88, 89, 91, 92, 93, 94, 100, 102, 103, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 122, 123, 124, 125, 132, 133, 134, 137, 138, 169, 185], "includ": [84, 87, 88, 93, 109, 125, 142, 185], "main": [86, 141, 184], "classificationmodel": [87, 91, 94, 184, 185], "binari": [87, 88, 90, 108, 113], "multi": [87, 93, 114], "logist": [87, 88, 93, 108, 113, 114, 140], "regress": [87, 88, 89, 92, 93, 95, 137, 140, 142, 143, 152, 185], "fit": [87, 88, 89, 92, 93, 184, 185], "let": [87, 88, 93, 109, 125, 185], "datapoint": [87, 88, 93, 109, 125], "j": [87, 88, 93, 109, 125, 134], "bia": [87, 88, 93, 109, 125], "term": [87, 88, 93, 109, 125, 128], "provi": [87, 88, 93, 109, 125, 185], "k": [87, 88, 93, 109, 125, 134], "baselogisticregressionmodel": [88, 93, 184], "have": [88, 91, 93, 94, 142, 185], "point": [88, 93, 108, 114, 128, 137, 163, 164, 176, 177, 178, 185], "linearregressionmodel": [89, 184, 185], "sever": [89, 133, 137, 185], "parent": [89, 90, 95, 96, 97, 133, 137], "assum": 89, "intercept": 89, "nxm": [89, 92], "nx1": [89, 92], "origin": 89, "squash": 89, "supervisedmodel": [90, 95, 184], "classif": [90, 108, 114, 138, 140, 142, 152, 185], "onli": [90, 133, 169, 185], "support": [90, 140, 185], "classifi": [91, 94], "alwai": [91, 94, 128, 132, 133, 134, 137, 138, 142, 185], "regardless": [91, 94, 185], "regressionmodel": [92, 184, 185], "ha": [94, 138, 140, 185], "prob": 94, "probabilist": [99, 100], "averag": [99, 100, 108, 114], "neg": [99, 100, 104, 106, 117, 118, 120, 123, 140, 142], "rate": [99, 100, 104, 105, 106, 107, 110, 117, 118, 120, 121, 123, 124, 128, 138, 140, 142, 185], "over": [99, 100, 101, 102, 103, 108, 110, 114, 146, 185], "whole": [99, 100, 102, 103, 104, 105, 106, 107, 110, 142], "sampl": [99, 100, 101, 102, 103, 104, 105, 106, 107, 110, 112, 115, 119, 133, 172, 185], "truth": 99, "wa": [99, 100, 106, 107, 109, 125, 137, 138, 142, 185], "instanc": [99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125], "data_dict": [101, 110, 115, 119, 132, 133, 134, 137, 138], "unweight": [101, 119], "import": [101, 119, 128, 183, 185], "estim": [101, 119, 132, 133, 134, 138, 185], "mean": [102, 103, 112, 116, 122, 137, 140, 148, 176, 177, 178, 185], "error": [102, 103, 111, 112, 116, 122, 133, 137, 140, 184, 185], "y_hat": 102, "being": [104, 105, 106, 107, 117, 118, 120, 121, 123, 124, 132, 134, 138], "fact": [106, 107], "l_i": [109, 125], "l_k": [109, 125], "element": [109, 125], "confus": [109, 125, 134], "correspond": [109, 125, 143, 173, 185], "row": [109, 125, 134, 137, 169, 185], "statistic_nam": [110, 115], "statist": [110, 115, 132, 138, 140, 185], "fpr": [110, 115, 132, 140, 185], "analyt": 111, "w": 113, "t": [113, 132, 133, 134, 137, 138, 173], "perceptron": 113, "vector": [116, 119, 122, 128, 132, 133, 134, 137, 138, 172], "subject": [117, 118, 123, 124, 185], "actual": [117, 118, 123, 124, 133, 185], "n_constraint": 128, "upper_bounds_funct": [128, 129], "theta_init": 128, "lambda_init": [128, 150, 151, 152], "alpha_theta": [128, 150, 151, 152], "05": [128, 132, 133, 134, 137, 138, 185], "alpha_lamb": [128, 150, 151, 152], "beta_veloc": [128, 150, 151, 152], "9": [128, 150, 151, 152, 174, 185], "beta_rmsprop": [128, 150, 151, 152], "num_it": [128, 150, 151, 152], "200": [128, 150, 151, 152], "gradient_librari": [128, 129, 150, 151, 152], "autograd": [128, 129, 150, 151, 152, 153], "verbos": [128, 150, 151, 152, 153, 154, 166, 167], "simultan": 128, "ascent": 128, "adam": [128, 150, 151, 152, 185], "lagrangian": [128, 169, 185], "l": [128, 169, 185], "lambda": [128, 185], "f": [128, 137, 169, 185], "lagrang": [128, 169], "multipli": [128, 142, 169], "done": 128, "find": [128, 185], "saddl": 128, "Being": 128, "part": [128, 185], "solut": [128, 142, 146, 148, 169, 185], "test": [128, 132, 133, 134, 137, 138, 144, 145, 146, 148, 150, 151, 152, 153, 169, 184], "No": [128, 185], "found": [128, 146, 148, 185], "decai": 128, "veloc": 128, "rmsprop": 128, "iter": [128, 137, 185], "librari": [128, 129, 184, 185], "comput": [128, 129, 137, 138, 142, 150, 151, 152], "automat": [128, 129], "boolean": [128, 140, 153, 154, 167, 178, 185], "flag": [128, 153, 154, 167, 178, 185], "control": [128, 153, 154, 178, 185], "obtain": 129, "lower": [132, 133, 134, 135, 136, 137, 138, 139, 142], "inf": [132, 133, 134, 136, 137, 138], "conditional_column": [132, 133, 134, 137, 138], "leaf": [132, 135, 136, 146], "measur": [132, 134, 138, 140, 142, 185], "condit": [132, 133, 134, 137, 138, 142, 143], "node_typ": [132, 135], "equal": [132, 142, 143, 146, 185], "base_nod": 132, "delta": [132, 133, 134, 137, 138, 142, 143, 153, 154, 185], "share": [132, 133, 137], "put": [132, 133, 137], "measure_function_nam": 132, "repres": [132, 135, 136, 140, 142, 185], "measure_funct": [132, 185], "oper": [132, 136, 184, 185], "calculate_bound": [132, 133, 134, 137, 138, 184], "bound_method": [132, 133, 134, 137, 138], "calculate_data_forbound": [132, 133, 134, 137, 138, 184], "prepar": [132, 133, 134, 138], "calculate_valu": [132, 133, 134, 137, 138, 184], "etc": [132, 134, 136, 137, 138], "compute_hc_lowerbound": [132, 133, 134, 137, 138, 184], "datas": [132, 133, 134, 137, 138], "high": [132, 133, 134, 137, 138], "level": [132, 133, 134, 137, 138, 142, 185], "compute_hc_upper_and_lowerbound": [132, 133, 134, 137, 138, 184], "compute_hc_upperbound": [132, 133, 134, 137, 138, 184], "independ": [132, 133, 134, 137, 138, 185], "mask_datafram": [132, 133, 134, 137, 138, 184], "mask": [132, 133, 134, 137, 138], "joint": [132, 133, 134, 137, 138], "AND": [132, 133, 134, 137, 138], "predict_hc_lowerbound": [132, 133, 134, 137, 138, 184], "pass": [132, 133, 134, 137, 138, 142, 146, 148, 153, 185], "predict_hc_upper_and_lowerbound": [132, 133, 134, 137, 138, 184], "predict_hc_upperbound": [132, 133, 134, 137, 138, 184], "zhat": [132, 133, 134, 137, 138, 184], "unbias": [132, 133, 134, 138], "basenod": [133, 134, 137, 138, 184], "custom": [133, 137, 140, 185], "cvar_alpha": 133, "alpha": 133, "definit": [133, 185], "consid": 133, "least": [133, 185], "var_alpha": 133, "largest": 133, "100": 133, "thoma": [133, 137], "miller": 133, "2019": [133, 137], "peopl": 133, "umass": 133, "pthoma": 133, "paper": 133, "thomas2019": 133, "pdf": 133, "theorem": 133, "threshold": [133, 153, 154], "cvar": 133, "sort": 133, "b": [133, 140, 142], "n_candid": 133, "cm_true_index": 134, "cm_pred_index": 134, "inherit": [134, 138, 185], "indic": [134, 148, 158, 185], "c_00": 134, "c_01": 134, "c_0k": 134, "______": 134, "_____": 134, "c_10": 134, "c_11": 134, "c_1k": 134, "c_k0": 134, "c_k1": 134, "c_kk": 134, "constant": [135, 142, 174, 185], "constant_nod": 135, "represent": [135, 136, 139, 140], "what": [135, 136, 139, 184], "displai": [135, 136, 139, 142, 169], "insid": [135, 136, 139], "box": [135, 136, 139, 185], "graph": [135, 136, 139, 142, 183], "intern": [136, 185], "non": 136, "These": [136, 185], "perform": [136, 140, 185], "wise": 137, "differ": [137, 185], "male": [137, 185], "femal": [137, 185], "present": [137, 142], "et": 137, "al": 137, "www": [137, 173], "scienc": 137, "org": 137, "stoken": 137, "author": 137, "token": 137, "st": 137, "119": 137, "figur": [137, 169, 185], "precalculate_data": [137, 184], "preconfigur": 137, "so": [137, 142, 185], "doe": [137, 142, 184], "need": [137, 139, 142, 143, 149, 185], "recalcul": 137, "through": [137, 142], "up": [137, 142, 185], "y_i": 137, "y_hat_i": 137, "m": [137, 142, 185], "y_j": 137, "y_hat_j": 137, "There": [137, 142, 185], "mai": [137, 162, 185], "n_male": 137, "n_femal": 137, "class_index": 138, "against": 138, "other": [138, 148, 185], "one": [138, 140, 142, 150, 151, 152, 153, 185], "thei": [138, 140, 169, 185], "fpr_": 138, "left": [139, 142, 185], "right": [139, 142, 185], "will_lower_bound": 139, "will_upper_bound": 139, "global": 140, "construct": [140, 185], "measure_functions_dict": [140, 184], "sub_regim": [140, 142, 143, 152, 185], "appear": [140, 142, 185], "recogn": 140, "special": [140, 185], "organ": 140, "sub": [140, 142, 143, 185], "pr": [140, 142, 185], "nr": 140, "tpr": [140, 185], "fnr": 140, "tnr": 140, "logistic_loss": 140, "mean_error": [140, 142, 184], "mean_squared_error": [140, 184, 185], "reinforc": [140, 185], "j_pi_new": [140, 185], "custom_base_node_dict": [140, 184], "map": 140, "node": [140, 142, 143, 146, 150, 151, 152, 184, 185], "op_mapp": [140, 184], "ast": [140, 142], "not_supported_op_mapp": [140, 184], "bounds_required_dict": [140, 184], "requir": [140, 142, 151, 183, 185], "If": [140, 142, 150, 151, 152, 153, 183, 184, 185], "two": [140, 142, 185], "children": [140, 142], "like": [140, 142, 185], "need_a_low": 140, "need_a_upp": 140, "need_b_low": 140, "need_b_upp": 140, "can": [142, 185], "ml": [142, 185], "user": [142, 185], "appropri": 142, "root": [142, 146], "assign": 142, "built": [142, 150, 151, 152, 153, 185], "constraint_str": [142, 143, 153, 154], "express": [142, 185], "n_node": 142, "n_base_nod": 142, "more": [142, 185], "onc": [142, 185], "contribut": 142, "base_node_dict": 142, "keep": 142, "track": 142, "uniqu": 142, "been": [142, 185], "alreadi": [142, 185], "help": [142, 173], "handl": 142, "case": [142, 158, 185], "duplic": [142, 155], "node_fonts": 142, "fontsiz": 142, "graphviz": [142, 183], "available_measure_funct": 142, "_ab": [142, 184], "absolut": [142, 185], "interv": 142, "tupl": [142, 148, 185], "_add": [142, 184], "_assign_bounds_help": [142, 184], "lower_need": 142, "upper_need": 142, "travers": 142, "_assign_deltas_help": [142, 184], "weight_method": 142, "_ast2pt_nod": [142, 184], "ast_nod": 142, "_ast_tree_help": [142, 184], "make": [142, 169, 185], "recurs": 142, "_div": [142, 184], "divid": 142, "_evaluator_help": [142, 184], "_exp": [142, 184], "_max": [142, 184], "_min": [142, 184], "_mult": [142, 184], "_pow": [142, 184], "pow": 142, "_preprocess_constraint_str": [142, 184], "inequ": [142, 185], "move": 142, "everyth": 142, "final": 142, "form": [142, 185], "some": [142, 148, 185], "sure": 142, "mathemat": [142, 185], "written": [142, 185], "python": [142, 173, 183, 185], "syntax": 142, "_propagate_valu": [142, 184], "propag": [142, 146, 184], "_propagator_help": [142, 184], "_protect_nan": [142, 184], "bound_typ": 142, "nan": 142, "infin": 142, "postit": 142, "_sub": [142, 184], "subract": 142, "assign_bounds_need": [142, 184], "breadth": 142, "search": 142, "decid": 142, "eventu": 142, "necessari": [142, 185], "end": [142, 185], "care": 142, "assign_delta": [142, 184], "split": [142, 185], "among": 142, "build_tre": [142, 184], "delta_weight_method": [142, 143], "create_from_ast": [142, 184], "structur": 142, "evaluate_constraint": [142, 184], "itself": 142, "postord": 142, "logic": 142, "make_viz": [142, 184], "titl": 142, "diagram": 142, "top": [142, 185], "make_viz_help": [142, 184], "edg": 142, "digraph": 142, "propagate_bound": [142, 184], "reset_base_node_dict": [142, 184], "reset_data": 142, "less": [142, 146, 185], "frequent": 142, "defult": 143, "classifict": 143, "across": 143, "safety_dataset": 146, "loop": 146, "spec": [148, 184], "introspect": 148, "complet": [148, 184, 185], "candidate_select": [148, 184], "detail": [148, 185], "branch": 148, "either": [148, 185], "safety_test": [148, 184, 185], "get_cs_result": [148, 184], "write_cs_logfil": [148, 185], "log": [148, 185], "passed_safeti": [148, 185], "run_safety_test": [148, 184], "candidate_solut": 148, "frac_data_in_safeti": [150, 151, 152, 153], "initial_solution_fn": [150, 151, 152, 153], "base_node_bound_method_dict": [150, 151, 152], "use_builtin_primary_gradient_fn": [150, 151, 152, 153], "custom_primary_gradient_fn": [150, 151, 152], "optimization_hyperparam": [150, 151, 152, 185], "005": [150, 151, 152], "95": [150, 151, 152], "hyper_search": [150, 151, 152], "regularization_hyperparam": [150, 151, 152], "rl_model": [150, 153, 184, 185], "fraction": [150, 151, 152, 153], "remain": [150, 151, 152, 153], "exist": [150, 151, 152, 153], "fall": [150, 151, 152], "builtin": [150, 151, 152], "hyperparamet": [150, 151, 152, 185], "regular": [150, 151, 152], "save_dir": [153, 154], "pkl": [153, 154, 185], "directori": [153, 154, 162, 185], "glag": [153, 154], "metadata_pth": 154, "supervisedspec": [154, 184, 185], "array_in": 158, "argmax": 158, "multipl": [158, 185], "tie": 158, "val_in": 159, "min_val": 159, "max_val": 159, "limit": 159, "output_str": 160, "json": [163, 165, 166, 185], "indent": 166, "abl": 167, "primary_objective_nam": [169, 185], "savenam": 169, "png": 169, "show": [169, 185], "evolut": [169, 185], "One": [169, 185], "subplot": [169, 185], "repeat": [169, 185], "chang": 169, "plot": [169, 185], "ii": 169, "lambda_i": [169, 185], "iii": 169, "g_i": [169, 185], "iv": 169, "lagranian": 169, "sum_i": 169, "n": [169, 185], "plt": 169, "relev": 169, "v": 172, "standard": [172, 176, 177, 178], "deviat": [172, 176, 177, 178], "bessel": 172, "correct": 172, "nu": 173, "invers": [173, 185], "student": 173, "cdf": 173, "degre": 173, "freedom": 173, "matlab": 173, "mathwork": 173, "com": 173, "stat": 173, "html": 173, "arr": 174, "num_point": [176, 177, 178], "loc_x": [176, 177, 178], "loc_i": [176, 177, 178], "sigma_x": [176, 177, 178], "sigma_i": [176, 177, 178], "clip_min": [176, 178], "clip_max": [176, 178], "2d": [176, 177, 178], "distribut": [176, 177, 178], "clip": [176, 178], "option": [178, 185], "msg": 181, "lineno": 181, "arg": 181, "seldonian": [183, 185], "pip": 183, "Then": 183, "system": 183, "wide": 183, "recommend": 183, "welcom": 184, "core": 184, "toolkit": [184, 185], "sourc": 184, "code": [184, 185], "host": 184, "github": 184, "overview": 184, "interfac": 184, "sa": 184, "do": 184, "start": [184, 185], "instal": 184, "tutori": [184, 185], "api": [184, 185], "fourier": 184, "discrete_random_ag": 184, "function_approxim": 184, "linear_fa": 184, "linear_state_action_value_fa": 184, "construct_q_table_from_env_descript": 184, "parameterized_non_learning_softmax_ag": 184, "discretesoftmax": [184, 185], "keyboard_gridworld": 184, "mountain_car_rough_solut": 184, "check_space_typ": 184, "continuous_spac": 184, "rl_generate_dataset_and_spec_fil": 184, "get_constraint_str": 184, "get_env_kwarg": 184, "get_metadata_path": 184, "print_return_info": 184, "rl_runner": 184, "create_ag": 184, "create_env": 184, "run_all_tri": 184, "run_episod": 184, "run_episode_from_dict": 184, "run_trial_given_agent_and_env": 184, "mountaincar": 184, "n_step_mountaincar": 184, "simglucose_env": 184, "simglucos": 184, "generate_gridworld_episod": 184, "generate_mountaincar_episod": 184, "generate_simglucose_episod": 184, "get_max_ob": 184, "hyperparams_and_set": 184, "define_hyperparameter_and_setting_dict": 184, "candidateselect": [184, 185], "datasetload": [184, 185], "binarylogisticregressionmodel": 184, "boundedlinearregressionmodel": 184, "dummyclassifiermodel": 184, "multiclasslogisticregressionmodel": 184, "randomclassifiermodel": 184, "false_negative_r": 184, "false_positive_r": 184, "is_estim": 184, "negative_r": 184, "positive_r": 184, "true_negative_r": 184, "true_positive_r": 184, "binary_logistic_loss": 184, "confusion_matrix": 184, "evaluate_statist": 184, "gradient_bounded_squared_error": 184, "gradient_mean_squared_error": 184, "gradient_binary_logistic_loss": 184, "multiclass_logistic_loss": 184, "sample_from_statist": 184, "vector_error": 184, "vector_false_negative_r": 184, "vector_false_positive_r": 184, "vector_is_estim": 184, "vector_negative_r": 184, "vector_positive_r": 184, "vector_squared_error": 184, "vector_true_negative_r": 184, "vector_true_positive_r": 184, "vector_confusion_matrix": 184, "gradient_descent_adam": 184, "setup_gradi": 184, "cvarsqebasenod": 184, "confusionmatrixbasenod": 184, "constantnod": 184, "internalnod": 184, "medcustombasenod": 184, "multiclassbasenod": 184, "make_parse_trees_from_constraint": 184, "safetytest": [184, 185], "seldonian_algorithm": [184, 185], "seldonianalgorithm": [184, 185], "createrlspec": [184, 185], "createsupervisedspec": [184, 185], "validate_parse_tre": 184, "util": [184, 185], "rl_util": 184, "argmax_multi": 184, "clamp": 184, "io_util": [184, 185], "dir_path": 184, "load_json": 184, "load_pickl": [184, 185], "load_supervised_metadata": 184, "save_json": 184, "save_pickl": 184, "plot_util": [184, 185], "plot_gradient_desc": [184, 185], "stats_util": 184, "stddev": 184, "tinv": 184, "weighted_sum_gamma": 184, "tutorial_util": 184, "generate_clipped_data": 184, "generate_data": 184, "make_synthetic_regression_dataset": 184, "warn": 184, "custom_warn": 184, "custom_formatwarn": 184, "document": 185, "homepag": 185, "In": 185, "page": 185, "few": 185, "hand": 185, "illustr": 185, "simul": 185, "realist": 185, "most": 185, "piec": 185, "cover": 185, "note": 185, "could": 185, "unifi": 185, "work": 185, "pattern": 185, "concept": 185, "conceptu": 185, "enforc": 185, "develop": 185, "design": 185, "applic": 185, "command": 185, "line": 185, "graphic": 185, "short": 185, "underli": 185, "discuss": 185, "below": 185, "well": 185, "manual": 185, "loader": 185, "comma": 185, "separ": 185, "header": 185, "categor": 185, "numer": 185, "might": 185, "look": 185, "622": 185, "491": 185, "56": 185, "439": 185, "93": 185, "707": 185, "64": 185, "663": 185, "65": 185, "557": 185, "09": 185, "711": 185, "37": 185, "731": 185, "31": 185, "509": 185, "33333": 185, "538": 185, "490": 185, "58": 185, "406": 185, "59": 185, "529": 185, "532": 185, "28": 185, "447": 185, "23": 185, "527": 185, "379": 185, "14": 185, "488": 185, "98333": 185, "455": 185, "18": 185, "440": 185, "570": 185, "86": 185, "417": 185, "54": 185, "453": 185, "53": 185, "425": 185, "87": 185, "475": 185, "63": 185, "476": 185, "11": 185, "407": 185, "15": 185, "97333": 185, "756": 185, "91": 185, "679": 185, "62": 185, "531": 185, "583": 185, "534": 185, "42": 185, "521": 185, "592": 185, "41": 185, "783": 185, "76": 185, "588": 185, "26": 185, "53333": 185, "hot": 185, "last": 185, "10": 185, "integ": 185, "25": 185, "second": 185, "should": 185, "partit": 185, "intention": 185, "exclud": 185, "kei": 185, "your": 185, "problem": 185, "try": 185, "sensitive_column": 185, "biggest": 185, "logisticregressionmodel": 185, "essenti": 185, "wrap": 185, "scikit": 185, "linearregress": 185, "unless": 185, "own": 185, "know": 185, "best": 185, "though": 185, "chosen": 185, "explicitli": 185, "thing": 185, "extend": 185, "py": 185, "_": 185, "directli": 185, "often": 185, "five": 185, "follow": 185, "math": 185, "nativ": 185, "ab": 185, "exp": 185, "239": 185, "trigger": 185, "open": 185, "ad": 185, "quantiti": 185, "It": 185, "someth": 185, "wai": 185, "wrote": 185, "instruct": 185, "recal": 185, "leq": 185, "satisfi": 185, "howev": 185, "cumbersom": 185, "symbol": 185, "interpret": 185, "ident": 185, "themselv": 185, "result": 185, "tri": 185, "basic": 185, "plain": 185, "english": 185, "88": 185, "greater": 185, "commonli": 185, "fair": 185, "filter": 185, "atr1": 185, "atr2": 185, "placehold": 185, "parenthes": 185, "surround": 185, "statement": 185, "sai": 185, "r1": 185, "r2": 185, "stand": 185, "race": 185, "demograph": 185, "pariti": 185, "toler": 185, "ratio": 185, "dispar": 185, "impact": 185, "anoth": 185, "permit": 185, "belong": 185, "bundl": 185, "shown": 185, "block": 185, "At": 185, "broad": 185, "scope": 185, "throught": 185, "now": 185, "happen": 185, "even": 185, "small": 185, "techniqu": 185, "black": 185, "cost": 185, "forc": 185, "toward": 185, "feasibl": 185, "cg": 185, "nelder": 185, "mead": 185, "bfg": 185, "cma": 185, "scipi": 185, "minim": 185, "solver": 185, "covari": 185, "adapt": 185, "strategi": 185, "kkt": 185, "situat": 185, "contraint": 185, "conflict": 185, "vanilla": 185, "oscil": 185, "boundari": 185, "dampen": 185, "momentum": 185, "our": 185, "mitig": 185, "far": 185, "accept": 185, "hat": 185, "mathcal": 185, "ran": 185, "convent": 185, "candidate_selection_log": 185, "increas": 185, "overwritten": 185, "log_fil": 185, "candidate_selection_log0": 185, "cs_dict": 185, "produc": 185, "1500": 185, "red": 185, "area": 185, "middl": 185, "region": 185, "dot": 185, "its": 185, "deem": 185, "assembl": 185, "interact": 185}, "objects": {"": [[0, 0, 0, "-", "seldonian"]], "seldonian": [[1, 0, 0, "-", "RL"], [76, 0, 0, "-", "candidate_selection"], [79, 0, 0, "-", "dataset"], [85, 0, 0, "-", "models"], [126, 0, 0, "-", "optimizers"], [130, 0, 0, "-", "parse_tree"], [144, 0, 0, "-", "safety_test"], [147, 0, 0, "-", "seldonian_algorithm"], [149, 0, 0, "-", "spec"], [156, 0, 0, "-", "utils"], [179, 0, 0, "-", "warnings"]], "seldonian.RL": [[2, 0, 0, "-", "Agents"], [33, 0, 0, "-", "Env_Description"], [40, 0, 0, "-", "RL_generate_dataset_and_spec_file"], [46, 0, 0, "-", "RL_model"], [48, 0, 0, "-", "RL_runner"], [56, 0, 0, "-", "environments"], [67, 0, 0, "-", "generate_gridworld_episodes"], [69, 0, 0, "-", "generate_mountaincar_episodes"], [71, 0, 0, "-", "generate_simglucose_episodes"], [74, 0, 0, "-", "hyperparams_and_settings"]], "seldonian.RL.Agents": [[3, 0, 0, "-", "Agent"], [5, 0, 0, "-", "Bases"], [8, 0, 0, "-", "Discrete_Random_Agent"], [10, 0, 0, "-", "Function_Approximators"], [20, 0, 0, "-", "Parameterized_non_learning_softmax_agent"], [22, 0, 0, "-", "Policies"], [29, 0, 0, "-", "keyboard_gridworld"], [31, 0, 0, "-", "mountain_car_rough_solution"]], "seldonian.RL.Agents.Agent": [[4, 1, 1, "", "Agent"]], "seldonian.RL.Agents.Agent.Agent": [[4, 2, 1, "", "__init__"], [4, 2, 1, "", "__repr__"], [4, 2, 1, "", "choose_action"], [4, 2, 1, "", "get_params"], [4, 2, 1, "", "get_prob_this_action"], [4, 2, 1, "", "set_new_params"], [4, 2, 1, "", "update"]], "seldonian.RL.Agents.Bases": [[6, 0, 0, "-", "Fourier"]], "seldonian.RL.Agents.Bases.Fourier": [[7, 1, 1, "", "Fourier"]], "seldonian.RL.Agents.Bases.Fourier.Fourier": [[7, 2, 1, "", "__init__"], [7, 2, 1, "", "__repr__"], [7, 2, 1, "", "calculate_num_features"], [7, 2, 1, "", "construct_basis_matrix"], [7, 2, 1, "", "get_features"], [7, 2, 1, "", "get_normalized_observation"]], "seldonian.RL.Agents.Discrete_Random_Agent": [[9, 1, 1, "", "Discrete_Random_Agent"]], "seldonian.RL.Agents.Discrete_Random_Agent.Discrete_Random_Agent": [[9, 2, 1, "", "__init__"], [9, 2, 1, "", "__repr__"], [9, 2, 1, "", "choose_action"], [9, 2, 1, "", "get_params"], [9, 2, 1, "", "get_prob_this_action"], [9, 2, 1, "", "set_new_params"], [9, 2, 1, "", "update"]], "seldonian.RL.Agents.Function_Approximators": [[11, 0, 0, "-", "Function_Approximator"], [13, 0, 0, "-", "Linear_FA"], [16, 0, 0, "-", "Table"]], "seldonian.RL.Agents.Function_Approximators.Function_Approximator": [[12, 1, 1, "", "Function_Approximator"]], "seldonian.RL.Agents.Function_Approximators.Function_Approximator.Function_Approximator": [[12, 2, 1, "", "__init__"], [12, 2, 1, "", "__repr__"], [12, 2, 1, "", "set_new_params"]], "seldonian.RL.Agents.Function_Approximators.Linear_FA": [[14, 1, 1, "", "Linear_FA"], [15, 1, 1, "", "Linear_state_action_value_FA"]], "seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_FA": [[14, 2, 1, "", "__init__"], [14, 2, 1, "", "__repr__"], [14, 2, 1, "", "set_new_params"]], "seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_state_action_value_FA": [[15, 2, 1, "", "__init__"], [15, 2, 1, "", "__repr__"], [15, 2, 1, "", "set_new_params"]], "seldonian.RL.Agents.Function_Approximators.Table": [[17, 1, 1, "", "Q_Table"], [18, 1, 1, "", "Table"], [19, 3, 1, "", "construct_Q_Table_From_Env_Description"]], "seldonian.RL.Agents.Function_Approximators.Table.Q_Table": [[17, 2, 1, "", "__init__"], [17, 2, 1, "", "__repr__"], [17, 2, 1, "", "from_environment_state_to_0_indexed_state"], [17, 2, 1, "", "get_action_values_given_state"], [17, 2, 1, "", "get_action_values_given_zero_indexed_state"], [17, 2, 1, "", "set_new_params"]], "seldonian.RL.Agents.Function_Approximators.Table.Table": [[18, 2, 1, "", "__init__"], [18, 2, 1, "", "__repr__"], [18, 2, 1, "", "from_environment_state_to_0_indexed_state"], [18, 2, 1, "", "set_new_params"]], "seldonian.RL.Agents.Parameterized_non_learning_softmax_agent": [[21, 1, 1, "", "Parameterized_non_learning_softmax_agent"]], "seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.Parameterized_non_learning_softmax_agent": [[21, 2, 1, "", "__init__"], [21, 2, 1, "", "__repr__"], [21, 2, 1, "", "choose_action"], [21, 2, 1, "", "get_action_values"], [21, 2, 1, "", "get_params"], [21, 2, 1, "", "get_prob_this_action"], [21, 2, 1, "", "set_new_params"], [21, 2, 1, "", "update"]], "seldonian.RL.Agents.Policies": [[23, 0, 0, "-", "Policy"], [26, 0, 0, "-", "Softmax"]], "seldonian.RL.Agents.Policies.Policy": [[24, 1, 1, "", "Discrete_Action_Policy"], [25, 1, 1, "", "Policy"]], "seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy": [[24, 2, 1, "", "__init__"], [24, 2, 1, "", "__repr__"], [24, 2, 1, "", "choose_action"], [24, 2, 1, "", "construct_basis_and_linear_FA"], [24, 2, 1, "", "from_0_indexed_action_to_environment_action"], [24, 2, 1, "", "from_environment_action_to_0_indexed_action"], [24, 2, 1, "", "get_action_values_given_state"], [24, 2, 1, "", "get_params"], [24, 2, 1, "", "get_prob_this_action"], [24, 2, 1, "", "make_state_action_FA"], [24, 2, 1, "", "set_new_params"]], "seldonian.RL.Agents.Policies.Policy.Policy": [[25, 2, 1, "", "__init__"], [25, 2, 1, "", "__repr__"], [25, 2, 1, "", "choose_action"], [25, 2, 1, "", "get_params"], [25, 2, 1, "", "get_prob_this_action"], [25, 2, 1, "", "set_new_params"]], "seldonian.RL.Agents.Policies.Softmax": [[27, 1, 1, "", "DiscreteSoftmax"], [28, 1, 1, "", "Softmax"]], "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax": [[27, 2, 1, "", "__init__"], [27, 2, 1, "", "__repr__"], [27, 2, 1, "", "_arg"], [27, 2, 1, "", "_denom"], [27, 2, 1, "", "choose_action"], [27, 2, 1, "", "choose_action_from_action_values"], [27, 2, 1, "", "construct_basis_and_linear_FA"], [27, 2, 1, "", "from_0_indexed_action_to_environment_action"], [27, 2, 1, "", "from_environment_action_to_0_indexed_action"], [27, 2, 1, "", "get_action_probs_from_action_values"], [27, 2, 1, "", "get_action_values_given_state"], [27, 2, 1, "", "get_e_to_the_something_terms"], [27, 2, 1, "", "get_params"], [27, 2, 1, "", "get_prob_this_action"], [27, 2, 1, "", "make_state_action_FA"], [27, 2, 1, "", "set_new_params"]], "seldonian.RL.Agents.Policies.Softmax.Softmax": [[28, 2, 1, "", "__init__"], [28, 2, 1, "", "__repr__"], [28, 2, 1, "", "choose_action"], [28, 2, 1, "", "choose_action_from_action_values"], [28, 2, 1, "", "construct_basis_and_linear_FA"], [28, 2, 1, "", "from_0_indexed_action_to_environment_action"], [28, 2, 1, "", "from_environment_action_to_0_indexed_action"], [28, 2, 1, "", "get_action_probs_from_action_values"], [28, 2, 1, "", "get_action_values_given_state"], [28, 2, 1, "", "get_e_to_the_something_terms"], [28, 2, 1, "", "get_params"], [28, 2, 1, "", "get_prob_this_action"], [28, 2, 1, "", "make_state_action_FA"], [28, 2, 1, "", "set_new_params"]], "seldonian.RL.Agents.keyboard_gridworld": [[30, 1, 1, "", "Keyboard_gridworld"]], "seldonian.RL.Agents.keyboard_gridworld.Keyboard_gridworld": [[30, 2, 1, "", "__init__"], [30, 2, 1, "", "__repr__"], [30, 2, 1, "", "choose_action"], [30, 2, 1, "", "get_params"], [30, 2, 1, "", "get_prob_this_action"], [30, 2, 1, "", "set_new_params"], [30, 2, 1, "", "update"]], "seldonian.RL.Agents.mountain_car_rough_solution": [[32, 1, 1, "", "Mountain_car_rough_solution"]], "seldonian.RL.Agents.mountain_car_rough_solution.Mountain_car_rough_solution": [[32, 2, 1, "", "__init__"], [32, 2, 1, "", "__repr__"], [32, 2, 1, "", "choose_action"], [32, 2, 1, "", "get_params"], [32, 2, 1, "", "get_prob_this_action"], [32, 2, 1, "", "set_new_params"], [32, 2, 1, "", "update"]], "seldonian.RL.Env_Description": [[34, 0, 0, "-", "Env_Description"], [37, 0, 0, "-", "Spaces"]], "seldonian.RL.Env_Description.Env_Description": [[35, 1, 1, "", "Env_Description"], [36, 3, 1, "", "check_space_type"]], "seldonian.RL.Env_Description.Env_Description.Env_Description": [[35, 2, 1, "", "__init__"], [35, 2, 1, "", "__repr__"], [35, 2, 1, "", "get_min_action"], [35, 2, 1, "", "get_min_state"], [35, 2, 1, "", "get_num_actions"], [35, 2, 1, "", "get_num_observation_dims"], [35, 2, 1, "", "get_num_states"]], "seldonian.RL.Env_Description.Spaces": [[38, 1, 1, "", "Continuous_Space"], [39, 1, 1, "", "Discrete_Space"]], "seldonian.RL.Env_Description.Spaces.Continuous_Space": [[38, 2, 1, "", "__init__"], [38, 2, 1, "", "__repr__"], [38, 2, 1, "", "check_bounds_valid"], [38, 2, 1, "", "get_num_dims"]], "seldonian.RL.Env_Description.Spaces.Discrete_Space": [[39, 2, 1, "", "__init__"], [39, 2, 1, "", "__repr__"], [39, 2, 1, "", "get_num_values"]], "seldonian.RL.RL_generate_dataset_and_spec_file": [[41, 3, 1, "", "get_constraint_string"], [42, 3, 1, "", "get_env_kwargs"], [43, 3, 1, "", "get_metadata_path"], [44, 3, 1, "", "main"], [45, 3, 1, "", "print_return_info"]], "seldonian.RL.RL_model": [[47, 1, 1, "", "RL_model"]], "seldonian.RL.RL_model.RL_model": [[47, 2, 1, "", "__init__"], [47, 2, 1, "", "__repr__"], [47, 2, 1, "", "get_prob_this_action"], [47, 2, 1, "", "get_probs_from_observations_and_actions"]], "seldonian.RL.RL_runner": [[49, 3, 1, "", "create_agent"], [50, 3, 1, "", "create_env"], [51, 3, 1, "", "run_all_trials"], [52, 3, 1, "", "run_episode"], [53, 3, 1, "", "run_episode_from_dict"], [54, 3, 1, "", "run_trial"], [55, 3, 1, "", "run_trial_given_agent_and_env"]], "seldonian.RL.environments": [[57, 0, 0, "-", "Environment"], [59, 0, 0, "-", "gridworld"], [61, 0, 0, "-", "mountaincar"], [63, 0, 0, "-", "n_step_mountaincar"], [65, 0, 0, "-", "simglucose_env"]], "seldonian.RL.environments.Environment": [[58, 1, 1, "", "Environment"]], "seldonian.RL.environments.Environment.Environment": [[58, 2, 1, "", "__init__"], [58, 2, 1, "", "__repr__"], [58, 2, 1, "", "get_env_description"], [58, 2, 1, "", "get_observation"], [58, 2, 1, "", "reset"], [58, 2, 1, "", "start_visualizing"], [58, 2, 1, "", "stop_visualizing"], [58, 2, 1, "", "terminated"], [58, 2, 1, "", "transition"], [58, 2, 1, "", "visualize"]], "seldonian.RL.environments.gridworld": [[60, 1, 1, "", "Gridworld"]], "seldonian.RL.environments.gridworld.Gridworld": [[60, 2, 1, "", "__init__"], [60, 2, 1, "", "__repr__"], [60, 2, 1, "", "create_env_description"], [60, 2, 1, "", "get_env_description"], [60, 2, 1, "", "get_observation"], [60, 2, 1, "", "is_in_goal_state"], [60, 2, 1, "", "reset"], [60, 2, 1, "", "start_visualizing"], [60, 2, 1, "", "stop_visualizing"], [60, 2, 1, "", "terminated"], [60, 2, 1, "", "transition"], [60, 2, 1, "", "update_position"], [60, 2, 1, "", "visualize"]], "seldonian.RL.environments.mountaincar": [[62, 1, 1, "", "Mountaincar"]], "seldonian.RL.environments.mountaincar.Mountaincar": [[62, 2, 1, "", "__init__"], [62, 2, 1, "", "__repr__"], [62, 2, 1, "", "get_env_description"], [62, 2, 1, "", "get_observation"], [62, 2, 1, "", "reset"], [62, 2, 1, "", "start_visualizing"], [62, 2, 1, "", "stop_visualizing"], [62, 2, 1, "", "terminated"], [62, 2, 1, "", "transition"], [62, 2, 1, "", "visualize"]], "seldonian.RL.environments.n_step_mountaincar": [[64, 1, 1, "", "N_step_mountaincar"]], "seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar": [[64, 2, 1, "", "__init__"], [64, 2, 1, "", "__repr__"], [64, 2, 1, "", "get_env_description"], [64, 2, 1, "", "get_observation"], [64, 2, 1, "", "reset"], [64, 2, 1, "", "start_visualizing"], [64, 2, 1, "", "stop_visualizing"], [64, 2, 1, "", "terminated"], [64, 2, 1, "", "transition"], [64, 2, 1, "", "visualize"]], "seldonian.RL.environments.simglucose_env": [[66, 1, 1, "", "Simglucose"]], "seldonian.RL.environments.simglucose_env.Simglucose": [[66, 2, 1, "", "__init__"], [66, 2, 1, "", "__repr__"], [66, 2, 1, "", "get_env_description"], [66, 2, 1, "", "get_observation"], [66, 2, 1, "", "reset"], [66, 2, 1, "", "start_visualizing"], [66, 2, 1, "", "stop_visualizing"], [66, 2, 1, "", "terminated"], [66, 2, 1, "", "transition"], [66, 2, 1, "", "visualize"]], "seldonian.RL.generate_gridworld_episodes": [[68, 3, 1, "", "main"]], "seldonian.RL.generate_mountaincar_episodes": [[70, 3, 1, "", "main"]], "seldonian.RL.generate_simglucose_episodes": [[72, 3, 1, "", "get_max_obs"], [73, 3, 1, "", "main"]], "seldonian.RL.hyperparams_and_settings": [[75, 3, 1, "", "define_hyperparameter_and_setting_dict"]], "seldonian.candidate_selection": [[77, 0, 0, "-", "candidate_selection"]], "seldonian.candidate_selection.candidate_selection": [[78, 1, 1, "", "CandidateSelection"]], "seldonian.candidate_selection.candidate_selection.CandidateSelection": [[78, 2, 1, "", "__init__"], [78, 2, 1, "", "__repr__"], [78, 2, 1, "", "evaluate_primary_objective"], [78, 2, 1, "", "get_constraint_upper_bounds"], [78, 2, 1, "", "objective_with_barrier"], [78, 2, 1, "", "run"]], "seldonian.dataset": [[80, 1, 1, "", "DataSet"], [81, 1, 1, "", "DataSetLoader"], [82, 1, 1, "", "Episode"], [83, 1, 1, "", "RLDataSet"], [84, 1, 1, "", "SupervisedDataSet"]], "seldonian.dataset.DataSet": [[80, 2, 1, "", "__init__"], [80, 2, 1, "", "__repr__"]], "seldonian.dataset.DataSetLoader": [[81, 2, 1, "", "__init__"], [81, 2, 1, "", "__repr__"], [81, 2, 1, "", "load_RL_dataset_from_csv"], [81, 2, 1, "", "load_RL_dataset_from_episode_file"], [81, 2, 1, "", "load_supervised_dataset"]], "seldonian.dataset.Episode": [[82, 2, 1, "", "__init__"], [82, 2, 1, "", "__repr__"]], "seldonian.dataset.RLDataSet": [[83, 2, 1, "", "__init__"], [83, 2, 1, "", "__repr__"]], "seldonian.dataset.SupervisedDataSet": [[84, 2, 1, "", "__init__"], [84, 2, 1, "", "__repr__"]], "seldonian.models": [[86, 0, 0, "-", "models"], [98, 0, 0, "-", "objectives"]], "seldonian.models.models": [[87, 1, 1, "", "BaseLogisticRegressionModel"], [88, 1, 1, "", "BinaryLogisticRegressionModel"], [89, 1, 1, "", "BoundedLinearRegressionModel"], [90, 1, 1, "", "ClassificationModel"], [91, 1, 1, "", "DummyClassifierModel"], [92, 1, 1, "", "LinearRegressionModel"], [93, 1, 1, "", "MultiClassLogisticRegressionModel"], [94, 1, 1, "", "RandomClassifierModel"], [95, 1, 1, "", "RegressionModel"], [96, 1, 1, "", "SeldonianModel"], [97, 1, 1, "", "SupervisedModel"]], "seldonian.models.models.BaseLogisticRegressionModel": [[87, 2, 1, "", "__init__"], [87, 2, 1, "", "__repr__"], [87, 2, 1, "", "fit"]], "seldonian.models.models.BinaryLogisticRegressionModel": [[88, 2, 1, "", "__init__"], [88, 2, 1, "", "__repr__"], [88, 2, 1, "", "fit"], [88, 2, 1, "", "predict"]], "seldonian.models.models.BoundedLinearRegressionModel": [[89, 2, 1, "", "__init__"], [89, 2, 1, "", "__repr__"], [89, 2, 1, "", "fit"], [89, 2, 1, "", "predict"]], "seldonian.models.models.ClassificationModel": [[90, 2, 1, "", "__init__"], [90, 2, 1, "", "__repr__"]], "seldonian.models.models.DummyClassifierModel": [[91, 2, 1, "", "__init__"], [91, 2, 1, "", "__repr__"], [91, 2, 1, "", "predict"]], "seldonian.models.models.LinearRegressionModel": [[92, 2, 1, "", "__init__"], [92, 2, 1, "", "__repr__"], [92, 2, 1, "", "fit"], [92, 2, 1, "", "predict"]], "seldonian.models.models.MultiClassLogisticRegressionModel": [[93, 2, 1, "", "__init__"], [93, 2, 1, "", "__repr__"], [93, 2, 1, "", "fit"], [93, 2, 1, "", "predict"]], "seldonian.models.models.RandomClassifierModel": [[94, 2, 1, "", "__init__"], [94, 2, 1, "", "__repr__"], [94, 2, 1, "", "predict"]], "seldonian.models.models.RegressionModel": [[95, 2, 1, "", "__init__"], [95, 2, 1, "", "__repr__"]], "seldonian.models.models.SeldonianModel": [[96, 2, 1, "", "__init__"], [96, 2, 1, "", "__repr__"]], "seldonian.models.models.SupervisedModel": [[97, 2, 1, "", "__init__"], [97, 2, 1, "", "__repr__"]], "seldonian.models.objectives": [[99, 3, 1, "", "False_Negative_Rate"], [100, 3, 1, "", "False_Positive_Rate"], [101, 3, 1, "", "IS_estimate"], [102, 3, 1, "", "Mean_Error"], [103, 3, 1, "", "Mean_Squared_Error"], [104, 3, 1, "", "Negative_Rate"], [105, 3, 1, "", "Positive_Rate"], [106, 3, 1, "", "True_Negative_Rate"], [107, 3, 1, "", "True_Positive_Rate"], [108, 3, 1, "", "binary_logistic_loss"], [109, 3, 1, "", "confusion_matrix"], [110, 3, 1, "", "evaluate_statistic"], [111, 3, 1, "", "gradient_Bounded_Squared_Error"], [112, 3, 1, "", "gradient_Mean_Squared_Error"], [113, 3, 1, "", "gradient_binary_logistic_loss"], [114, 3, 1, "", "multiclass_logistic_loss"], [115, 3, 1, "", "sample_from_statistic"], [116, 3, 1, "", "vector_Error"], [117, 3, 1, "", "vector_False_Negative_Rate"], [118, 3, 1, "", "vector_False_Positive_Rate"], [119, 3, 1, "", "vector_IS_estimate"], [120, 3, 1, "", "vector_Negative_Rate"], [121, 3, 1, "", "vector_Positive_Rate"], [122, 3, 1, "", "vector_Squared_Error"], [123, 3, 1, "", "vector_True_Negative_Rate"], [124, 3, 1, "", "vector_True_Positive_Rate"], [125, 3, 1, "", "vector_confusion_matrix"]], "seldonian.optimizers": [[127, 0, 0, "-", "gradient_descent"]], "seldonian.optimizers.gradient_descent": [[128, 3, 1, "", "gradient_descent_adam"], [129, 3, 1, "", "setup_gradients"]], "seldonian.parse_tree": [[131, 0, 0, "-", "nodes"], [140, 0, 0, "-", "operators"], [141, 0, 0, "-", "parse_tree"]], "seldonian.parse_tree.nodes": [[132, 1, 1, "", "BaseNode"], [133, 1, 1, "", "CVaRSQeBaseNode"], [134, 1, 1, "", "ConfusionMatrixBaseNode"], [135, 1, 1, "", "ConstantNode"], [136, 1, 1, "", "InternalNode"], [137, 1, 1, "", "MEDCustomBaseNode"], [138, 1, 1, "", "MultiClassBaseNode"], [139, 1, 1, "", "Node"]], "seldonian.parse_tree.nodes.BaseNode": [[132, 2, 1, "", "__init__"], [132, 2, 1, "", "__repr__"], [132, 2, 1, "", "calculate_bounds"], [132, 2, 1, "", "calculate_data_forbound"], [132, 2, 1, "", "calculate_value"], [132, 2, 1, "", "compute_HC_lowerbound"], [132, 2, 1, "", "compute_HC_upper_and_lowerbound"], [132, 2, 1, "", "compute_HC_upperbound"], [132, 2, 1, "", "mask_dataframe"], [132, 2, 1, "", "predict_HC_lowerbound"], [132, 2, 1, "", "predict_HC_upper_and_lowerbound"], [132, 2, 1, "", "predict_HC_upperbound"], [132, 2, 1, "", "zhat"]], "seldonian.parse_tree.nodes.CVaRSQeBaseNode": [[133, 2, 1, "", "__init__"], [133, 2, 1, "", "__repr__"], [133, 2, 1, "", "calculate_bounds"], [133, 2, 1, "", "calculate_data_forbound"], [133, 2, 1, "", "calculate_value"], [133, 2, 1, "", "compute_HC_lowerbound"], [133, 2, 1, "", "compute_HC_upper_and_lowerbound"], [133, 2, 1, "", "compute_HC_upperbound"], [133, 2, 1, "", "mask_dataframe"], [133, 2, 1, "", "predict_HC_lowerbound"], [133, 2, 1, "", "predict_HC_upper_and_lowerbound"], [133, 2, 1, "", "predict_HC_upperbound"], [133, 2, 1, "", "zhat"]], "seldonian.parse_tree.nodes.ConfusionMatrixBaseNode": [[134, 2, 1, "", "__init__"], [134, 2, 1, "", "__repr__"], [134, 2, 1, "", "calculate_bounds"], [134, 2, 1, "", "calculate_data_forbound"], [134, 2, 1, "", "calculate_value"], [134, 2, 1, "", "compute_HC_lowerbound"], [134, 2, 1, "", "compute_HC_upper_and_lowerbound"], [134, 2, 1, "", "compute_HC_upperbound"], [134, 2, 1, "", "mask_dataframe"], [134, 2, 1, "", "predict_HC_lowerbound"], [134, 2, 1, "", "predict_HC_upper_and_lowerbound"], [134, 2, 1, "", "predict_HC_upperbound"], [134, 2, 1, "", "zhat"]], "seldonian.parse_tree.nodes.ConstantNode": [[135, 2, 1, "", "__init__"], [135, 2, 1, "", "__repr__"]], "seldonian.parse_tree.nodes.InternalNode": [[136, 2, 1, "", "__init__"], [136, 2, 1, "", "__repr__"]], "seldonian.parse_tree.nodes.MEDCustomBaseNode": [[137, 2, 1, "", "__init__"], [137, 2, 1, "", "__repr__"], [137, 2, 1, "", "calculate_bounds"], [137, 2, 1, "", "calculate_data_forbound"], [137, 2, 1, "", "calculate_value"], [137, 2, 1, "", "compute_HC_lowerbound"], [137, 2, 1, "", "compute_HC_upper_and_lowerbound"], [137, 2, 1, "", "compute_HC_upperbound"], [137, 2, 1, "", "mask_dataframe"], [137, 2, 1, "", "precalculate_data"], [137, 2, 1, "", "predict_HC_lowerbound"], [137, 2, 1, "", "predict_HC_upper_and_lowerbound"], [137, 2, 1, "", "predict_HC_upperbound"], [137, 2, 1, "", "zhat"]], "seldonian.parse_tree.nodes.MultiClassBaseNode": [[138, 2, 1, "", "__init__"], [138, 2, 1, "", "__repr__"], [138, 2, 1, "", "calculate_bounds"], [138, 2, 1, "", "calculate_data_forbound"], [138, 2, 1, "", "calculate_value"], [138, 2, 1, "", "compute_HC_lowerbound"], [138, 2, 1, "", "compute_HC_upper_and_lowerbound"], [138, 2, 1, "", "compute_HC_upperbound"], [138, 2, 1, "", "mask_dataframe"], [138, 2, 1, "", "predict_HC_lowerbound"], [138, 2, 1, "", "predict_HC_upper_and_lowerbound"], [138, 2, 1, "", "predict_HC_upperbound"], [138, 2, 1, "", "zhat"]], "seldonian.parse_tree.nodes.Node": [[139, 2, 1, "", "__init__"], [139, 2, 1, "", "__repr__"]], "seldonian.parse_tree.operators": [[140, 4, 1, "", "bounds_required_dict"], [140, 4, 1, "", "custom_base_node_dict"], [140, 4, 1, "", "measure_functions_dict"], [140, 4, 1, "", "not_supported_op_mapper"], [140, 4, 1, "", "op_mapper"]], "seldonian.parse_tree.parse_tree": [[142, 1, 1, "", "ParseTree"], [143, 3, 1, "", "make_parse_trees_from_constraints"]], "seldonian.parse_tree.parse_tree.ParseTree": [[142, 2, 1, "", "__init__"], [142, 2, 1, "", "__repr__"], [142, 2, 1, "", "_abs"], [142, 2, 1, "", "_add"], [142, 2, 1, "", "_assign_bounds_helper"], [142, 2, 1, "", "_assign_deltas_helper"], [142, 2, 1, "", "_ast2pt_node"], [142, 2, 1, "", "_ast_tree_helper"], [142, 2, 1, "", "_div"], [142, 2, 1, "", "_evaluator_helper"], [142, 2, 1, "", "_exp"], [142, 2, 1, "", "_max"], [142, 2, 1, "", "_min"], [142, 2, 1, "", "_mult"], [142, 2, 1, "", "_pow"], [142, 2, 1, "", "_preprocess_constraint_str"], [142, 2, 1, "", "_propagate_value"], [142, 2, 1, "", "_propagator_helper"], [142, 2, 1, "", "_protect_nan"], [142, 2, 1, "", "_sub"], [142, 2, 1, "", "assign_bounds_needed"], [142, 2, 1, "", "assign_deltas"], [142, 2, 1, "", "build_tree"], [142, 2, 1, "", "create_from_ast"], [142, 2, 1, "", "evaluate_constraint"], [142, 2, 1, "", "make_viz"], [142, 2, 1, "", "make_viz_helper"], [142, 2, 1, "", "propagate"], [142, 2, 1, "", "propagate_bounds"], [142, 2, 1, "", "reset_base_node_dict"]], "seldonian.safety_test": [[145, 0, 0, "-", "safety_test"]], "seldonian.safety_test.safety_test": [[146, 1, 1, "", "SafetyTest"]], "seldonian.safety_test.safety_test.SafetyTest": [[146, 2, 1, "", "__init__"], [146, 2, 1, "", "__repr__"], [146, 2, 1, "", "evaluate_primary_objective"], [146, 2, 1, "", "run"]], "seldonian.seldonian_algorithm": [[148, 1, 1, "", "SeldonianAlgorithm"]], "seldonian.seldonian_algorithm.SeldonianAlgorithm": [[148, 2, 1, "", "__init__"], [148, 2, 1, "", "__repr__"], [148, 2, 1, "", "candidate_selection"], [148, 2, 1, "", "evaluate_primary_objective"], [148, 2, 1, "", "get_cs_result"], [148, 2, 1, "", "run"], [148, 2, 1, "", "run_safety_test"], [148, 2, 1, "", "safety_test"]], "seldonian.spec": [[150, 1, 1, "", "RLSpec"], [151, 1, 1, "", "Spec"], [152, 1, 1, "", "SupervisedSpec"], [153, 3, 1, "", "createRLSpec"], [154, 3, 1, "", "createSupervisedSpec"], [155, 3, 1, "", "validate_parse_trees"]], "seldonian.spec.RLSpec": [[150, 2, 1, "", "__init__"], [150, 2, 1, "", "__repr__"]], "seldonian.spec.Spec": [[151, 2, 1, "", "__init__"], [151, 2, 1, "", "__repr__"]], "seldonian.spec.SupervisedSpec": [[152, 2, 1, "", "__init__"], [152, 2, 1, "", "__repr__"]], "seldonian.utils": [[157, 0, 0, "-", "RL_utils"], [161, 0, 0, "-", "io_utils"], [168, 0, 0, "-", "plot_utils"], [170, 0, 0, "-", "stats_utils"], [175, 0, 0, "-", "tutorial_utils"]], "seldonian.utils.RL_utils": [[158, 3, 1, "", "argmax_multi"], [159, 3, 1, "", "clamp"], [160, 3, 1, "", "error"]], "seldonian.utils.io_utils": [[162, 3, 1, "", "dir_path"], [163, 3, 1, "", "load_json"], [164, 3, 1, "", "load_pickle"], [165, 3, 1, "", "load_supervised_metadata"], [166, 3, 1, "", "save_json"], [167, 3, 1, "", "save_pickle"]], "seldonian.utils.plot_utils": [[169, 3, 1, "", "plot_gradient_descent"]], "seldonian.utils.stats_utils": [[171, 3, 1, "", "softmax"], [172, 3, 1, "", "stddev"], [173, 3, 1, "", "tinv"], [174, 3, 1, "", "weighted_sum_gamma"]], "seldonian.utils.tutorial_utils": [[176, 3, 1, "", "generate_clipped_data"], [177, 3, 1, "", "generate_data"], [178, 3, 1, "", "make_synthetic_regression_dataset"]], "seldonian.warnings": [[180, 0, 0, "-", "custom_warnings"]], "seldonian.warnings.custom_warnings": [[181, 3, 1, "", "custom_formatwarning"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "data", "Python data"]}, "titleterms": {"seldonian": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 184], "rl": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "agent": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32], "base": [5, 6, 7], "fourier": [6, 7], "discrete_random_ag": [8, 9], "function_approxim": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "linear_fa": [13, 14, 15], "linear_state_action_value_fa": 15, "tabl": [16, 17, 18, 19, 184], "q_tabl": 17, "construct_q_table_from_env_descript": 19, "parameterized_non_learning_softmax_ag": [20, 21], "polici": [22, 23, 24, 25, 26, 27, 28], "discrete_action_polici": 24, "softmax": [26, 27, 28, 171], "discretesoftmax": 27, "keyboard_gridworld": [29, 30], "mountain_car_rough_solut": [31, 32], "env_descript": [33, 34, 35, 36, 37, 38, 39], "check_space_typ": 36, "space": [37, 38, 39], "continuous_spac": 38, "discrete_spac": 39, "rl_generate_dataset_and_spec_fil": [40, 41, 42, 43, 44, 45], "get_constraint_str": 41, "get_env_kwarg": 42, "get_metadata_path": 43, "main": [44, 68, 70, 73], "print_return_info": 45, "rl_model": [46, 47], "rl_runner": [48, 49, 50, 51, 52, 53, 54, 55], "create_ag": 49, "create_env": 50, "run_all_tri": 51, "run_episod": 52, "run_episode_from_dict": 53, "run_trial": 54, "run_trial_given_agent_and_env": 55, "environ": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66], "gridworld": [59, 60], "mountaincar": [61, 62], "n_step_mountaincar": [63, 64], "simglucose_env": [65, 66], "simglucos": 66, "generate_gridworld_episod": [67, 68], "generate_mountaincar_episod": [69, 70], "generate_simglucose_episod": [71, 72, 73], "get_max_ob": 72, "hyperparams_and_set": [74, 75], "define_hyperparameter_and_setting_dict": 75, "candidate_select": [76, 77, 78], "candidateselect": 78, "dataset": [79, 80, 81, 82, 83, 84, 185], "datasetload": 81, "episod": 82, "rldataset": 83, "superviseddataset": 84, "model": [85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 185], "baselogisticregressionmodel": 87, "binarylogisticregressionmodel": 88, "boundedlinearregressionmodel": 89, "classificationmodel": 90, "dummyclassifiermodel": 91, "linearregressionmodel": 92, "multiclasslogisticregressionmodel": 93, "randomclassifiermodel": 94, "regressionmodel": 95, "seldonianmodel": 96, "supervisedmodel": 97, "object": [98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 185], "false_negative_r": 99, "false_positive_r": 100, "is_estim": 101, "mean_error": 102, "mean_squared_error": 103, "negative_r": 104, "positive_r": 105, "true_negative_r": 106, "true_positive_r": 107, "binary_logistic_loss": 108, "confusion_matrix": 109, "evaluate_statist": 110, "gradient_bounded_squared_error": 111, "gradient_mean_squared_error": 112, "gradient_binary_logistic_loss": 113, "multiclass_logistic_loss": 114, "sample_from_statist": 115, "vector_error": 116, "vector_false_negative_r": 117, "vector_false_positive_r": 118, "vector_is_estim": 119, "vector_negative_r": 120, "vector_positive_r": 121, "vector_squared_error": 122, "vector_true_negative_r": 123, "vector_true_positive_r": 124, "vector_confusion_matrix": 125, "optim": [126, 127, 128, 129], "gradient_desc": [127, 128, 129], "gradient_descent_adam": 128, "setup_gradi": 129, "parse_tre": [130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143], "node": [131, 132, 133, 134, 135, 136, 137, 138, 139], "basenod": 132, "cvarsqebasenod": 133, "confusionmatrixbasenod": 134, "constantnod": 135, "internalnod": 136, "medcustombasenod": 137, "multiclassbasenod": 138, "oper": 140, "parsetre": 142, "make_parse_trees_from_constraint": 143, "safety_test": [144, 145, 146], "safetytest": 146, "seldonian_algorithm": [147, 148], "seldonianalgorithm": 148, "spec": [149, 150, 151, 152, 153, 154, 155, 185], "rlspec": 150, "supervisedspec": 152, "createrlspec": 153, "createsupervisedspec": 154, "validate_parse_tre": 155, "util": [156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178], "rl_util": [157, 158, 159, 160], "argmax_multi": 158, "clamp": 159, "error": 160, "io_util": [161, 162, 163, 164, 165, 166, 167], "dir_path": 162, "load_json": 163, "load_pickl": 164, "load_supervised_metadata": 165, "save_json": 166, "save_pickl": 167, "plot_util": [168, 169], "plot_gradient_desc": 169, "stats_util": [170, 171, 172, 173, 174], "stddev": 172, "tinv": 173, "weighted_sum_gamma": 174, "tutorial_util": [175, 176, 177, 178], "generate_clipped_data": 176, "generate_data": 177, "make_synthetic_regression_dataset": 178, "warn": [179, 180, 181], "custom_warn": [180, 181], "custom_formatwarn": 181, "api": 182, "get": 183, "start": 183, "instal": 183, "A": 183, "first": 183, "tutori": 183, "engin": 184, "document": 184, "content": 184, "overview": 185, "interfac": 185, "behavior": 185, "constraint": 185, "string": 185, "what": 185, "doe": 185, "sa": 185, "run": 185, "do": 185, "candid": 185, "select": 185, "safeti": 185, "test": 185}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"seldonian": [[0, "module-seldonian"]], "seldonian.RL": [[1, "module-seldonian.RL"]], "seldonian.RL.Agents": [[2, "module-seldonian.RL.Agents"]], "seldonian.RL.Agents.Agent": [[3, "module-seldonian.RL.Agents.Agent"]], "seldonian.RL.Agents.Agent.Agent": [[4, "seldonian-rl-agents-agent-agent"]], "seldonian.RL.Agents.Bases": [[5, "module-seldonian.RL.Agents.Bases"]], "seldonian.RL.Agents.Bases.Fourier": [[6, "module-seldonian.RL.Agents.Bases.Fourier"]], "seldonian.RL.Agents.Bases.Fourier.Fourier": [[7, "seldonian-rl-agents-bases-fourier-fourier"]], "seldonian.RL.Agents.Discrete_Random_Agent": [[8, "module-seldonian.RL.Agents.Discrete_Random_Agent"]], "seldonian.RL.Agents.Discrete_Random_Agent.Discrete_Random_Agent": [[9, "seldonian-rl-agents-discrete-random-agent-discrete-random-agent"]], "seldonian.RL.Agents.Function_Approximators": [[10, "module-seldonian.RL.Agents.Function_Approximators"]], "seldonian.RL.Agents.Function_Approximators.Function_Approximator": [[11, "module-seldonian.RL.Agents.Function_Approximators.Function_Approximator"]], "seldonian.RL.Agents.Function_Approximators.Function_Approximator.Function_Approximator": [[12, "seldonian-rl-agents-function-approximators-function-approximator-function-approximator"]], "seldonian.RL.Agents.Function_Approximators.Linear_FA": [[13, "module-seldonian.RL.Agents.Function_Approximators.Linear_FA"]], "seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_FA": [[14, "seldonian-rl-agents-function-approximators-linear-fa-linear-fa"]], "seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_state_action_value_FA": [[15, "seldonian-rl-agents-function-approximators-linear-fa-linear-state-action-value-fa"]], "seldonian.RL.Agents.Function_Approximators.Table": [[16, "module-seldonian.RL.Agents.Function_Approximators.Table"]], "seldonian.RL.Agents.Function_Approximators.Table.Q_Table": [[17, "seldonian-rl-agents-function-approximators-table-q-table"]], "seldonian.RL.Agents.Function_Approximators.Table.Table": [[18, "seldonian-rl-agents-function-approximators-table-table"]], "seldonian.RL.Agents.Function_Approximators.Table.construct_Q_Table_From_Env_Description": [[19, "seldonian-rl-agents-function-approximators-table-construct-q-table-from-env-description"]], "seldonian.RL.Agents.Parameterized_non_learning_softmax_agent": [[20, "module-seldonian.RL.Agents.Parameterized_non_learning_softmax_agent"]], "seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.Parameterized_non_learning_softmax_agent": [[21, "seldonian-rl-agents-parameterized-non-learning-softmax-agent-parameterized-non-learning-softmax-agent"]], "seldonian.RL.Agents.Policies": [[22, "module-seldonian.RL.Agents.Policies"]], "seldonian.RL.Agents.Policies.Policy": [[23, "module-seldonian.RL.Agents.Policies.Policy"]], "seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy": [[24, "seldonian-rl-agents-policies-policy-discrete-action-policy"]], "seldonian.RL.Agents.Policies.Policy.Policy": [[25, "seldonian-rl-agents-policies-policy-policy"]], "seldonian.RL.Agents.Policies.Softmax": [[26, "module-seldonian.RL.Agents.Policies.Softmax"]], "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax": [[27, "seldonian-rl-agents-policies-softmax-discretesoftmax"]], "seldonian.RL.Agents.Policies.Softmax.Softmax": [[28, "seldonian-rl-agents-policies-softmax-softmax"]], "seldonian.RL.Agents.keyboard_gridworld": [[29, "module-seldonian.RL.Agents.keyboard_gridworld"]], "seldonian.RL.Agents.keyboard_gridworld.Keyboard_gridworld": [[30, "seldonian-rl-agents-keyboard-gridworld-keyboard-gridworld"]], "seldonian.RL.Agents.mountain_car_rough_solution": [[31, "module-seldonian.RL.Agents.mountain_car_rough_solution"]], "seldonian.RL.Agents.mountain_car_rough_solution.Mountain_car_rough_solution": [[32, "seldonian-rl-agents-mountain-car-rough-solution-mountain-car-rough-solution"]], "seldonian.RL.Env_Description": [[33, "module-seldonian.RL.Env_Description"]], "seldonian.RL.Env_Description.Env_Description": [[34, "module-seldonian.RL.Env_Description.Env_Description"]], "seldonian.RL.Env_Description.Env_Description.Env_Description": [[35, "seldonian-rl-env-description-env-description-env-description"]], "seldonian.RL.Env_Description.Env_Description.check_space_type": [[36, "seldonian-rl-env-description-env-description-check-space-type"]], "seldonian.RL.Env_Description.Spaces": [[37, "module-seldonian.RL.Env_Description.Spaces"]], "seldonian.RL.Env_Description.Spaces.Continuous_Space": [[38, "seldonian-rl-env-description-spaces-continuous-space"]], "seldonian.RL.Env_Description.Spaces.Discrete_Space": [[39, "seldonian-rl-env-description-spaces-discrete-space"]], "seldonian.RL.RL_generate_dataset_and_spec_file": [[40, "module-seldonian.RL.RL_generate_dataset_and_spec_file"]], "seldonian.RL.RL_generate_dataset_and_spec_file.get_constraint_string": [[41, "seldonian-rl-rl-generate-dataset-and-spec-file-get-constraint-string"]], "seldonian.RL.RL_generate_dataset_and_spec_file.get_env_kwargs": [[42, "seldonian-rl-rl-generate-dataset-and-spec-file-get-env-kwargs"]], "seldonian.RL.RL_generate_dataset_and_spec_file.get_metadata_path": [[43, "seldonian-rl-rl-generate-dataset-and-spec-file-get-metadata-path"]], "seldonian.RL.RL_generate_dataset_and_spec_file.main": [[44, "seldonian-rl-rl-generate-dataset-and-spec-file-main"]], "seldonian.RL.RL_generate_dataset_and_spec_file.print_return_info": [[45, "seldonian-rl-rl-generate-dataset-and-spec-file-print-return-info"]], "seldonian.RL.RL_model": [[46, "module-seldonian.RL.RL_model"]], "seldonian.RL.RL_model.RL_model": [[47, "seldonian-rl-rl-model-rl-model"]], "seldonian.RL.RL_runner": [[48, "module-seldonian.RL.RL_runner"]], "seldonian.RL.RL_runner.create_agent": [[49, "seldonian-rl-rl-runner-create-agent"]], "seldonian.RL.RL_runner.create_env": [[50, "seldonian-rl-rl-runner-create-env"]], "seldonian.RL.RL_runner.run_all_trials": [[51, "seldonian-rl-rl-runner-run-all-trials"]], "seldonian.RL.RL_runner.run_episode": [[52, "seldonian-rl-rl-runner-run-episode"]], "seldonian.RL.RL_runner.run_episode_from_dict": [[53, "seldonian-rl-rl-runner-run-episode-from-dict"]], "seldonian.RL.RL_runner.run_trial": [[54, "seldonian-rl-rl-runner-run-trial"]], "seldonian.RL.RL_runner.run_trial_given_agent_and_env": [[55, "seldonian-rl-rl-runner-run-trial-given-agent-and-env"]], "seldonian.RL.environments": [[56, "module-seldonian.RL.environments"]], "seldonian.RL.environments.Environment": [[57, "module-seldonian.RL.environments.Environment"]], "seldonian.RL.environments.Environment.Environment": [[58, "seldonian-rl-environments-environment-environment"]], "seldonian.RL.environments.gridworld": [[59, "module-seldonian.RL.environments.gridworld"]], "seldonian.RL.environments.gridworld.Gridworld": [[60, "seldonian-rl-environments-gridworld-gridworld"]], "seldonian.RL.environments.mountaincar": [[61, "module-seldonian.RL.environments.mountaincar"]], "seldonian.RL.environments.mountaincar.Mountaincar": [[62, "seldonian-rl-environments-mountaincar-mountaincar"]], "seldonian.RL.environments.n_step_mountaincar": [[63, "module-seldonian.RL.environments.n_step_mountaincar"]], "seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar": [[64, "seldonian-rl-environments-n-step-mountaincar-n-step-mountaincar"]], "seldonian.RL.environments.simglucose_env": [[65, "module-seldonian.RL.environments.simglucose_env"]], "seldonian.RL.environments.simglucose_env.Simglucose": [[66, "seldonian-rl-environments-simglucose-env-simglucose"]], "seldonian.RL.generate_gridworld_episodes": [[67, "module-seldonian.RL.generate_gridworld_episodes"]], "seldonian.RL.generate_gridworld_episodes.main": [[68, "seldonian-rl-generate-gridworld-episodes-main"]], "seldonian.RL.generate_mountaincar_episodes": [[69, "module-seldonian.RL.generate_mountaincar_episodes"]], "seldonian.RL.generate_mountaincar_episodes.main": [[70, "seldonian-rl-generate-mountaincar-episodes-main"]], "seldonian.RL.generate_simglucose_episodes": [[71, "module-seldonian.RL.generate_simglucose_episodes"]], "seldonian.RL.generate_simglucose_episodes.get_max_obs": [[72, "seldonian-rl-generate-simglucose-episodes-get-max-obs"]], "seldonian.RL.generate_simglucose_episodes.main": [[73, "seldonian-rl-generate-simglucose-episodes-main"]], "seldonian.RL.hyperparams_and_settings": [[74, "module-seldonian.RL.hyperparams_and_settings"]], "seldonian.RL.hyperparams_and_settings.define_hyperparameter_and_setting_dict": [[75, "seldonian-rl-hyperparams-and-settings-define-hyperparameter-and-setting-dict"]], "seldonian.candidate_selection": [[76, "module-seldonian.candidate_selection"]], "seldonian.candidate_selection.candidate_selection": [[77, "module-seldonian.candidate_selection.candidate_selection"]], "seldonian.candidate_selection.candidate_selection.CandidateSelection": [[78, "seldonian-candidate-selection-candidate-selection-candidateselection"]], "seldonian.dataset": [[79, "module-seldonian.dataset"]], "seldonian.dataset.DataSet": [[80, "seldonian-dataset-dataset"]], "seldonian.dataset.DataSetLoader": [[81, "seldonian-dataset-datasetloader"]], "seldonian.dataset.Episode": [[82, "seldonian-dataset-episode"]], "seldonian.dataset.RLDataSet": [[83, "seldonian-dataset-rldataset"]], "seldonian.dataset.SupervisedDataSet": [[84, "seldonian-dataset-superviseddataset"]], "seldonian.models": [[85, "module-seldonian.models"]], "seldonian.models.models": [[86, "module-seldonian.models.models"]], "seldonian.models.models.BaseLogisticRegressionModel": [[87, "seldonian-models-models-baselogisticregressionmodel"]], "seldonian.models.models.BinaryLogisticRegressionModel": [[88, "seldonian-models-models-binarylogisticregressionmodel"]], "seldonian.models.models.BoundedLinearRegressionModel": [[89, "seldonian-models-models-boundedlinearregressionmodel"]], "seldonian.models.models.ClassificationModel": [[90, "seldonian-models-models-classificationmodel"]], "seldonian.models.models.DummyClassifierModel": [[91, "seldonian-models-models-dummyclassifiermodel"]], "seldonian.models.models.LinearRegressionModel": [[92, "seldonian-models-models-linearregressionmodel"]], "seldonian.models.models.MultiClassLogisticRegressionModel": [[93, "seldonian-models-models-multiclasslogisticregressionmodel"]], "seldonian.models.models.RandomClassifierModel": [[94, "seldonian-models-models-randomclassifiermodel"]], "seldonian.models.models.RegressionModel": [[95, "seldonian-models-models-regressionmodel"]], "seldonian.models.models.SeldonianModel": [[96, "seldonian-models-models-seldonianmodel"]], "seldonian.models.models.SupervisedModel": [[97, "seldonian-models-models-supervisedmodel"]], "seldonian.models.objectives": [[98, "module-seldonian.models.objectives"]], "seldonian.models.objectives.False_Negative_Rate": [[99, "seldonian-models-objectives-false-negative-rate"]], "seldonian.models.objectives.False_Positive_Rate": [[100, "seldonian-models-objectives-false-positive-rate"]], "seldonian.models.objectives.IS_estimate": [[101, "seldonian-models-objectives-is-estimate"]], "seldonian.models.objectives.Mean_Error": [[102, "seldonian-models-objectives-mean-error"]], "seldonian.models.objectives.Mean_Squared_Error": [[103, "seldonian-models-objectives-mean-squared-error"]], "seldonian.models.objectives.Negative_Rate": [[104, "seldonian-models-objectives-negative-rate"]], "seldonian.models.objectives.Positive_Rate": [[105, "seldonian-models-objectives-positive-rate"]], "seldonian.models.objectives.True_Negative_Rate": [[106, "seldonian-models-objectives-true-negative-rate"]], "seldonian.models.objectives.True_Positive_Rate": [[107, "seldonian-models-objectives-true-positive-rate"]], "seldonian.models.objectives.binary_logistic_loss": [[108, "seldonian-models-objectives-binary-logistic-loss"]], "seldonian.models.objectives.confusion_matrix": [[109, "seldonian-models-objectives-confusion-matrix"]], "seldonian.models.objectives.evaluate_statistic": [[110, "seldonian-models-objectives-evaluate-statistic"]], "seldonian.models.objectives.gradient_Bounded_Squared_Error": [[111, "seldonian-models-objectives-gradient-bounded-squared-error"]], "seldonian.models.objectives.gradient_Mean_Squared_Error": [[112, "seldonian-models-objectives-gradient-mean-squared-error"]], "seldonian.models.objectives.gradient_binary_logistic_loss": [[113, "seldonian-models-objectives-gradient-binary-logistic-loss"]], "seldonian.models.objectives.multiclass_logistic_loss": [[114, "seldonian-models-objectives-multiclass-logistic-loss"]], "seldonian.models.objectives.sample_from_statistic": [[115, "seldonian-models-objectives-sample-from-statistic"]], "seldonian.models.objectives.vector_Error": [[116, "seldonian-models-objectives-vector-error"]], "seldonian.models.objectives.vector_False_Negative_Rate": [[117, "seldonian-models-objectives-vector-false-negative-rate"]], "seldonian.models.objectives.vector_False_Positive_Rate": [[118, "seldonian-models-objectives-vector-false-positive-rate"]], "seldonian.models.objectives.vector_IS_estimate": [[119, "seldonian-models-objectives-vector-is-estimate"]], "seldonian.models.objectives.vector_Negative_Rate": [[120, "seldonian-models-objectives-vector-negative-rate"]], "seldonian.models.objectives.vector_Positive_Rate": [[121, "seldonian-models-objectives-vector-positive-rate"]], "seldonian.models.objectives.vector_Squared_Error": [[122, "seldonian-models-objectives-vector-squared-error"]], "seldonian.models.objectives.vector_True_Negative_Rate": [[123, "seldonian-models-objectives-vector-true-negative-rate"]], "seldonian.models.objectives.vector_True_Positive_Rate": [[124, "seldonian-models-objectives-vector-true-positive-rate"]], "seldonian.models.objectives.vector_confusion_matrix": [[125, "seldonian-models-objectives-vector-confusion-matrix"]], "seldonian.optimizers": [[126, "module-seldonian.optimizers"]], "seldonian.optimizers.gradient_descent": [[127, "module-seldonian.optimizers.gradient_descent"]], "seldonian.optimizers.gradient_descent.gradient_descent_adam": [[128, "seldonian-optimizers-gradient-descent-gradient-descent-adam"]], "seldonian.optimizers.gradient_descent.setup_gradients": [[129, "seldonian-optimizers-gradient-descent-setup-gradients"]], "seldonian.parse_tree": [[130, "module-seldonian.parse_tree"]], "seldonian.parse_tree.nodes": [[131, "module-seldonian.parse_tree.nodes"]], "seldonian.parse_tree.nodes.BaseNode": [[132, "seldonian-parse-tree-nodes-basenode"]], "seldonian.parse_tree.nodes.CVaRSQeBaseNode": [[133, "seldonian-parse-tree-nodes-cvarsqebasenode"]], "seldonian.parse_tree.nodes.ConfusionMatrixBaseNode": [[134, "seldonian-parse-tree-nodes-confusionmatrixbasenode"]], "seldonian.parse_tree.nodes.ConstantNode": [[135, "seldonian-parse-tree-nodes-constantnode"]], "seldonian.parse_tree.nodes.InternalNode": [[136, "seldonian-parse-tree-nodes-internalnode"]], "seldonian.parse_tree.nodes.MEDCustomBaseNode": [[137, "seldonian-parse-tree-nodes-medcustombasenode"]], "seldonian.parse_tree.nodes.MultiClassBaseNode": [[138, "seldonian-parse-tree-nodes-multiclassbasenode"]], "seldonian.parse_tree.nodes.Node": [[139, "seldonian-parse-tree-nodes-node"]], "seldonian.parse_tree.operators": [[140, "module-seldonian.parse_tree.operators"]], "seldonian.parse_tree.parse_tree": [[141, "module-seldonian.parse_tree.parse_tree"]], "seldonian.parse_tree.parse_tree.ParseTree": [[142, "seldonian-parse-tree-parse-tree-parsetree"]], "seldonian.parse_tree.parse_tree.make_parse_trees_from_constraints": [[143, "seldonian-parse-tree-parse-tree-make-parse-trees-from-constraints"]], "seldonian.safety_test": [[144, "module-seldonian.safety_test"]], "seldonian.safety_test.safety_test": [[145, "module-seldonian.safety_test.safety_test"]], "seldonian.safety_test.safety_test.SafetyTest": [[146, "seldonian-safety-test-safety-test-safetytest"]], "seldonian.seldonian_algorithm": [[147, "module-seldonian.seldonian_algorithm"]], "seldonian.seldonian_algorithm.SeldonianAlgorithm": [[148, "seldonian-seldonian-algorithm-seldonianalgorithm"]], "seldonian.spec": [[149, "module-seldonian.spec"]], "seldonian.spec.RLSpec": [[150, "seldonian-spec-rlspec"]], "seldonian.spec.Spec": [[151, "seldonian-spec-spec"]], "seldonian.spec.SupervisedSpec": [[152, "seldonian-spec-supervisedspec"]], "seldonian.spec.createRLSpec": [[153, "seldonian-spec-createrlspec"]], "seldonian.spec.createSupervisedSpec": [[154, "seldonian-spec-createsupervisedspec"]], "seldonian.spec.validate_parse_trees": [[155, "seldonian-spec-validate-parse-trees"]], "seldonian.utils": [[156, "module-seldonian.utils"]], "seldonian.utils.RL_utils": [[157, "module-seldonian.utils.RL_utils"]], "seldonian.utils.RL_utils.argmax_multi": [[158, "seldonian-utils-rl-utils-argmax-multi"]], "seldonian.utils.RL_utils.clamp": [[159, "seldonian-utils-rl-utils-clamp"]], "seldonian.utils.RL_utils.error": [[160, "seldonian-utils-rl-utils-error"]], "seldonian.utils.io_utils": [[161, "module-seldonian.utils.io_utils"]], "seldonian.utils.io_utils.dir_path": [[162, "seldonian-utils-io-utils-dir-path"]], "seldonian.utils.io_utils.load_json": [[163, "seldonian-utils-io-utils-load-json"]], "seldonian.utils.io_utils.load_pickle": [[164, "seldonian-utils-io-utils-load-pickle"]], "seldonian.utils.io_utils.load_supervised_metadata": [[165, "seldonian-utils-io-utils-load-supervised-metadata"]], "seldonian.utils.io_utils.save_json": [[166, "seldonian-utils-io-utils-save-json"]], "seldonian.utils.io_utils.save_pickle": [[167, "seldonian-utils-io-utils-save-pickle"]], "seldonian.utils.plot_utils": [[168, "module-seldonian.utils.plot_utils"]], "seldonian.utils.plot_utils.plot_gradient_descent": [[169, "seldonian-utils-plot-utils-plot-gradient-descent"]], "seldonian.utils.stats_utils": [[170, "module-seldonian.utils.stats_utils"]], "seldonian.utils.stats_utils.softmax": [[171, "seldonian-utils-stats-utils-softmax"]], "seldonian.utils.stats_utils.stddev": [[172, "seldonian-utils-stats-utils-stddev"]], "seldonian.utils.stats_utils.tinv": [[173, "seldonian-utils-stats-utils-tinv"]], "seldonian.utils.stats_utils.weighted_sum_gamma": [[174, "seldonian-utils-stats-utils-weighted-sum-gamma"]], "seldonian.utils.tutorial_utils": [[175, "module-seldonian.utils.tutorial_utils"]], "seldonian.utils.tutorial_utils.generate_clipped_data": [[176, "seldonian-utils-tutorial-utils-generate-clipped-data"]], "seldonian.utils.tutorial_utils.generate_data": [[177, "seldonian-utils-tutorial-utils-generate-data"]], "seldonian.utils.tutorial_utils.make_synthetic_regression_dataset": [[178, "seldonian-utils-tutorial-utils-make-synthetic-regression-dataset"]], "seldonian.warnings": [[179, "module-seldonian.warnings"]], "seldonian.warnings.custom_warnings": [[180, "module-seldonian.warnings.custom_warnings"]], "seldonian.warnings.custom_warnings.custom_formatwarning": [[181, "seldonian-warnings-custom-warnings-custom-formatwarning"]], "API": [[182, "api"]], "Getting Started": [[183, "getting-started"]], "Installation": [[183, "installation"]], "A first tutorial": [[183, "a-first-tutorial"]], "Seldonian Engine documentation": [[184, "seldonian-engine-documentation"]], "Table of contents": [[184, "table-of-contents"]], "Overview": [[185, "overview"]], "Interface": [[185, "interface"]], "Spec object": [[185, "spec-object"]], "Dataset object": [[185, "dataset-object"]], "Model object": [[185, "model-object"]], "Behavioral constraints": [[185, "behavioral-constraints"]], "Constraint strings": [[185, "constraint-strings"]], "What does SA.run() do?": [[185, "what-does-sa-run-do"]], "Candidate Selection": [[185, "candidate-selection"]], "Safety Test": [[185, "safety-test"]]}, "indexentries": {"module": [[0, "module-seldonian"], [1, "module-seldonian.RL"], [2, "module-seldonian.RL.Agents"], [3, "module-seldonian.RL.Agents.Agent"], [5, "module-seldonian.RL.Agents.Bases"], [6, "module-seldonian.RL.Agents.Bases.Fourier"], [8, "module-seldonian.RL.Agents.Discrete_Random_Agent"], [10, "module-seldonian.RL.Agents.Function_Approximators"], [11, "module-seldonian.RL.Agents.Function_Approximators.Function_Approximator"], [13, "module-seldonian.RL.Agents.Function_Approximators.Linear_FA"], [16, "module-seldonian.RL.Agents.Function_Approximators.Table"], [20, "module-seldonian.RL.Agents.Parameterized_non_learning_softmax_agent"], [22, "module-seldonian.RL.Agents.Policies"], [23, "module-seldonian.RL.Agents.Policies.Policy"], [26, "module-seldonian.RL.Agents.Policies.Softmax"], [29, "module-seldonian.RL.Agents.keyboard_gridworld"], [31, "module-seldonian.RL.Agents.mountain_car_rough_solution"], [33, "module-seldonian.RL.Env_Description"], [34, "module-seldonian.RL.Env_Description.Env_Description"], [37, "module-seldonian.RL.Env_Description.Spaces"], [40, "module-seldonian.RL.RL_generate_dataset_and_spec_file"], [46, "module-seldonian.RL.RL_model"], [48, "module-seldonian.RL.RL_runner"], [56, "module-seldonian.RL.environments"], [57, "module-seldonian.RL.environments.Environment"], [59, "module-seldonian.RL.environments.gridworld"], [61, "module-seldonian.RL.environments.mountaincar"], [63, "module-seldonian.RL.environments.n_step_mountaincar"], [65, "module-seldonian.RL.environments.simglucose_env"], [67, "module-seldonian.RL.generate_gridworld_episodes"], [69, "module-seldonian.RL.generate_mountaincar_episodes"], [71, "module-seldonian.RL.generate_simglucose_episodes"], [74, "module-seldonian.RL.hyperparams_and_settings"], [76, "module-seldonian.candidate_selection"], [77, "module-seldonian.candidate_selection.candidate_selection"], [79, "module-seldonian.dataset"], [85, "module-seldonian.models"], [86, "module-seldonian.models.models"], [98, "module-seldonian.models.objectives"], [126, "module-seldonian.optimizers"], [127, "module-seldonian.optimizers.gradient_descent"], [130, "module-seldonian.parse_tree"], [131, "module-seldonian.parse_tree.nodes"], [140, "module-seldonian.parse_tree.operators"], [141, "module-seldonian.parse_tree.parse_tree"], [144, "module-seldonian.safety_test"], [145, "module-seldonian.safety_test.safety_test"], [147, "module-seldonian.seldonian_algorithm"], [149, "module-seldonian.spec"], [156, "module-seldonian.utils"], [157, "module-seldonian.utils.RL_utils"], [161, "module-seldonian.utils.io_utils"], [168, "module-seldonian.utils.plot_utils"], [170, "module-seldonian.utils.stats_utils"], [175, "module-seldonian.utils.tutorial_utils"], [179, "module-seldonian.warnings"], [180, "module-seldonian.warnings.custom_warnings"]], "seldonian": [[0, "module-seldonian"]], "seldonian.rl": [[1, "module-seldonian.RL"]], "seldonian.rl.agents": [[2, "module-seldonian.RL.Agents"]], "seldonian.rl.agents.agent": [[3, "module-seldonian.RL.Agents.Agent"]], "agent (class in seldonian.rl.agents.agent)": [[4, "seldonian.RL.Agents.Agent.Agent"]], "__init__() (agent method)": [[4, "seldonian.RL.Agents.Agent.Agent.__init__"]], "__repr__() (agent method)": [[4, "seldonian.RL.Agents.Agent.Agent.__repr__"]], "choose_action() (agent method)": [[4, "seldonian.RL.Agents.Agent.Agent.choose_action"]], "get_params() (agent method)": [[4, "seldonian.RL.Agents.Agent.Agent.get_params"]], "get_prob_this_action() (agent method)": [[4, "seldonian.RL.Agents.Agent.Agent.get_prob_this_action"]], "set_new_params() (agent method)": [[4, "seldonian.RL.Agents.Agent.Agent.set_new_params"]], "update() (agent method)": [[4, "seldonian.RL.Agents.Agent.Agent.update"]], "seldonian.rl.agents.bases": [[5, "module-seldonian.RL.Agents.Bases"]], "seldonian.rl.agents.bases.fourier": [[6, "module-seldonian.RL.Agents.Bases.Fourier"]], "fourier (class in seldonian.rl.agents.bases.fourier)": [[7, "seldonian.RL.Agents.Bases.Fourier.Fourier"]], "__init__() (fourier method)": [[7, "seldonian.RL.Agents.Bases.Fourier.Fourier.__init__"]], "__repr__() (fourier method)": [[7, "seldonian.RL.Agents.Bases.Fourier.Fourier.__repr__"]], "calculate_num_features() (fourier method)": [[7, "seldonian.RL.Agents.Bases.Fourier.Fourier.calculate_num_features"]], "construct_basis_matrix() (fourier method)": [[7, "seldonian.RL.Agents.Bases.Fourier.Fourier.construct_basis_matrix"]], "get_features() (fourier method)": [[7, "seldonian.RL.Agents.Bases.Fourier.Fourier.get_features"]], "get_normalized_observation() (fourier method)": [[7, "seldonian.RL.Agents.Bases.Fourier.Fourier.get_normalized_observation"]], "seldonian.rl.agents.discrete_random_agent": [[8, "module-seldonian.RL.Agents.Discrete_Random_Agent"]], "discrete_random_agent (class in seldonian.rl.agents.discrete_random_agent)": [[9, "seldonian.RL.Agents.Discrete_Random_Agent.Discrete_Random_Agent"]], "__init__() (discrete_random_agent method)": [[9, "seldonian.RL.Agents.Discrete_Random_Agent.Discrete_Random_Agent.__init__"]], "__repr__() (discrete_random_agent method)": [[9, "seldonian.RL.Agents.Discrete_Random_Agent.Discrete_Random_Agent.__repr__"]], "choose_action() (discrete_random_agent method)": [[9, "seldonian.RL.Agents.Discrete_Random_Agent.Discrete_Random_Agent.choose_action"]], "get_params() (discrete_random_agent method)": [[9, "seldonian.RL.Agents.Discrete_Random_Agent.Discrete_Random_Agent.get_params"]], "get_prob_this_action() (discrete_random_agent method)": [[9, "seldonian.RL.Agents.Discrete_Random_Agent.Discrete_Random_Agent.get_prob_this_action"]], "set_new_params() (discrete_random_agent method)": [[9, "seldonian.RL.Agents.Discrete_Random_Agent.Discrete_Random_Agent.set_new_params"]], "update() (discrete_random_agent method)": [[9, "seldonian.RL.Agents.Discrete_Random_Agent.Discrete_Random_Agent.update"]], "seldonian.rl.agents.function_approximators": [[10, "module-seldonian.RL.Agents.Function_Approximators"]], "seldonian.rl.agents.function_approximators.function_approximator": [[11, "module-seldonian.RL.Agents.Function_Approximators.Function_Approximator"]], "function_approximator (class in seldonian.rl.agents.function_approximators.function_approximator)": [[12, "seldonian.RL.Agents.Function_Approximators.Function_Approximator.Function_Approximator"]], "__init__() (function_approximator method)": [[12, "seldonian.RL.Agents.Function_Approximators.Function_Approximator.Function_Approximator.__init__"]], "__repr__() (function_approximator method)": [[12, "seldonian.RL.Agents.Function_Approximators.Function_Approximator.Function_Approximator.__repr__"]], "set_new_params() (function_approximator method)": [[12, "seldonian.RL.Agents.Function_Approximators.Function_Approximator.Function_Approximator.set_new_params"]], "seldonian.rl.agents.function_approximators.linear_fa": [[13, "module-seldonian.RL.Agents.Function_Approximators.Linear_FA"]], "linear_fa (class in seldonian.rl.agents.function_approximators.linear_fa)": [[14, "seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_FA"]], "__init__() (linear_fa method)": [[14, "seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_FA.__init__"]], "__repr__() (linear_fa method)": [[14, "seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_FA.__repr__"]], "set_new_params() (linear_fa method)": [[14, "seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_FA.set_new_params"]], "linear_state_action_value_fa (class in seldonian.rl.agents.function_approximators.linear_fa)": [[15, "seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_state_action_value_FA"]], "__init__() (linear_state_action_value_fa method)": [[15, "seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_state_action_value_FA.__init__"]], "__repr__() (linear_state_action_value_fa method)": [[15, "seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_state_action_value_FA.__repr__"]], "set_new_params() (linear_state_action_value_fa method)": [[15, "seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_state_action_value_FA.set_new_params"]], "seldonian.rl.agents.function_approximators.table": [[16, "module-seldonian.RL.Agents.Function_Approximators.Table"]], "q_table (class in seldonian.rl.agents.function_approximators.table)": [[17, "seldonian.RL.Agents.Function_Approximators.Table.Q_Table"]], "__init__() (q_table method)": [[17, "seldonian.RL.Agents.Function_Approximators.Table.Q_Table.__init__"]], "__repr__() (q_table method)": [[17, "seldonian.RL.Agents.Function_Approximators.Table.Q_Table.__repr__"]], "from_environment_state_to_0_indexed_state() (q_table method)": [[17, "seldonian.RL.Agents.Function_Approximators.Table.Q_Table.from_environment_state_to_0_indexed_state"]], "get_action_values_given_state() (q_table method)": [[17, "seldonian.RL.Agents.Function_Approximators.Table.Q_Table.get_action_values_given_state"]], "get_action_values_given_zero_indexed_state() (q_table method)": [[17, "seldonian.RL.Agents.Function_Approximators.Table.Q_Table.get_action_values_given_zero_indexed_state"]], "set_new_params() (q_table method)": [[17, "seldonian.RL.Agents.Function_Approximators.Table.Q_Table.set_new_params"]], "table (class in seldonian.rl.agents.function_approximators.table)": [[18, "seldonian.RL.Agents.Function_Approximators.Table.Table"]], "__init__() (table method)": [[18, "seldonian.RL.Agents.Function_Approximators.Table.Table.__init__"]], "__repr__() (table method)": [[18, "seldonian.RL.Agents.Function_Approximators.Table.Table.__repr__"]], "from_environment_state_to_0_indexed_state() (table method)": [[18, "seldonian.RL.Agents.Function_Approximators.Table.Table.from_environment_state_to_0_indexed_state"]], "set_new_params() (table method)": [[18, "seldonian.RL.Agents.Function_Approximators.Table.Table.set_new_params"]], "construct_q_table_from_env_description() (in module seldonian.rl.agents.function_approximators.table)": [[19, "seldonian.RL.Agents.Function_Approximators.Table.construct_Q_Table_From_Env_Description"]], "seldonian.rl.agents.parameterized_non_learning_softmax_agent": [[20, "module-seldonian.RL.Agents.Parameterized_non_learning_softmax_agent"]], "parameterized_non_learning_softmax_agent (class in seldonian.rl.agents.parameterized_non_learning_softmax_agent)": [[21, "seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.Parameterized_non_learning_softmax_agent"]], "__init__() (parameterized_non_learning_softmax_agent method)": [[21, "seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.Parameterized_non_learning_softmax_agent.__init__"]], "__repr__() (parameterized_non_learning_softmax_agent method)": [[21, "seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.Parameterized_non_learning_softmax_agent.__repr__"]], "choose_action() (parameterized_non_learning_softmax_agent method)": [[21, "seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.Parameterized_non_learning_softmax_agent.choose_action"]], "get_action_values() (parameterized_non_learning_softmax_agent method)": [[21, "seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.Parameterized_non_learning_softmax_agent.get_action_values"]], "get_params() (parameterized_non_learning_softmax_agent method)": [[21, "seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.Parameterized_non_learning_softmax_agent.get_params"]], "get_prob_this_action() (parameterized_non_learning_softmax_agent method)": [[21, "seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.Parameterized_non_learning_softmax_agent.get_prob_this_action"]], "set_new_params() (parameterized_non_learning_softmax_agent method)": [[21, "seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.Parameterized_non_learning_softmax_agent.set_new_params"]], "update() (parameterized_non_learning_softmax_agent method)": [[21, "seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.Parameterized_non_learning_softmax_agent.update"]], "seldonian.rl.agents.policies": [[22, "module-seldonian.RL.Agents.Policies"]], "seldonian.rl.agents.policies.policy": [[23, "module-seldonian.RL.Agents.Policies.Policy"]], "discrete_action_policy (class in seldonian.rl.agents.policies.policy)": [[24, "seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy"]], "__init__() (discrete_action_policy method)": [[24, "seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy.__init__"]], "__repr__() (discrete_action_policy method)": [[24, "seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy.__repr__"]], "choose_action() (discrete_action_policy method)": [[24, "seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy.choose_action"]], "construct_basis_and_linear_fa() (discrete_action_policy method)": [[24, "seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy.construct_basis_and_linear_FA"]], "from_0_indexed_action_to_environment_action() (discrete_action_policy method)": [[24, "seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy.from_0_indexed_action_to_environment_action"]], "from_environment_action_to_0_indexed_action() (discrete_action_policy method)": [[24, "seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy.from_environment_action_to_0_indexed_action"]], "get_action_values_given_state() (discrete_action_policy method)": [[24, "seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy.get_action_values_given_state"]], "get_params() (discrete_action_policy method)": [[24, "seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy.get_params"]], "get_prob_this_action() (discrete_action_policy method)": [[24, "seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy.get_prob_this_action"]], "make_state_action_fa() (discrete_action_policy method)": [[24, "seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy.make_state_action_FA"]], "set_new_params() (discrete_action_policy method)": [[24, "seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy.set_new_params"]], "policy (class in seldonian.rl.agents.policies.policy)": [[25, "seldonian.RL.Agents.Policies.Policy.Policy"]], "__init__() (policy method)": [[25, "seldonian.RL.Agents.Policies.Policy.Policy.__init__"]], "__repr__() (policy method)": [[25, "seldonian.RL.Agents.Policies.Policy.Policy.__repr__"]], "choose_action() (policy method)": [[25, "seldonian.RL.Agents.Policies.Policy.Policy.choose_action"]], "get_params() (policy method)": [[25, "seldonian.RL.Agents.Policies.Policy.Policy.get_params"]], "get_prob_this_action() (policy method)": [[25, "seldonian.RL.Agents.Policies.Policy.Policy.get_prob_this_action"]], "set_new_params() (policy method)": [[25, "seldonian.RL.Agents.Policies.Policy.Policy.set_new_params"]], "seldonian.rl.agents.policies.softmax": [[26, "module-seldonian.RL.Agents.Policies.Softmax"]], "discretesoftmax (class in seldonian.rl.agents.policies.softmax)": [[27, "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax"]], "__init__() (discretesoftmax method)": [[27, "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax.__init__"]], "__repr__() (discretesoftmax method)": [[27, "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax.__repr__"]], "_arg() (discretesoftmax method)": [[27, "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax._arg"]], "_denom() (discretesoftmax method)": [[27, "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax._denom"]], "choose_action() (discretesoftmax method)": [[27, "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax.choose_action"]], "choose_action_from_action_values() (discretesoftmax method)": [[27, "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax.choose_action_from_action_values"]], "construct_basis_and_linear_fa() (discretesoftmax method)": [[27, "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax.construct_basis_and_linear_FA"]], "from_0_indexed_action_to_environment_action() (discretesoftmax method)": [[27, "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax.from_0_indexed_action_to_environment_action"]], "from_environment_action_to_0_indexed_action() (discretesoftmax method)": [[27, "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax.from_environment_action_to_0_indexed_action"]], "get_action_probs_from_action_values() (discretesoftmax method)": [[27, "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax.get_action_probs_from_action_values"]], "get_action_values_given_state() (discretesoftmax method)": [[27, "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax.get_action_values_given_state"]], "get_e_to_the_something_terms() (discretesoftmax method)": [[27, "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax.get_e_to_the_something_terms"]], "get_params() (discretesoftmax method)": [[27, "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax.get_params"]], "get_prob_this_action() (discretesoftmax method)": [[27, "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax.get_prob_this_action"]], "make_state_action_fa() (discretesoftmax method)": [[27, "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax.make_state_action_FA"]], "set_new_params() (discretesoftmax method)": [[27, "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax.set_new_params"]], "softmax (class in seldonian.rl.agents.policies.softmax)": [[28, "seldonian.RL.Agents.Policies.Softmax.Softmax"]], "__init__() (softmax method)": [[28, "seldonian.RL.Agents.Policies.Softmax.Softmax.__init__"]], "__repr__() (softmax method)": [[28, "seldonian.RL.Agents.Policies.Softmax.Softmax.__repr__"]], "choose_action() (softmax method)": [[28, "seldonian.RL.Agents.Policies.Softmax.Softmax.choose_action"]], "choose_action_from_action_values() (softmax method)": [[28, "seldonian.RL.Agents.Policies.Softmax.Softmax.choose_action_from_action_values"]], "construct_basis_and_linear_fa() (softmax method)": [[28, "seldonian.RL.Agents.Policies.Softmax.Softmax.construct_basis_and_linear_FA"]], "from_0_indexed_action_to_environment_action() (softmax method)": [[28, "seldonian.RL.Agents.Policies.Softmax.Softmax.from_0_indexed_action_to_environment_action"]], "from_environment_action_to_0_indexed_action() (softmax method)": [[28, "seldonian.RL.Agents.Policies.Softmax.Softmax.from_environment_action_to_0_indexed_action"]], "get_action_probs_from_action_values() (softmax method)": [[28, "seldonian.RL.Agents.Policies.Softmax.Softmax.get_action_probs_from_action_values"]], "get_action_values_given_state() (softmax method)": [[28, "seldonian.RL.Agents.Policies.Softmax.Softmax.get_action_values_given_state"]], "get_e_to_the_something_terms() (softmax method)": [[28, "seldonian.RL.Agents.Policies.Softmax.Softmax.get_e_to_the_something_terms"]], "get_params() (softmax method)": [[28, "seldonian.RL.Agents.Policies.Softmax.Softmax.get_params"]], "get_prob_this_action() (softmax method)": [[28, "seldonian.RL.Agents.Policies.Softmax.Softmax.get_prob_this_action"]], "make_state_action_fa() (softmax method)": [[28, "seldonian.RL.Agents.Policies.Softmax.Softmax.make_state_action_FA"]], "set_new_params() (softmax method)": [[28, "seldonian.RL.Agents.Policies.Softmax.Softmax.set_new_params"]], "seldonian.rl.agents.keyboard_gridworld": [[29, "module-seldonian.RL.Agents.keyboard_gridworld"]], "keyboard_gridworld (class in seldonian.rl.agents.keyboard_gridworld)": [[30, "seldonian.RL.Agents.keyboard_gridworld.Keyboard_gridworld"]], "__init__() (keyboard_gridworld method)": [[30, "seldonian.RL.Agents.keyboard_gridworld.Keyboard_gridworld.__init__"]], "__repr__() (keyboard_gridworld method)": [[30, "seldonian.RL.Agents.keyboard_gridworld.Keyboard_gridworld.__repr__"]], "choose_action() (keyboard_gridworld method)": [[30, "seldonian.RL.Agents.keyboard_gridworld.Keyboard_gridworld.choose_action"]], "get_params() (keyboard_gridworld method)": [[30, "seldonian.RL.Agents.keyboard_gridworld.Keyboard_gridworld.get_params"]], "get_prob_this_action() (keyboard_gridworld method)": [[30, "seldonian.RL.Agents.keyboard_gridworld.Keyboard_gridworld.get_prob_this_action"]], "set_new_params() (keyboard_gridworld method)": [[30, "seldonian.RL.Agents.keyboard_gridworld.Keyboard_gridworld.set_new_params"]], "update() (keyboard_gridworld method)": [[30, "seldonian.RL.Agents.keyboard_gridworld.Keyboard_gridworld.update"]], "seldonian.rl.agents.mountain_car_rough_solution": [[31, "module-seldonian.RL.Agents.mountain_car_rough_solution"]], "mountain_car_rough_solution (class in seldonian.rl.agents.mountain_car_rough_solution)": [[32, "seldonian.RL.Agents.mountain_car_rough_solution.Mountain_car_rough_solution"]], "__init__() (mountain_car_rough_solution method)": [[32, "seldonian.RL.Agents.mountain_car_rough_solution.Mountain_car_rough_solution.__init__"]], "__repr__() (mountain_car_rough_solution method)": [[32, "seldonian.RL.Agents.mountain_car_rough_solution.Mountain_car_rough_solution.__repr__"]], "choose_action() (mountain_car_rough_solution method)": [[32, "seldonian.RL.Agents.mountain_car_rough_solution.Mountain_car_rough_solution.choose_action"]], "get_params() (mountain_car_rough_solution method)": [[32, "seldonian.RL.Agents.mountain_car_rough_solution.Mountain_car_rough_solution.get_params"]], "get_prob_this_action() (mountain_car_rough_solution method)": [[32, "seldonian.RL.Agents.mountain_car_rough_solution.Mountain_car_rough_solution.get_prob_this_action"]], "set_new_params() (mountain_car_rough_solution method)": [[32, "seldonian.RL.Agents.mountain_car_rough_solution.Mountain_car_rough_solution.set_new_params"]], "update() (mountain_car_rough_solution method)": [[32, "seldonian.RL.Agents.mountain_car_rough_solution.Mountain_car_rough_solution.update"]], "seldonian.rl.env_description": [[33, "module-seldonian.RL.Env_Description"]], "seldonian.rl.env_description.env_description": [[34, "module-seldonian.RL.Env_Description.Env_Description"]], "env_description (class in seldonian.rl.env_description.env_description)": [[35, "seldonian.RL.Env_Description.Env_Description.Env_Description"]], "__init__() (env_description method)": [[35, "seldonian.RL.Env_Description.Env_Description.Env_Description.__init__"]], "__repr__() (env_description method)": [[35, "seldonian.RL.Env_Description.Env_Description.Env_Description.__repr__"]], "get_min_action() (env_description method)": [[35, "seldonian.RL.Env_Description.Env_Description.Env_Description.get_min_action"]], "get_min_state() (env_description method)": [[35, "seldonian.RL.Env_Description.Env_Description.Env_Description.get_min_state"]], "get_num_actions() (env_description method)": [[35, "seldonian.RL.Env_Description.Env_Description.Env_Description.get_num_actions"]], "get_num_observation_dims() (env_description method)": [[35, "seldonian.RL.Env_Description.Env_Description.Env_Description.get_num_observation_dims"]], "get_num_states() (env_description method)": [[35, "seldonian.RL.Env_Description.Env_Description.Env_Description.get_num_states"]], "check_space_type() (in module seldonian.rl.env_description.env_description)": [[36, "seldonian.RL.Env_Description.Env_Description.check_space_type"]], "seldonian.rl.env_description.spaces": [[37, "module-seldonian.RL.Env_Description.Spaces"]], "continuous_space (class in seldonian.rl.env_description.spaces)": [[38, "seldonian.RL.Env_Description.Spaces.Continuous_Space"]], "__init__() (continuous_space method)": [[38, "seldonian.RL.Env_Description.Spaces.Continuous_Space.__init__"]], "__repr__() (continuous_space method)": [[38, "seldonian.RL.Env_Description.Spaces.Continuous_Space.__repr__"]], "check_bounds_valid() (continuous_space method)": [[38, "seldonian.RL.Env_Description.Spaces.Continuous_Space.check_bounds_valid"]], "get_num_dims() (continuous_space method)": [[38, "seldonian.RL.Env_Description.Spaces.Continuous_Space.get_num_dims"]], "discrete_space (class in seldonian.rl.env_description.spaces)": [[39, "seldonian.RL.Env_Description.Spaces.Discrete_Space"]], "__init__() (discrete_space method)": [[39, "seldonian.RL.Env_Description.Spaces.Discrete_Space.__init__"]], "__repr__() (discrete_space method)": [[39, "seldonian.RL.Env_Description.Spaces.Discrete_Space.__repr__"]], "get_num_values() (discrete_space method)": [[39, "seldonian.RL.Env_Description.Spaces.Discrete_Space.get_num_values"]], "seldonian.rl.rl_generate_dataset_and_spec_file": [[40, "module-seldonian.RL.RL_generate_dataset_and_spec_file"]], "get_constraint_string() (in module seldonian.rl.rl_generate_dataset_and_spec_file)": [[41, "seldonian.RL.RL_generate_dataset_and_spec_file.get_constraint_string"]], "get_env_kwargs() (in module seldonian.rl.rl_generate_dataset_and_spec_file)": [[42, "seldonian.RL.RL_generate_dataset_and_spec_file.get_env_kwargs"]], "get_metadata_path() (in module seldonian.rl.rl_generate_dataset_and_spec_file)": [[43, "seldonian.RL.RL_generate_dataset_and_spec_file.get_metadata_path"]], "main() (in module seldonian.rl.rl_generate_dataset_and_spec_file)": [[44, "seldonian.RL.RL_generate_dataset_and_spec_file.main"]], "print_return_info() (in module seldonian.rl.rl_generate_dataset_and_spec_file)": [[45, "seldonian.RL.RL_generate_dataset_and_spec_file.print_return_info"]], "seldonian.rl.rl_model": [[46, "module-seldonian.RL.RL_model"]], "rl_model (class in seldonian.rl.rl_model)": [[47, "seldonian.RL.RL_model.RL_model"]], "__init__() (rl_model method)": [[47, "seldonian.RL.RL_model.RL_model.__init__"]], "__repr__() (rl_model method)": [[47, "seldonian.RL.RL_model.RL_model.__repr__"]], "get_prob_this_action() (rl_model method)": [[47, "seldonian.RL.RL_model.RL_model.get_prob_this_action"]], "get_probs_from_observations_and_actions() (rl_model method)": [[47, "seldonian.RL.RL_model.RL_model.get_probs_from_observations_and_actions"]], "seldonian.rl.rl_runner": [[48, "module-seldonian.RL.RL_runner"]], "create_agent() (in module seldonian.rl.rl_runner)": [[49, "seldonian.RL.RL_runner.create_agent"]], "create_env() (in module seldonian.rl.rl_runner)": [[50, "seldonian.RL.RL_runner.create_env"]], "run_all_trials() (in module seldonian.rl.rl_runner)": [[51, "seldonian.RL.RL_runner.run_all_trials"]], "run_episode() (in module seldonian.rl.rl_runner)": [[52, "seldonian.RL.RL_runner.run_episode"]], "run_episode_from_dict() (in module seldonian.rl.rl_runner)": [[53, "seldonian.RL.RL_runner.run_episode_from_dict"]], "run_trial() (in module seldonian.rl.rl_runner)": [[54, "seldonian.RL.RL_runner.run_trial"]], "run_trial_given_agent_and_env() (in module seldonian.rl.rl_runner)": [[55, "seldonian.RL.RL_runner.run_trial_given_agent_and_env"]], "seldonian.rl.environments": [[56, "module-seldonian.RL.environments"]], "seldonian.rl.environments.environment": [[57, "module-seldonian.RL.environments.Environment"]], "environment (class in seldonian.rl.environments.environment)": [[58, "seldonian.RL.environments.Environment.Environment"]], "__init__() (environment method)": [[58, "seldonian.RL.environments.Environment.Environment.__init__"]], "__repr__() (environment method)": [[58, "seldonian.RL.environments.Environment.Environment.__repr__"]], "get_env_description() (environment method)": [[58, "seldonian.RL.environments.Environment.Environment.get_env_description"]], "get_observation() (environment method)": [[58, "seldonian.RL.environments.Environment.Environment.get_observation"]], "reset() (environment method)": [[58, "seldonian.RL.environments.Environment.Environment.reset"]], "start_visualizing() (environment method)": [[58, "seldonian.RL.environments.Environment.Environment.start_visualizing"]], "stop_visualizing() (environment method)": [[58, "seldonian.RL.environments.Environment.Environment.stop_visualizing"]], "terminated() (environment method)": [[58, "seldonian.RL.environments.Environment.Environment.terminated"]], "transition() (environment method)": [[58, "seldonian.RL.environments.Environment.Environment.transition"]], "visualize() (environment method)": [[58, "seldonian.RL.environments.Environment.Environment.visualize"]], "seldonian.rl.environments.gridworld": [[59, "module-seldonian.RL.environments.gridworld"]], "gridworld (class in seldonian.rl.environments.gridworld)": [[60, "seldonian.RL.environments.gridworld.Gridworld"]], "__init__() (gridworld method)": [[60, "seldonian.RL.environments.gridworld.Gridworld.__init__"]], "__repr__() (gridworld method)": [[60, "seldonian.RL.environments.gridworld.Gridworld.__repr__"]], "create_env_description() (gridworld method)": [[60, "seldonian.RL.environments.gridworld.Gridworld.create_env_description"]], "get_env_description() (gridworld method)": [[60, "seldonian.RL.environments.gridworld.Gridworld.get_env_description"]], "get_observation() (gridworld method)": [[60, "seldonian.RL.environments.gridworld.Gridworld.get_observation"]], "is_in_goal_state() (gridworld method)": [[60, "seldonian.RL.environments.gridworld.Gridworld.is_in_goal_state"]], "reset() (gridworld method)": [[60, "seldonian.RL.environments.gridworld.Gridworld.reset"]], "start_visualizing() (gridworld method)": [[60, "seldonian.RL.environments.gridworld.Gridworld.start_visualizing"]], "stop_visualizing() (gridworld method)": [[60, "seldonian.RL.environments.gridworld.Gridworld.stop_visualizing"]], "terminated() (gridworld method)": [[60, "seldonian.RL.environments.gridworld.Gridworld.terminated"]], "transition() (gridworld method)": [[60, "seldonian.RL.environments.gridworld.Gridworld.transition"]], "update_position() (gridworld method)": [[60, "seldonian.RL.environments.gridworld.Gridworld.update_position"]], "visualize() (gridworld method)": [[60, "seldonian.RL.environments.gridworld.Gridworld.visualize"]], "seldonian.rl.environments.mountaincar": [[61, "module-seldonian.RL.environments.mountaincar"]], "mountaincar (class in seldonian.rl.environments.mountaincar)": [[62, "seldonian.RL.environments.mountaincar.Mountaincar"]], "__init__() (mountaincar method)": [[62, "seldonian.RL.environments.mountaincar.Mountaincar.__init__"]], "__repr__() (mountaincar method)": [[62, "seldonian.RL.environments.mountaincar.Mountaincar.__repr__"]], "get_env_description() (mountaincar method)": [[62, "seldonian.RL.environments.mountaincar.Mountaincar.get_env_description"]], "get_observation() (mountaincar method)": [[62, "seldonian.RL.environments.mountaincar.Mountaincar.get_observation"]], "reset() (mountaincar method)": [[62, "seldonian.RL.environments.mountaincar.Mountaincar.reset"]], "start_visualizing() (mountaincar method)": [[62, "seldonian.RL.environments.mountaincar.Mountaincar.start_visualizing"]], "stop_visualizing() (mountaincar method)": [[62, "seldonian.RL.environments.mountaincar.Mountaincar.stop_visualizing"]], "terminated() (mountaincar method)": [[62, "seldonian.RL.environments.mountaincar.Mountaincar.terminated"]], "transition() (mountaincar method)": [[62, "seldonian.RL.environments.mountaincar.Mountaincar.transition"]], "visualize() (mountaincar method)": [[62, "seldonian.RL.environments.mountaincar.Mountaincar.visualize"]], "seldonian.rl.environments.n_step_mountaincar": [[63, "module-seldonian.RL.environments.n_step_mountaincar"]], "n_step_mountaincar (class in seldonian.rl.environments.n_step_mountaincar)": [[64, "seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar"]], "__init__() (n_step_mountaincar method)": [[64, "seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar.__init__"]], "__repr__() (n_step_mountaincar method)": [[64, "seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar.__repr__"]], "get_env_description() (n_step_mountaincar method)": [[64, "seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar.get_env_description"]], "get_observation() (n_step_mountaincar method)": [[64, "seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar.get_observation"]], "reset() (n_step_mountaincar method)": [[64, "seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar.reset"]], "start_visualizing() (n_step_mountaincar method)": [[64, "seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar.start_visualizing"]], "stop_visualizing() (n_step_mountaincar method)": [[64, "seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar.stop_visualizing"]], "terminated() (n_step_mountaincar method)": [[64, "seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar.terminated"]], "transition() (n_step_mountaincar method)": [[64, "seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar.transition"]], "visualize() (n_step_mountaincar method)": [[64, "seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar.visualize"]], "seldonian.rl.environments.simglucose_env": [[65, "module-seldonian.RL.environments.simglucose_env"]], "simglucose (class in seldonian.rl.environments.simglucose_env)": [[66, "seldonian.RL.environments.simglucose_env.Simglucose"]], "__init__() (simglucose method)": [[66, "seldonian.RL.environments.simglucose_env.Simglucose.__init__"]], "__repr__() (simglucose method)": [[66, "seldonian.RL.environments.simglucose_env.Simglucose.__repr__"]], "get_env_description() (simglucose method)": [[66, "seldonian.RL.environments.simglucose_env.Simglucose.get_env_description"]], "get_observation() (simglucose method)": [[66, "seldonian.RL.environments.simglucose_env.Simglucose.get_observation"]], "reset() (simglucose method)": [[66, "seldonian.RL.environments.simglucose_env.Simglucose.reset"]], "start_visualizing() (simglucose method)": [[66, "seldonian.RL.environments.simglucose_env.Simglucose.start_visualizing"]], "stop_visualizing() (simglucose method)": [[66, "seldonian.RL.environments.simglucose_env.Simglucose.stop_visualizing"]], "terminated() (simglucose method)": [[66, "seldonian.RL.environments.simglucose_env.Simglucose.terminated"]], "transition() (simglucose method)": [[66, "seldonian.RL.environments.simglucose_env.Simglucose.transition"]], "visualize() (simglucose method)": [[66, "seldonian.RL.environments.simglucose_env.Simglucose.visualize"]], "seldonian.rl.generate_gridworld_episodes": [[67, "module-seldonian.RL.generate_gridworld_episodes"]], "main() (in module seldonian.rl.generate_gridworld_episodes)": [[68, "seldonian.RL.generate_gridworld_episodes.main"]], "seldonian.rl.generate_mountaincar_episodes": [[69, "module-seldonian.RL.generate_mountaincar_episodes"]], "main() (in module seldonian.rl.generate_mountaincar_episodes)": [[70, "seldonian.RL.generate_mountaincar_episodes.main"]], "seldonian.rl.generate_simglucose_episodes": [[71, "module-seldonian.RL.generate_simglucose_episodes"]], "get_max_obs() (in module seldonian.rl.generate_simglucose_episodes)": [[72, "seldonian.RL.generate_simglucose_episodes.get_max_obs"]], "main() (in module seldonian.rl.generate_simglucose_episodes)": [[73, "seldonian.RL.generate_simglucose_episodes.main"]], "seldonian.rl.hyperparams_and_settings": [[74, "module-seldonian.RL.hyperparams_and_settings"]], "define_hyperparameter_and_setting_dict() (in module seldonian.rl.hyperparams_and_settings)": [[75, "seldonian.RL.hyperparams_and_settings.define_hyperparameter_and_setting_dict"]], "seldonian.candidate_selection": [[76, "module-seldonian.candidate_selection"]], "seldonian.candidate_selection.candidate_selection": [[77, "module-seldonian.candidate_selection.candidate_selection"]], "candidateselection (class in seldonian.candidate_selection.candidate_selection)": [[78, "seldonian.candidate_selection.candidate_selection.CandidateSelection"]], "__init__() (candidateselection method)": [[78, "seldonian.candidate_selection.candidate_selection.CandidateSelection.__init__"]], "__repr__() (candidateselection method)": [[78, "seldonian.candidate_selection.candidate_selection.CandidateSelection.__repr__"]], "evaluate_primary_objective() (candidateselection method)": [[78, "seldonian.candidate_selection.candidate_selection.CandidateSelection.evaluate_primary_objective"]], "get_constraint_upper_bounds() (candidateselection method)": [[78, "seldonian.candidate_selection.candidate_selection.CandidateSelection.get_constraint_upper_bounds"]], "objective_with_barrier() (candidateselection method)": [[78, "seldonian.candidate_selection.candidate_selection.CandidateSelection.objective_with_barrier"]], "run() (candidateselection method)": [[78, "seldonian.candidate_selection.candidate_selection.CandidateSelection.run"]], "seldonian.dataset": [[79, "module-seldonian.dataset"]], "dataset (class in seldonian.dataset)": [[80, "seldonian.dataset.DataSet"]], "__init__() (dataset method)": [[80, "seldonian.dataset.DataSet.__init__"]], "__repr__() (dataset method)": [[80, "seldonian.dataset.DataSet.__repr__"]], "datasetloader (class in seldonian.dataset)": [[81, "seldonian.dataset.DataSetLoader"]], "__init__() (datasetloader method)": [[81, "seldonian.dataset.DataSetLoader.__init__"]], "__repr__() (datasetloader method)": [[81, "seldonian.dataset.DataSetLoader.__repr__"]], "load_rl_dataset_from_csv() (datasetloader method)": [[81, "seldonian.dataset.DataSetLoader.load_RL_dataset_from_csv"]], "load_rl_dataset_from_episode_file() (datasetloader method)": [[81, "seldonian.dataset.DataSetLoader.load_RL_dataset_from_episode_file"]], "load_supervised_dataset() (datasetloader method)": [[81, "seldonian.dataset.DataSetLoader.load_supervised_dataset"]], "episode (class in seldonian.dataset)": [[82, "seldonian.dataset.Episode"]], "__init__() (episode method)": [[82, "seldonian.dataset.Episode.__init__"]], "__repr__() (episode method)": [[82, "seldonian.dataset.Episode.__repr__"]], "rldataset (class in seldonian.dataset)": [[83, "seldonian.dataset.RLDataSet"]], "__init__() (rldataset method)": [[83, "seldonian.dataset.RLDataSet.__init__"]], "__repr__() (rldataset method)": [[83, "seldonian.dataset.RLDataSet.__repr__"]], "superviseddataset (class in seldonian.dataset)": [[84, "seldonian.dataset.SupervisedDataSet"]], "__init__() (superviseddataset method)": [[84, "seldonian.dataset.SupervisedDataSet.__init__"]], "__repr__() (superviseddataset method)": [[84, "seldonian.dataset.SupervisedDataSet.__repr__"]], "seldonian.models": [[85, "module-seldonian.models"]], "seldonian.models.models": [[86, "module-seldonian.models.models"]], "baselogisticregressionmodel (class in seldonian.models.models)": [[87, "seldonian.models.models.BaseLogisticRegressionModel"]], "__init__() (baselogisticregressionmodel method)": [[87, "seldonian.models.models.BaseLogisticRegressionModel.__init__"]], "__repr__() (baselogisticregressionmodel method)": [[87, "seldonian.models.models.BaseLogisticRegressionModel.__repr__"]], "fit() (baselogisticregressionmodel method)": [[87, "seldonian.models.models.BaseLogisticRegressionModel.fit"]], "binarylogisticregressionmodel (class in seldonian.models.models)": [[88, "seldonian.models.models.BinaryLogisticRegressionModel"]], "__init__() (binarylogisticregressionmodel method)": [[88, "seldonian.models.models.BinaryLogisticRegressionModel.__init__"]], "__repr__() (binarylogisticregressionmodel method)": [[88, "seldonian.models.models.BinaryLogisticRegressionModel.__repr__"]], "fit() (binarylogisticregressionmodel method)": [[88, "seldonian.models.models.BinaryLogisticRegressionModel.fit"]], "predict() (binarylogisticregressionmodel method)": [[88, "seldonian.models.models.BinaryLogisticRegressionModel.predict"]], "boundedlinearregressionmodel (class in seldonian.models.models)": [[89, "seldonian.models.models.BoundedLinearRegressionModel"]], "__init__() (boundedlinearregressionmodel method)": [[89, "seldonian.models.models.BoundedLinearRegressionModel.__init__"]], "__repr__() (boundedlinearregressionmodel method)": [[89, "seldonian.models.models.BoundedLinearRegressionModel.__repr__"]], "fit() (boundedlinearregressionmodel method)": [[89, "seldonian.models.models.BoundedLinearRegressionModel.fit"]], "predict() (boundedlinearregressionmodel method)": [[89, "seldonian.models.models.BoundedLinearRegressionModel.predict"]], "classificationmodel (class in seldonian.models.models)": [[90, "seldonian.models.models.ClassificationModel"]], "__init__() (classificationmodel method)": [[90, "seldonian.models.models.ClassificationModel.__init__"]], "__repr__() (classificationmodel method)": [[90, "seldonian.models.models.ClassificationModel.__repr__"]], "dummyclassifiermodel (class in seldonian.models.models)": [[91, "seldonian.models.models.DummyClassifierModel"]], "__init__() (dummyclassifiermodel method)": [[91, "seldonian.models.models.DummyClassifierModel.__init__"]], "__repr__() (dummyclassifiermodel method)": [[91, "seldonian.models.models.DummyClassifierModel.__repr__"]], "predict() (dummyclassifiermodel method)": [[91, "seldonian.models.models.DummyClassifierModel.predict"]], "linearregressionmodel (class in seldonian.models.models)": [[92, "seldonian.models.models.LinearRegressionModel"]], "__init__() (linearregressionmodel method)": [[92, "seldonian.models.models.LinearRegressionModel.__init__"]], "__repr__() (linearregressionmodel method)": [[92, "seldonian.models.models.LinearRegressionModel.__repr__"]], "fit() (linearregressionmodel method)": [[92, "seldonian.models.models.LinearRegressionModel.fit"]], "predict() (linearregressionmodel method)": [[92, "seldonian.models.models.LinearRegressionModel.predict"]], "multiclasslogisticregressionmodel (class in seldonian.models.models)": [[93, "seldonian.models.models.MultiClassLogisticRegressionModel"]], "__init__() (multiclasslogisticregressionmodel method)": [[93, "seldonian.models.models.MultiClassLogisticRegressionModel.__init__"]], "__repr__() (multiclasslogisticregressionmodel method)": [[93, "seldonian.models.models.MultiClassLogisticRegressionModel.__repr__"]], "fit() (multiclasslogisticregressionmodel method)": [[93, "seldonian.models.models.MultiClassLogisticRegressionModel.fit"]], "predict() (multiclasslogisticregressionmodel method)": [[93, "seldonian.models.models.MultiClassLogisticRegressionModel.predict"]], "randomclassifiermodel (class in seldonian.models.models)": [[94, "seldonian.models.models.RandomClassifierModel"]], "__init__() (randomclassifiermodel method)": [[94, "seldonian.models.models.RandomClassifierModel.__init__"]], "__repr__() (randomclassifiermodel method)": [[94, "seldonian.models.models.RandomClassifierModel.__repr__"]], "predict() (randomclassifiermodel method)": [[94, "seldonian.models.models.RandomClassifierModel.predict"]], "regressionmodel (class in seldonian.models.models)": [[95, "seldonian.models.models.RegressionModel"]], "__init__() (regressionmodel method)": [[95, "seldonian.models.models.RegressionModel.__init__"]], "__repr__() (regressionmodel method)": [[95, "seldonian.models.models.RegressionModel.__repr__"]], "seldonianmodel (class in seldonian.models.models)": [[96, "seldonian.models.models.SeldonianModel"]], "__init__() (seldonianmodel method)": [[96, "seldonian.models.models.SeldonianModel.__init__"]], "__repr__() (seldonianmodel method)": [[96, "seldonian.models.models.SeldonianModel.__repr__"]], "supervisedmodel (class in seldonian.models.models)": [[97, "seldonian.models.models.SupervisedModel"]], "__init__() (supervisedmodel method)": [[97, "seldonian.models.models.SupervisedModel.__init__"]], "__repr__() (supervisedmodel method)": [[97, "seldonian.models.models.SupervisedModel.__repr__"]], "seldonian.models.objectives": [[98, "module-seldonian.models.objectives"]], "false_negative_rate() (in module seldonian.models.objectives)": [[99, "seldonian.models.objectives.False_Negative_Rate"]], "false_positive_rate() (in module seldonian.models.objectives)": [[100, "seldonian.models.objectives.False_Positive_Rate"]], "is_estimate() (in module seldonian.models.objectives)": [[101, "seldonian.models.objectives.IS_estimate"]], "mean_error() (in module seldonian.models.objectives)": [[102, "seldonian.models.objectives.Mean_Error"]], "mean_squared_error() (in module seldonian.models.objectives)": [[103, "seldonian.models.objectives.Mean_Squared_Error"]], "negative_rate() (in module seldonian.models.objectives)": [[104, "seldonian.models.objectives.Negative_Rate"]], "positive_rate() (in module seldonian.models.objectives)": [[105, "seldonian.models.objectives.Positive_Rate"]], "true_negative_rate() (in module seldonian.models.objectives)": [[106, "seldonian.models.objectives.True_Negative_Rate"]], "true_positive_rate() (in module seldonian.models.objectives)": [[107, "seldonian.models.objectives.True_Positive_Rate"]], "binary_logistic_loss() (in module seldonian.models.objectives)": [[108, "seldonian.models.objectives.binary_logistic_loss"]], "confusion_matrix() (in module seldonian.models.objectives)": [[109, "seldonian.models.objectives.confusion_matrix"]], "evaluate_statistic() (in module seldonian.models.objectives)": [[110, "seldonian.models.objectives.evaluate_statistic"]], "gradient_bounded_squared_error() (in module seldonian.models.objectives)": [[111, "seldonian.models.objectives.gradient_Bounded_Squared_Error"]], "gradient_mean_squared_error() (in module seldonian.models.objectives)": [[112, "seldonian.models.objectives.gradient_Mean_Squared_Error"]], "gradient_binary_logistic_loss() (in module seldonian.models.objectives)": [[113, "seldonian.models.objectives.gradient_binary_logistic_loss"]], "multiclass_logistic_loss() (in module seldonian.models.objectives)": [[114, "seldonian.models.objectives.multiclass_logistic_loss"]], "sample_from_statistic() (in module seldonian.models.objectives)": [[115, "seldonian.models.objectives.sample_from_statistic"]], "vector_error() (in module seldonian.models.objectives)": [[116, "seldonian.models.objectives.vector_Error"]], "vector_false_negative_rate() (in module seldonian.models.objectives)": [[117, "seldonian.models.objectives.vector_False_Negative_Rate"]], "vector_false_positive_rate() (in module seldonian.models.objectives)": [[118, "seldonian.models.objectives.vector_False_Positive_Rate"]], "vector_is_estimate() (in module seldonian.models.objectives)": [[119, "seldonian.models.objectives.vector_IS_estimate"]], "vector_negative_rate() (in module seldonian.models.objectives)": [[120, "seldonian.models.objectives.vector_Negative_Rate"]], "vector_positive_rate() (in module seldonian.models.objectives)": [[121, "seldonian.models.objectives.vector_Positive_Rate"]], "vector_squared_error() (in module seldonian.models.objectives)": [[122, "seldonian.models.objectives.vector_Squared_Error"]], "vector_true_negative_rate() (in module seldonian.models.objectives)": [[123, "seldonian.models.objectives.vector_True_Negative_Rate"]], "vector_true_positive_rate() (in module seldonian.models.objectives)": [[124, "seldonian.models.objectives.vector_True_Positive_Rate"]], "vector_confusion_matrix() (in module seldonian.models.objectives)": [[125, "seldonian.models.objectives.vector_confusion_matrix"]], "seldonian.optimizers": [[126, "module-seldonian.optimizers"]], "seldonian.optimizers.gradient_descent": [[127, "module-seldonian.optimizers.gradient_descent"]], "gradient_descent_adam() (in module seldonian.optimizers.gradient_descent)": [[128, "seldonian.optimizers.gradient_descent.gradient_descent_adam"]], "setup_gradients() (in module seldonian.optimizers.gradient_descent)": [[129, "seldonian.optimizers.gradient_descent.setup_gradients"]], "seldonian.parse_tree": [[130, "module-seldonian.parse_tree"]], "seldonian.parse_tree.nodes": [[131, "module-seldonian.parse_tree.nodes"]], "basenode (class in seldonian.parse_tree.nodes)": [[132, "seldonian.parse_tree.nodes.BaseNode"]], "__init__() (basenode method)": [[132, "seldonian.parse_tree.nodes.BaseNode.__init__"]], "__repr__() (basenode method)": [[132, "seldonian.parse_tree.nodes.BaseNode.__repr__"]], "calculate_bounds() (basenode method)": [[132, "seldonian.parse_tree.nodes.BaseNode.calculate_bounds"]], "calculate_data_forbound() (basenode method)": [[132, "seldonian.parse_tree.nodes.BaseNode.calculate_data_forbound"]], "calculate_value() (basenode method)": [[132, "seldonian.parse_tree.nodes.BaseNode.calculate_value"]], "compute_hc_lowerbound() (basenode method)": [[132, "seldonian.parse_tree.nodes.BaseNode.compute_HC_lowerbound"]], "compute_hc_upper_and_lowerbound() (basenode method)": [[132, "seldonian.parse_tree.nodes.BaseNode.compute_HC_upper_and_lowerbound"]], "compute_hc_upperbound() (basenode method)": [[132, "seldonian.parse_tree.nodes.BaseNode.compute_HC_upperbound"]], "mask_dataframe() (basenode method)": [[132, "seldonian.parse_tree.nodes.BaseNode.mask_dataframe"]], "predict_hc_lowerbound() (basenode method)": [[132, "seldonian.parse_tree.nodes.BaseNode.predict_HC_lowerbound"]], "predict_hc_upper_and_lowerbound() (basenode method)": [[132, "seldonian.parse_tree.nodes.BaseNode.predict_HC_upper_and_lowerbound"]], "predict_hc_upperbound() (basenode method)": [[132, "seldonian.parse_tree.nodes.BaseNode.predict_HC_upperbound"]], "zhat() (basenode method)": [[132, "seldonian.parse_tree.nodes.BaseNode.zhat"]], "cvarsqebasenode (class in seldonian.parse_tree.nodes)": [[133, "seldonian.parse_tree.nodes.CVaRSQeBaseNode"]], "__init__() (cvarsqebasenode method)": [[133, "seldonian.parse_tree.nodes.CVaRSQeBaseNode.__init__"]], "__repr__() (cvarsqebasenode method)": [[133, "seldonian.parse_tree.nodes.CVaRSQeBaseNode.__repr__"]], "calculate_bounds() (cvarsqebasenode method)": [[133, "seldonian.parse_tree.nodes.CVaRSQeBaseNode.calculate_bounds"]], "calculate_data_forbound() (cvarsqebasenode method)": [[133, "seldonian.parse_tree.nodes.CVaRSQeBaseNode.calculate_data_forbound"]], "calculate_value() (cvarsqebasenode method)": [[133, "seldonian.parse_tree.nodes.CVaRSQeBaseNode.calculate_value"]], "compute_hc_lowerbound() (cvarsqebasenode method)": [[133, "seldonian.parse_tree.nodes.CVaRSQeBaseNode.compute_HC_lowerbound"]], "compute_hc_upper_and_lowerbound() (cvarsqebasenode method)": [[133, "seldonian.parse_tree.nodes.CVaRSQeBaseNode.compute_HC_upper_and_lowerbound"]], "compute_hc_upperbound() (cvarsqebasenode method)": [[133, "seldonian.parse_tree.nodes.CVaRSQeBaseNode.compute_HC_upperbound"]], "mask_dataframe() (cvarsqebasenode method)": [[133, "seldonian.parse_tree.nodes.CVaRSQeBaseNode.mask_dataframe"]], "predict_hc_lowerbound() (cvarsqebasenode method)": [[133, "seldonian.parse_tree.nodes.CVaRSQeBaseNode.predict_HC_lowerbound"]], "predict_hc_upper_and_lowerbound() (cvarsqebasenode method)": [[133, "seldonian.parse_tree.nodes.CVaRSQeBaseNode.predict_HC_upper_and_lowerbound"]], "predict_hc_upperbound() (cvarsqebasenode method)": [[133, "seldonian.parse_tree.nodes.CVaRSQeBaseNode.predict_HC_upperbound"]], "zhat() (cvarsqebasenode method)": [[133, "seldonian.parse_tree.nodes.CVaRSQeBaseNode.zhat"]], "confusionmatrixbasenode (class in seldonian.parse_tree.nodes)": [[134, "seldonian.parse_tree.nodes.ConfusionMatrixBaseNode"]], "__init__() (confusionmatrixbasenode method)": [[134, "seldonian.parse_tree.nodes.ConfusionMatrixBaseNode.__init__"]], "__repr__() (confusionmatrixbasenode method)": [[134, "seldonian.parse_tree.nodes.ConfusionMatrixBaseNode.__repr__"]], "calculate_bounds() (confusionmatrixbasenode method)": [[134, "seldonian.parse_tree.nodes.ConfusionMatrixBaseNode.calculate_bounds"]], "calculate_data_forbound() (confusionmatrixbasenode method)": [[134, "seldonian.parse_tree.nodes.ConfusionMatrixBaseNode.calculate_data_forbound"]], "calculate_value() (confusionmatrixbasenode method)": [[134, "seldonian.parse_tree.nodes.ConfusionMatrixBaseNode.calculate_value"]], "compute_hc_lowerbound() (confusionmatrixbasenode method)": [[134, "seldonian.parse_tree.nodes.ConfusionMatrixBaseNode.compute_HC_lowerbound"]], "compute_hc_upper_and_lowerbound() (confusionmatrixbasenode method)": [[134, "seldonian.parse_tree.nodes.ConfusionMatrixBaseNode.compute_HC_upper_and_lowerbound"]], "compute_hc_upperbound() (confusionmatrixbasenode method)": [[134, "seldonian.parse_tree.nodes.ConfusionMatrixBaseNode.compute_HC_upperbound"]], "mask_dataframe() (confusionmatrixbasenode method)": [[134, "seldonian.parse_tree.nodes.ConfusionMatrixBaseNode.mask_dataframe"]], "predict_hc_lowerbound() (confusionmatrixbasenode method)": [[134, "seldonian.parse_tree.nodes.ConfusionMatrixBaseNode.predict_HC_lowerbound"]], "predict_hc_upper_and_lowerbound() (confusionmatrixbasenode method)": [[134, "seldonian.parse_tree.nodes.ConfusionMatrixBaseNode.predict_HC_upper_and_lowerbound"]], "predict_hc_upperbound() (confusionmatrixbasenode method)": [[134, "seldonian.parse_tree.nodes.ConfusionMatrixBaseNode.predict_HC_upperbound"]], "zhat() (confusionmatrixbasenode method)": [[134, "seldonian.parse_tree.nodes.ConfusionMatrixBaseNode.zhat"]], "constantnode (class in seldonian.parse_tree.nodes)": [[135, "seldonian.parse_tree.nodes.ConstantNode"]], "__init__() (constantnode method)": [[135, "seldonian.parse_tree.nodes.ConstantNode.__init__"]], "__repr__() (constantnode method)": [[135, "seldonian.parse_tree.nodes.ConstantNode.__repr__"]], "internalnode (class in seldonian.parse_tree.nodes)": [[136, "seldonian.parse_tree.nodes.InternalNode"]], "__init__() (internalnode method)": [[136, "seldonian.parse_tree.nodes.InternalNode.__init__"]], "__repr__() (internalnode method)": [[136, "seldonian.parse_tree.nodes.InternalNode.__repr__"]], "medcustombasenode (class in seldonian.parse_tree.nodes)": [[137, "seldonian.parse_tree.nodes.MEDCustomBaseNode"]], "__init__() (medcustombasenode method)": [[137, "seldonian.parse_tree.nodes.MEDCustomBaseNode.__init__"]], "__repr__() (medcustombasenode method)": [[137, "seldonian.parse_tree.nodes.MEDCustomBaseNode.__repr__"]], "calculate_bounds() (medcustombasenode method)": [[137, "seldonian.parse_tree.nodes.MEDCustomBaseNode.calculate_bounds"]], "calculate_data_forbound() (medcustombasenode method)": [[137, "seldonian.parse_tree.nodes.MEDCustomBaseNode.calculate_data_forbound"]], "calculate_value() (medcustombasenode method)": [[137, "seldonian.parse_tree.nodes.MEDCustomBaseNode.calculate_value"]], "compute_hc_lowerbound() (medcustombasenode method)": [[137, "seldonian.parse_tree.nodes.MEDCustomBaseNode.compute_HC_lowerbound"]], "compute_hc_upper_and_lowerbound() (medcustombasenode method)": [[137, "seldonian.parse_tree.nodes.MEDCustomBaseNode.compute_HC_upper_and_lowerbound"]], "compute_hc_upperbound() (medcustombasenode method)": [[137, "seldonian.parse_tree.nodes.MEDCustomBaseNode.compute_HC_upperbound"]], "mask_dataframe() (medcustombasenode method)": [[137, "seldonian.parse_tree.nodes.MEDCustomBaseNode.mask_dataframe"]], "precalculate_data() (medcustombasenode method)": [[137, "seldonian.parse_tree.nodes.MEDCustomBaseNode.precalculate_data"]], "predict_hc_lowerbound() (medcustombasenode method)": [[137, "seldonian.parse_tree.nodes.MEDCustomBaseNode.predict_HC_lowerbound"]], "predict_hc_upper_and_lowerbound() (medcustombasenode method)": [[137, "seldonian.parse_tree.nodes.MEDCustomBaseNode.predict_HC_upper_and_lowerbound"]], "predict_hc_upperbound() (medcustombasenode method)": [[137, "seldonian.parse_tree.nodes.MEDCustomBaseNode.predict_HC_upperbound"]], "zhat() (medcustombasenode method)": [[137, "seldonian.parse_tree.nodes.MEDCustomBaseNode.zhat"]], "multiclassbasenode (class in seldonian.parse_tree.nodes)": [[138, "seldonian.parse_tree.nodes.MultiClassBaseNode"]], "__init__() (multiclassbasenode method)": [[138, "seldonian.parse_tree.nodes.MultiClassBaseNode.__init__"]], "__repr__() (multiclassbasenode method)": [[138, "seldonian.parse_tree.nodes.MultiClassBaseNode.__repr__"]], "calculate_bounds() (multiclassbasenode method)": [[138, "seldonian.parse_tree.nodes.MultiClassBaseNode.calculate_bounds"]], "calculate_data_forbound() (multiclassbasenode method)": [[138, "seldonian.parse_tree.nodes.MultiClassBaseNode.calculate_data_forbound"]], "calculate_value() (multiclassbasenode method)": [[138, "seldonian.parse_tree.nodes.MultiClassBaseNode.calculate_value"]], "compute_hc_lowerbound() (multiclassbasenode method)": [[138, "seldonian.parse_tree.nodes.MultiClassBaseNode.compute_HC_lowerbound"]], "compute_hc_upper_and_lowerbound() (multiclassbasenode method)": [[138, "seldonian.parse_tree.nodes.MultiClassBaseNode.compute_HC_upper_and_lowerbound"]], "compute_hc_upperbound() (multiclassbasenode method)": [[138, "seldonian.parse_tree.nodes.MultiClassBaseNode.compute_HC_upperbound"]], "mask_dataframe() (multiclassbasenode method)": [[138, "seldonian.parse_tree.nodes.MultiClassBaseNode.mask_dataframe"]], "predict_hc_lowerbound() (multiclassbasenode method)": [[138, "seldonian.parse_tree.nodes.MultiClassBaseNode.predict_HC_lowerbound"]], "predict_hc_upper_and_lowerbound() (multiclassbasenode method)": [[138, "seldonian.parse_tree.nodes.MultiClassBaseNode.predict_HC_upper_and_lowerbound"]], "predict_hc_upperbound() (multiclassbasenode method)": [[138, "seldonian.parse_tree.nodes.MultiClassBaseNode.predict_HC_upperbound"]], "zhat() (multiclassbasenode method)": [[138, "seldonian.parse_tree.nodes.MultiClassBaseNode.zhat"]], "node (class in seldonian.parse_tree.nodes)": [[139, "seldonian.parse_tree.nodes.Node"]], "__init__() (node method)": [[139, "seldonian.parse_tree.nodes.Node.__init__"]], "__repr__() (node method)": [[139, "seldonian.parse_tree.nodes.Node.__repr__"]], "bounds_required_dict (in module seldonian.parse_tree.operators)": [[140, "seldonian.parse_tree.operators.bounds_required_dict"]], "custom_base_node_dict (in module seldonian.parse_tree.operators)": [[140, "seldonian.parse_tree.operators.custom_base_node_dict"]], "measure_functions_dict (in module seldonian.parse_tree.operators)": [[140, "seldonian.parse_tree.operators.measure_functions_dict"]], "not_supported_op_mapper (in module seldonian.parse_tree.operators)": [[140, "seldonian.parse_tree.operators.not_supported_op_mapper"]], "op_mapper (in module seldonian.parse_tree.operators)": [[140, "seldonian.parse_tree.operators.op_mapper"]], "seldonian.parse_tree.operators": [[140, "module-seldonian.parse_tree.operators"]], "seldonian.parse_tree.parse_tree": [[141, "module-seldonian.parse_tree.parse_tree"]], "parsetree (class in seldonian.parse_tree.parse_tree)": [[142, "seldonian.parse_tree.parse_tree.ParseTree"]], "__init__() (parsetree method)": [[142, "seldonian.parse_tree.parse_tree.ParseTree.__init__"]], "__repr__() (parsetree method)": [[142, "seldonian.parse_tree.parse_tree.ParseTree.__repr__"]], "_abs() (parsetree method)": [[142, "seldonian.parse_tree.parse_tree.ParseTree._abs"]], "_add() (parsetree method)": [[142, "seldonian.parse_tree.parse_tree.ParseTree._add"]], "_assign_bounds_helper() (parsetree method)": [[142, "seldonian.parse_tree.parse_tree.ParseTree._assign_bounds_helper"]], "_assign_deltas_helper() (parsetree method)": [[142, "seldonian.parse_tree.parse_tree.ParseTree._assign_deltas_helper"]], "_ast2pt_node() (parsetree method)": [[142, "seldonian.parse_tree.parse_tree.ParseTree._ast2pt_node"]], "_ast_tree_helper() (parsetree method)": [[142, "seldonian.parse_tree.parse_tree.ParseTree._ast_tree_helper"]], "_div() (parsetree method)": [[142, "seldonian.parse_tree.parse_tree.ParseTree._div"]], "_evaluator_helper() (parsetree method)": [[142, "seldonian.parse_tree.parse_tree.ParseTree._evaluator_helper"]], "_exp() (parsetree method)": [[142, "seldonian.parse_tree.parse_tree.ParseTree._exp"]], "_max() (parsetree method)": [[142, "seldonian.parse_tree.parse_tree.ParseTree._max"]], "_min() (parsetree method)": [[142, "seldonian.parse_tree.parse_tree.ParseTree._min"]], "_mult() (parsetree method)": [[142, "seldonian.parse_tree.parse_tree.ParseTree._mult"]], "_pow() (parsetree method)": [[142, "seldonian.parse_tree.parse_tree.ParseTree._pow"]], "_preprocess_constraint_str() (parsetree method)": [[142, "seldonian.parse_tree.parse_tree.ParseTree._preprocess_constraint_str"]], "_propagate_value() (parsetree method)": [[142, "seldonian.parse_tree.parse_tree.ParseTree._propagate_value"]], "_propagator_helper() (parsetree method)": [[142, "seldonian.parse_tree.parse_tree.ParseTree._propagator_helper"]], "_protect_nan() (parsetree method)": [[142, "seldonian.parse_tree.parse_tree.ParseTree._protect_nan"]], "_sub() (parsetree method)": [[142, "seldonian.parse_tree.parse_tree.ParseTree._sub"]], "assign_bounds_needed() (parsetree method)": [[142, "seldonian.parse_tree.parse_tree.ParseTree.assign_bounds_needed"]], "assign_deltas() (parsetree method)": [[142, "seldonian.parse_tree.parse_tree.ParseTree.assign_deltas"]], "build_tree() (parsetree method)": [[142, "seldonian.parse_tree.parse_tree.ParseTree.build_tree"]], "create_from_ast() (parsetree method)": [[142, "seldonian.parse_tree.parse_tree.ParseTree.create_from_ast"]], "evaluate_constraint() (parsetree method)": [[142, "seldonian.parse_tree.parse_tree.ParseTree.evaluate_constraint"]], "make_viz() (parsetree method)": [[142, "seldonian.parse_tree.parse_tree.ParseTree.make_viz"]], "make_viz_helper() (parsetree method)": [[142, "seldonian.parse_tree.parse_tree.ParseTree.make_viz_helper"]], "propagate() (parsetree method)": [[142, "seldonian.parse_tree.parse_tree.ParseTree.propagate"]], "propagate_bounds() (parsetree method)": [[142, "seldonian.parse_tree.parse_tree.ParseTree.propagate_bounds"]], "reset_base_node_dict() (parsetree method)": [[142, "seldonian.parse_tree.parse_tree.ParseTree.reset_base_node_dict"]], "make_parse_trees_from_constraints() (in module seldonian.parse_tree.parse_tree)": [[143, "seldonian.parse_tree.parse_tree.make_parse_trees_from_constraints"]], "seldonian.safety_test": [[144, "module-seldonian.safety_test"]], "seldonian.safety_test.safety_test": [[145, "module-seldonian.safety_test.safety_test"]], "safetytest (class in seldonian.safety_test.safety_test)": [[146, "seldonian.safety_test.safety_test.SafetyTest"]], "__init__() (safetytest method)": [[146, "seldonian.safety_test.safety_test.SafetyTest.__init__"]], "__repr__() (safetytest method)": [[146, "seldonian.safety_test.safety_test.SafetyTest.__repr__"]], "evaluate_primary_objective() (safetytest method)": [[146, "seldonian.safety_test.safety_test.SafetyTest.evaluate_primary_objective"]], "run() (safetytest method)": [[146, "seldonian.safety_test.safety_test.SafetyTest.run"]], "seldonian.seldonian_algorithm": [[147, "module-seldonian.seldonian_algorithm"]], "seldonianalgorithm (class in seldonian.seldonian_algorithm)": [[148, "seldonian.seldonian_algorithm.SeldonianAlgorithm"]], "__init__() (seldonianalgorithm method)": [[148, "seldonian.seldonian_algorithm.SeldonianAlgorithm.__init__"]], "__repr__() (seldonianalgorithm method)": [[148, "seldonian.seldonian_algorithm.SeldonianAlgorithm.__repr__"]], "candidate_selection() (seldonianalgorithm method)": [[148, "seldonian.seldonian_algorithm.SeldonianAlgorithm.candidate_selection"]], "evaluate_primary_objective() (seldonianalgorithm method)": [[148, "seldonian.seldonian_algorithm.SeldonianAlgorithm.evaluate_primary_objective"]], "get_cs_result() (seldonianalgorithm method)": [[148, "seldonian.seldonian_algorithm.SeldonianAlgorithm.get_cs_result"]], "run() (seldonianalgorithm method)": [[148, "seldonian.seldonian_algorithm.SeldonianAlgorithm.run"]], "run_safety_test() (seldonianalgorithm method)": [[148, "seldonian.seldonian_algorithm.SeldonianAlgorithm.run_safety_test"]], "safety_test() (seldonianalgorithm method)": [[148, "seldonian.seldonian_algorithm.SeldonianAlgorithm.safety_test"]], "seldonian.spec": [[149, "module-seldonian.spec"]], "rlspec (class in seldonian.spec)": [[150, "seldonian.spec.RLSpec"]], "__init__() (rlspec method)": [[150, "seldonian.spec.RLSpec.__init__"]], "__repr__() (rlspec method)": [[150, "seldonian.spec.RLSpec.__repr__"]], "spec (class in seldonian.spec)": [[151, "seldonian.spec.Spec"]], "__init__() (spec method)": [[151, "seldonian.spec.Spec.__init__"]], "__repr__() (spec method)": [[151, "seldonian.spec.Spec.__repr__"]], "supervisedspec (class in seldonian.spec)": [[152, "seldonian.spec.SupervisedSpec"]], "__init__() (supervisedspec method)": [[152, "seldonian.spec.SupervisedSpec.__init__"]], "__repr__() (supervisedspec method)": [[152, "seldonian.spec.SupervisedSpec.__repr__"]], "createrlspec() (in module seldonian.spec)": [[153, "seldonian.spec.createRLSpec"]], "createsupervisedspec() (in module seldonian.spec)": [[154, "seldonian.spec.createSupervisedSpec"]], "validate_parse_trees() (in module seldonian.spec)": [[155, "seldonian.spec.validate_parse_trees"]], "seldonian.utils": [[156, "module-seldonian.utils"]], "seldonian.utils.rl_utils": [[157, "module-seldonian.utils.RL_utils"]], "argmax_multi() (in module seldonian.utils.rl_utils)": [[158, "seldonian.utils.RL_utils.argmax_multi"]], "clamp() (in module seldonian.utils.rl_utils)": [[159, "seldonian.utils.RL_utils.clamp"]], "error() (in module seldonian.utils.rl_utils)": [[160, "seldonian.utils.RL_utils.error"]], "seldonian.utils.io_utils": [[161, "module-seldonian.utils.io_utils"]], "dir_path() (in module seldonian.utils.io_utils)": [[162, "seldonian.utils.io_utils.dir_path"]], "load_json() (in module seldonian.utils.io_utils)": [[163, "seldonian.utils.io_utils.load_json"]], "load_pickle() (in module seldonian.utils.io_utils)": [[164, "seldonian.utils.io_utils.load_pickle"]], "load_supervised_metadata() (in module seldonian.utils.io_utils)": [[165, "seldonian.utils.io_utils.load_supervised_metadata"]], "save_json() (in module seldonian.utils.io_utils)": [[166, "seldonian.utils.io_utils.save_json"]], "save_pickle() (in module seldonian.utils.io_utils)": [[167, "seldonian.utils.io_utils.save_pickle"]], "seldonian.utils.plot_utils": [[168, "module-seldonian.utils.plot_utils"]], "plot_gradient_descent() (in module seldonian.utils.plot_utils)": [[169, "seldonian.utils.plot_utils.plot_gradient_descent"]], "seldonian.utils.stats_utils": [[170, "module-seldonian.utils.stats_utils"]], "softmax() (in module seldonian.utils.stats_utils)": [[171, "seldonian.utils.stats_utils.softmax"]], "stddev() (in module seldonian.utils.stats_utils)": [[172, "seldonian.utils.stats_utils.stddev"]], "tinv() (in module seldonian.utils.stats_utils)": [[173, "seldonian.utils.stats_utils.tinv"]], "weighted_sum_gamma() (in module seldonian.utils.stats_utils)": [[174, "seldonian.utils.stats_utils.weighted_sum_gamma"]], "seldonian.utils.tutorial_utils": [[175, "module-seldonian.utils.tutorial_utils"]], "generate_clipped_data() (in module seldonian.utils.tutorial_utils)": [[176, "seldonian.utils.tutorial_utils.generate_clipped_data"]], "generate_data() (in module seldonian.utils.tutorial_utils)": [[177, "seldonian.utils.tutorial_utils.generate_data"]], "make_synthetic_regression_dataset() (in module seldonian.utils.tutorial_utils)": [[178, "seldonian.utils.tutorial_utils.make_synthetic_regression_dataset"]], "seldonian.warnings": [[179, "module-seldonian.warnings"]], "seldonian.warnings.custom_warnings": [[180, "module-seldonian.warnings.custom_warnings"]], "custom_formatwarning() (in module seldonian.warnings.custom_warnings)": [[181, "seldonian.warnings.custom_warnings.custom_formatwarning"]]}})