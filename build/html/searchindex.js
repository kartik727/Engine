Search.setIndex({"docnames": ["_autosummary/seldonian", "_autosummary/seldonian.RL", "_autosummary/seldonian.RL.Agents", "_autosummary/seldonian.RL.Agents.Agent", "_autosummary/seldonian.RL.Agents.Agent.Agent", "_autosummary/seldonian.RL.Agents.Bases", "_autosummary/seldonian.RL.Agents.Bases.Fourier", "_autosummary/seldonian.RL.Agents.Bases.Fourier.Fourier", "_autosummary/seldonian.RL.Agents.Discrete_Random_Agent", "_autosummary/seldonian.RL.Agents.Discrete_Random_Agent.Discrete_Random_Agent", "_autosummary/seldonian.RL.Agents.Function_Approximators", "_autosummary/seldonian.RL.Agents.Function_Approximators.Function_Approximator", "_autosummary/seldonian.RL.Agents.Function_Approximators.Function_Approximator.Function_Approximator", "_autosummary/seldonian.RL.Agents.Function_Approximators.Linear_FA", "_autosummary/seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_FA", "_autosummary/seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_state_action_value_FA", "_autosummary/seldonian.RL.Agents.Function_Approximators.Table", "_autosummary/seldonian.RL.Agents.Function_Approximators.Table.Q_Table", "_autosummary/seldonian.RL.Agents.Function_Approximators.Table.Table", "_autosummary/seldonian.RL.Agents.Function_Approximators.Table.construct_Q_Table_From_Env_Description", "_autosummary/seldonian.RL.Agents.Parameterized_non_learning_softmax_agent", "_autosummary/seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.Parameterized_non_learning_softmax_agent", "_autosummary/seldonian.RL.Agents.Policies", "_autosummary/seldonian.RL.Agents.Policies.Policy", "_autosummary/seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy", "_autosummary/seldonian.RL.Agents.Policies.Policy.Policy", "_autosummary/seldonian.RL.Agents.Policies.Softmax", "_autosummary/seldonian.RL.Agents.Policies.Softmax.Softmax", "_autosummary/seldonian.RL.Agents.keyboard_gridworld", "_autosummary/seldonian.RL.Agents.keyboard_gridworld.Keyboard_gridworld", "_autosummary/seldonian.RL.Agents.mountain_car_rough_solution", "_autosummary/seldonian.RL.Agents.mountain_car_rough_solution.Mountain_car_rough_solution", "_autosummary/seldonian.RL.Env_Description", "_autosummary/seldonian.RL.Env_Description.Env_Description", "_autosummary/seldonian.RL.Env_Description.Env_Description.Env_Description", "_autosummary/seldonian.RL.Env_Description.Env_Description.check_space_type", "_autosummary/seldonian.RL.Env_Description.Spaces", "_autosummary/seldonian.RL.Env_Description.Spaces.Continuous_Space", "_autosummary/seldonian.RL.Env_Description.Spaces.Discrete_Space", "_autosummary/seldonian.RL.RL_model", "_autosummary/seldonian.RL.RL_model.RL_model", "_autosummary/seldonian.RL.environments", "_autosummary/seldonian.RL.environments.Environment", "_autosummary/seldonian.RL.environments.Environment.Environment", "_autosummary/seldonian.RL.environments.gridworld", "_autosummary/seldonian.RL.environments.gridworld.Gridworld", "_autosummary/seldonian.RL.environments.mountaincar", "_autosummary/seldonian.RL.environments.mountaincar.Mountaincar", "_autosummary/seldonian.RL.environments.n_step_mountaincar", "_autosummary/seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar", "_autosummary/seldonian.RL.hyperparams_and_settings", "_autosummary/seldonian.RL.hyperparams_and_settings.define_hyperparameter_and_setting_dict", "_autosummary/seldonian.candidate_selection", "_autosummary/seldonian.candidate_selection.candidate_selection", "_autosummary/seldonian.candidate_selection.candidate_selection.CandidateSelection", "_autosummary/seldonian.dataset", "_autosummary/seldonian.dataset.DataSet", "_autosummary/seldonian.dataset.DataSetLoader", "_autosummary/seldonian.dataset.Episode", "_autosummary/seldonian.dataset.RLDataSet", "_autosummary/seldonian.dataset.SupervisedDataSet", "_autosummary/seldonian.models", "_autosummary/seldonian.models.models", "_autosummary/seldonian.models.models.ClassificationModel", "_autosummary/seldonian.models.models.DummyClassifierModel", "_autosummary/seldonian.models.models.LinearRegressionModel", "_autosummary/seldonian.models.models.LogisticRegressionModel", "_autosummary/seldonian.models.models.RandomClassifierModel", "_autosummary/seldonian.models.models.RegressionModel", "_autosummary/seldonian.models.models.SeldonianModel", "_autosummary/seldonian.models.models.SquashedLinearRegressionModel", "_autosummary/seldonian.models.models.SupervisedModel", "_autosummary/seldonian.models.objectives", "_autosummary/seldonian.models.objectives.False_Negative_Rate", "_autosummary/seldonian.models.objectives.False_Positive_Rate", "_autosummary/seldonian.models.objectives.IS_estimate", "_autosummary/seldonian.models.objectives.Mean_Error", "_autosummary/seldonian.models.objectives.Mean_Squared_Error", "_autosummary/seldonian.models.objectives.Negative_Rate", "_autosummary/seldonian.models.objectives.Positive_Rate", "_autosummary/seldonian.models.objectives.True_Negative_Rate", "_autosummary/seldonian.models.objectives.True_Positive_Rate", "_autosummary/seldonian.models.objectives.evaluate_statistic", "_autosummary/seldonian.models.objectives.gradient_Mean_Squared_Error", "_autosummary/seldonian.models.objectives.gradient_logistic_loss", "_autosummary/seldonian.models.objectives.logistic_loss", "_autosummary/seldonian.models.objectives.sample_from_statistic", "_autosummary/seldonian.models.objectives.vector_Error", "_autosummary/seldonian.models.objectives.vector_False_Negative_Rate", "_autosummary/seldonian.models.objectives.vector_False_Positive_Rate", "_autosummary/seldonian.models.objectives.vector_IS_estimate", "_autosummary/seldonian.models.objectives.vector_Negative_Rate", "_autosummary/seldonian.models.objectives.vector_Positive_Rate", "_autosummary/seldonian.models.objectives.vector_Squared_Error", "_autosummary/seldonian.models.objectives.vector_True_Negative_Rate", "_autosummary/seldonian.models.objectives.vector_True_Positive_Rate", "_autosummary/seldonian.models.objectives.vector_logistic_loss", "_autosummary/seldonian.models.objectives.vector_weighted_loss", "_autosummary/seldonian.models.objectives.weighted_loss", "_autosummary/seldonian.optimizers", "_autosummary/seldonian.optimizers.gradient_descent", "_autosummary/seldonian.optimizers.gradient_descent.gradient_descent_adam", "_autosummary/seldonian.optimizers.gradient_descent.setup_gradients", "_autosummary/seldonian.parse_tree", "_autosummary/seldonian.parse_tree.nodes", "_autosummary/seldonian.parse_tree.nodes.BaseNode", "_autosummary/seldonian.parse_tree.nodes.CVARSQEBaseNode", "_autosummary/seldonian.parse_tree.nodes.ConstantNode", "_autosummary/seldonian.parse_tree.nodes.InternalNode", "_autosummary/seldonian.parse_tree.nodes.MEDCustomBaseNode", "_autosummary/seldonian.parse_tree.nodes.Node", "_autosummary/seldonian.parse_tree.operators", "_autosummary/seldonian.parse_tree.parse_tree", "_autosummary/seldonian.parse_tree.parse_tree.ParseTree", "_autosummary/seldonian.parse_tree.parse_tree.make_parse_trees_from_constraints", "_autosummary/seldonian.safety_test", "_autosummary/seldonian.safety_test.safety_test", "_autosummary/seldonian.safety_test.safety_test.SafetyTest", "_autosummary/seldonian.seldonian_algorithm", "_autosummary/seldonian.seldonian_algorithm.SeldonianAlgorithm", "_autosummary/seldonian.spec", "_autosummary/seldonian.spec.RLSpec", "_autosummary/seldonian.spec.Spec", "_autosummary/seldonian.spec.SupervisedSpec", "_autosummary/seldonian.spec.createRLSpec", "_autosummary/seldonian.spec.createSupervisedSpec", "_autosummary/seldonian.utils", "_autosummary/seldonian.utils.RL_utils", "_autosummary/seldonian.utils.RL_utils.argmax_multi", "_autosummary/seldonian.utils.RL_utils.clamp", "_autosummary/seldonian.utils.RL_utils.error", "_autosummary/seldonian.utils.io_utils", "_autosummary/seldonian.utils.io_utils.dir_path", "_autosummary/seldonian.utils.io_utils.load_json", "_autosummary/seldonian.utils.io_utils.load_pickle", "_autosummary/seldonian.utils.io_utils.save_json", "_autosummary/seldonian.utils.io_utils.save_pickle", "_autosummary/seldonian.utils.io_utils.yes_or_no_input", "_autosummary/seldonian.utils.plot_utils", "_autosummary/seldonian.utils.plot_utils.plot_gradient_descent", "_autosummary/seldonian.utils.stats_utils", "_autosummary/seldonian.utils.stats_utils.generate_data", "_autosummary/seldonian.utils.stats_utils.stddev", "_autosummary/seldonian.utils.stats_utils.tinv", "_autosummary/seldonian.utils.stats_utils.weighted_sum_gamma", "_autosummary/seldonian.utils.tutorial_utils", "_autosummary/seldonian.utils.tutorial_utils.generate_clipped_data", "_autosummary/seldonian.utils.tutorial_utils.generate_data", "_autosummary/seldonian.utils.tutorial_utils.make_synthetic_regression_dataset", "_autosummary/seldonian.warnings", "_autosummary/seldonian.warnings.custom_warnings", "_autosummary/seldonian.warnings.custom_warnings.custom_formatwarning", "api", "getting_started", "index", "overview"], "filenames": ["_autosummary/seldonian.rst", "_autosummary/seldonian.RL.rst", "_autosummary/seldonian.RL.Agents.rst", "_autosummary/seldonian.RL.Agents.Agent.rst", "_autosummary/seldonian.RL.Agents.Agent.Agent.rst", "_autosummary/seldonian.RL.Agents.Bases.rst", "_autosummary/seldonian.RL.Agents.Bases.Fourier.rst", "_autosummary/seldonian.RL.Agents.Bases.Fourier.Fourier.rst", "_autosummary/seldonian.RL.Agents.Discrete_Random_Agent.rst", "_autosummary/seldonian.RL.Agents.Discrete_Random_Agent.Discrete_Random_Agent.rst", "_autosummary/seldonian.RL.Agents.Function_Approximators.rst", "_autosummary/seldonian.RL.Agents.Function_Approximators.Function_Approximator.rst", "_autosummary/seldonian.RL.Agents.Function_Approximators.Function_Approximator.Function_Approximator.rst", "_autosummary/seldonian.RL.Agents.Function_Approximators.Linear_FA.rst", "_autosummary/seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_FA.rst", "_autosummary/seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_state_action_value_FA.rst", "_autosummary/seldonian.RL.Agents.Function_Approximators.Table.rst", "_autosummary/seldonian.RL.Agents.Function_Approximators.Table.Q_Table.rst", "_autosummary/seldonian.RL.Agents.Function_Approximators.Table.Table.rst", "_autosummary/seldonian.RL.Agents.Function_Approximators.Table.construct_Q_Table_From_Env_Description.rst", "_autosummary/seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.rst", "_autosummary/seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.Parameterized_non_learning_softmax_agent.rst", "_autosummary/seldonian.RL.Agents.Policies.rst", "_autosummary/seldonian.RL.Agents.Policies.Policy.rst", "_autosummary/seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy.rst", "_autosummary/seldonian.RL.Agents.Policies.Policy.Policy.rst", "_autosummary/seldonian.RL.Agents.Policies.Softmax.rst", "_autosummary/seldonian.RL.Agents.Policies.Softmax.Softmax.rst", "_autosummary/seldonian.RL.Agents.keyboard_gridworld.rst", "_autosummary/seldonian.RL.Agents.keyboard_gridworld.Keyboard_gridworld.rst", "_autosummary/seldonian.RL.Agents.mountain_car_rough_solution.rst", "_autosummary/seldonian.RL.Agents.mountain_car_rough_solution.Mountain_car_rough_solution.rst", "_autosummary/seldonian.RL.Env_Description.rst", "_autosummary/seldonian.RL.Env_Description.Env_Description.rst", "_autosummary/seldonian.RL.Env_Description.Env_Description.Env_Description.rst", "_autosummary/seldonian.RL.Env_Description.Env_Description.check_space_type.rst", "_autosummary/seldonian.RL.Env_Description.Spaces.rst", "_autosummary/seldonian.RL.Env_Description.Spaces.Continuous_Space.rst", "_autosummary/seldonian.RL.Env_Description.Spaces.Discrete_Space.rst", "_autosummary/seldonian.RL.RL_model.rst", "_autosummary/seldonian.RL.RL_model.RL_model.rst", "_autosummary/seldonian.RL.environments.rst", "_autosummary/seldonian.RL.environments.Environment.rst", "_autosummary/seldonian.RL.environments.Environment.Environment.rst", "_autosummary/seldonian.RL.environments.gridworld.rst", "_autosummary/seldonian.RL.environments.gridworld.Gridworld.rst", "_autosummary/seldonian.RL.environments.mountaincar.rst", "_autosummary/seldonian.RL.environments.mountaincar.Mountaincar.rst", "_autosummary/seldonian.RL.environments.n_step_mountaincar.rst", "_autosummary/seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar.rst", "_autosummary/seldonian.RL.hyperparams_and_settings.rst", "_autosummary/seldonian.RL.hyperparams_and_settings.define_hyperparameter_and_setting_dict.rst", "_autosummary/seldonian.candidate_selection.rst", "_autosummary/seldonian.candidate_selection.candidate_selection.rst", "_autosummary/seldonian.candidate_selection.candidate_selection.CandidateSelection.rst", "_autosummary/seldonian.dataset.rst", "_autosummary/seldonian.dataset.DataSet.rst", "_autosummary/seldonian.dataset.DataSetLoader.rst", "_autosummary/seldonian.dataset.Episode.rst", "_autosummary/seldonian.dataset.RLDataSet.rst", "_autosummary/seldonian.dataset.SupervisedDataSet.rst", "_autosummary/seldonian.models.rst", "_autosummary/seldonian.models.models.rst", "_autosummary/seldonian.models.models.ClassificationModel.rst", "_autosummary/seldonian.models.models.DummyClassifierModel.rst", "_autosummary/seldonian.models.models.LinearRegressionModel.rst", "_autosummary/seldonian.models.models.LogisticRegressionModel.rst", "_autosummary/seldonian.models.models.RandomClassifierModel.rst", "_autosummary/seldonian.models.models.RegressionModel.rst", "_autosummary/seldonian.models.models.SeldonianModel.rst", "_autosummary/seldonian.models.models.SquashedLinearRegressionModel.rst", "_autosummary/seldonian.models.models.SupervisedModel.rst", "_autosummary/seldonian.models.objectives.rst", "_autosummary/seldonian.models.objectives.False_Negative_Rate.rst", "_autosummary/seldonian.models.objectives.False_Positive_Rate.rst", "_autosummary/seldonian.models.objectives.IS_estimate.rst", "_autosummary/seldonian.models.objectives.Mean_Error.rst", "_autosummary/seldonian.models.objectives.Mean_Squared_Error.rst", "_autosummary/seldonian.models.objectives.Negative_Rate.rst", "_autosummary/seldonian.models.objectives.Positive_Rate.rst", "_autosummary/seldonian.models.objectives.True_Negative_Rate.rst", "_autosummary/seldonian.models.objectives.True_Positive_Rate.rst", "_autosummary/seldonian.models.objectives.evaluate_statistic.rst", "_autosummary/seldonian.models.objectives.gradient_Mean_Squared_Error.rst", "_autosummary/seldonian.models.objectives.gradient_logistic_loss.rst", "_autosummary/seldonian.models.objectives.logistic_loss.rst", "_autosummary/seldonian.models.objectives.sample_from_statistic.rst", "_autosummary/seldonian.models.objectives.vector_Error.rst", "_autosummary/seldonian.models.objectives.vector_False_Negative_Rate.rst", "_autosummary/seldonian.models.objectives.vector_False_Positive_Rate.rst", "_autosummary/seldonian.models.objectives.vector_IS_estimate.rst", "_autosummary/seldonian.models.objectives.vector_Negative_Rate.rst", "_autosummary/seldonian.models.objectives.vector_Positive_Rate.rst", "_autosummary/seldonian.models.objectives.vector_Squared_Error.rst", "_autosummary/seldonian.models.objectives.vector_True_Negative_Rate.rst", "_autosummary/seldonian.models.objectives.vector_True_Positive_Rate.rst", "_autosummary/seldonian.models.objectives.vector_logistic_loss.rst", "_autosummary/seldonian.models.objectives.vector_weighted_loss.rst", "_autosummary/seldonian.models.objectives.weighted_loss.rst", "_autosummary/seldonian.optimizers.rst", "_autosummary/seldonian.optimizers.gradient_descent.rst", "_autosummary/seldonian.optimizers.gradient_descent.gradient_descent_adam.rst", "_autosummary/seldonian.optimizers.gradient_descent.setup_gradients.rst", "_autosummary/seldonian.parse_tree.rst", "_autosummary/seldonian.parse_tree.nodes.rst", "_autosummary/seldonian.parse_tree.nodes.BaseNode.rst", "_autosummary/seldonian.parse_tree.nodes.CVARSQEBaseNode.rst", "_autosummary/seldonian.parse_tree.nodes.ConstantNode.rst", "_autosummary/seldonian.parse_tree.nodes.InternalNode.rst", "_autosummary/seldonian.parse_tree.nodes.MEDCustomBaseNode.rst", "_autosummary/seldonian.parse_tree.nodes.Node.rst", "_autosummary/seldonian.parse_tree.operators.rst", "_autosummary/seldonian.parse_tree.parse_tree.rst", "_autosummary/seldonian.parse_tree.parse_tree.ParseTree.rst", "_autosummary/seldonian.parse_tree.parse_tree.make_parse_trees_from_constraints.rst", "_autosummary/seldonian.safety_test.rst", "_autosummary/seldonian.safety_test.safety_test.rst", "_autosummary/seldonian.safety_test.safety_test.SafetyTest.rst", "_autosummary/seldonian.seldonian_algorithm.rst", "_autosummary/seldonian.seldonian_algorithm.SeldonianAlgorithm.rst", "_autosummary/seldonian.spec.rst", "_autosummary/seldonian.spec.RLSpec.rst", "_autosummary/seldonian.spec.Spec.rst", "_autosummary/seldonian.spec.SupervisedSpec.rst", "_autosummary/seldonian.spec.createRLSpec.rst", "_autosummary/seldonian.spec.createSupervisedSpec.rst", "_autosummary/seldonian.utils.rst", "_autosummary/seldonian.utils.RL_utils.rst", "_autosummary/seldonian.utils.RL_utils.argmax_multi.rst", "_autosummary/seldonian.utils.RL_utils.clamp.rst", "_autosummary/seldonian.utils.RL_utils.error.rst", "_autosummary/seldonian.utils.io_utils.rst", "_autosummary/seldonian.utils.io_utils.dir_path.rst", "_autosummary/seldonian.utils.io_utils.load_json.rst", "_autosummary/seldonian.utils.io_utils.load_pickle.rst", "_autosummary/seldonian.utils.io_utils.save_json.rst", "_autosummary/seldonian.utils.io_utils.save_pickle.rst", "_autosummary/seldonian.utils.io_utils.yes_or_no_input.rst", "_autosummary/seldonian.utils.plot_utils.rst", "_autosummary/seldonian.utils.plot_utils.plot_gradient_descent.rst", "_autosummary/seldonian.utils.stats_utils.rst", "_autosummary/seldonian.utils.stats_utils.generate_data.rst", "_autosummary/seldonian.utils.stats_utils.stddev.rst", "_autosummary/seldonian.utils.stats_utils.tinv.rst", "_autosummary/seldonian.utils.stats_utils.weighted_sum_gamma.rst", "_autosummary/seldonian.utils.tutorial_utils.rst", "_autosummary/seldonian.utils.tutorial_utils.generate_clipped_data.rst", "_autosummary/seldonian.utils.tutorial_utils.generate_data.rst", "_autosummary/seldonian.utils.tutorial_utils.make_synthetic_regression_dataset.rst", "_autosummary/seldonian.warnings.rst", "_autosummary/seldonian.warnings.custom_warnings.rst", "_autosummary/seldonian.warnings.custom_warnings.custom_formatwarning.rst", "api.rst", "getting_started.rst", "index.rst", "overview.rst"], "titles": ["seldonian", "seldonian.RL", "seldonian.RL.Agents", "seldonian.RL.Agents.Agent", "seldonian.RL.Agents.Agent.Agent", "seldonian.RL.Agents.Bases", "seldonian.RL.Agents.Bases.Fourier", "seldonian.RL.Agents.Bases.Fourier.Fourier", "seldonian.RL.Agents.Discrete_Random_Agent", "seldonian.RL.Agents.Discrete_Random_Agent.Discrete_Random_Agent", "seldonian.RL.Agents.Function_Approximators", "seldonian.RL.Agents.Function_Approximators.Function_Approximator", "seldonian.RL.Agents.Function_Approximators.Function_Approximator.Function_Approximator", "seldonian.RL.Agents.Function_Approximators.Linear_FA", "seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_FA", "seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_state_action_value_FA", "seldonian.RL.Agents.Function_Approximators.Table", "seldonian.RL.Agents.Function_Approximators.Table.Q_Table", "seldonian.RL.Agents.Function_Approximators.Table.Table", "seldonian.RL.Agents.Function_Approximators.Table.construct_Q_Table_From_Env_Description", "seldonian.RL.Agents.Parameterized_non_learning_softmax_agent", "seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.Parameterized_non_learning_softmax_agent", "seldonian.RL.Agents.Policies", "seldonian.RL.Agents.Policies.Policy", "seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy", "seldonian.RL.Agents.Policies.Policy.Policy", "seldonian.RL.Agents.Policies.Softmax", "seldonian.RL.Agents.Policies.Softmax.Softmax", "seldonian.RL.Agents.keyboard_gridworld", "seldonian.RL.Agents.keyboard_gridworld.Keyboard_gridworld", "seldonian.RL.Agents.mountain_car_rough_solution", "seldonian.RL.Agents.mountain_car_rough_solution.Mountain_car_rough_solution", "seldonian.RL.Env_Description", "seldonian.RL.Env_Description.Env_Description", "seldonian.RL.Env_Description.Env_Description.Env_Description", "seldonian.RL.Env_Description.Env_Description.check_space_type", "seldonian.RL.Env_Description.Spaces", "seldonian.RL.Env_Description.Spaces.Continuous_Space", "seldonian.RL.Env_Description.Spaces.Discrete_Space", "seldonian.RL.RL_model", "seldonian.RL.RL_model.RL_model", "seldonian.RL.environments", "seldonian.RL.environments.Environment", "seldonian.RL.environments.Environment.Environment", "seldonian.RL.environments.gridworld", "seldonian.RL.environments.gridworld.Gridworld", "seldonian.RL.environments.mountaincar", "seldonian.RL.environments.mountaincar.Mountaincar", "seldonian.RL.environments.n_step_mountaincar", "seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar", "seldonian.RL.hyperparams_and_settings", "seldonian.RL.hyperparams_and_settings.define_hyperparameter_and_setting_dict", "seldonian.candidate_selection", "seldonian.candidate_selection.candidate_selection", "seldonian.candidate_selection.candidate_selection.CandidateSelection", "seldonian.dataset", "seldonian.dataset.DataSet", "seldonian.dataset.DataSetLoader", "seldonian.dataset.Episode", "seldonian.dataset.RLDataSet", "seldonian.dataset.SupervisedDataSet", "seldonian.models", "seldonian.models.models", "seldonian.models.models.ClassificationModel", "seldonian.models.models.DummyClassifierModel", "seldonian.models.models.LinearRegressionModel", "seldonian.models.models.LogisticRegressionModel", "seldonian.models.models.RandomClassifierModel", "seldonian.models.models.RegressionModel", "seldonian.models.models.SeldonianModel", "seldonian.models.models.SquashedLinearRegressionModel", "seldonian.models.models.SupervisedModel", "seldonian.models.objectives", "seldonian.models.objectives.False_Negative_Rate", "seldonian.models.objectives.False_Positive_Rate", "seldonian.models.objectives.IS_estimate", "seldonian.models.objectives.Mean_Error", "seldonian.models.objectives.Mean_Squared_Error", "seldonian.models.objectives.Negative_Rate", "seldonian.models.objectives.Positive_Rate", "seldonian.models.objectives.True_Negative_Rate", "seldonian.models.objectives.True_Positive_Rate", "seldonian.models.objectives.evaluate_statistic", "seldonian.models.objectives.gradient_Mean_Squared_Error", "seldonian.models.objectives.gradient_logistic_loss", "seldonian.models.objectives.logistic_loss", "seldonian.models.objectives.sample_from_statistic", "seldonian.models.objectives.vector_Error", "seldonian.models.objectives.vector_False_Negative_Rate", "seldonian.models.objectives.vector_False_Positive_Rate", "seldonian.models.objectives.vector_IS_estimate", "seldonian.models.objectives.vector_Negative_Rate", "seldonian.models.objectives.vector_Positive_Rate", "seldonian.models.objectives.vector_Squared_Error", "seldonian.models.objectives.vector_True_Negative_Rate", "seldonian.models.objectives.vector_True_Positive_Rate", "seldonian.models.objectives.vector_logistic_loss", "seldonian.models.objectives.vector_weighted_loss", "seldonian.models.objectives.weighted_loss", "seldonian.optimizers", "seldonian.optimizers.gradient_descent", "seldonian.optimizers.gradient_descent.gradient_descent_adam", "seldonian.optimizers.gradient_descent.setup_gradients", "seldonian.parse_tree", "seldonian.parse_tree.nodes", "seldonian.parse_tree.nodes.BaseNode", "seldonian.parse_tree.nodes.CVARSQEBaseNode", "seldonian.parse_tree.nodes.ConstantNode", "seldonian.parse_tree.nodes.InternalNode", "seldonian.parse_tree.nodes.MEDCustomBaseNode", "seldonian.parse_tree.nodes.Node", "seldonian.parse_tree.operators", "seldonian.parse_tree.parse_tree", "seldonian.parse_tree.parse_tree.ParseTree", "seldonian.parse_tree.parse_tree.make_parse_trees_from_constraints", "seldonian.safety_test", "seldonian.safety_test.safety_test", "seldonian.safety_test.safety_test.SafetyTest", "seldonian.seldonian_algorithm", "seldonian.seldonian_algorithm.SeldonianAlgorithm", "seldonian.spec", "seldonian.spec.RLSpec", "seldonian.spec.Spec", "seldonian.spec.SupervisedSpec", "seldonian.spec.createRLSpec", "seldonian.spec.createSupervisedSpec", "seldonian.utils", "seldonian.utils.RL_utils", "seldonian.utils.RL_utils.argmax_multi", "seldonian.utils.RL_utils.clamp", "seldonian.utils.RL_utils.error", "seldonian.utils.io_utils", "seldonian.utils.io_utils.dir_path", "seldonian.utils.io_utils.load_json", "seldonian.utils.io_utils.load_pickle", "seldonian.utils.io_utils.save_json", "seldonian.utils.io_utils.save_pickle", "seldonian.utils.io_utils.yes_or_no_input", "seldonian.utils.plot_utils", "seldonian.utils.plot_utils.plot_gradient_descent", "seldonian.utils.stats_utils", "seldonian.utils.stats_utils.generate_data", "seldonian.utils.stats_utils.stddev", "seldonian.utils.stats_utils.tinv", "seldonian.utils.stats_utils.weighted_sum_gamma", "seldonian.utils.tutorial_utils", "seldonian.utils.tutorial_utils.generate_clipped_data", "seldonian.utils.tutorial_utils.generate_data", "seldonian.utils.tutorial_utils.make_synthetic_regression_dataset", "seldonian.warnings", "seldonian.warnings.custom_warnings", "seldonian.warnings.custom_warnings.custom_formatwarning", "API", "Getting Started", "Seldonian Engine documentation", "Overview"], "terms": {"engin": [0, 111, 153, 155], "packag": [0, 155], "modul": [0, 1, 2, 5, 10, 22, 32, 41, 52, 53, 61, 62, 99, 103, 111, 112, 115, 116, 118, 120, 121, 126, 149, 151, 155], "class": [3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 78, 79, 80, 81, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 116, 117, 118, 119, 120, 121, 122, 123, 155], "base": [4, 9, 12, 14, 15, 17, 18, 21, 24, 25, 27, 29, 31, 34, 37, 38, 40, 43, 45, 47, 49, 54, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 105, 106, 107, 108, 109, 110, 111, 113, 117, 119, 121, 122, 123, 154, 155], "object": [4, 7, 12, 19, 21, 24, 25, 27, 34, 37, 38, 40, 43, 45, 54, 56, 57, 58, 59, 60, 69, 101, 105, 106, 109, 110, 113, 117, 119, 120, 121, 122, 123, 124, 125, 133, 134, 135, 136, 139, 154], "all": [4, 21, 43, 56, 60, 63, 68, 69, 71, 75, 110, 113, 117, 155], "mani": 4, "method": [4, 7, 9, 12, 14, 15, 17, 18, 21, 24, 25, 27, 29, 31, 34, 37, 38, 40, 43, 45, 47, 49, 54, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 101, 105, 106, 107, 108, 109, 110, 113, 117, 119, 121, 122, 123, 155], "requir": [4, 111, 113, 122, 153, 155], "overrid": [4, 43, 45, 47, 49, 70, 105, 106, 109, 155], "child": [4, 43, 45, 47, 49, 110, 111, 113, 121, 122, 123, 155], "us": [4, 21, 37, 38, 43, 47, 49, 54, 57, 63, 65, 66, 68, 69, 70, 71, 101, 105, 106, 109, 111, 113, 117, 119, 121, 122, 123, 125, 143, 144, 153, 155], "__init__": [4, 7, 9, 12, 14, 15, 17, 18, 21, 24, 25, 27, 29, 31, 34, 37, 38, 40, 43, 45, 47, 49, 54, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 105, 106, 107, 108, 109, 110, 113, 117, 119, 121, 122, 123], "__repr__": [4, 7, 9, 12, 14, 15, 17, 18, 21, 24, 25, 27, 29, 31, 34, 37, 38, 40, 43, 45, 47, 49, 54, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 105, 106, 107, 108, 109, 110, 113, 117, 119, 121, 122, 123], "return": [4, 7, 9, 12, 14, 15, 17, 18, 19, 21, 24, 25, 27, 29, 31, 34, 37, 38, 40, 43, 45, 47, 49, 54, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 101, 105, 106, 109, 111, 113, 117, 119, 121, 122, 123, 137, 139, 142, 143, 144, 155], "repr": [4, 7, 9, 12, 14, 15, 17, 18, 21, 24, 25, 27, 29, 31, 34, 37, 38, 40, 43, 45, 47, 49, 54, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 113, 117, 119, 121, 122, 123], "self": [4, 7, 9, 12, 14, 15, 17, 18, 21, 24, 25, 27, 29, 31, 34, 37, 38, 40, 43, 45, 47, 49, 54, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 113, 117, 119, 121, 122, 123], "choose_act": [4, 9, 21, 27, 29, 31], "observ": [4, 9, 21, 24, 27, 29, 31, 34, 37, 38, 43, 47, 49, 58, 64, 66, 67, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 105, 106, 109], "choos": [4, 9, 29, 31, 155], "an": [4, 9, 19, 21, 24, 27, 29, 31, 34, 43, 45, 47, 49, 105, 106, 110, 111, 121, 122, 123, 132, 133, 134, 135, 136, 137, 144, 155], "action": [4, 9, 17, 21, 27, 29, 31, 34, 37, 38, 43, 45, 47, 49, 57, 58], "given": [4, 9, 17, 19, 21, 27, 29, 31, 43, 45, 47, 49, 54, 105, 106, 109, 113, 117, 119, 121, 122, 123, 155], "To": [4, 9, 29, 31, 153, 155], "overridden": [4, 9, 29, 31], "paramet": [4, 9, 17, 18, 19, 21, 24, 27, 29, 31, 34, 35, 37, 38, 43, 45, 47, 49, 54, 56, 57, 58, 59, 60, 64, 65, 66, 67, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 101, 105, 106, 107, 108, 109, 110, 113, 117, 119, 121, 122, 123, 124, 125, 132, 133, 134, 135, 136, 137, 139, 141, 142, 143, 144, 146, 147, 155], "The": [4, 9, 17, 18, 21, 27, 29, 31, 37, 45, 54, 56, 57, 60, 64, 65, 66, 67, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 101, 105, 106, 107, 108, 109, 110, 111, 113, 117, 119, 121, 122, 123, 124, 125, 136, 137, 139, 141, 144, 146, 147, 154, 155], "current": [4, 9, 21, 24, 27, 29, 31, 43, 45, 47, 49, 63, 155], "type": [4, 9, 19, 21, 24, 27, 29, 31, 35, 45, 54, 64, 65, 66, 67, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 101, 105, 106, 109, 113, 117, 119, 142, 143, 144, 155], "depend": [4, 9, 21, 24, 27, 29, 31, 105, 109, 155], "environ": [4, 9, 17, 18, 19, 21, 24, 27, 29, 31, 34, 121, 124, 154, 155], "get_prob_this_act": [4, 9, 21, 27, 29, 31], "get": [4, 9, 17, 21, 24, 27, 29, 31, 34, 37, 38, 43, 45, 47, 49, 54, 113, 117, 119, 154], "probabl": [4, 9, 17, 21, 27, 29, 31, 58, 64, 66, 67, 73, 74, 78, 79, 80, 81, 88, 89, 91, 92, 94, 95, 106, 113, 143, 155], "provid": [4, 9, 29, 31, 34, 82, 86, 113, 119, 121, 122, 123, 137, 155], "i": [4, 9, 21, 24, 27, 29, 31, 37, 45, 54, 70, 73, 74, 75, 78, 79, 80, 81, 88, 89, 90, 91, 92, 94, 95, 98, 101, 105, 106, 107, 108, 109, 110, 111, 113, 117, 119, 121, 122, 123, 132, 137, 153, 154, 155], "updat": [4, 9, 21, 29, 31, 45], "next_observ": [4, 9, 21, 29, 31], "reward": [4, 9, 21, 29, 31, 45, 57, 58, 111, 144], "termin": [4, 9, 21, 29, 31, 43, 45, 47, 49], "": [4, 9, 21, 29, 31, 34, 105, 106, 109, 113, 142, 143, 155], "accord": [4, 9, 21, 29, 31], "learn": [4, 9, 21, 29, 31, 54, 56, 57, 60, 62, 63, 68, 69, 71, 101, 105, 106, 109, 111, 113, 117, 123, 154, 155], "rule": [4, 9, 21, 29, 31], "overriden": [4, 9, 29, 31], "after": [4, 9, 21, 29, 31], "taken": [4, 9, 21, 29, 31, 34], "take": [4, 9, 21, 29, 31, 155], "bool": [4, 9, 21, 29, 31, 45, 54, 57, 101, 110, 113, 117, 121, 122, 123, 124, 125, 137, 139], "whether": [4, 9, 21, 24, 27, 29, 31, 45, 54, 57, 60, 101, 110, 113, 117, 119, 121, 122, 123, 132, 139, 155], "hyperparam_and_setting_dict": [7, 21, 24, 27], "env_desc": 7, "env_descript": [9, 14, 15, 19, 21, 24, 27, 29, 45, 154], "basi": [14, 15, 24, 27], "function": [16, 21, 24, 27, 33, 45, 50, 54, 70, 72, 100, 101, 105, 111, 112, 113, 120, 121, 122, 123, 124, 125, 127, 131, 138, 139, 140, 143, 145, 150, 155], "min_stat": [17, 18], "num_stat": [17, 18, 45], "num_act": 17, "A": [17, 19, 43, 45, 47, 49, 59, 90, 111, 113, 121, 122, 123, 132, 133, 134, 135, 136, 154], "q": [17, 19], "contain": [17, 21, 45, 54, 57, 60, 62, 75, 82, 86, 90, 101, 105, 106, 109, 111, 113, 117, 119, 121, 122, 123, 124, 125, 155], "transit": [17, 43, 45, 47, 49], "int": [17, 18, 38, 45, 54, 101, 105, 106, 109, 110, 113, 141, 143, 146, 147], "smallest": [17, 18], "ob": [17, 18, 21, 27, 34, 43, 45, 47, 49, 57, 113], "number": [17, 18, 24, 27, 34, 37, 38, 45, 79, 101, 105, 106, 109, 113, 141, 146, 147, 155], "total": [17, 18, 38, 113], "state": [17, 18, 21, 34, 45, 155], "from_environment_state_to_0_indexed_st": [17, 18], "env_stat": [17, 18], "convert": [17, 18], "0": [17, 18, 37, 67, 70, 73, 74, 78, 79, 80, 81, 88, 89, 91, 92, 94, 95, 101, 105, 106, 109, 113, 117, 121, 122, 123, 141, 144, 146, 147, 155], "index": [17, 18, 110, 144], "you": [17, 18, 57, 113, 136, 139, 153, 154, 155], "want": [17, 18, 35, 57, 113, 136, 139, 153, 155], "get_action_values_given_st": 17, "state_number_not_zero_index": 17, "possibl": [17, 21, 34, 43, 45, 47, 49, 106, 117, 155], "valu": [17, 38, 54, 87, 93, 101, 105, 106, 107, 109, 113, 117, 119, 137, 139, 155], "environment": 17, "specif": [17, 24, 27, 119, 120, 121, 122, 123, 155], "arrai": [17, 21, 24, 27, 37, 54, 57, 96, 97, 111, 144, 155], "get_action_values_given_zero_indexed_st": 17, "zero_indexed_state_numb": 17, "hold": [18, 56, 58, 59, 60], "capabl": 18, "reindex": 18, "creat": [19, 24, 27, 45, 57, 105, 106, 109, 113, 119, 124, 125, 155], "descript": [19, 24, 27, 43, 45, 47, 49, 155], "access": [19, 21, 24, 27, 34], "attribut": [19, 21, 24, 27, 34, 45, 59, 60, 113, 155], "q_tabl": [19, 21, 154], "parametr": 21, "softmax": [21, 154, 155], "pi": [21, 58, 59], "frac": 21, "e": [21, 54, 56, 57, 59, 60, 82, 86, 101, 105, 106, 109, 113, 117, 121, 122, 123, 155], "p": [21, 143], "sum_": 21, "addit": 21, "info": 21, "about": [21, 101, 113, 155], "data": [21, 54, 57, 75, 105, 106, 109, 113, 117, 119, 121, 122, 123, 124, 125, 135, 136, 141, 142, 146, 147, 155], "gener": [21, 141, 146, 147, 155], "variabl": [21, 37, 45, 105, 106, 107, 109, 110, 111, 113, 117, 121, 122, 123], "fa": 21, "approxim": [21, 24, 27], "polici": [21, 40, 111, 124, 154, 155], "select": [21, 27, 52, 53, 54, 99, 105, 106, 109, 117, 119, 121, 122, 123, 154], "get_action_valu": 21, "from": [21, 24, 27, 57, 65, 70, 103, 109, 112, 113, 121, 133, 134, 135, 137, 155], "thi": [21, 43, 45, 47, 49, 63, 68, 69, 71, 78, 79, 88, 89, 91, 92, 94, 95, 105, 106, 109, 110, 113, 119, 121, 154, 155], "get_param": [21, 24, 27], "weight": [21, 24, 27, 54, 64, 65, 66, 67, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 101, 105, 106, 109, 111, 113, 117, 119, 121, 122, 123, 144, 155], "float": [21, 27, 45, 64, 66, 67, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 101, 105, 106, 107, 109, 110, 113, 117, 119, 121, 122, 123, 124, 125, 141, 142, 143, 144, 146, 147, 155], "set_new_param": [21, 24, 27], "new_param": [21, 24, 27], "set": [21, 24, 27, 103, 107, 119, 155], "Not": [21, 111], "implement": [21, 43, 45, 47, 49, 64, 65, 66, 67, 70, 101, 143, 155], "construct_basis_and_linear_fa": [24, 27], "linear": [24, 27, 65, 70], "dictionari": [24, 27, 101, 111, 139], "hyperparameter_and_setting_dict": [24, 27], "specifi": [24, 27, 111, 113, 155], "episod": [24, 27, 57, 59, 75, 90, 154], "per": [24, 27], "trial": [24, 27], "make_state_action_fa": [24, 27], "space": [24, 27, 34, 35, 45, 154], "discret": [24, 27, 34, 35, 38], "contin": [24, 27, 35], "discrete_action_polici": [27, 154], "observation_spac": 34, "action_spac": 34, "describ": [34, 45, 57], "conveni": [34, 113, 124, 125, 155], "continu": [34, 37], "made": 34, "get_min_act": 34, "first": [34, 60, 113, 154, 155], "get_min_st": 34, "get_num_act": 34, "get_num_observation_dim": 34, "dimens": [34, 37, 141, 146, 147], "get_num_st": 34, "also": [34, 107, 108, 110, 113, 155], "call": [34, 105, 106, 109, 155], "here": [34, 111, 155], "desired_typ": 35, "valid": [35, 37, 113, 155], "ensur": [35, 155], "ar": [35, 37, 54, 106, 111, 113, 117, 121, 122, 123, 144, 154, 155], "equival": [35, 105, 106, 109], "discrete_spac": [35, 154], "continous_spac": 35, "which": [35, 78, 105, 106, 108, 109, 111, 113, 121, 122, 123, 155], "we": [35, 105, 106, 109, 113, 153, 155], "match": 35, "bound": [37, 54, 101, 105, 106, 107, 109, 110, 111, 113, 117, 121, 122, 123, 155], "np": 37, "ndarrai": [37, 54, 64, 65, 66, 67, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 105, 106, 109, 117, 119, 142, 144], "shape": [37, 155], "num_dim": 37, "2": [37, 109, 135, 155], "defin": [37, 106, 111, 155], "min": [37, 38, 109, 155], "max": [37, 38, 155], "each": [37, 58, 59, 64, 66, 67, 73, 74, 78, 79, 80, 81, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 105, 106, 109, 111, 113, 155], "For": [37, 111, 155], "exampl": [37, 155], "3d": 37, "x": [37, 64, 65, 66, 67, 70, 73, 74, 76, 77, 78, 79, 80, 81, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 109, 141, 146, 147], "1": [37, 73, 74, 78, 79, 80, 81, 88, 89, 91, 92, 94, 95, 98, 105, 106, 117, 121, 141, 146, 147, 151, 155], "y": [37, 65, 66, 70, 73, 74, 76, 77, 80, 81, 83, 84, 85, 87, 88, 89, 93, 94, 95, 96, 97, 98, 109, 141, 146, 147], "5": [37, 67, 98, 121, 122, 123, 155], "4": [37, 106, 111, 155], "z": [37, 106], "12": 37, "6": [37, 123, 155], "8": [37, 155], "would": [37, 54, 101, 111, 121, 122, 123, 155], "check_bounds_valid": 37, "check": [37, 45, 113, 132], "format": [37, 57, 155], "maximum": [37, 38, 45, 106, 113, 117, 155], "larger": [37, 106], "than": [37, 106, 113, 117, 155], "minimum": [37, 38, 106, 113, 117, 155], "get_num_dim": 37, "get_num_valu": 38, "env": 40, "get_env_descript": [43, 45, 47, 49], "get_observ": [43, 45, 47, 49], "reset": [43, 45, 47, 49, 113], "initi": [43, 45, 47, 49, 54, 101, 113, 121, 122, 123], "start_visu": [43, 45, 47, 49], "turn": [43, 45, 47, 49], "visual": [43, 45, 47, 49, 107, 108, 110, 113, 153], "debugg": [43, 45, 47, 49], "stop_visu": [43, 45, 47, 49], "off": [43, 45, 47, 49], "new": [43, 47, 49, 111, 154, 155], "print": [43, 45, 47, 49], "out": [43, 45, 47, 49, 119, 155], "debug": [43, 47, 49], "size": 45, "3": [45, 106], "squar": [45, 76, 77, 83, 93, 106, 111, 155], "arbitrari": 45, "grid": 45, "cell": 45, "side": [45, 113], "distinct": 45, "terminal_st": 45, "occupi": 45, "time": [45, 98], "timestep": [45, 58], "max_tim": 45, "allow": 45, "gamma": [45, 117, 144], "discount": [45, 117], "factor": [45, 117], "calcul": [45, 73, 74, 75, 76, 77, 78, 79, 80, 81, 85, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 101, 105, 106, 109, 113, 117, 121, 122, 123, 144, 155], "expect": [45, 105, 106, 109, 111], "create_env_descript": 45, "is_in_goal_st": 45, "goal": [45, 155], "true": [45, 80, 81, 94, 95, 101, 105, 106, 109, 111, 117, 121, 122, 123, 148, 155], "fals": [45, 54, 57, 60, 73, 74, 80, 81, 82, 88, 89, 98, 101, 111, 113, 119, 121, 122, 123, 124, 125, 135, 136, 139, 148, 155], "go": [45, 155], "back": [45, 121, 122, 123], "between": [45, 73, 74, 78, 79, 80, 81, 88, 89, 91, 92, 94, 95, 109, 155], "reach": 45, "next": 45, "update_posit": 45, "helper": [45, 113], "posit": [45, 64, 66, 67, 73, 74, 78, 79, 80, 81, 82, 88, 89, 91, 92, 95, 98, 106, 111, 113, 155], "inform": [45, 155], "candid": [52, 53, 54, 99, 105, 106, 109, 117, 119, 121, 122, 123, 154], "model": [54, 57, 101, 105, 106, 109, 117, 119, 121, 122, 123, 125, 154], "candidate_dataset": 54, "n_safeti": [54, 106], "parse_tre": [54, 117, 121, 122, 123, 154, 155], "primary_object": [54, 101, 102, 117, 119, 121, 122, 123], "optimization_techniqu": [54, 121, 122, 123, 155], "barrier_funct": [54, 121, 122, 123, 155], "optim": [54, 119, 121, 122, 123, 154, 155], "powel": [54, 155], "initial_solut": 54, "none": [54, 57, 110, 121, 122, 123], "regim": [54, 56, 57, 60, 111, 113, 114, 117, 155], "supervised_learn": [54, 56, 57, 60, 113, 114, 117, 155], "write_logfil": 54, "store_valu": [54, 101], "kwarg": [54, 56, 57, 59, 60, 101, 105, 106, 107, 108, 109, 113, 117, 124, 151], "run": [54, 55, 61, 101, 116, 117, 118, 119, 120, 121, 122, 123, 154], "seldonianmodel": [54, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 105, 106, 109, 117, 121, 122, 123, 154], "dataset": [54, 75, 87, 93, 105, 106, 109, 117, 119, 121, 122, 123, 124, 125, 154], "length": [54, 106, 111], "safeti": [54, 105, 106, 109, 115, 116, 117, 119, 121, 122, 123, 154], "when": [54, 73, 74, 80, 81, 105, 113, 155], "predict": [54, 60, 64, 65, 66, 67, 70, 79, 88, 89, 94, 95, 155], "confid": [54, 105, 106, 109, 110, 113, 121, 122, 123, 124, 125, 155], "dure": [54, 57, 60, 111, 119, 121, 122, 123, 155], "list": [54, 56, 57, 58, 59, 60, 105, 106, 109, 111, 113, 117, 121, 122, 123, 124, 125, 155], "parsetre": [54, 117, 121, 122, 154, 155], "pars": [54, 103, 105, 107, 108, 109, 110, 111, 112, 113, 117, 121, 122, 123, 153, 155], "tree": [54, 103, 105, 107, 108, 109, 110, 111, 112, 113, 117, 121, 122, 123, 153, 155], "behavior": [54, 101, 103, 111, 112, 113, 117, 121, 122, 123, 154], "constraint": [54, 101, 103, 111, 112, 113, 117, 121, 122, 123, 124, 125, 139, 154], "sole": [54, 101, 121, 122, 123], "absenc": [54, 101, 121, 122, 123], "loss": [54, 84, 85, 96, 97, 98, 101, 111, 121, 122, 123], "str": [54, 56, 57, 59, 60, 82, 86, 101, 105, 106, 107, 108, 109, 110, 113, 117, 119, 121, 122, 123, 124, 125, 132, 133, 134, 135, 136, 137, 139], "g": [54, 56, 57, 59, 60, 82, 86, 101, 105, 106, 109, 113, 117, 121, 122, 123, 139, 155], "gradient_desc": [54, 121, 122, 123, 154, 155], "string": [54, 107, 108, 110, 111, 113, 121, 122, 123, 124, 125, 154], "name": [54, 56, 57, 59, 60, 82, 86, 101, 105, 106, 107, 108, 109, 110, 111, 113, 121, 122, 123, 155], "numpi": [54, 64, 65, 66, 67, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 105, 106, 109, 117, 119, 142, 144], "categori": [54, 56, 57, 60, 113, 117, 151], "machin": [54, 56, 57, 60, 62, 63, 68, 69, 71, 105, 106, 109, 113, 117, 154, 155], "algorithm": [54, 55, 56, 57, 60, 61, 109, 113, 117, 118, 119, 120, 121, 122, 123, 155], "reinforcement_learn": [54, 56, 57, 60, 113, 117, 155], "write": [54, 119, 155], "output": [54, 155], "disk": [54, 57], "evaluate_primary_object": [54, 117, 119], "theta": [54, 64, 65, 66, 67, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 101, 105, 106, 109, 117, 119, 155], "primari": [54, 101, 117, 119, 121, 122, 123, 139, 155], "wrapper": [54, 117, 119, 133, 134, 135, 136], "where": [54, 98, 101, 105, 106, 109, 113, 117, 119, 124, 125, 139, 144, 155], "fix": [54, 106, 117, 119], "input": [54, 64, 67, 105, 106, 109, 132, 133, 135, 137, 144, 155], "gradient": [54, 83, 84, 101, 121, 122, 123, 139, 155], "descent": [54, 101, 139, 155], "get_constraint_upper_bound": 54, "upper": [54, 101, 105, 106, 107, 108, 109, 110, 113, 117, 155], "objective_with_barri": 54, "minimization_techniqu": 54, "barrier": [54, 155], "add": [54, 60, 113], "larg": 54, "penalti": 54, "ani": [54, 155], "violat": [54, 113, 155], "nsf": [54, 119, 155], "build": [55, 103, 112, 113, 120], "load": [55, 57, 133, 134, 135, 155], "meta_inform": [56, 59, 60], "datafram": [56, 57, 59, 60, 75, 90, 105, 106, 109, 113], "metadata": [56, 57, 59, 60, 75, 101, 124, 125, 155], "column": [56, 57, 60, 105, 106, 109, 113, 114, 155], "load_rl_dataset_from_csv": 57, "filenam": [57, 133, 134, 135, 136, 151, 155], "metadata_filenam": [57, 155], "rldataset": [57, 154, 155], "file": [57, 119, 124, 125, 133, 134, 135, 136, 155], "csv": 57, "episode_index": 57, "probability_of_act": 57, "load_rl_dataset_from_datafram": 57, "pickl": [57, 119, 134, 136], "panda": [57, 60, 90, 109], "doe": [57, 109, 113, 154], "need": [57, 109, 110, 113, 120, 155], "have": [57, 64, 66, 67, 98, 113, 155], "assign": [57, 113], "alreadi": [57, 113, 155], "load_rl_dataset_from_episode_list": 57, "load_supervised_dataset": [57, 155], "include_sensitive_column": [57, 60], "include_intercept_term": [57, 60, 148], "file_typ": 57, "superviseddataset": [57, 154, 155], "sensit": [57, 60, 155], "train": [57, 60, 65, 66, 70, 155], "pre": 57, "append": 57, "ones": [57, 60], "featur": [57, 64, 65, 66, 67, 70, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 105, 106, 109, 155], "default": [57, 101, 110, 113, 121, 122, 123, 125, 155], "extens": 57, "rl": [58, 59, 113, 117, 121, 144, 154, 155], "o": 59, "r": [59, 84], "df": 60, "label_column": [60, 155], "sensitive_column_nam": 60, "supervis": [60, 71, 111, 113, 123, 155], "full": [60, 109, 139, 155], "target": 60, "label": [60, 64, 65, 66, 67, 70, 76, 77, 82, 83, 84, 85, 86, 87, 88, 89, 93, 94, 95, 96, 97, 98, 105, 106, 109, 139, 155], "includ": [60, 101, 113, 155], "main": [62, 112], "supervisedmodel": [63, 68, 154], "parent": [63, 68, 69, 70, 71, 106, 109, 155], "classif": [63, 111, 113, 123, 155], "librari": [63, 68, 69, 71, 101, 121, 154, 155], "onli": [63, 106, 117, 155], "support": [63, 111, 155], "binari": 63, "classificationmodel": [64, 66, 67, 154, 155], "classifi": [64, 67], "alwai": [64, 67, 105, 109, 113, 155], "regardless": [64, 67], "regressionmodel": [65, 154, 155], "regress": [65, 66, 68, 70, 109, 111, 113, 114, 123, 155], "fit": [65, 66, 70, 155], "pair": [65, 70, 109, 155], "nxm": [65, 70], "nx1": [65, 70], "logist": [66, 84, 85, 96, 111], "ha": [67, 111, 155], "prob": 67, "linearregressionmodel": [70, 154, 155], "squash": 70, "sever": [70, 106, 109, 155], "assum": 70, "intercept": 70, "origin": 70, "neg": [73, 74, 78, 80, 88, 89, 91, 94, 98, 111, 113], "rate": [73, 74, 78, 79, 80, 81, 82, 88, 89, 91, 92, 94, 95, 101, 111, 113, 155], "whole": [73, 74, 76, 77, 78, 79, 80, 81, 82, 85, 113], "sampl": [73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 90, 96, 97, 106, 142, 155], "sum": [73, 74, 78, 79, 80, 81, 144, 155], "being": [73, 74, 78, 79, 80, 81, 88, 89, 91, 92, 94, 95, 105], "fact": [73, 74, 80, 81], "wa": [73, 74, 80, 81, 109, 113, 155], "instanc": [73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 121, 122, 123], "data_dict": [75, 82, 86, 90, 105, 106, 109], "unweight": [75, 90], "import": [75, 90, 153, 155], "estim": [75, 90, 105, 106, 155], "over": [75, 76, 77, 82, 117, 155], "mean": [76, 77, 83, 87, 93, 109, 111, 155], "error": [76, 77, 83, 87, 93, 106, 109, 111, 154, 155], "y_hat": 76, "normal": [79, 117, 121, 141, 146, 147], "param": 79, "statistic_nam": [82, 86], "evalu": [82, 86, 101, 105, 109, 113, 119], "statist": [82, 86, 105, 111, 121, 122, 123, 155], "fpr": [82, 86, 105, 111, 155], "dict": [82, 86, 101, 105, 106, 109, 111, 113, 121, 122, 123, 124, 139], "w": 84, "t": [84, 105, 109, 143], "perceptron": 84, "vector": [87, 90, 93, 101, 105, 106, 109, 142], "subject": [88, 89, 94, 95, 155], "actual": [88, 89, 94, 95, 155], "ndarra": 96, "averag": [97, 98], "cost": [97, 98, 155], "sum_i": 98, "p_": 98, "wrong": 98, "answer": [98, 137], "point": [98, 101, 109, 133, 134, 135, 141, 146, 147, 155], "c_i": 98, "upper_bounds_funct": [101, 102], "theta_init": 101, "lambda_init": [101, 121, 122, 123], "alpha_theta": [101, 121, 122, 123], "05": [101, 105, 106, 109, 155], "alpha_lamb": [101, 121, 122, 123], "beta_veloc": [101, 121, 122, 123], "9": [101, 121, 122, 123, 144], "beta_rmsprop": [101, 121, 122, 123], "num_it": [101, 121, 122, 123], "200": [101, 121, 122, 123], "gradient_librari": [101, 102, 121, 122, 123], "autograd": [101, 121, 122, 123], "verbos": [101, 121, 122, 123, 124, 125, 135, 136], "simultan": [101, 155], "ascent": [101, 155], "adam": [101, 121, 122, 123, 155], "lagrangian": [101, 139, 155], "l": [101, 139, 155], "lambda": [101, 139, 155], "f": [101, 109, 139, 155], "lagrang": [101, 139, 155], "multipli": [101, 113, 139, 155], "done": 101, "find": [101, 155], "saddl": [101, 155], "term": 101, "exponenti": [101, 113], "decai": 101, "veloc": 101, "rmsprop": 101, "iter": [101, 109], "comput": [101, 109, 113, 121, 122, 123], "automat": 101, "variou": 101, "quantiti": [101, 155], "solut": [101, 113, 117, 119, 139, 155], "lower": [105, 106, 107, 108, 109, 110, 113], "inf": [105, 106, 108, 109], "conditional_column": [105, 106, 109], "leaf": [105, 107, 108, 117], "measur": [105, 111, 113, 155], "condit": [105, 106, 109, 113], "node_typ": [105, 107], "equal": [105, 113, 114, 117, 155], "base_nod": 105, "delta": [105, 106, 109, 113, 114, 124, 125, 155], "share": [105, 106, 109], "put": [105, 106, 109], "measure_function_nam": 105, "repres": [105, 107, 108, 111, 113, 155], "must": [105, 155], "measure_funct": [105, 155], "oper": [105, 108, 154, 155], "calculate_bound": [105, 106, 109], "bound_method": [105, 109, 121, 122, 123], "test": [105, 106, 109, 115, 116, 117, 119, 121, 122, 123, 139, 154], "calculate_data_forbound": [105, 106, 109], "prepar": [105, 106], "calculate_valu": [105, 106, 109], "etc": [105, 106, 108, 109], "compute_hc_lowerbound": [105, 106, 109], "datas": [105, 109], "high": [105, 106, 109, 155], "level": [105, 106, 109, 113, 155], "compute_hc_upper_and_lowerbound": [105, 106, 109], "compute_hc_upperbound": [105, 106, 109], "independ": [105, 106, 109, 155], "mask_datafram": [105, 106, 109], "mask": [105, 106, 109], "joint": [105, 106, 109], "AND": [105, 106, 109], "predict_hc_lowerbound": [105, 106, 109], "pass": [105, 106, 109, 113, 117, 119, 124, 155], "predict_hc_upper_and_lowerbound": [105, 106, 109], "predict_hc_upperbound": [105, 106, 109], "zhat": [105, 106, 109], "unbias": [105, 106], "basenod": [106, 109, 154], "custom": [106, 109, 111, 155], "cvar_alpha": 106, "alpha": 106, "definit": [106, 155], "consid": 106, "least": [106, 155], "var_alpha": 106, "largest": 106, "100": 106, "thoma": [106, 109], "miller": 106, "2019": [106, 109], "http": [106, 109, 143], "peopl": 106, "c": 106, "umass": 106, "edu": 106, "pthoma": 106, "paper": 106, "thomas2019": 106, "pdf": 106, "see": [106, 109, 121, 122, 123, 154, 155], "theorem": [106, 155], "threshold": [106, 124, 125], "cvar": 106, "concentr": 106, "inequ": [106, 113, 155], "n_candid": 106, "sort": 106, "b": [106, 111, 113], "constant": [107, 113, 144, 155], "constant_nod": 107, "represent": [107, 108, 110, 111], "what": [107, 108, 110, 154], "displai": [107, 108, 110, 113, 139], "insid": [107, 108, 110, 155], "box": [107, 108, 110, 155], "graph": [107, 108, 110, 113, 153], "intern": [108, 155], "non": 108, "These": [108, 155], "perform": [108, 111, 155], "wise": 109, "differ": [109, 155], "male": [109, 155], "femal": [109, 155], "present": [109, 113], "et": 109, "al": 109, "www": [109, 143], "scienc": 109, "org": 109, "stoken": 109, "author": 109, "token": 109, "st": 109, "119": 109, "figur": [109, 139], "same": [109, 137], "precalculate_data": 109, "preconfigur": 109, "so": [109, 113, 155], "recalcul": 109, "through": [109, 113], "up": [109, 113, 155], "y_i": 109, "y_hat_i": 109, "m": [109, 113, 155], "y_j": 109, "y_hat_j": 109, "There": [109, 113, 155], "mai": [109, 132, 155], "row": [109, 155], "n_male": 109, "n_femal": 109, "left": [110, 113, 155], "right": [110, 113], "will_lower_bound": 110, "will_upper_bound": 110, "global": [111, 155], "construct": [111, 155], "measure_functions_dict": 111, "sub_regim": [111, 113, 114, 123, 155], "appear": [111, 113, 155], "recogn": 111, "special": [111, 155], "organ": 111, "sub": [111, 113, 155], "refer": [111, 155], "pr": [111, 113, 155], "nr": 111, "tpr": [111, 155], "fnr": 111, "tnr": 111, "logistic_loss": [111, 154], "mean_error": [111, 113, 154], "mean_squared_error": [111, 154, 155], "reinforc": [111, 155], "j_pi_new": [111, 155], "custom_base_node_dict": 111, "map": 111, "node": [111, 113, 117, 154, 155], "op_mapp": 111, "ast": [111, 113], "those": 111, "thei": [111, 137, 155], "not_supported_op_mapp": 111, "bounds_required_dict": 111, "If": [111, 113, 121, 122, 123, 137, 153, 154], "two": [111, 113, 155], "children": [111, 113], "boolean": [111, 155], "like": [111, 113, 155], "need_a_low": 111, "need_a_upp": 111, "need_b_low": 111, "need_b_upp": 111, "one": [111, 113, 121, 122, 123, 155], "singl": [113, 155], "can": [113, 155], "ml": [113, 155], "determin": 113, "user": [113, 137, 155], "appropri": 113, "root": [113, 117], "via": [113, 155], "built": [113, 121, 122, 123, 155], "constraint_str": [113, 114, 124, 125], "express": [113, 155], "n_node": 113, "n_base_nod": 113, "more": [113, 155], "onc": [113, 155], "contribut": 113, "base_node_dict": 113, "keep": 113, "track": 113, "uniqu": 113, "been": [113, 155], "help": [113, 143], "handl": 113, "case": [113, 155], "duplic": 113, "node_fonts": 113, "fontsiz": 113, "graphviz": [113, 153], "available_measure_funct": 113, "_ab": 113, "absolut": [113, 155], "interv": [113, 117], "tupl": [113, 119, 155], "_add": 113, "_assign_bounds_help": 113, "lower_need": 113, "upper_need": 113, "travers": 113, "_assign_deltas_help": 113, "weight_method": 113, "how": [113, 155], "_ast2pt_nod": 113, "ast_nod": 113, "_ast_tree_help": 113, "make": [113, 139, 155], "recurs": 113, "_div": 113, "divid": 113, "_evaluator_help": 113, "_exp": 113, "_max": 113, "_min": 113, "_mult": 113, "_pow": 113, "pow": 113, "both": [113, 155], "_preprocess_constraint_str": 113, "move": 113, "everyth": 113, "final": 113, "form": 113, "some": [113, 155], "sure": 113, "mathemat": [113, 155], "written": [113, 155], "python": [113, 143, 153, 155], "syntax": 113, "_propagate_valu": 113, "propag": [113, 117], "_propagator_help": 113, "_protect_nan": 113, "bound_typ": 113, "nan": 113, "infin": 113, "postit": 113, "_sub": 113, "subract": 113, "assign_bounds_need": 113, "breadth": 113, "search": 113, "decid": 113, "eventu": 113, "necessari": 113, "becaus": 113, "end": [113, 155], "care": 113, "assign_delta": 113, "split": [113, 155], "among": 113, "build_tre": 113, "delta_weight_method": [113, 114], "create_from_ast": 113, "structur": 113, "evaluate_constraint": 113, "itself": 113, "postord": 113, "logic": 113, "make_viz": 113, "titl": 113, "diagram": 113, "top": [113, 155], "make_viz_help": 113, "edg": 113, "digraph": 113, "propagate_bound": 113, "reset_base_node_dict": 113, "reset_data": 113, "cach": 113, "less": [113, 117, 155], "frequent": 113, "safety_dataset": 117, "relev": 117, "normalize_return": [117, 121], "min_return": 117, "max_return": 117, "loop": 117, "found": [117, 119, 155], "spec": [119, 154], "introspect": 119, "complet": [119, 154, 155], "candidate_select": [119, 154], "write_cs_logfil": 119, "store_cs_valu": 119, "branch": 119, "either": [119, 155], "just": 119, "safety_test": [119, 154, 155], "result": [119, 155], "evolut": [119, 139, 155], "passed_safeti": [119, 155], "indic": [119, 155], "model_class": [121, 122, 123], "frac_data_in_safeti": [121, 122, 123], "initial_solution_fn": [121, 122, 123], "rl_environment_obj": 121, "rl_policy_obj": 121, "base_node_bound_method_dict": [121, 122, 123], "use_builtin_primary_gradient_fn": [121, 122, 123], "custom_primary_gradient_fn": [121, 122, 123], "optimization_hyperparam": [121, 122, 123, 155], "005": [121, 122, 123], "95": [121, 122, 123], "hyper_search": [121, 122, 123], "regularization_hyperparam": [121, 122, 123], "fraction": [121, 122, 123], "remain": [121, 122, 123], "exist": [121, 122, 123], "fall": [121, 122, 123], "builtin": [121, 122, 123], "ttest": [121, 122, 123], "hyperparamet": [121, 122, 123, 155], "regular": [121, 122, 123], "usable_opt_dict": [121, 122, 123], "show": [121, 122, 123, 137, 139], "accept": [121, 122, 123, 155], "techniqu": [121, 122, 123, 155], "metadata_pth": [124, 125], "save_dir": [124, 125], "env_kwarg": 124, "rlspec": [124, 154, 155], "save": [124, 125, 136, 139], "pkl": [124, 125, 155], "path": [124, 125, 132, 139], "directori": [124, 125, 132], "upon": 124, "creation": 124, "flag": [124, 125, 155], "control": [124, 125, 155], "supervisedspec": [125, 154, 155], "array_in": 128, "val_in": 129, "min_val": 129, "max_val": 129, "output_str": 130, "json": [133, 135, 155], "indent": 135, "abl": 136, "str_to_show": 137, "default_str": 137, "default_v": 137, "ye": 137, "question": 137, "gather": 137, "command": [137, 155], "line": [137, 155], "invalid": 137, "let": [137, 155], "them": 137, "know": [137, 155], "again": 137, "shown": [137, 155], "enter": 137, "noth": 137, "primary_objective_nam": 139, "savenam": 139, "png": 139, "dot": 139, "plot": 139, "numpoint": 141, "loc_x": [141, 146, 147], "loc_i": [141, 146, 147], "sigma_x": [141, 146, 147], "sigma_i": [141, 146, 147], "2d": [141, 146, 147], "random": [141, 146, 147], "center": [141, 146, 147], "distribut": [141, 146, 147], "standard": [141, 142, 146, 147], "deviat": [141, 142, 146, 147], "v": 142, "bessel": 142, "correct": 142, "nu": 143, "invers": [143, 155], "student": 143, "cdf": 143, "degre": 143, "freedom": 143, "correspond": [143, 155], "matlab": 143, "mathwork": 143, "com": 143, "stat": 143, "html": 143, "arr": 144, "num_point": [146, 147, 148], "clip": 148, "msg": 151, "lineno": 151, "arg": 151, "seldonian": [153, 155], "pip": 153, "Then": 153, "system": 153, "wide": 153, "recommend": 153, "welcom": 154, "core": 154, "toolkit": [154, 155], "sourc": 154, "code": [154, 155], "host": 154, "github": 154, "overview": 154, "interfac": 154, "sa": 154, "do": 154, "start": 154, "instal": 154, "tutori": [154, 155], "api": [154, 155], "agent": [154, 155], "fourier": 154, "discrete_random_ag": 154, "function_approxim": 154, "linear_fa": 154, "linear_state_action_value_fa": 154, "construct_q_table_from_env_descript": 154, "parameterized_non_learning_softmax_ag": [154, 155], "keyboard_gridworld": 154, "mountain_car_rough_solut": 154, "check_space_typ": 154, "continuous_spac": 154, "rl_model": [154, 155], "gridworld": [154, 155], "mountaincar": 154, "n_step_mountaincar": 154, "hyperparams_and_set": 154, "define_hyperparameter_and_setting_dict": 154, "candidateselect": [154, 155], "datasetload": [154, 155], "dummyclassifiermodel": 154, "logisticregressionmodel": [154, 155], "randomclassifiermodel": 154, "squashedlinearregressionmodel": 154, "false_negative_r": 154, "false_positive_r": 154, "is_estim": 154, "negative_r": 154, "positive_r": 154, "true_negative_r": 154, "true_positive_r": 154, "evaluate_statist": 154, "gradient_mean_squared_error": 154, "gradient_logistic_loss": 154, "sample_from_statist": 154, "vector_error": 154, "vector_false_negative_r": 154, "vector_false_positive_r": 154, "vector_is_estim": 154, "vector_negative_r": 154, "vector_positive_r": 154, "vector_squared_error": 154, "vector_true_negative_r": 154, "vector_true_positive_r": 154, "vector_logistic_loss": 154, "vector_weighted_loss": 154, "weighted_loss": 154, "gradient_descent_adam": 154, "setup_gradi": 154, "cvarsqebasenod": 154, "constantnod": 154, "internalnod": 154, "medcustombasenod": 154, "make_parse_trees_from_constraint": 154, "safetytest": [154, 155], "seldonian_algorithm": [154, 155], "seldonianalgorithm": [154, 155], "createrlspec": [154, 155], "createsupervisedspec": [154, 155], "util": [154, 155], "rl_util": 154, "argmax_multi": 154, "clamp": 154, "io_util": [154, 155], "dir_path": 154, "load_json": 154, "load_pickl": [154, 155], "save_json": 154, "save_pickl": 154, "yes_or_no_input": 154, "plot_util": 154, "plot_gradient_desc": 154, "stats_util": 154, "generate_data": 154, "stddev": 154, "tinv": 154, "weighted_sum_gamma": 154, "tutorial_util": 154, "generate_clipped_data": 154, "make_synthetic_regression_dataset": 154, "warn": 154, "custom_warn": 154, "custom_formatwarn": 154, "document": 155, "detail": 155, "homepag": 155, "most": 155, "piec": 155, "One": 155, "In": 155, "cover": 155, "note": 155, "could": 155, "unifi": 155, "work": 155, "howev": 155, "notic": 155, "pattern": 155, "inherit": 155, "concept": 155, "conceptu": 155, "enforc": 155, "consist": 155, "develop": 155, "design": 155, "applic": 155, "part": 155, "graphic": 155, "short": 155, "underli": 155, "discuss": 155, "below": 155, "well": 155, "manual": 155, "loader": 155, "comma": 155, "separ": 155, "header": 155, "categor": 155, "numer": 155, "encod": 155, "might": 155, "look": 155, "622": 155, "491": 155, "56": 155, "439": 155, "93": 155, "707": 155, "64": 155, "663": 155, "65": 155, "557": 155, "09": 155, "711": 155, "37": 155, "731": 155, "31": 155, "509": 155, "33333": 155, "538": 155, "490": 155, "58": 155, "406": 155, "59": 155, "529": 155, "532": 155, "28": 155, "447": 155, "23": 155, "527": 155, "379": 155, "14": 155, "488": 155, "98333": 155, "455": 155, "18": 155, "440": 155, "570": 155, "86": 155, "417": 155, "54": 155, "453": 155, "53": 155, "425": 155, "87": 155, "475": 155, "63": 155, "476": 155, "11": 155, "407": 155, "15": 155, "97333": 155, "756": 155, "91": 155, "679": 155, "62": 155, "531": 155, "583": 155, "534": 155, "42": 155, "521": 155, "592": 155, "41": 155, "783": 155, "76": 155, "588": 155, "26": 155, "53333": 155, "should": 155, "befor": 155, "partit": 155, "your": 155, "intention": 155, "exclud": 155, "kei": 155, "problem": 155, "try": 155, "sensitive_column": 155, "rl_module_nam": 155, "within": 155, "rl_class_nam": 155, "biggest": 155, "essenti": 155, "wrap": 155, "scikit": 155, "linearregress": 155, "unless": 155, "own": 155, "best": 155, "though": 155, "chosen": 155, "explicitli": 155, "thing": 155, "live": 155, "likewis": 155, "inact": 155, "illustr": 155, "extend": 155, "g_i": 155, "_i": 155, "_": 155, "n": 155, "directli": 155, "often": 155, "five": 155, "follow": 155, "math": 155, "four": 155, "nativ": 155, "ab": 155, "exp": 155, "integ": 155, "239": 155, "trigger": 155, "open": 155, "ad": 155, "It": 155, "someth": 155, "other": 155, "wai": 155, "wrote": 155, "instruct": 155, "option": 155, "recal": 155, "leq": 155, "satisfi": 155, "cumbersom": 155, "symbol": 155, "interpret": 155, "ident": 155, "themselv": 155, "tri": 155, "few": 155, "basic": 155, "plain": 155, "english": 155, "88": 155, "greater": 155, "commonli": 155, "fair": 155, "filter": 155, "atr1": 155, "atr2": 155, "placehold": 155, "parenthes": 155, "surround": 155, "statement": 155, "sai": 155, "r1": 155, "r2": 155, "stand": 155, "race": 155, "demograph": 155, "pariti": 155, "toler": 155, "ratio": 155, "dispar": 155, "impact": 155, "anoth": 155, "permit": 155, "belong": 155, "bundl": 155, "block": 155, "page": 155, "At": 155, "broad": 155, "scope": 155, "No": 155, "throught": 155, "now": 155, "happen": 155, "even": 155, "low": 155, "process": 155, "black": 155, "forc": 155, "toward": 155, "feasibl": 155, "cg": 155, "nelder": 155, "mead": 155, "bfg": 155, "cma": 155, "scipi": 155, "minim": 155, "solver": 155, "covari": 155, "matrix": 155, "adapt": 155, "strategi": 155, "mathcal": 155, "mathbf": 155, "lambda_i": 155, "text": 155, "hcub": 155, "ith": 155, "kkt": 155, "h_i": 155, "optima": 155, "quad": 155, "ldot": 155, "our": 155, "obtain": 155, "situat": 155, "contraint": 155, "conflict": 155, "vanilla": 155, "oscil": 155, "boundari": 155, "dampen": 155, "momentum": 155, "mitig": 155, "far": 155, "therefor": 155, "deem": 155, "assembl": 155, "interact": 155}, "objects": {"": [[0, 0, 0, "-", "seldonian"]], "seldonian": [[1, 0, 0, "-", "RL"], [52, 0, 0, "-", "candidate_selection"], [55, 0, 0, "-", "dataset"], [61, 0, 0, "-", "models"], [99, 0, 0, "-", "optimizers"], [103, 0, 0, "-", "parse_tree"], [115, 0, 0, "-", "safety_test"], [118, 0, 0, "-", "seldonian_algorithm"], [120, 0, 0, "-", "spec"], [126, 0, 0, "-", "utils"], [149, 0, 0, "-", "warnings"]], "seldonian.RL": [[2, 0, 0, "-", "Agents"], [32, 0, 0, "-", "Env_Description"], [39, 0, 0, "-", "RL_model"], [41, 0, 0, "-", "environments"], [50, 0, 0, "-", "hyperparams_and_settings"]], "seldonian.RL.Agents": [[3, 0, 0, "-", "Agent"], [5, 0, 0, "-", "Bases"], [8, 0, 0, "-", "Discrete_Random_Agent"], [10, 0, 0, "-", "Function_Approximators"], [20, 0, 0, "-", "Parameterized_non_learning_softmax_agent"], [22, 0, 0, "-", "Policies"], [28, 0, 0, "-", "keyboard_gridworld"], [30, 0, 0, "-", "mountain_car_rough_solution"]], "seldonian.RL.Agents.Agent": [[4, 1, 1, "", "Agent"]], "seldonian.RL.Agents.Agent.Agent": [[4, 2, 1, "", "__init__"], [4, 2, 1, "", "__repr__"], [4, 2, 1, "", "choose_action"], [4, 2, 1, "", "get_prob_this_action"], [4, 2, 1, "", "update"]], "seldonian.RL.Agents.Bases": [[6, 0, 0, "-", "Fourier"]], "seldonian.RL.Agents.Bases.Fourier": [[7, 1, 1, "", "Fourier"]], "seldonian.RL.Agents.Bases.Fourier.Fourier": [[7, 2, 1, "", "__init__"], [7, 2, 1, "", "__repr__"]], "seldonian.RL.Agents.Discrete_Random_Agent": [[9, 1, 1, "", "Discrete_Random_Agent"]], "seldonian.RL.Agents.Discrete_Random_Agent.Discrete_Random_Agent": [[9, 2, 1, "", "__init__"], [9, 2, 1, "", "__repr__"], [9, 2, 1, "", "choose_action"], [9, 2, 1, "", "get_prob_this_action"], [9, 2, 1, "", "update"]], "seldonian.RL.Agents.Function_Approximators": [[11, 0, 0, "-", "Function_Approximator"], [13, 0, 0, "-", "Linear_FA"], [16, 0, 0, "-", "Table"]], "seldonian.RL.Agents.Function_Approximators.Function_Approximator": [[12, 1, 1, "", "Function_Approximator"]], "seldonian.RL.Agents.Function_Approximators.Function_Approximator.Function_Approximator": [[12, 2, 1, "", "__init__"], [12, 2, 1, "", "__repr__"]], "seldonian.RL.Agents.Function_Approximators.Linear_FA": [[14, 1, 1, "", "Linear_FA"], [15, 1, 1, "", "Linear_state_action_value_FA"]], "seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_FA": [[14, 2, 1, "", "__init__"], [14, 2, 1, "", "__repr__"]], "seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_state_action_value_FA": [[15, 2, 1, "", "__init__"], [15, 2, 1, "", "__repr__"]], "seldonian.RL.Agents.Function_Approximators.Table": [[17, 1, 1, "", "Q_Table"], [18, 1, 1, "", "Table"], [19, 3, 1, "", "construct_Q_Table_From_Env_Description"]], "seldonian.RL.Agents.Function_Approximators.Table.Q_Table": [[17, 2, 1, "", "__init__"], [17, 2, 1, "", "__repr__"], [17, 2, 1, "", "from_environment_state_to_0_indexed_state"], [17, 2, 1, "", "get_action_values_given_state"], [17, 2, 1, "", "get_action_values_given_zero_indexed_state"]], "seldonian.RL.Agents.Function_Approximators.Table.Table": [[18, 2, 1, "", "__init__"], [18, 2, 1, "", "__repr__"], [18, 2, 1, "", "from_environment_state_to_0_indexed_state"]], "seldonian.RL.Agents.Parameterized_non_learning_softmax_agent": [[21, 1, 1, "", "Parameterized_non_learning_softmax_agent"]], "seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.Parameterized_non_learning_softmax_agent": [[21, 2, 1, "", "__init__"], [21, 2, 1, "", "__repr__"], [21, 2, 1, "", "choose_action"], [21, 2, 1, "", "get_action_values"], [21, 2, 1, "", "get_params"], [21, 2, 1, "", "get_prob_this_action"], [21, 2, 1, "", "set_new_params"], [21, 2, 1, "", "update"]], "seldonian.RL.Agents.Policies": [[23, 0, 0, "-", "Policy"], [26, 0, 0, "-", "Softmax"]], "seldonian.RL.Agents.Policies.Policy": [[24, 1, 1, "", "Discrete_Action_Policy"], [25, 1, 1, "", "Policy"]], "seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy": [[24, 2, 1, "", "__init__"], [24, 2, 1, "", "__repr__"], [24, 2, 1, "", "construct_basis_and_linear_FA"], [24, 2, 1, "", "get_params"], [24, 2, 1, "", "make_state_action_FA"], [24, 2, 1, "", "set_new_params"]], "seldonian.RL.Agents.Policies.Policy.Policy": [[25, 2, 1, "", "__init__"], [25, 2, 1, "", "__repr__"]], "seldonian.RL.Agents.Policies.Softmax": [[27, 1, 1, "", "Softmax"]], "seldonian.RL.Agents.Policies.Softmax.Softmax": [[27, 2, 1, "", "__init__"], [27, 2, 1, "", "__repr__"], [27, 2, 1, "", "choose_action"], [27, 2, 1, "", "construct_basis_and_linear_FA"], [27, 2, 1, "", "get_params"], [27, 2, 1, "", "get_prob_this_action"], [27, 2, 1, "", "make_state_action_FA"], [27, 2, 1, "", "set_new_params"]], "seldonian.RL.Agents.keyboard_gridworld": [[29, 1, 1, "", "Keyboard_gridworld"]], "seldonian.RL.Agents.keyboard_gridworld.Keyboard_gridworld": [[29, 2, 1, "", "__init__"], [29, 2, 1, "", "__repr__"], [29, 2, 1, "", "choose_action"], [29, 2, 1, "", "get_prob_this_action"], [29, 2, 1, "", "update"]], "seldonian.RL.Agents.mountain_car_rough_solution": [[31, 1, 1, "", "Mountain_car_rough_solution"]], "seldonian.RL.Agents.mountain_car_rough_solution.Mountain_car_rough_solution": [[31, 2, 1, "", "__init__"], [31, 2, 1, "", "__repr__"], [31, 2, 1, "", "choose_action"], [31, 2, 1, "", "get_prob_this_action"], [31, 2, 1, "", "update"]], "seldonian.RL.Env_Description": [[33, 0, 0, "-", "Env_Description"], [36, 0, 0, "-", "Spaces"]], "seldonian.RL.Env_Description.Env_Description": [[34, 1, 1, "", "Env_Description"], [35, 3, 1, "", "check_space_type"]], "seldonian.RL.Env_Description.Env_Description.Env_Description": [[34, 2, 1, "", "__init__"], [34, 2, 1, "", "__repr__"], [34, 2, 1, "", "get_min_action"], [34, 2, 1, "", "get_min_state"], [34, 2, 1, "", "get_num_actions"], [34, 2, 1, "", "get_num_observation_dims"], [34, 2, 1, "", "get_num_states"]], "seldonian.RL.Env_Description.Spaces": [[37, 1, 1, "", "Continuous_Space"], [38, 1, 1, "", "Discrete_Space"]], "seldonian.RL.Env_Description.Spaces.Continuous_Space": [[37, 2, 1, "", "__init__"], [37, 2, 1, "", "__repr__"], [37, 2, 1, "", "check_bounds_valid"], [37, 2, 1, "", "get_num_dims"]], "seldonian.RL.Env_Description.Spaces.Discrete_Space": [[38, 2, 1, "", "__init__"], [38, 2, 1, "", "__repr__"], [38, 2, 1, "", "get_num_values"]], "seldonian.RL.RL_model": [[40, 1, 1, "", "RL_model"]], "seldonian.RL.RL_model.RL_model": [[40, 2, 1, "", "__init__"], [40, 2, 1, "", "__repr__"]], "seldonian.RL.environments": [[42, 0, 0, "-", "Environment"], [44, 0, 0, "-", "gridworld"], [46, 0, 0, "-", "mountaincar"], [48, 0, 0, "-", "n_step_mountaincar"]], "seldonian.RL.environments.Environment": [[43, 1, 1, "", "Environment"]], "seldonian.RL.environments.Environment.Environment": [[43, 2, 1, "", "__init__"], [43, 2, 1, "", "__repr__"], [43, 2, 1, "", "get_env_description"], [43, 2, 1, "", "get_observation"], [43, 2, 1, "", "reset"], [43, 2, 1, "", "start_visualizing"], [43, 2, 1, "", "stop_visualizing"], [43, 2, 1, "", "terminated"], [43, 2, 1, "", "transition"], [43, 2, 1, "", "visualize"]], "seldonian.RL.environments.gridworld": [[45, 1, 1, "", "Gridworld"]], "seldonian.RL.environments.gridworld.Gridworld": [[45, 2, 1, "", "__init__"], [45, 2, 1, "", "__repr__"], [45, 2, 1, "", "create_env_description"], [45, 2, 1, "", "get_env_description"], [45, 2, 1, "", "get_observation"], [45, 2, 1, "", "is_in_goal_state"], [45, 2, 1, "", "reset"], [45, 2, 1, "", "start_visualizing"], [45, 2, 1, "", "stop_visualizing"], [45, 2, 1, "", "terminated"], [45, 2, 1, "", "transition"], [45, 2, 1, "", "update_position"], [45, 2, 1, "", "visualize"]], "seldonian.RL.environments.mountaincar": [[47, 1, 1, "", "Mountaincar"]], "seldonian.RL.environments.mountaincar.Mountaincar": [[47, 2, 1, "", "__init__"], [47, 2, 1, "", "__repr__"], [47, 2, 1, "", "get_env_description"], [47, 2, 1, "", "get_observation"], [47, 2, 1, "", "reset"], [47, 2, 1, "", "start_visualizing"], [47, 2, 1, "", "stop_visualizing"], [47, 2, 1, "", "terminated"], [47, 2, 1, "", "transition"], [47, 2, 1, "", "visualize"]], "seldonian.RL.environments.n_step_mountaincar": [[49, 1, 1, "", "N_step_mountaincar"]], "seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar": [[49, 2, 1, "", "__init__"], [49, 2, 1, "", "__repr__"], [49, 2, 1, "", "get_env_description"], [49, 2, 1, "", "get_observation"], [49, 2, 1, "", "reset"], [49, 2, 1, "", "start_visualizing"], [49, 2, 1, "", "stop_visualizing"], [49, 2, 1, "", "terminated"], [49, 2, 1, "", "transition"], [49, 2, 1, "", "visualize"]], "seldonian.RL.hyperparams_and_settings": [[51, 3, 1, "", "define_hyperparameter_and_setting_dict"]], "seldonian.candidate_selection": [[53, 0, 0, "-", "candidate_selection"]], "seldonian.candidate_selection.candidate_selection": [[54, 1, 1, "", "CandidateSelection"]], "seldonian.candidate_selection.candidate_selection.CandidateSelection": [[54, 2, 1, "", "__init__"], [54, 2, 1, "", "__repr__"], [54, 2, 1, "", "evaluate_primary_objective"], [54, 2, 1, "", "get_constraint_upper_bounds"], [54, 2, 1, "", "objective_with_barrier"], [54, 2, 1, "", "run"]], "seldonian.dataset": [[56, 1, 1, "", "DataSet"], [57, 1, 1, "", "DataSetLoader"], [58, 1, 1, "", "Episode"], [59, 1, 1, "", "RLDataSet"], [60, 1, 1, "", "SupervisedDataSet"]], "seldonian.dataset.DataSet": [[56, 2, 1, "", "__init__"], [56, 2, 1, "", "__repr__"]], "seldonian.dataset.DataSetLoader": [[57, 2, 1, "", "__init__"], [57, 2, 1, "", "__repr__"], [57, 2, 1, "", "load_RL_dataset_from_csv"], [57, 2, 1, "", "load_RL_dataset_from_dataframe"], [57, 2, 1, "", "load_RL_dataset_from_episode_list"], [57, 2, 1, "", "load_supervised_dataset"]], "seldonian.dataset.Episode": [[58, 2, 1, "", "__init__"], [58, 2, 1, "", "__repr__"]], "seldonian.dataset.RLDataSet": [[59, 2, 1, "", "__init__"], [59, 2, 1, "", "__repr__"]], "seldonian.dataset.SupervisedDataSet": [[60, 2, 1, "", "__init__"], [60, 2, 1, "", "__repr__"]], "seldonian.models": [[62, 0, 0, "-", "models"], [72, 0, 0, "-", "objectives"]], "seldonian.models.models": [[63, 1, 1, "", "ClassificationModel"], [64, 1, 1, "", "DummyClassifierModel"], [65, 1, 1, "", "LinearRegressionModel"], [66, 1, 1, "", "LogisticRegressionModel"], [67, 1, 1, "", "RandomClassifierModel"], [68, 1, 1, "", "RegressionModel"], [69, 1, 1, "", "SeldonianModel"], [70, 1, 1, "", "SquashedLinearRegressionModel"], [71, 1, 1, "", "SupervisedModel"]], "seldonian.models.models.ClassificationModel": [[63, 2, 1, "", "__init__"], [63, 2, 1, "", "__repr__"]], "seldonian.models.models.DummyClassifierModel": [[64, 2, 1, "", "__init__"], [64, 2, 1, "", "__repr__"], [64, 2, 1, "", "predict"]], "seldonian.models.models.LinearRegressionModel": [[65, 2, 1, "", "__init__"], [65, 2, 1, "", "__repr__"], [65, 2, 1, "", "fit"], [65, 2, 1, "", "predict"]], "seldonian.models.models.LogisticRegressionModel": [[66, 2, 1, "", "__init__"], [66, 2, 1, "", "__repr__"], [66, 2, 1, "", "fit"], [66, 2, 1, "", "predict"]], "seldonian.models.models.RandomClassifierModel": [[67, 2, 1, "", "__init__"], [67, 2, 1, "", "__repr__"], [67, 2, 1, "", "predict"]], "seldonian.models.models.RegressionModel": [[68, 2, 1, "", "__init__"], [68, 2, 1, "", "__repr__"]], "seldonian.models.models.SeldonianModel": [[69, 2, 1, "", "__init__"], [69, 2, 1, "", "__repr__"]], "seldonian.models.models.SquashedLinearRegressionModel": [[70, 2, 1, "", "__init__"], [70, 2, 1, "", "__repr__"], [70, 2, 1, "", "fit"], [70, 2, 1, "", "predict"]], "seldonian.models.models.SupervisedModel": [[71, 2, 1, "", "__init__"], [71, 2, 1, "", "__repr__"]], "seldonian.models.objectives": [[73, 3, 1, "", "False_Negative_Rate"], [74, 3, 1, "", "False_Positive_Rate"], [75, 3, 1, "", "IS_estimate"], [76, 3, 1, "", "Mean_Error"], [77, 3, 1, "", "Mean_Squared_Error"], [78, 3, 1, "", "Negative_Rate"], [79, 3, 1, "", "Positive_Rate"], [80, 3, 1, "", "True_Negative_Rate"], [81, 3, 1, "", "True_Positive_Rate"], [82, 3, 1, "", "evaluate_statistic"], [83, 3, 1, "", "gradient_Mean_Squared_Error"], [84, 3, 1, "", "gradient_logistic_loss"], [85, 3, 1, "", "logistic_loss"], [86, 3, 1, "", "sample_from_statistic"], [87, 3, 1, "", "vector_Error"], [88, 3, 1, "", "vector_False_Negative_Rate"], [89, 3, 1, "", "vector_False_Positive_Rate"], [90, 3, 1, "", "vector_IS_estimate"], [91, 3, 1, "", "vector_Negative_Rate"], [92, 3, 1, "", "vector_Positive_Rate"], [93, 3, 1, "", "vector_Squared_Error"], [94, 3, 1, "", "vector_True_Negative_Rate"], [95, 3, 1, "", "vector_True_Positive_Rate"], [96, 3, 1, "", "vector_logistic_loss"], [97, 3, 1, "", "vector_weighted_loss"], [98, 3, 1, "", "weighted_loss"]], "seldonian.optimizers": [[100, 0, 0, "-", "gradient_descent"]], "seldonian.optimizers.gradient_descent": [[101, 3, 1, "", "gradient_descent_adam"], [102, 3, 1, "", "setup_gradients"]], "seldonian.parse_tree": [[104, 0, 0, "-", "nodes"], [111, 0, 0, "-", "operators"], [112, 0, 0, "-", "parse_tree"]], "seldonian.parse_tree.nodes": [[105, 1, 1, "", "BaseNode"], [106, 1, 1, "", "CVARSQEBaseNode"], [107, 1, 1, "", "ConstantNode"], [108, 1, 1, "", "InternalNode"], [109, 1, 1, "", "MEDCustomBaseNode"], [110, 1, 1, "", "Node"]], "seldonian.parse_tree.nodes.BaseNode": [[105, 2, 1, "", "__init__"], [105, 2, 1, "", "__repr__"], [105, 2, 1, "", "calculate_bounds"], [105, 2, 1, "", "calculate_data_forbound"], [105, 2, 1, "", "calculate_value"], [105, 2, 1, "", "compute_HC_lowerbound"], [105, 2, 1, "", "compute_HC_upper_and_lowerbound"], [105, 2, 1, "", "compute_HC_upperbound"], [105, 2, 1, "", "mask_dataframe"], [105, 2, 1, "", "predict_HC_lowerbound"], [105, 2, 1, "", "predict_HC_upper_and_lowerbound"], [105, 2, 1, "", "predict_HC_upperbound"], [105, 2, 1, "", "zhat"]], "seldonian.parse_tree.nodes.CVARSQEBaseNode": [[106, 2, 1, "", "__init__"], [106, 2, 1, "", "__repr__"], [106, 2, 1, "", "calculate_bounds"], [106, 2, 1, "", "calculate_data_forbound"], [106, 2, 1, "", "calculate_value"], [106, 2, 1, "", "compute_HC_lowerbound"], [106, 2, 1, "", "compute_HC_upper_and_lowerbound"], [106, 2, 1, "", "compute_HC_upperbound"], [106, 2, 1, "", "mask_dataframe"], [106, 2, 1, "", "predict_HC_lowerbound"], [106, 2, 1, "", "predict_HC_upper_and_lowerbound"], [106, 2, 1, "", "predict_HC_upperbound"], [106, 2, 1, "", "zhat"]], "seldonian.parse_tree.nodes.ConstantNode": [[107, 2, 1, "", "__init__"], [107, 2, 1, "", "__repr__"]], "seldonian.parse_tree.nodes.InternalNode": [[108, 2, 1, "", "__init__"], [108, 2, 1, "", "__repr__"]], "seldonian.parse_tree.nodes.MEDCustomBaseNode": [[109, 2, 1, "", "__init__"], [109, 2, 1, "", "__repr__"], [109, 2, 1, "", "calculate_bounds"], [109, 2, 1, "", "calculate_data_forbound"], [109, 2, 1, "", "calculate_value"], [109, 2, 1, "", "compute_HC_lowerbound"], [109, 2, 1, "", "compute_HC_upper_and_lowerbound"], [109, 2, 1, "", "compute_HC_upperbound"], [109, 2, 1, "", "mask_dataframe"], [109, 2, 1, "", "precalculate_data"], [109, 2, 1, "", "predict_HC_lowerbound"], [109, 2, 1, "", "predict_HC_upper_and_lowerbound"], [109, 2, 1, "", "predict_HC_upperbound"], [109, 2, 1, "", "zhat"]], "seldonian.parse_tree.nodes.Node": [[110, 2, 1, "", "__init__"], [110, 2, 1, "", "__repr__"]], "seldonian.parse_tree.operators": [[111, 4, 1, "", "bounds_required_dict"], [111, 4, 1, "", "custom_base_node_dict"], [111, 4, 1, "", "measure_functions_dict"], [111, 4, 1, "", "not_supported_op_mapper"], [111, 4, 1, "", "op_mapper"]], "seldonian.parse_tree.parse_tree": [[113, 1, 1, "", "ParseTree"], [114, 3, 1, "", "make_parse_trees_from_constraints"]], "seldonian.parse_tree.parse_tree.ParseTree": [[113, 2, 1, "", "__init__"], [113, 2, 1, "", "__repr__"], [113, 2, 1, "", "_abs"], [113, 2, 1, "", "_add"], [113, 2, 1, "", "_assign_bounds_helper"], [113, 2, 1, "", "_assign_deltas_helper"], [113, 2, 1, "", "_ast2pt_node"], [113, 2, 1, "", "_ast_tree_helper"], [113, 2, 1, "", "_div"], [113, 2, 1, "", "_evaluator_helper"], [113, 2, 1, "", "_exp"], [113, 2, 1, "", "_max"], [113, 2, 1, "", "_min"], [113, 2, 1, "", "_mult"], [113, 2, 1, "", "_pow"], [113, 2, 1, "", "_preprocess_constraint_str"], [113, 2, 1, "", "_propagate_value"], [113, 2, 1, "", "_propagator_helper"], [113, 2, 1, "", "_protect_nan"], [113, 2, 1, "", "_sub"], [113, 2, 1, "", "assign_bounds_needed"], [113, 2, 1, "", "assign_deltas"], [113, 2, 1, "", "build_tree"], [113, 2, 1, "", "create_from_ast"], [113, 2, 1, "", "evaluate_constraint"], [113, 2, 1, "", "make_viz"], [113, 2, 1, "", "make_viz_helper"], [113, 2, 1, "", "propagate"], [113, 2, 1, "", "propagate_bounds"], [113, 2, 1, "", "reset_base_node_dict"]], "seldonian.safety_test": [[116, 0, 0, "-", "safety_test"]], "seldonian.safety_test.safety_test": [[117, 1, 1, "", "SafetyTest"]], "seldonian.safety_test.safety_test.SafetyTest": [[117, 2, 1, "", "__init__"], [117, 2, 1, "", "__repr__"], [117, 2, 1, "", "evaluate_primary_objective"], [117, 2, 1, "", "run"]], "seldonian.seldonian_algorithm": [[119, 1, 1, "", "SeldonianAlgorithm"]], "seldonian.seldonian_algorithm.SeldonianAlgorithm": [[119, 2, 1, "", "__init__"], [119, 2, 1, "", "__repr__"], [119, 2, 1, "", "candidate_selection"], [119, 2, 1, "", "evaluate_primary_objective"], [119, 2, 1, "", "run"], [119, 2, 1, "", "safety_test"]], "seldonian.spec": [[121, 1, 1, "", "RLSpec"], [122, 1, 1, "", "Spec"], [123, 1, 1, "", "SupervisedSpec"], [124, 3, 1, "", "createRLSpec"], [125, 3, 1, "", "createSupervisedSpec"]], "seldonian.spec.RLSpec": [[121, 2, 1, "", "__init__"], [121, 2, 1, "", "__repr__"]], "seldonian.spec.Spec": [[122, 2, 1, "", "__init__"], [122, 2, 1, "", "__repr__"]], "seldonian.spec.SupervisedSpec": [[123, 2, 1, "", "__init__"], [123, 2, 1, "", "__repr__"]], "seldonian.utils": [[127, 0, 0, "-", "RL_utils"], [131, 0, 0, "-", "io_utils"], [138, 0, 0, "-", "plot_utils"], [140, 0, 0, "-", "stats_utils"], [145, 0, 0, "-", "tutorial_utils"]], "seldonian.utils.RL_utils": [[128, 3, 1, "", "argmax_multi"], [129, 3, 1, "", "clamp"], [130, 3, 1, "", "error"]], "seldonian.utils.io_utils": [[132, 3, 1, "", "dir_path"], [133, 3, 1, "", "load_json"], [134, 3, 1, "", "load_pickle"], [135, 3, 1, "", "save_json"], [136, 3, 1, "", "save_pickle"], [137, 3, 1, "", "yes_or_no_input"]], "seldonian.utils.plot_utils": [[139, 3, 1, "", "plot_gradient_descent"]], "seldonian.utils.stats_utils": [[141, 3, 1, "", "generate_data"], [142, 3, 1, "", "stddev"], [143, 3, 1, "", "tinv"], [144, 3, 1, "", "weighted_sum_gamma"]], "seldonian.utils.tutorial_utils": [[146, 3, 1, "", "generate_clipped_data"], [147, 3, 1, "", "generate_data"], [148, 3, 1, "", "make_synthetic_regression_dataset"]], "seldonian.warnings": [[150, 0, 0, "-", "custom_warnings"]], "seldonian.warnings.custom_warnings": [[151, 3, 1, "", "custom_formatwarning"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "data", "Python data"]}, "titleterms": {"seldonian": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 154], "rl": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51], "agent": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "base": [5, 6, 7], "fourier": [6, 7], "discrete_random_ag": [8, 9], "function_approxim": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "linear_fa": [13, 14, 15], "linear_state_action_value_fa": 15, "tabl": [16, 17, 18, 19, 154], "q_tabl": 17, "construct_q_table_from_env_descript": 19, "parameterized_non_learning_softmax_ag": [20, 21], "polici": [22, 23, 24, 25, 26, 27], "discrete_action_polici": 24, "softmax": [26, 27], "keyboard_gridworld": [28, 29], "mountain_car_rough_solut": [30, 31], "env_descript": [32, 33, 34, 35, 36, 37, 38], "check_space_typ": 35, "space": [36, 37, 38], "continuous_spac": 37, "discrete_spac": 38, "rl_model": [39, 40], "environ": [41, 42, 43, 44, 45, 46, 47, 48, 49], "gridworld": [44, 45], "mountaincar": [46, 47], "n_step_mountaincar": [48, 49], "hyperparams_and_set": [50, 51], "define_hyperparameter_and_setting_dict": 51, "candidate_select": [52, 53, 54], "candidateselect": 54, "dataset": [55, 56, 57, 58, 59, 60, 155], "datasetload": 57, "episod": 58, "rldataset": 59, "superviseddataset": 60, "model": [61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 155], "classificationmodel": 63, "dummyclassifiermodel": 64, "linearregressionmodel": 65, "logisticregressionmodel": 66, "randomclassifiermodel": 67, "regressionmodel": 68, "seldonianmodel": 69, "squashedlinearregressionmodel": 70, "supervisedmodel": 71, "object": [72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 155], "false_negative_r": 73, "false_positive_r": 74, "is_estim": 75, "mean_error": 76, "mean_squared_error": 77, "negative_r": 78, "positive_r": 79, "true_negative_r": 80, "true_positive_r": 81, "evaluate_statist": 82, "gradient_mean_squared_error": 83, "gradient_logistic_loss": 84, "logistic_loss": 85, "sample_from_statist": 86, "vector_error": 87, "vector_false_negative_r": 88, "vector_false_positive_r": 89, "vector_is_estim": 90, "vector_negative_r": 91, "vector_positive_r": 92, "vector_squared_error": 93, "vector_true_negative_r": 94, "vector_true_positive_r": 95, "vector_logistic_loss": 96, "vector_weighted_loss": 97, "weighted_loss": 98, "optim": [99, 100, 101, 102], "gradient_desc": [100, 101, 102], "gradient_descent_adam": 101, "setup_gradi": 102, "parse_tre": [103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114], "node": [104, 105, 106, 107, 108, 109, 110], "basenod": 105, "cvarsqebasenod": 106, "constantnod": 107, "internalnod": 108, "medcustombasenod": 109, "oper": 111, "parsetre": 113, "make_parse_trees_from_constraint": 114, "safety_test": [115, 116, 117], "safetytest": 117, "seldonian_algorithm": [118, 119], "seldonianalgorithm": 119, "spec": [120, 121, 122, 123, 124, 125, 155], "rlspec": 121, "supervisedspec": 123, "createrlspec": 124, "createsupervisedspec": 125, "util": [126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148], "rl_util": [127, 128, 129, 130], "argmax_multi": 128, "clamp": 129, "error": 130, "io_util": [131, 132, 133, 134, 135, 136, 137], "dir_path": 132, "load_json": 133, "load_pickl": 134, "save_json": 135, "save_pickl": 136, "yes_or_no_input": 137, "plot_util": [138, 139], "plot_gradient_desc": 139, "stats_util": [140, 141, 142, 143, 144], "generate_data": [141, 147], "stddev": 142, "tinv": 143, "weighted_sum_gamma": 144, "tutorial_util": [145, 146, 147, 148], "generate_clipped_data": 146, "make_synthetic_regression_dataset": 148, "warn": [149, 150, 151], "custom_warn": [150, 151], "custom_formatwarn": 151, "api": 152, "get": 153, "start": 153, "instal": 153, "A": 153, "first": 153, "tutori": 153, "engin": 154, "document": 154, "content": 154, "overview": 155, "interfac": 155, "behavior": 155, "constraint": 155, "string": 155, "what": 155, "doe": 155, "sa": 155, "run": 155, "do": 155, "candid": 155, "select": 155, "safeti": 155, "test": 155}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 56}})