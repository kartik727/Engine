Search.setIndex({"docnames": ["_autosummary/seldonian", "_autosummary/seldonian.RL", "_autosummary/seldonian.RL.Agents", "_autosummary/seldonian.RL.Agents.Agent", "_autosummary/seldonian.RL.Agents.Agent.Agent", "_autosummary/seldonian.RL.Agents.Bases", "_autosummary/seldonian.RL.Agents.Bases.Fourier", "_autosummary/seldonian.RL.Agents.Bases.Fourier.Fourier", "_autosummary/seldonian.RL.Agents.Discrete_Random_Agent", "_autosummary/seldonian.RL.Agents.Discrete_Random_Agent.Discrete_Random_Agent", "_autosummary/seldonian.RL.Agents.Function_Approximators", "_autosummary/seldonian.RL.Agents.Function_Approximators.Function_Approximator", "_autosummary/seldonian.RL.Agents.Function_Approximators.Function_Approximator.Function_Approximator", "_autosummary/seldonian.RL.Agents.Function_Approximators.Linear_FA", "_autosummary/seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_FA", "_autosummary/seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_state_action_value_FA", "_autosummary/seldonian.RL.Agents.Function_Approximators.Table", "_autosummary/seldonian.RL.Agents.Function_Approximators.Table.Q_Table", "_autosummary/seldonian.RL.Agents.Function_Approximators.Table.Table", "_autosummary/seldonian.RL.Agents.Function_Approximators.Table.construct_Q_Table_From_Env_Description", "_autosummary/seldonian.RL.Agents.Parameterized_non_learning_softmax_agent", "_autosummary/seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.Parameterized_non_learning_softmax_agent", "_autosummary/seldonian.RL.Agents.Policies", "_autosummary/seldonian.RL.Agents.Policies.Policy", "_autosummary/seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy", "_autosummary/seldonian.RL.Agents.Policies.Policy.Policy", "_autosummary/seldonian.RL.Agents.Policies.Softmax", "_autosummary/seldonian.RL.Agents.Policies.Softmax.Softmax", "_autosummary/seldonian.RL.Agents.keyboard_gridworld", "_autosummary/seldonian.RL.Agents.keyboard_gridworld.Keyboard_gridworld", "_autosummary/seldonian.RL.Agents.mountain_car_rough_solution", "_autosummary/seldonian.RL.Agents.mountain_car_rough_solution.Mountain_car_rough_solution", "_autosummary/seldonian.RL.Env_Description", "_autosummary/seldonian.RL.Env_Description.Env_Description", "_autosummary/seldonian.RL.Env_Description.Env_Description.Env_Description", "_autosummary/seldonian.RL.Env_Description.Env_Description.check_space_type", "_autosummary/seldonian.RL.Env_Description.Spaces", "_autosummary/seldonian.RL.Env_Description.Spaces.Continuous_Space", "_autosummary/seldonian.RL.Env_Description.Spaces.Discrete_Space", "_autosummary/seldonian.RL.RL_generate_dataset_and_spec_file", "_autosummary/seldonian.RL.RL_generate_dataset_and_spec_file.get_constraint_string", "_autosummary/seldonian.RL.RL_generate_dataset_and_spec_file.get_env_kwargs", "_autosummary/seldonian.RL.RL_generate_dataset_and_spec_file.get_metadata_path", "_autosummary/seldonian.RL.RL_generate_dataset_and_spec_file.main", "_autosummary/seldonian.RL.RL_generate_dataset_and_spec_file.print_return_info", "_autosummary/seldonian.RL.RL_model", "_autosummary/seldonian.RL.RL_model.RL_model", "_autosummary/seldonian.RL.RL_runner", "_autosummary/seldonian.RL.RL_runner.create_agent", "_autosummary/seldonian.RL.RL_runner.create_env", "_autosummary/seldonian.RL.RL_runner.run_all_trials", "_autosummary/seldonian.RL.RL_runner.run_episode", "_autosummary/seldonian.RL.RL_runner.run_trial", "_autosummary/seldonian.RL.RL_runner.run_trial_given_agent_and_env", "_autosummary/seldonian.RL.environments", "_autosummary/seldonian.RL.environments.Environment", "_autosummary/seldonian.RL.environments.Environment.Environment", "_autosummary/seldonian.RL.environments.gridworld", "_autosummary/seldonian.RL.environments.gridworld.Gridworld", "_autosummary/seldonian.RL.environments.mountaincar", "_autosummary/seldonian.RL.environments.mountaincar.Mountaincar", "_autosummary/seldonian.RL.environments.n_step_mountaincar", "_autosummary/seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar", "_autosummary/seldonian.RL.environments.simglucose_env", "_autosummary/seldonian.RL.environments.simglucose_env.Simglucose", "_autosummary/seldonian.RL.hyperparams_and_settings", "_autosummary/seldonian.RL.hyperparams_and_settings.define_hyperparameter_and_setting_dict", "_autosummary/seldonian.candidate_selection", "_autosummary/seldonian.candidate_selection.candidate_selection", "_autosummary/seldonian.candidate_selection.candidate_selection.CandidateSelection", "_autosummary/seldonian.dataset", "_autosummary/seldonian.dataset.DataSet", "_autosummary/seldonian.dataset.DataSetLoader", "_autosummary/seldonian.dataset.Episode", "_autosummary/seldonian.dataset.RLDataSet", "_autosummary/seldonian.dataset.SupervisedDataSet", "_autosummary/seldonian.models", "_autosummary/seldonian.models.models", "_autosummary/seldonian.models.models.BoundedLinearRegressionModel", "_autosummary/seldonian.models.models.ClassificationModel", "_autosummary/seldonian.models.models.DummyClassifierModel", "_autosummary/seldonian.models.models.LinearRegressionModel", "_autosummary/seldonian.models.models.LogisticRegressionModel", "_autosummary/seldonian.models.models.RandomClassifierModel", "_autosummary/seldonian.models.models.RegressionModel", "_autosummary/seldonian.models.models.SeldonianModel", "_autosummary/seldonian.models.models.SupervisedModel", "_autosummary/seldonian.models.objectives", "_autosummary/seldonian.models.objectives.False_Negative_Rate", "_autosummary/seldonian.models.objectives.False_Positive_Rate", "_autosummary/seldonian.models.objectives.IS_estimate", "_autosummary/seldonian.models.objectives.Mean_Error", "_autosummary/seldonian.models.objectives.Mean_Squared_Error", "_autosummary/seldonian.models.objectives.Negative_Rate", "_autosummary/seldonian.models.objectives.Positive_Rate", "_autosummary/seldonian.models.objectives.True_Negative_Rate", "_autosummary/seldonian.models.objectives.True_Positive_Rate", "_autosummary/seldonian.models.objectives.evaluate_statistic", "_autosummary/seldonian.models.objectives.gradient_Bounded_Squared_Error", "_autosummary/seldonian.models.objectives.gradient_Mean_Squared_Error", "_autosummary/seldonian.models.objectives.gradient_logistic_loss", "_autosummary/seldonian.models.objectives.logistic_loss", "_autosummary/seldonian.models.objectives.sample_from_statistic", "_autosummary/seldonian.models.objectives.vector_Error", "_autosummary/seldonian.models.objectives.vector_False_Negative_Rate", "_autosummary/seldonian.models.objectives.vector_False_Positive_Rate", "_autosummary/seldonian.models.objectives.vector_IS_estimate", "_autosummary/seldonian.models.objectives.vector_Negative_Rate", "_autosummary/seldonian.models.objectives.vector_Positive_Rate", "_autosummary/seldonian.models.objectives.vector_Squared_Error", "_autosummary/seldonian.models.objectives.vector_True_Negative_Rate", "_autosummary/seldonian.models.objectives.vector_True_Positive_Rate", "_autosummary/seldonian.models.objectives.vector_logistic_loss", "_autosummary/seldonian.models.objectives.vector_weighted_loss", "_autosummary/seldonian.models.objectives.weighted_loss", "_autosummary/seldonian.optimizers", "_autosummary/seldonian.optimizers.gradient_descent", "_autosummary/seldonian.optimizers.gradient_descent.gradient_descent_adam", "_autosummary/seldonian.optimizers.gradient_descent.setup_gradients", "_autosummary/seldonian.parse_tree", "_autosummary/seldonian.parse_tree.nodes", "_autosummary/seldonian.parse_tree.nodes.BaseNode", "_autosummary/seldonian.parse_tree.nodes.CVaRSQeBaseNode", "_autosummary/seldonian.parse_tree.nodes.ConstantNode", "_autosummary/seldonian.parse_tree.nodes.InternalNode", "_autosummary/seldonian.parse_tree.nodes.MEDCustomBaseNode", "_autosummary/seldonian.parse_tree.nodes.Node", "_autosummary/seldonian.parse_tree.operators", "_autosummary/seldonian.parse_tree.parse_tree", "_autosummary/seldonian.parse_tree.parse_tree.ParseTree", "_autosummary/seldonian.parse_tree.parse_tree.make_parse_trees_from_constraints", "_autosummary/seldonian.safety_test", "_autosummary/seldonian.safety_test.safety_test", "_autosummary/seldonian.safety_test.safety_test.SafetyTest", "_autosummary/seldonian.seldonian_algorithm", "_autosummary/seldonian.seldonian_algorithm.SeldonianAlgorithm", "_autosummary/seldonian.spec", "_autosummary/seldonian.spec.RLSpec", "_autosummary/seldonian.spec.Spec", "_autosummary/seldonian.spec.SupervisedSpec", "_autosummary/seldonian.spec.createRLSpec", "_autosummary/seldonian.spec.createSupervisedSpec", "_autosummary/seldonian.utils", "_autosummary/seldonian.utils.RL_utils", "_autosummary/seldonian.utils.RL_utils.argmax_multi", "_autosummary/seldonian.utils.RL_utils.clamp", "_autosummary/seldonian.utils.RL_utils.error", "_autosummary/seldonian.utils.io_utils", "_autosummary/seldonian.utils.io_utils.dir_path", "_autosummary/seldonian.utils.io_utils.load_json", "_autosummary/seldonian.utils.io_utils.load_pickle", "_autosummary/seldonian.utils.io_utils.load_supervised_metadata", "_autosummary/seldonian.utils.io_utils.save_json", "_autosummary/seldonian.utils.io_utils.save_pickle", "_autosummary/seldonian.utils.io_utils.yes_or_no_input", "_autosummary/seldonian.utils.plot_utils", "_autosummary/seldonian.utils.plot_utils.plot_gradient_descent", "_autosummary/seldonian.utils.stats_utils", "_autosummary/seldonian.utils.stats_utils.generate_data", "_autosummary/seldonian.utils.stats_utils.stddev", "_autosummary/seldonian.utils.stats_utils.tinv", "_autosummary/seldonian.utils.stats_utils.weighted_sum_gamma", "_autosummary/seldonian.utils.tutorial_utils", "_autosummary/seldonian.utils.tutorial_utils.generate_clipped_data", "_autosummary/seldonian.utils.tutorial_utils.generate_data", "_autosummary/seldonian.utils.tutorial_utils.make_synthetic_regression_dataset", "_autosummary/seldonian.warnings", "_autosummary/seldonian.warnings.custom_warnings", "_autosummary/seldonian.warnings.custom_warnings.custom_formatwarning", "api", "getting_started", "index", "overview"], "filenames": ["_autosummary/seldonian.rst", "_autosummary/seldonian.RL.rst", "_autosummary/seldonian.RL.Agents.rst", "_autosummary/seldonian.RL.Agents.Agent.rst", "_autosummary/seldonian.RL.Agents.Agent.Agent.rst", "_autosummary/seldonian.RL.Agents.Bases.rst", "_autosummary/seldonian.RL.Agents.Bases.Fourier.rst", "_autosummary/seldonian.RL.Agents.Bases.Fourier.Fourier.rst", "_autosummary/seldonian.RL.Agents.Discrete_Random_Agent.rst", "_autosummary/seldonian.RL.Agents.Discrete_Random_Agent.Discrete_Random_Agent.rst", "_autosummary/seldonian.RL.Agents.Function_Approximators.rst", "_autosummary/seldonian.RL.Agents.Function_Approximators.Function_Approximator.rst", "_autosummary/seldonian.RL.Agents.Function_Approximators.Function_Approximator.Function_Approximator.rst", "_autosummary/seldonian.RL.Agents.Function_Approximators.Linear_FA.rst", "_autosummary/seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_FA.rst", "_autosummary/seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_state_action_value_FA.rst", "_autosummary/seldonian.RL.Agents.Function_Approximators.Table.rst", "_autosummary/seldonian.RL.Agents.Function_Approximators.Table.Q_Table.rst", "_autosummary/seldonian.RL.Agents.Function_Approximators.Table.Table.rst", "_autosummary/seldonian.RL.Agents.Function_Approximators.Table.construct_Q_Table_From_Env_Description.rst", "_autosummary/seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.rst", "_autosummary/seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.Parameterized_non_learning_softmax_agent.rst", "_autosummary/seldonian.RL.Agents.Policies.rst", "_autosummary/seldonian.RL.Agents.Policies.Policy.rst", "_autosummary/seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy.rst", "_autosummary/seldonian.RL.Agents.Policies.Policy.Policy.rst", "_autosummary/seldonian.RL.Agents.Policies.Softmax.rst", "_autosummary/seldonian.RL.Agents.Policies.Softmax.Softmax.rst", "_autosummary/seldonian.RL.Agents.keyboard_gridworld.rst", "_autosummary/seldonian.RL.Agents.keyboard_gridworld.Keyboard_gridworld.rst", "_autosummary/seldonian.RL.Agents.mountain_car_rough_solution.rst", "_autosummary/seldonian.RL.Agents.mountain_car_rough_solution.Mountain_car_rough_solution.rst", "_autosummary/seldonian.RL.Env_Description.rst", "_autosummary/seldonian.RL.Env_Description.Env_Description.rst", "_autosummary/seldonian.RL.Env_Description.Env_Description.Env_Description.rst", "_autosummary/seldonian.RL.Env_Description.Env_Description.check_space_type.rst", "_autosummary/seldonian.RL.Env_Description.Spaces.rst", "_autosummary/seldonian.RL.Env_Description.Spaces.Continuous_Space.rst", "_autosummary/seldonian.RL.Env_Description.Spaces.Discrete_Space.rst", "_autosummary/seldonian.RL.RL_generate_dataset_and_spec_file.rst", "_autosummary/seldonian.RL.RL_generate_dataset_and_spec_file.get_constraint_string.rst", "_autosummary/seldonian.RL.RL_generate_dataset_and_spec_file.get_env_kwargs.rst", "_autosummary/seldonian.RL.RL_generate_dataset_and_spec_file.get_metadata_path.rst", "_autosummary/seldonian.RL.RL_generate_dataset_and_spec_file.main.rst", "_autosummary/seldonian.RL.RL_generate_dataset_and_spec_file.print_return_info.rst", "_autosummary/seldonian.RL.RL_model.rst", "_autosummary/seldonian.RL.RL_model.RL_model.rst", "_autosummary/seldonian.RL.RL_runner.rst", "_autosummary/seldonian.RL.RL_runner.create_agent.rst", "_autosummary/seldonian.RL.RL_runner.create_env.rst", "_autosummary/seldonian.RL.RL_runner.run_all_trials.rst", "_autosummary/seldonian.RL.RL_runner.run_episode.rst", "_autosummary/seldonian.RL.RL_runner.run_trial.rst", "_autosummary/seldonian.RL.RL_runner.run_trial_given_agent_and_env.rst", "_autosummary/seldonian.RL.environments.rst", "_autosummary/seldonian.RL.environments.Environment.rst", "_autosummary/seldonian.RL.environments.Environment.Environment.rst", "_autosummary/seldonian.RL.environments.gridworld.rst", "_autosummary/seldonian.RL.environments.gridworld.Gridworld.rst", "_autosummary/seldonian.RL.environments.mountaincar.rst", "_autosummary/seldonian.RL.environments.mountaincar.Mountaincar.rst", "_autosummary/seldonian.RL.environments.n_step_mountaincar.rst", "_autosummary/seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar.rst", "_autosummary/seldonian.RL.environments.simglucose_env.rst", "_autosummary/seldonian.RL.environments.simglucose_env.Simglucose.rst", "_autosummary/seldonian.RL.hyperparams_and_settings.rst", "_autosummary/seldonian.RL.hyperparams_and_settings.define_hyperparameter_and_setting_dict.rst", "_autosummary/seldonian.candidate_selection.rst", "_autosummary/seldonian.candidate_selection.candidate_selection.rst", "_autosummary/seldonian.candidate_selection.candidate_selection.CandidateSelection.rst", "_autosummary/seldonian.dataset.rst", "_autosummary/seldonian.dataset.DataSet.rst", "_autosummary/seldonian.dataset.DataSetLoader.rst", "_autosummary/seldonian.dataset.Episode.rst", "_autosummary/seldonian.dataset.RLDataSet.rst", "_autosummary/seldonian.dataset.SupervisedDataSet.rst", "_autosummary/seldonian.models.rst", "_autosummary/seldonian.models.models.rst", "_autosummary/seldonian.models.models.BoundedLinearRegressionModel.rst", "_autosummary/seldonian.models.models.ClassificationModel.rst", "_autosummary/seldonian.models.models.DummyClassifierModel.rst", "_autosummary/seldonian.models.models.LinearRegressionModel.rst", "_autosummary/seldonian.models.models.LogisticRegressionModel.rst", "_autosummary/seldonian.models.models.RandomClassifierModel.rst", "_autosummary/seldonian.models.models.RegressionModel.rst", "_autosummary/seldonian.models.models.SeldonianModel.rst", "_autosummary/seldonian.models.models.SupervisedModel.rst", "_autosummary/seldonian.models.objectives.rst", "_autosummary/seldonian.models.objectives.False_Negative_Rate.rst", "_autosummary/seldonian.models.objectives.False_Positive_Rate.rst", "_autosummary/seldonian.models.objectives.IS_estimate.rst", "_autosummary/seldonian.models.objectives.Mean_Error.rst", "_autosummary/seldonian.models.objectives.Mean_Squared_Error.rst", "_autosummary/seldonian.models.objectives.Negative_Rate.rst", "_autosummary/seldonian.models.objectives.Positive_Rate.rst", "_autosummary/seldonian.models.objectives.True_Negative_Rate.rst", "_autosummary/seldonian.models.objectives.True_Positive_Rate.rst", "_autosummary/seldonian.models.objectives.evaluate_statistic.rst", "_autosummary/seldonian.models.objectives.gradient_Bounded_Squared_Error.rst", "_autosummary/seldonian.models.objectives.gradient_Mean_Squared_Error.rst", "_autosummary/seldonian.models.objectives.gradient_logistic_loss.rst", "_autosummary/seldonian.models.objectives.logistic_loss.rst", "_autosummary/seldonian.models.objectives.sample_from_statistic.rst", "_autosummary/seldonian.models.objectives.vector_Error.rst", "_autosummary/seldonian.models.objectives.vector_False_Negative_Rate.rst", "_autosummary/seldonian.models.objectives.vector_False_Positive_Rate.rst", "_autosummary/seldonian.models.objectives.vector_IS_estimate.rst", "_autosummary/seldonian.models.objectives.vector_Negative_Rate.rst", "_autosummary/seldonian.models.objectives.vector_Positive_Rate.rst", "_autosummary/seldonian.models.objectives.vector_Squared_Error.rst", "_autosummary/seldonian.models.objectives.vector_True_Negative_Rate.rst", "_autosummary/seldonian.models.objectives.vector_True_Positive_Rate.rst", "_autosummary/seldonian.models.objectives.vector_logistic_loss.rst", "_autosummary/seldonian.models.objectives.vector_weighted_loss.rst", "_autosummary/seldonian.models.objectives.weighted_loss.rst", "_autosummary/seldonian.optimizers.rst", "_autosummary/seldonian.optimizers.gradient_descent.rst", "_autosummary/seldonian.optimizers.gradient_descent.gradient_descent_adam.rst", "_autosummary/seldonian.optimizers.gradient_descent.setup_gradients.rst", "_autosummary/seldonian.parse_tree.rst", "_autosummary/seldonian.parse_tree.nodes.rst", "_autosummary/seldonian.parse_tree.nodes.BaseNode.rst", "_autosummary/seldonian.parse_tree.nodes.CVaRSQeBaseNode.rst", "_autosummary/seldonian.parse_tree.nodes.ConstantNode.rst", "_autosummary/seldonian.parse_tree.nodes.InternalNode.rst", "_autosummary/seldonian.parse_tree.nodes.MEDCustomBaseNode.rst", "_autosummary/seldonian.parse_tree.nodes.Node.rst", "_autosummary/seldonian.parse_tree.operators.rst", "_autosummary/seldonian.parse_tree.parse_tree.rst", "_autosummary/seldonian.parse_tree.parse_tree.ParseTree.rst", "_autosummary/seldonian.parse_tree.parse_tree.make_parse_trees_from_constraints.rst", "_autosummary/seldonian.safety_test.rst", "_autosummary/seldonian.safety_test.safety_test.rst", "_autosummary/seldonian.safety_test.safety_test.SafetyTest.rst", "_autosummary/seldonian.seldonian_algorithm.rst", "_autosummary/seldonian.seldonian_algorithm.SeldonianAlgorithm.rst", "_autosummary/seldonian.spec.rst", "_autosummary/seldonian.spec.RLSpec.rst", "_autosummary/seldonian.spec.Spec.rst", "_autosummary/seldonian.spec.SupervisedSpec.rst", "_autosummary/seldonian.spec.createRLSpec.rst", "_autosummary/seldonian.spec.createSupervisedSpec.rst", "_autosummary/seldonian.utils.rst", "_autosummary/seldonian.utils.RL_utils.rst", "_autosummary/seldonian.utils.RL_utils.argmax_multi.rst", "_autosummary/seldonian.utils.RL_utils.clamp.rst", "_autosummary/seldonian.utils.RL_utils.error.rst", "_autosummary/seldonian.utils.io_utils.rst", "_autosummary/seldonian.utils.io_utils.dir_path.rst", "_autosummary/seldonian.utils.io_utils.load_json.rst", "_autosummary/seldonian.utils.io_utils.load_pickle.rst", "_autosummary/seldonian.utils.io_utils.load_supervised_metadata.rst", "_autosummary/seldonian.utils.io_utils.save_json.rst", "_autosummary/seldonian.utils.io_utils.save_pickle.rst", "_autosummary/seldonian.utils.io_utils.yes_or_no_input.rst", "_autosummary/seldonian.utils.plot_utils.rst", "_autosummary/seldonian.utils.plot_utils.plot_gradient_descent.rst", "_autosummary/seldonian.utils.stats_utils.rst", "_autosummary/seldonian.utils.stats_utils.generate_data.rst", "_autosummary/seldonian.utils.stats_utils.stddev.rst", "_autosummary/seldonian.utils.stats_utils.tinv.rst", "_autosummary/seldonian.utils.stats_utils.weighted_sum_gamma.rst", "_autosummary/seldonian.utils.tutorial_utils.rst", "_autosummary/seldonian.utils.tutorial_utils.generate_clipped_data.rst", "_autosummary/seldonian.utils.tutorial_utils.generate_data.rst", "_autosummary/seldonian.utils.tutorial_utils.make_synthetic_regression_dataset.rst", "_autosummary/seldonian.warnings.rst", "_autosummary/seldonian.warnings.custom_warnings.rst", "_autosummary/seldonian.warnings.custom_warnings.custom_formatwarning.rst", "api.rst", "getting_started.rst", "index.rst", "overview.rst"], "titles": ["seldonian", "seldonian.RL", "seldonian.RL.Agents", "seldonian.RL.Agents.Agent", "seldonian.RL.Agents.Agent.Agent", "seldonian.RL.Agents.Bases", "seldonian.RL.Agents.Bases.Fourier", "seldonian.RL.Agents.Bases.Fourier.Fourier", "seldonian.RL.Agents.Discrete_Random_Agent", "seldonian.RL.Agents.Discrete_Random_Agent.Discrete_Random_Agent", "seldonian.RL.Agents.Function_Approximators", "seldonian.RL.Agents.Function_Approximators.Function_Approximator", "seldonian.RL.Agents.Function_Approximators.Function_Approximator.Function_Approximator", "seldonian.RL.Agents.Function_Approximators.Linear_FA", "seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_FA", "seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_state_action_value_FA", "seldonian.RL.Agents.Function_Approximators.Table", "seldonian.RL.Agents.Function_Approximators.Table.Q_Table", "seldonian.RL.Agents.Function_Approximators.Table.Table", "seldonian.RL.Agents.Function_Approximators.Table.construct_Q_Table_From_Env_Description", "seldonian.RL.Agents.Parameterized_non_learning_softmax_agent", "seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.Parameterized_non_learning_softmax_agent", "seldonian.RL.Agents.Policies", "seldonian.RL.Agents.Policies.Policy", "seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy", "seldonian.RL.Agents.Policies.Policy.Policy", "seldonian.RL.Agents.Policies.Softmax", "seldonian.RL.Agents.Policies.Softmax.Softmax", "seldonian.RL.Agents.keyboard_gridworld", "seldonian.RL.Agents.keyboard_gridworld.Keyboard_gridworld", "seldonian.RL.Agents.mountain_car_rough_solution", "seldonian.RL.Agents.mountain_car_rough_solution.Mountain_car_rough_solution", "seldonian.RL.Env_Description", "seldonian.RL.Env_Description.Env_Description", "seldonian.RL.Env_Description.Env_Description.Env_Description", "seldonian.RL.Env_Description.Env_Description.check_space_type", "seldonian.RL.Env_Description.Spaces", "seldonian.RL.Env_Description.Spaces.Continuous_Space", "seldonian.RL.Env_Description.Spaces.Discrete_Space", "seldonian.RL.RL_generate_dataset_and_spec_file", "seldonian.RL.RL_generate_dataset_and_spec_file.get_constraint_string", "seldonian.RL.RL_generate_dataset_and_spec_file.get_env_kwargs", "seldonian.RL.RL_generate_dataset_and_spec_file.get_metadata_path", "seldonian.RL.RL_generate_dataset_and_spec_file.main", "seldonian.RL.RL_generate_dataset_and_spec_file.print_return_info", "seldonian.RL.RL_model", "seldonian.RL.RL_model.RL_model", "seldonian.RL.RL_runner", "seldonian.RL.RL_runner.create_agent", "seldonian.RL.RL_runner.create_env", "seldonian.RL.RL_runner.run_all_trials", "seldonian.RL.RL_runner.run_episode", "seldonian.RL.RL_runner.run_trial", "seldonian.RL.RL_runner.run_trial_given_agent_and_env", "seldonian.RL.environments", "seldonian.RL.environments.Environment", "seldonian.RL.environments.Environment.Environment", "seldonian.RL.environments.gridworld", "seldonian.RL.environments.gridworld.Gridworld", "seldonian.RL.environments.mountaincar", "seldonian.RL.environments.mountaincar.Mountaincar", "seldonian.RL.environments.n_step_mountaincar", "seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar", "seldonian.RL.environments.simglucose_env", "seldonian.RL.environments.simglucose_env.Simglucose", "seldonian.RL.hyperparams_and_settings", "seldonian.RL.hyperparams_and_settings.define_hyperparameter_and_setting_dict", "seldonian.candidate_selection", "seldonian.candidate_selection.candidate_selection", "seldonian.candidate_selection.candidate_selection.CandidateSelection", "seldonian.dataset", "seldonian.dataset.DataSet", "seldonian.dataset.DataSetLoader", "seldonian.dataset.Episode", "seldonian.dataset.RLDataSet", "seldonian.dataset.SupervisedDataSet", "seldonian.models", "seldonian.models.models", "seldonian.models.models.BoundedLinearRegressionModel", "seldonian.models.models.ClassificationModel", "seldonian.models.models.DummyClassifierModel", "seldonian.models.models.LinearRegressionModel", "seldonian.models.models.LogisticRegressionModel", "seldonian.models.models.RandomClassifierModel", "seldonian.models.models.RegressionModel", "seldonian.models.models.SeldonianModel", "seldonian.models.models.SupervisedModel", "seldonian.models.objectives", "seldonian.models.objectives.False_Negative_Rate", "seldonian.models.objectives.False_Positive_Rate", "seldonian.models.objectives.IS_estimate", "seldonian.models.objectives.Mean_Error", "seldonian.models.objectives.Mean_Squared_Error", "seldonian.models.objectives.Negative_Rate", "seldonian.models.objectives.Positive_Rate", "seldonian.models.objectives.True_Negative_Rate", "seldonian.models.objectives.True_Positive_Rate", "seldonian.models.objectives.evaluate_statistic", "seldonian.models.objectives.gradient_Bounded_Squared_Error", "seldonian.models.objectives.gradient_Mean_Squared_Error", "seldonian.models.objectives.gradient_logistic_loss", "seldonian.models.objectives.logistic_loss", "seldonian.models.objectives.sample_from_statistic", "seldonian.models.objectives.vector_Error", "seldonian.models.objectives.vector_False_Negative_Rate", "seldonian.models.objectives.vector_False_Positive_Rate", "seldonian.models.objectives.vector_IS_estimate", "seldonian.models.objectives.vector_Negative_Rate", "seldonian.models.objectives.vector_Positive_Rate", "seldonian.models.objectives.vector_Squared_Error", "seldonian.models.objectives.vector_True_Negative_Rate", "seldonian.models.objectives.vector_True_Positive_Rate", "seldonian.models.objectives.vector_logistic_loss", "seldonian.models.objectives.vector_weighted_loss", "seldonian.models.objectives.weighted_loss", "seldonian.optimizers", "seldonian.optimizers.gradient_descent", "seldonian.optimizers.gradient_descent.gradient_descent_adam", "seldonian.optimizers.gradient_descent.setup_gradients", "seldonian.parse_tree", "seldonian.parse_tree.nodes", "seldonian.parse_tree.nodes.BaseNode", "seldonian.parse_tree.nodes.CVaRSQeBaseNode", "seldonian.parse_tree.nodes.ConstantNode", "seldonian.parse_tree.nodes.InternalNode", "seldonian.parse_tree.nodes.MEDCustomBaseNode", "seldonian.parse_tree.nodes.Node", "seldonian.parse_tree.operators", "seldonian.parse_tree.parse_tree", "seldonian.parse_tree.parse_tree.ParseTree", "seldonian.parse_tree.parse_tree.make_parse_trees_from_constraints", "seldonian.safety_test", "seldonian.safety_test.safety_test", "seldonian.safety_test.safety_test.SafetyTest", "seldonian.seldonian_algorithm", "seldonian.seldonian_algorithm.SeldonianAlgorithm", "seldonian.spec", "seldonian.spec.RLSpec", "seldonian.spec.Spec", "seldonian.spec.SupervisedSpec", "seldonian.spec.createRLSpec", "seldonian.spec.createSupervisedSpec", "seldonian.utils", "seldonian.utils.RL_utils", "seldonian.utils.RL_utils.argmax_multi", "seldonian.utils.RL_utils.clamp", "seldonian.utils.RL_utils.error", "seldonian.utils.io_utils", "seldonian.utils.io_utils.dir_path", "seldonian.utils.io_utils.load_json", "seldonian.utils.io_utils.load_pickle", "seldonian.utils.io_utils.load_supervised_metadata", "seldonian.utils.io_utils.save_json", "seldonian.utils.io_utils.save_pickle", "seldonian.utils.io_utils.yes_or_no_input", "seldonian.utils.plot_utils", "seldonian.utils.plot_utils.plot_gradient_descent", "seldonian.utils.stats_utils", "seldonian.utils.stats_utils.generate_data", "seldonian.utils.stats_utils.stddev", "seldonian.utils.stats_utils.tinv", "seldonian.utils.stats_utils.weighted_sum_gamma", "seldonian.utils.tutorial_utils", "seldonian.utils.tutorial_utils.generate_clipped_data", "seldonian.utils.tutorial_utils.generate_data", "seldonian.utils.tutorial_utils.make_synthetic_regression_dataset", "seldonian.warnings", "seldonian.warnings.custom_warnings", "seldonian.warnings.custom_warnings.custom_formatwarning", "API", "Getting Started", "Seldonian Engine documentation", "Overview"], "terms": {"engin": [0, 127, 170, 172], "packag": [0, 172], "modul": [0, 1, 2, 5, 10, 22, 32, 54, 67, 68, 76, 77, 115, 119, 127, 128, 131, 132, 134, 136, 137, 142, 166, 168, 172], "class": [3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 38, 45, 46, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 93, 94, 95, 96, 117, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 172], "base": [4, 9, 12, 14, 15, 17, 18, 21, 24, 25, 27, 29, 31, 34, 37, 38, 46, 56, 58, 60, 62, 64, 69, 71, 72, 73, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 121, 122, 123, 124, 125, 126, 127, 129, 133, 135, 137, 138, 139, 171, 172], "object": [4, 7, 12, 19, 21, 24, 25, 27, 34, 37, 38, 46, 56, 58, 69, 71, 72, 73, 74, 75, 85, 117, 121, 122, 125, 126, 129, 133, 135, 136, 137, 138, 139, 141, 149, 150, 152, 153, 156, 171], "all": [4, 21, 56, 71, 75, 79, 84, 85, 86, 90, 126, 129, 133, 172], "mani": [4, 50], "method": [4, 7, 9, 12, 14, 15, 17, 18, 21, 24, 25, 27, 29, 31, 34, 37, 38, 46, 56, 58, 60, 62, 64, 69, 71, 72, 73, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 117, 121, 122, 123, 124, 125, 126, 129, 133, 135, 137, 138, 139, 172], "requir": [4, 127, 129, 138, 170, 172], "overrid": [4, 56, 58, 60, 62, 64, 78, 121, 122, 125, 172], "child": [4, 56, 58, 60, 62, 64, 126, 127, 129, 137, 138, 139, 172], "us": [4, 21, 37, 38, 56, 60, 62, 64, 69, 72, 78, 79, 81, 82, 84, 85, 86, 117, 121, 122, 125, 127, 129, 133, 135, 137, 138, 139, 141, 160, 161, 170, 172], "__init__": [4, 7, 9, 12, 14, 15, 17, 18, 21, 24, 25, 27, 29, 31, 34, 37, 38, 46, 56, 58, 60, 62, 64, 69, 71, 72, 73, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 121, 122, 123, 124, 125, 126, 129, 133, 135, 137, 138, 139], "__repr__": [4, 7, 9, 12, 14, 15, 17, 18, 21, 24, 25, 27, 29, 31, 34, 37, 38, 46, 56, 58, 60, 62, 64, 69, 71, 72, 73, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 121, 122, 123, 124, 125, 126, 129, 133, 135, 137, 138, 139], "return": [4, 7, 9, 12, 14, 15, 17, 18, 19, 21, 24, 25, 27, 29, 31, 34, 37, 38, 46, 48, 49, 50, 51, 52, 53, 56, 58, 60, 62, 64, 69, 71, 72, 73, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 121, 122, 125, 127, 129, 133, 135, 137, 138, 139, 154, 156, 159, 160, 161, 172], "repr": [4, 7, 9, 12, 14, 15, 17, 18, 21, 24, 25, 27, 29, 31, 34, 37, 38, 46, 56, 58, 60, 62, 64, 69, 71, 72, 73, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 129, 133, 135, 137, 138, 139], "self": [4, 7, 9, 12, 14, 15, 17, 18, 21, 24, 25, 27, 29, 31, 34, 37, 38, 46, 56, 58, 60, 62, 64, 69, 71, 72, 73, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 129, 133, 135, 137, 138, 139], "choose_act": [4, 9, 21, 27, 29, 31], "observ": [4, 9, 21, 24, 27, 29, 31, 34, 37, 38, 56, 60, 62, 64, 73, 80, 82, 83, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 121, 122, 125], "choos": [4, 9, 29, 31, 172], "an": [4, 9, 19, 21, 24, 27, 29, 31, 34, 48, 49, 52, 56, 58, 60, 62, 64, 121, 122, 126, 127, 137, 138, 139, 148, 149, 150, 152, 153, 154, 161, 172], "action": [4, 9, 17, 21, 27, 29, 31, 34, 37, 38, 56, 58, 60, 62, 64, 72, 73], "given": [4, 9, 17, 19, 21, 27, 29, 31, 56, 58, 60, 62, 64, 69, 121, 122, 125, 129, 133, 135, 137, 138, 139, 172], "To": [4, 9, 29, 31, 170, 172], "overridden": [4, 9, 29, 31], "paramet": [4, 9, 17, 18, 19, 21, 24, 27, 29, 31, 34, 35, 37, 38, 48, 49, 50, 51, 52, 53, 56, 58, 60, 62, 64, 69, 71, 72, 73, 74, 75, 78, 80, 81, 82, 83, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 121, 122, 123, 124, 125, 126, 129, 133, 135, 137, 138, 139, 141, 148, 149, 150, 152, 153, 154, 156, 158, 159, 160, 161, 163, 164, 172], "The": [4, 9, 17, 18, 21, 27, 29, 31, 37, 58, 69, 71, 72, 75, 78, 80, 81, 82, 83, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 121, 122, 123, 124, 125, 126, 127, 129, 133, 135, 137, 138, 139, 141, 153, 154, 156, 158, 161, 163, 164, 171, 172], "current": [4, 9, 21, 24, 27, 29, 31, 56, 58, 60, 62, 64, 79, 172], "type": [4, 9, 19, 21, 24, 27, 29, 31, 35, 48, 49, 51, 58, 69, 78, 80, 81, 82, 83, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 121, 122, 125, 129, 133, 135, 159, 160, 161, 172], "depend": [4, 9, 21, 24, 27, 29, 31, 121, 122, 125, 172], "environ": [4, 9, 17, 18, 19, 21, 24, 27, 29, 31, 34, 48, 49, 50, 51, 52, 53, 137, 171, 172], "get_prob_this_act": [4, 9, 21, 27, 29, 31], "get": [4, 9, 17, 21, 24, 27, 29, 31, 34, 37, 38, 56, 58, 60, 62, 64, 69, 129, 133, 135, 171], "probabl": [4, 9, 17, 21, 27, 29, 31, 73, 80, 82, 83, 88, 89, 93, 94, 95, 96, 104, 105, 107, 108, 110, 111, 122, 129, 160, 172], "provid": [4, 9, 29, 31, 34, 97, 102, 129, 135, 137, 138, 139, 154, 172], "i": [4, 9, 21, 24, 27, 29, 31, 37, 50, 58, 69, 78, 88, 89, 90, 93, 94, 95, 96, 104, 105, 106, 107, 108, 110, 111, 114, 117, 121, 122, 123, 124, 125, 126, 127, 129, 133, 135, 137, 138, 139, 148, 154, 170, 171, 172], "updat": [4, 9, 21, 29, 31, 58], "next_observ": [4, 9, 21, 29, 31], "reward": [4, 9, 21, 29, 31, 58, 72, 73, 127, 161], "termin": [4, 9, 21, 29, 31, 56, 58, 60, 62, 64], "": [4, 9, 21, 29, 31, 34, 121, 122, 125, 129, 159, 160, 172], "accord": [4, 9, 21, 29, 31], "learn": [4, 9, 21, 29, 31, 69, 71, 72, 75, 77, 79, 84, 85, 86, 117, 121, 122, 125, 127, 129, 133, 139, 171, 172], "rule": [4, 9, 21, 29, 31], "overriden": [4, 9, 29, 31], "after": [4, 9, 21, 29, 31], "taken": [4, 9, 21, 29, 31, 34], "take": [4, 9, 21, 29, 31, 172], "bool": [4, 9, 21, 29, 31, 58, 69, 72, 117, 126, 129, 133, 137, 138, 139, 141, 154, 156], "whether": [4, 9, 21, 24, 27, 29, 31, 58, 69, 72, 75, 117, 126, 129, 133, 135, 137, 138, 139, 148, 156, 172], "hyperparam_and_setting_dict": [7, 21, 24, 27], "env_desc": 7, "env_descript": [9, 14, 15, 19, 21, 24, 27, 29, 58, 171], "basi": [14, 15, 24, 27], "function": [16, 21, 24, 27, 33, 39, 47, 58, 65, 69, 78, 87, 116, 117, 121, 127, 128, 129, 136, 137, 138, 139, 141, 143, 147, 155, 156, 157, 160, 162, 167, 172], "min_stat": [17, 18], "num_stat": [17, 18, 58], "num_act": 17, "A": [17, 19, 53, 56, 58, 60, 62, 64, 74, 106, 127, 129, 137, 138, 139, 148, 149, 150, 152, 153, 171], "q": [17, 19], "contain": [17, 21, 58, 69, 72, 75, 77, 90, 97, 102, 106, 117, 121, 122, 125, 127, 129, 133, 135, 137, 138, 139, 141, 172], "transit": [17, 56, 58, 60, 62, 64], "int": [17, 18, 38, 58, 69, 117, 121, 122, 125, 126, 129, 158, 160, 163, 164], "smallest": [17, 18], "ob": [17, 18, 21, 27, 34, 56, 58, 60, 62, 64, 72, 129], "number": [17, 18, 24, 27, 34, 37, 38, 48, 49, 50, 52, 53, 58, 94, 117, 121, 122, 125, 129, 158, 163, 164, 172], "total": [17, 18, 38, 129], "state": [17, 18, 21, 34, 58, 172], "from_environment_state_to_0_indexed_st": [17, 18], "env_stat": [17, 18], "convert": [17, 18], "0": [17, 18, 37, 78, 83, 88, 89, 93, 94, 95, 96, 104, 105, 107, 108, 110, 111, 117, 121, 122, 125, 129, 133, 137, 138, 139, 140, 158, 161, 163, 164, 172], "index": [17, 18, 126, 161], "you": [17, 18, 72, 129, 153, 156, 170, 171, 172], "want": [17, 18, 35, 72, 129, 153, 156, 170, 172], "get_action_values_given_st": 17, "state_number_not_zero_index": 17, "possibl": [17, 21, 34, 56, 58, 60, 62, 64, 122, 133, 172], "valu": [17, 38, 69, 103, 109, 117, 121, 122, 123, 125, 129, 133, 135, 154, 156, 172], "environment": 17, "specif": [17, 24, 27, 48, 49, 135, 136, 137, 138, 139, 172], "arrai": [17, 21, 24, 27, 37, 69, 72, 112, 113, 127, 161, 172], "get_action_values_given_zero_indexed_st": 17, "zero_indexed_state_numb": 17, "hold": [18, 71, 73, 74, 75], "capabl": 18, "reindex": 18, "creat": [19, 24, 27, 48, 49, 58, 72, 121, 122, 125, 129, 135, 141, 172], "descript": [19, 24, 27, 56, 58, 60, 62, 64, 172], "access": [19, 21, 24, 27, 34], "attribut": [19, 21, 24, 27, 34, 58, 74, 75, 129, 172], "q_tabl": [19, 21, 171], "parametr": 21, "softmax": [21, 171, 172], "pi": [21, 73, 74], "frac": 21, "e": [21, 69, 71, 72, 74, 75, 97, 102, 117, 121, 122, 125, 129, 133, 137, 138, 139, 172], "p": [21, 160], "sum_": 21, "addit": 21, "info": 21, "about": [21, 117, 129, 172], "data": [21, 69, 72, 90, 121, 122, 125, 129, 133, 135, 137, 138, 139, 141, 152, 153, 158, 159, 163, 164, 172], "gener": [21, 158, 163, 164, 172], "variabl": [21, 37, 58, 121, 122, 123, 125, 126, 127, 129, 133, 137, 138, 139], "fa": 21, "approxim": [21, 24, 27], "polici": [21, 46, 127, 140, 171, 172], "select": [21, 27, 67, 68, 69, 115, 121, 122, 125, 133, 135, 137, 138, 139, 171], "get_action_valu": 21, "from": [21, 24, 27, 48, 49, 72, 78, 81, 119, 125, 128, 129, 137, 149, 150, 151, 152, 154, 172], "thi": [21, 56, 58, 60, 62, 64, 79, 84, 85, 86, 93, 94, 98, 104, 105, 107, 108, 110, 111, 121, 122, 125, 126, 129, 135, 137, 171, 172], "get_param": [21, 24, 27], "weight": [21, 24, 27, 69, 78, 80, 81, 82, 83, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 121, 122, 125, 127, 129, 133, 135, 137, 138, 139, 161, 172], "float": [21, 27, 58, 80, 82, 83, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 121, 122, 123, 125, 126, 129, 133, 135, 137, 138, 139, 141, 158, 159, 160, 161, 163, 164, 172], "set_new_param": [21, 24, 27], "new_param": [21, 24, 27], "set": [21, 24, 27, 119, 123, 135, 172], "Not": [21, 127], "implement": [21, 56, 58, 60, 62, 64, 78, 80, 81, 82, 83, 117, 160, 172], "construct_basis_and_linear_fa": [24, 27], "linear": [24, 27, 78, 81], "dictionari": [24, 27, 48, 49, 53, 117, 127, 151, 156], "hyperparameter_and_setting_dict": [24, 27, 48, 49, 50, 52], "specifi": [24, 27, 48, 49, 50, 52, 53, 127, 129, 172], "episod": [24, 27, 44, 48, 49, 50, 51, 52, 53, 72, 74, 90, 106, 171], "per": [24, 27, 48, 49, 50], "trial": [24, 27, 48, 49, 50, 52], "make_state_action_fa": [24, 27], "space": [24, 27, 34, 35, 58, 171], "discret": [24, 27, 34, 35, 38], "contin": [24, 27, 35], "discrete_action_polici": [27, 171], "observation_spac": 34, "action_spac": 34, "describ": [34, 58, 72], "conveni": [34, 129, 141, 172], "continu": [34, 37], "made": 34, "get_min_act": 34, "first": [34, 75, 129, 171, 172], "get_min_st": 34, "get_num_act": 34, "get_num_observation_dim": 34, "dimens": [34, 37, 158, 163, 164], "get_num_st": 34, "also": [34, 123, 124, 126, 129, 172], "call": [34, 121, 122, 125, 172], "here": [34, 127, 172], "desired_typ": 35, "valid": [35, 37, 129, 172], "ensur": [35, 172], "ar": [35, 37, 53, 69, 122, 127, 129, 133, 137, 138, 139, 161, 171, 172], "equival": [35, 121, 122, 125], "discrete_spac": [35, 171], "continous_spac": 35, "which": [35, 50, 93, 121, 122, 124, 125, 127, 129, 137, 138, 139, 172], "we": [35, 121, 122, 125, 129, 170, 172], "match": 35, "bound": [37, 69, 78, 98, 117, 121, 122, 123, 125, 126, 127, 129, 133, 137, 138, 139, 172], "np": 37, "ndarrai": [37, 69, 78, 80, 81, 82, 83, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 121, 122, 125, 133, 135, 159, 161], "shape": [37, 172], "num_dim": 37, "2": [37, 125, 152, 172], "defin": [37, 122, 127, 172], "min": [37, 38, 125, 172], "max": [37, 38, 172], "each": [37, 50, 73, 74, 80, 82, 83, 88, 89, 93, 94, 95, 96, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 121, 122, 125, 127, 129, 172], "For": [37, 127, 172], "exampl": [37, 172], "3d": 37, "x": [37, 78, 80, 81, 82, 83, 88, 89, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 125, 158, 163, 164], "1": [37, 88, 89, 93, 94, 95, 96, 104, 105, 107, 108, 110, 111, 114, 121, 122, 133, 137, 158, 163, 164, 168, 172], "y": [37, 78, 81, 82, 88, 89, 91, 92, 95, 96, 98, 99, 100, 101, 103, 104, 105, 109, 110, 111, 112, 113, 114, 125, 158, 163, 164], "5": [37, 83, 114, 137, 138, 139, 172], "4": [37, 122, 127, 172], "z": [37, 122], "12": 37, "6": [37, 139, 140, 172], "8": [37, 172], "would": [37, 69, 117, 127, 137, 138, 139, 172], "check_bounds_valid": 37, "check": [37, 58, 129, 148], "format": [37, 72, 172], "maximum": [37, 38, 58, 122, 129, 133, 172], "larger": [37, 122], "than": [37, 53, 122, 129, 133, 172], "minimum": [37, 38, 122, 129, 133, 172], "get_num_dim": 37, "get_num_valu": 38, "env_nam": [40, 41, 42], "env_kwarg": [46, 137, 140], "agent": [48, 49, 50, 51, 52, 53, 171, 172], "run": [50, 51, 52, 53, 69, 70, 76, 117, 132, 133, 134, 135, 136, 137, 138, 139, 171], "consist": [50, 52, 172], "same": [50, 125, 154], "dict": [50, 52, 97, 102, 117, 121, 122, 125, 127, 129, 137, 138, 139, 156], "list": [50, 52, 53, 69, 71, 72, 73, 74, 75, 121, 122, 125, 127, 129, 133, 137, 138, 139, 141, 172], "_i": [50, 172], "env": [51, 53], "singl": [51, 52, 129, 172], "arbitrari": [52, 58], "num_episod": 53, "wrapper": [53, 69, 133, 135, 149, 150, 152, 153], "run_trial": [53, 171], "where": [53, 69, 114, 117, 121, 122, 125, 129, 133, 135, 141, 156, 161, 172], "explic": 53, "rather": 53, "via": [53, 129, 172], "get_env_descript": [56, 58, 60, 62, 64], "get_observ": [56, 58, 60, 62, 64], "reset": [56, 58, 60, 62, 64, 129], "initi": [56, 58, 60, 62, 64, 69, 117, 129, 137, 138, 139], "start_visu": [56, 58, 60, 62, 64], "turn": [56, 58, 60, 62, 64], "visual": [56, 58, 60, 62, 64, 123, 124, 126, 129, 170], "debugg": [56, 58, 60, 62, 64], "stop_visu": [56, 58, 60, 62, 64], "off": [56, 58, 60, 62, 64], "new": [56, 60, 62, 64, 127, 171, 172], "print": [56, 58, 60, 62, 64], "out": [56, 58, 60, 62, 64, 135, 172], "debug": [56, 60, 62, 64, 117, 135], "size": 58, "3": [58, 122, 163, 165], "squar": [58, 91, 92, 98, 99, 109, 122, 127, 172], "grid": 58, "cell": 58, "side": [58, 129], "distinct": 58, "terminal_st": 58, "occupi": 58, "time": [58, 114], "timestep": [58, 73], "max_tim": 58, "allow": 58, "gamma": [58, 161], "discount": 58, "factor": 58, "calcul": [58, 88, 89, 90, 91, 92, 93, 94, 95, 96, 101, 103, 104, 105, 106, 107, 108, 109, 112, 113, 114, 117, 121, 122, 125, 129, 133, 137, 138, 139, 161, 172], "expect": [58, 121, 122, 125, 127], "create_env_descript": 58, "is_in_goal_st": 58, "goal": [58, 172], "true": [58, 95, 96, 110, 111, 117, 121, 122, 125, 127, 133, 137, 138, 139, 156, 165, 172], "fals": [58, 69, 72, 75, 88, 89, 95, 96, 97, 104, 105, 114, 117, 127, 129, 135, 137, 138, 139, 140, 141, 152, 153, 156, 165, 172], "go": [58, 172], "back": [58, 137, 138, 139], "between": [58, 88, 89, 93, 94, 95, 96, 104, 105, 107, 108, 110, 111, 125, 172], "reach": 58, "next": 58, "update_posit": 58, "helper": [58, 129], "posit": [58, 80, 82, 83, 88, 89, 93, 94, 95, 96, 97, 104, 105, 107, 108, 111, 114, 122, 127, 129, 172], "inform": [58, 172], "candid": [67, 68, 69, 115, 121, 122, 125, 133, 135, 137, 138, 139, 171], "model": [69, 72, 117, 121, 122, 125, 133, 135, 137, 138, 139, 141, 171], "candidate_dataset": 69, "n_safeti": [69, 122], "parse_tre": [69, 133, 137, 138, 139, 171, 172], "primary_object": [69, 117, 118, 133, 135, 137, 138, 139], "optimization_techniqu": [69, 137, 138, 139, 172], "barrier_funct": [69, 137, 138, 139, 172], "optim": [69, 135, 137, 138, 139, 171, 172], "powel": [69, 172], "initial_solut": 69, "none": [69, 72, 126, 137, 138, 139, 140], "regim": [69, 71, 72, 75, 127, 129, 130, 133, 172], "supervised_learn": [69, 71, 72, 75, 129, 130, 133, 172], "write_logfil": 69, "store_valu": [69, 117], "kwarg": [69, 71, 72, 74, 75, 117, 121, 122, 123, 124, 125, 129, 133, 168], "seldonianmodel": [69, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 121, 122, 125, 133, 137, 138, 139, 171], "dataset": [69, 90, 103, 109, 121, 122, 125, 133, 135, 137, 138, 139, 140, 141, 171], "length": [69, 122, 127], "safeti": [69, 121, 122, 125, 131, 132, 133, 135, 137, 138, 139, 171], "when": [69, 88, 89, 95, 96, 121, 129, 172], "predict": [69, 75, 78, 80, 81, 82, 83, 94, 104, 105, 110, 111, 172], "confid": [69, 121, 122, 125, 126, 129, 137, 138, 139, 141, 172], "dure": [69, 72, 75, 127, 135, 137, 138, 139, 172], "parsetre": [69, 133, 137, 138, 171, 172], "pars": [69, 119, 121, 123, 124, 125, 126, 127, 128, 129, 133, 137, 138, 139, 170, 172], "tree": [69, 119, 121, 123, 124, 125, 126, 127, 128, 129, 133, 137, 138, 139, 170, 172], "behavior": [69, 117, 119, 127, 128, 129, 133, 137, 138, 139, 171], "constraint": [69, 117, 119, 127, 128, 129, 133, 137, 138, 139, 141, 156, 171], "sole": [69, 117, 137, 138, 139], "absenc": [69, 117, 137, 138, 139], "loss": [69, 100, 101, 112, 113, 114, 117, 127, 137, 138, 139], "str": [69, 71, 72, 74, 75, 97, 102, 117, 121, 122, 123, 124, 125, 126, 129, 133, 135, 137, 138, 139, 141, 148, 149, 150, 152, 153, 154, 156], "g": [69, 71, 72, 74, 75, 97, 102, 117, 121, 122, 125, 129, 133, 137, 138, 139, 156, 172], "gradient_desc": [69, 137, 138, 139, 171, 172], "string": [69, 123, 124, 126, 127, 129, 137, 138, 139, 141, 171], "name": [69, 71, 72, 74, 75, 97, 102, 117, 121, 122, 123, 124, 125, 126, 127, 129, 137, 138, 139, 172], "numpi": [69, 78, 80, 81, 82, 83, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 121, 122, 125, 133, 135, 159, 161], "categori": [69, 71, 72, 75, 129, 133, 168], "machin": [69, 71, 72, 75, 77, 79, 84, 85, 86, 121, 122, 125, 129, 133, 171, 172], "algorithm": [69, 70, 71, 72, 75, 76, 125, 129, 133, 134, 135, 136, 137, 138, 139, 172], "reinforcement_learn": [69, 71, 72, 75, 129, 133, 172], "write": [69, 135, 172], "output": [69, 172], "disk": [69, 72], "evaluate_primary_object": [69, 133, 135], "theta": [69, 78, 80, 81, 82, 83, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 121, 122, 125, 133, 135, 172], "primari": [69, 117, 133, 135, 137, 138, 139, 156, 172], "fix": [69, 122, 133, 135], "input": [69, 80, 83, 121, 122, 125, 148, 149, 152, 154, 161, 172], "gradient": [69, 98, 99, 100, 117, 137, 138, 139, 156, 172], "descent": [69, 117, 156, 172], "get_constraint_upper_bound": 69, "upper": [69, 117, 121, 122, 123, 124, 125, 126, 129, 133, 172], "objective_with_barri": 69, "minimization_techniqu": 69, "barrier": [69, 172], "add": [69, 75, 129], "larg": 69, "penalti": 69, "ani": [69, 172], "violat": [69, 129, 172], "nsf": [69, 135, 172], "build": [70, 119, 128, 129, 136], "load": [70, 72, 149, 150, 151, 152, 172], "meta_inform": [71, 74, 75], "datafram": [71, 74, 75, 90, 106, 121, 122, 125, 129], "metadata": [71, 72, 74, 75, 90, 117, 141, 151, 172], "column": [71, 72, 75, 121, 122, 125, 129, 130, 172], "load_rl_dataset_from_csv": 72, "filenam": [72, 149, 150, 151, 152, 153, 168, 172], "metadata_filenam": [72, 172], "rldataset": [72, 171, 172], "file": [72, 135, 141, 149, 150, 151, 152, 153, 172], "csv": 72, "episode_index": 72, "probability_of_act": 72, "load_rl_dataset_from_episode_fil": 72, "pickl": [72, 135, 150, 153], "load_supervised_dataset": [72, 172], "include_sensitive_column": [72, 75], "include_intercept_term": [72, 75, 165], "file_typ": 72, "superviseddataset": [72, 171, 172], "sensit": [72, 75, 172], "train": [72, 75, 78, 81, 82, 172], "pre": 72, "append": 72, "ones": [72, 75], "featur": [72, 78, 80, 81, 82, 83, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 121, 122, 125, 172], "default": [72, 117, 126, 129, 137, 138, 139, 141, 172], "extens": 72, "rl": [73, 74, 129, 133, 137, 161, 171, 172], "o": 74, "r": [74, 100], "df": 75, "label_column": [75, 172], "sensitive_column_nam": 75, "supervis": [75, 86, 127, 129, 139, 172], "panda": [75, 106, 125], "full": [75, 125, 156, 172], "target": 75, "label": [75, 78, 80, 81, 82, 83, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 109, 110, 111, 112, 113, 114, 121, 122, 125, 156, 172], "includ": [75, 117, 129, 172], "main": [77, 128, 171], "linearregressionmodel": [78, 171, 172], "regress": [78, 81, 82, 84, 125, 127, 129, 130, 139, 172], "sever": [78, 122, 125, 172], "parent": [78, 79, 84, 85, 86, 122, 125, 172], "assum": 78, "intercept": 78, "fit": [78, 81, 82, 172], "pair": [78, 81, 125, 172], "nxm": [78, 81], "nx1": [78, 81], "origin": 78, "squash": 78, "supervisedmodel": [79, 84, 171], "classif": [79, 127, 129, 139, 172], "librari": [79, 84, 85, 86, 117, 137, 171, 172], "onli": [79, 122, 133, 172], "support": [79, 127, 172], "binari": 79, "classificationmodel": [80, 82, 83, 171, 172], "classifi": [80, 83], "alwai": [80, 83, 121, 122, 125, 129, 172], "regardless": [80, 83], "have": [80, 82, 83, 114, 129, 172], "regressionmodel": [81, 171, 172], "logist": [82, 100, 101, 112, 127], "ha": [83, 127, 172], "prob": 83, "neg": [88, 89, 93, 95, 104, 105, 107, 110, 114, 127, 129], "rate": [88, 89, 93, 94, 95, 96, 97, 104, 105, 107, 108, 110, 111, 117, 127, 129, 172], "whole": [88, 89, 91, 92, 93, 94, 95, 96, 97, 101, 129], "sampl": [88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 101, 102, 106, 112, 113, 122, 159, 172], "sum": [88, 89, 93, 94, 95, 96, 161, 172], "being": [88, 89, 93, 94, 95, 96, 104, 105, 107, 108, 110, 111, 121], "fact": [88, 89, 95, 96], "wa": [88, 89, 95, 96, 125, 129, 172], "instanc": [88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 137, 138, 139], "data_dict": [90, 97, 102, 106, 121, 122, 125], "unweight": [90, 106], "import": [90, 106, 170, 172], "estim": [90, 106, 121, 122, 172], "over": [90, 91, 92, 97, 133, 172], "mean": [91, 92, 99, 103, 109, 125, 127, 172], "error": [91, 92, 98, 99, 103, 109, 122, 125, 127, 171, 172], "y_hat": 91, "normal": [94, 133, 137, 158, 163, 164], "param": [94, 98], "statistic_nam": [97, 102], "evalu": [97, 98, 102, 117, 121, 122, 125, 129, 135], "statist": [97, 102, 121, 127, 137, 138, 139, 172], "fpr": [97, 102, 121, 127, 172], "analyt": 98, "rtype": 98, "w": 100, "t": [100, 121, 122, 125, 160], "perceptron": 100, "vector": [103, 106, 109, 117, 121, 122, 125, 159], "subject": [104, 105, 110, 111, 172], "actual": [104, 105, 110, 111, 122, 172], "ndarra": 112, "averag": [113, 114], "cost": [113, 114, 172], "sum_i": 114, "p_": 114, "wrong": 114, "answer": [114, 154], "point": [114, 117, 125, 149, 150, 152, 158, 163, 164, 172], "c_i": 114, "upper_bounds_funct": [117, 118], "theta_init": 117, "lambda_init": [117, 137, 138, 139], "alpha_theta": [117, 137, 138, 139], "05": [117, 121, 122, 125, 172], "alpha_lamb": [117, 137, 138, 139], "beta_veloc": [117, 137, 138, 139], "9": [117, 137, 138, 139, 161], "beta_rmsprop": [117, 137, 138, 139], "num_it": [117, 137, 138, 139], "200": [117, 137, 138, 139], "gradient_librari": [117, 118, 137, 138, 139], "autograd": [117, 137, 138, 139], "verbos": [117, 137, 138, 139, 140, 141, 152, 153], "simultan": [117, 172], "ascent": [117, 172], "adam": [117, 137, 138, 139, 172], "lagrangian": [117, 156, 172], "l": [117, 156, 172], "lambda": [117, 156, 172], "f": [117, 125, 156, 172], "lagrang": [117, 156, 172], "multipli": [117, 129, 156, 172], "done": 117, "find": [117, 172], "saddl": [117, 172], "term": 117, "exponenti": [117, 129], "decai": 117, "veloc": 117, "rmsprop": 117, "iter": [117, 125], "comput": [117, 125, 129, 137, 138, 139], "automat": 117, "variou": 117, "quantiti": [117, 172], "solut": [117, 129, 133, 135, 156, 172], "lower": [121, 122, 123, 124, 125, 126, 129], "inf": [121, 122, 124, 125], "conditional_column": [121, 122, 125], "leaf": [121, 123, 124, 133], "measur": [121, 127, 129, 172], "condit": [121, 122, 125, 129], "node_typ": [121, 123], "equal": [121, 129, 130, 133, 172], "base_nod": 121, "delta": [121, 122, 125, 129, 130, 140, 141, 172], "share": [121, 122, 125], "put": [121, 122, 125], "measure_function_nam": 121, "repres": [121, 123, 124, 127, 129, 172], "must": [121, 172], "measure_funct": [121, 172], "oper": [121, 124, 171, 172], "calculate_bound": [121, 122, 125], "bound_method": [121, 122, 125, 137, 138, 139], "test": [121, 122, 125, 131, 132, 133, 135, 137, 138, 139, 156, 171], "calculate_data_forbound": [121, 122, 125], "prepar": [121, 122], "calculate_valu": [121, 122, 125], "etc": [121, 124, 125], "compute_hc_lowerbound": [121, 122, 125], "datas": [121, 122, 125], "high": [121, 122, 125, 172], "level": [121, 122, 125, 129, 172], "compute_hc_upper_and_lowerbound": [121, 122, 125], "compute_hc_upperbound": [121, 122, 125], "independ": [121, 122, 125, 172], "mask_datafram": [121, 122, 125], "mask": [121, 122, 125], "joint": [121, 122, 125], "AND": [121, 122, 125], "predict_hc_lowerbound": [121, 122, 125], "pass": [121, 122, 125, 129, 133, 135, 172], "predict_hc_upper_and_lowerbound": [121, 122, 125], "predict_hc_upperbound": [121, 122, 125], "zhat": [121, 122, 125], "unbias": [121, 122], "basenod": [122, 125, 171], "custom": [122, 125, 127, 172], "cvar_alpha": 122, "alpha": 122, "definit": [122, 172], "consid": 122, "least": [122, 172], "var_alpha": 122, "largest": 122, "100": 122, "thoma": [122, 125], "miller": 122, "2019": [122, 125], "http": [122, 125, 160], "peopl": 122, "c": 122, "umass": 122, "edu": 122, "pthoma": 122, "paper": 122, "thomas2019": 122, "pdf": 122, "see": [122, 125, 137, 138, 139, 171, 172], "theorem": [122, 172], "threshold": [122, 141], "cvar": 122, "sort": 122, "b": [122, 127, 129], "n_candid": 122, "constant": [123, 129, 161, 172], "constant_nod": 123, "represent": [123, 124, 126, 127], "what": [123, 124, 126, 171], "displai": [123, 124, 126, 129, 156], "insid": [123, 124, 126, 172], "box": [123, 124, 126, 172], "graph": [123, 124, 126, 129, 170], "intern": [124, 172], "non": 124, "These": [124, 172], "perform": [124, 127, 172], "wise": 125, "differ": [125, 172], "male": [125, 172], "femal": [125, 172], "present": [125, 129], "et": 125, "al": 125, "www": [125, 160], "scienc": 125, "org": 125, "stoken": 125, "author": 125, "token": 125, "st": 125, "119": 125, "figur": [125, 156], "precalculate_data": 125, "preconfigur": 125, "so": [125, 129, 172], "doe": [125, 129, 171], "need": [125, 126, 129, 136, 172], "recalcul": 125, "through": [125, 129], "up": [125, 129, 172], "y_i": 125, "y_hat_i": 125, "m": [125, 129, 172], "y_j": 125, "y_hat_j": 125, "There": [125, 129, 172], "mai": [125, 148, 172], "row": [125, 172], "n_male": 125, "n_femal": 125, "left": [126, 129, 172], "right": [126, 129], "will_lower_bound": 126, "will_upper_bound": 126, "global": [127, 172], "construct": [127, 172], "measure_functions_dict": 127, "sub_regim": [127, 129, 130, 139, 172], "appear": [127, 129, 172], "recogn": 127, "special": [127, 172], "organ": 127, "sub": [127, 129, 172], "refer": [127, 172], "pr": [127, 129, 172], "nr": 127, "tpr": [127, 172], "fnr": 127, "tnr": 127, "logistic_loss": [127, 171], "mean_error": [127, 129, 171], "mean_squared_error": [127, 171, 172], "reinforc": [127, 172], "j_pi_new": [127, 172], "custom_base_node_dict": 127, "map": 127, "node": [127, 129, 133, 171, 172], "op_mapp": 127, "ast": [127, 129], "those": 127, "thei": [127, 154, 172], "not_supported_op_mapp": 127, "bounds_required_dict": 127, "If": [127, 129, 137, 138, 139, 154, 170, 171], "two": [127, 129, 172], "children": [127, 129], "boolean": [127, 172], "like": [127, 129, 172], "need_a_low": 127, "need_a_upp": 127, "need_b_low": 127, "need_b_upp": 127, "one": [127, 129, 137, 138, 139, 172], "can": [129, 172], "ml": [129, 172], "determin": 129, "user": [129, 154, 172], "appropri": 129, "root": [129, 133], "assign": 129, "built": [129, 137, 138, 139, 172], "constraint_str": [129, 130, 140, 141], "express": [129, 172], "n_node": 129, "n_base_nod": 129, "more": [129, 172], "onc": [129, 172], "contribut": 129, "base_node_dict": 129, "keep": 129, "track": 129, "uniqu": 129, "been": [129, 172], "alreadi": [129, 172], "help": [129, 160], "handl": 129, "case": [129, 172], "duplic": 129, "node_fonts": 129, "fontsiz": 129, "graphviz": [129, 170], "available_measure_funct": 129, "_ab": 129, "absolut": [129, 172], "interv": [129, 133], "tupl": [129, 135, 172], "_add": 129, "_assign_bounds_help": 129, "lower_need": 129, "upper_need": 129, "travers": 129, "_assign_deltas_help": 129, "weight_method": 129, "how": [129, 172], "_ast2pt_nod": 129, "ast_nod": 129, "_ast_tree_help": 129, "make": [129, 156, 172], "recurs": 129, "_div": 129, "divid": 129, "_evaluator_help": 129, "_exp": 129, "_max": 129, "_min": 129, "_mult": 129, "_pow": 129, "pow": 129, "both": [129, 172], "_preprocess_constraint_str": 129, "inequ": [129, 172], "move": 129, "everyth": 129, "final": 129, "form": 129, "some": [129, 172], "sure": 129, "mathemat": [129, 172], "written": [129, 172], "python": [129, 160, 170, 172], "syntax": 129, "_propagate_valu": 129, "propag": [129, 133], "_propagator_help": 129, "_protect_nan": 129, "bound_typ": 129, "nan": 129, "infin": 129, "postit": 129, "_sub": 129, "subract": 129, "assign_bounds_need": 129, "breadth": 129, "search": 129, "decid": 129, "eventu": 129, "necessari": 129, "becaus": 129, "end": [129, 172], "care": 129, "assign_delta": 129, "split": [129, 172], "among": 129, "build_tre": 129, "delta_weight_method": [129, 130], "create_from_ast": 129, "structur": 129, "evaluate_constraint": 129, "itself": 129, "postord": 129, "logic": 129, "make_viz": 129, "titl": 129, "diagram": 129, "top": [129, 172], "make_viz_help": 129, "edg": 129, "digraph": 129, "propagate_bound": 129, "reset_base_node_dict": 129, "reset_data": 129, "cach": 129, "less": [129, 133, 172], "frequent": 129, "safety_dataset": 133, "normalize_return": [133, 137], "relev": 133, "min_return": 133, "max_return": 133, "loop": 133, "found": [133, 135, 172], "spec": [135, 171], "introspect": 135, "complet": [135, 171, 172], "candidate_select": [135, 171], "write_cs_logfil": 135, "store_cs_valu": 135, "branch": 135, "either": [135, 172], "just": 135, "safety_test": [135, 171, 172], "result": [135, 172], "evolut": [135, 156, 172], "passed_safeti": [135, 172], "indic": [135, 172], "model_class": [137, 138, 139], "frac_data_in_safeti": [137, 138, 139, 140], "initial_solution_fn": [137, 138, 139, 140], "rl_policy_obj": 137, "base_node_bound_method_dict": [137, 138, 139], "use_builtin_primary_gradient_fn": [137, 138, 139, 140], "custom_primary_gradient_fn": [137, 138, 139], "optimization_hyperparam": [137, 138, 139, 172], "005": [137, 138, 139], "95": [137, 138, 139], "hyper_search": [137, 138, 139], "regularization_hyperparam": [137, 138, 139], "fraction": [137, 138, 139], "remain": [137, 138, 139], "rl_environment_obj": 137, "exist": [137, 138, 139], "fall": [137, 138, 139], "builtin": [137, 138, 139], "ttest": [137, 138, 139], "hyperparamet": [137, 138, 139, 172], "regular": [137, 138, 139], "usable_opt_dict": [137, 138, 139], "show": [137, 138, 139, 154, 156], "accept": [137, 138, 139, 172], "techniqu": [137, 138, 139, 172], "save": [140, 141, 153, 156], "save_dir": [140, 141], "metadata_pth": 141, "supervisedspec": [141, 171, 172], "pkl": [141, 172], "path": [141, 148, 156], "directori": [141, 148], "flag": [141, 172], "control": [141, 172], "array_in": 144, "val_in": 145, "min_val": 145, "max_val": 145, "output_str": 146, "json": [149, 151, 152, 172], "indent": 152, "abl": 153, "str_to_show": 154, "default_str": 154, "default_v": 154, "ye": 154, "question": 154, "gather": 154, "command": [154, 172], "line": [154, 172], "invalid": 154, "let": [154, 172], "them": 154, "know": [154, 172], "again": 154, "shown": [154, 172], "enter": 154, "noth": 154, "primary_objective_nam": 156, "savenam": 156, "png": 156, "dot": 156, "plot": 156, "numpoint": 158, "loc_x": [158, 163, 164, 165], "loc_i": [158, 163, 164, 165], "sigma_x": [158, 163, 164, 165], "sigma_i": [158, 163, 164, 165], "2d": [158, 163, 164], "random": [158, 163, 164], "center": [158, 163, 164], "distribut": [158, 163, 164], "standard": [158, 159, 163, 164], "deviat": [158, 159, 163, 164], "v": 159, "bessel": 159, "correct": 159, "nu": 160, "invers": [160, 172], "student": 160, "cdf": 160, "degre": 160, "freedom": 160, "correspond": [160, 172], "matlab": 160, "mathwork": 160, "com": 160, "stat": 160, "html": 160, "arr": 161, "num_point": [163, 164, 165], "clip_min": [163, 165], "clip_max": [163, 165], "clip": 165, "msg": 168, "lineno": 168, "arg": 168, "seldonian": [170, 172], "pip": 170, "Then": 170, "system": 170, "wide": 170, "recommend": 170, "welcom": 171, "core": 171, "toolkit": [171, 172], "sourc": 171, "code": [171, 172], "host": 171, "github": 171, "overview": 171, "interfac": 171, "sa": 171, "do": 171, "start": 171, "instal": 171, "tutori": [171, 172], "api": [171, 172], "fourier": 171, "discrete_random_ag": 171, "function_approxim": 171, "linear_fa": 171, "linear_state_action_value_fa": 171, "construct_q_table_from_env_descript": 171, "parameterized_non_learning_softmax_ag": [171, 172], "keyboard_gridworld": 171, "mountain_car_rough_solut": 171, "check_space_typ": 171, "continuous_spac": 171, "rl_generate_dataset_and_spec_fil": 171, "get_constraint_str": 171, "get_env_kwarg": 171, "get_metadata_path": 171, "print_return_info": 171, "rl_model": [171, 172], "rl_runner": 171, "create_ag": 171, "create_env": 171, "run_all_tri": 171, "run_episod": 171, "run_trial_given_agent_and_env": 171, "gridworld": [171, 172], "mountaincar": 171, "n_step_mountaincar": 171, "simglucose_env": 171, "simglucos": 171, "hyperparams_and_set": 171, "define_hyperparameter_and_setting_dict": 171, "candidateselect": [171, 172], "datasetload": [171, 172], "boundedlinearregressionmodel": 171, "dummyclassifiermodel": 171, "logisticregressionmodel": [171, 172], "randomclassifiermodel": 171, "false_negative_r": 171, "false_positive_r": 171, "is_estim": 171, "negative_r": 171, "positive_r": 171, "true_negative_r": 171, "true_positive_r": 171, "evaluate_statist": 171, "gradient_bounded_squared_error": 171, "gradient_mean_squared_error": 171, "gradient_logistic_loss": 171, "sample_from_statist": 171, "vector_error": 171, "vector_false_negative_r": 171, "vector_false_positive_r": 171, "vector_is_estim": 171, "vector_negative_r": 171, "vector_positive_r": 171, "vector_squared_error": 171, "vector_true_negative_r": 171, "vector_true_positive_r": 171, "vector_logistic_loss": 171, "vector_weighted_loss": 171, "weighted_loss": 171, "gradient_descent_adam": 171, "setup_gradi": 171, "cvarsqebasenod": 171, "constantnod": 171, "internalnod": 171, "medcustombasenod": 171, "make_parse_trees_from_constraint": 171, "safetytest": [171, 172], "seldonian_algorithm": [171, 172], "seldonianalgorithm": [171, 172], "createrlspec": [171, 172], "createsupervisedspec": [171, 172], "rlspec": [171, 172], "util": [171, 172], "rl_util": 171, "argmax_multi": 171, "clamp": 171, "io_util": [171, 172], "dir_path": 171, "load_json": 171, "load_pickl": [171, 172], "load_supervised_metadata": 171, "save_json": 171, "save_pickl": 171, "yes_or_no_input": 171, "plot_util": 171, "plot_gradient_desc": 171, "stats_util": 171, "generate_data": 171, "stddev": 171, "tinv": 171, "weighted_sum_gamma": 171, "tutorial_util": 171, "generate_clipped_data": 171, "make_synthetic_regression_dataset": 171, "warn": 171, "custom_warn": 171, "custom_formatwarn": 171, "document": 172, "detail": 172, "homepag": 172, "most": 172, "piec": 172, "One": 172, "In": 172, "cover": 172, "note": 172, "could": 172, "unifi": 172, "work": 172, "howev": 172, "notic": 172, "pattern": 172, "inherit": 172, "concept": 172, "conceptu": 172, "enforc": 172, "develop": 172, "design": 172, "applic": 172, "part": 172, "graphic": 172, "short": 172, "underli": 172, "discuss": 172, "below": 172, "well": 172, "manual": 172, "loader": 172, "comma": 172, "separ": 172, "header": 172, "categor": 172, "numer": 172, "encod": 172, "might": 172, "look": 172, "622": 172, "491": 172, "56": 172, "439": 172, "93": 172, "707": 172, "64": 172, "663": 172, "65": 172, "557": 172, "09": 172, "711": 172, "37": 172, "731": 172, "31": 172, "509": 172, "33333": 172, "538": 172, "490": 172, "58": 172, "406": 172, "59": 172, "529": 172, "532": 172, "28": 172, "447": 172, "23": 172, "527": 172, "379": 172, "14": 172, "488": 172, "98333": 172, "455": 172, "18": 172, "440": 172, "570": 172, "86": 172, "417": 172, "54": 172, "453": 172, "53": 172, "425": 172, "87": 172, "475": 172, "63": 172, "476": 172, "11": 172, "407": 172, "15": 172, "97333": 172, "756": 172, "91": 172, "679": 172, "62": 172, "531": 172, "583": 172, "534": 172, "42": 172, "521": 172, "592": 172, "41": 172, "783": 172, "76": 172, "588": 172, "26": 172, "53333": 172, "should": 172, "befor": 172, "partit": 172, "your": 172, "intention": 172, "exclud": 172, "kei": 172, "problem": 172, "try": 172, "sensitive_column": 172, "rl_module_nam": 172, "within": 172, "rl_class_nam": 172, "biggest": 172, "essenti": 172, "wrap": 172, "scikit": 172, "linearregress": 172, "unless": 172, "own": 172, "best": 172, "though": 172, "chosen": 172, "explicitli": 172, "thing": 172, "live": 172, "likewis": 172, "inact": 172, "illustr": 172, "extend": 172, "g_i": 172, "_": 172, "n": 172, "directli": 172, "often": 172, "five": 172, "follow": 172, "math": 172, "four": 172, "nativ": 172, "ab": 172, "exp": 172, "integ": 172, "239": 172, "trigger": 172, "open": 172, "ad": 172, "It": 172, "someth": 172, "other": 172, "wai": 172, "wrote": 172, "instruct": 172, "option": 172, "recal": 172, "leq": 172, "satisfi": 172, "cumbersom": 172, "symbol": 172, "interpret": 172, "ident": 172, "themselv": 172, "tri": 172, "few": 172, "basic": 172, "plain": 172, "english": 172, "88": 172, "greater": 172, "commonli": 172, "fair": 172, "filter": 172, "atr1": 172, "atr2": 172, "placehold": 172, "parenthes": 172, "surround": 172, "statement": 172, "sai": 172, "r1": 172, "r2": 172, "stand": 172, "race": 172, "demograph": 172, "pariti": 172, "toler": 172, "ratio": 172, "dispar": 172, "impact": 172, "anoth": 172, "permit": 172, "belong": 172, "bundl": 172, "block": 172, "page": 172, "At": 172, "broad": 172, "scope": 172, "No": 172, "throught": 172, "now": 172, "happen": 172, "even": 172, "low": 172, "process": 172, "black": 172, "forc": 172, "toward": 172, "feasibl": 172, "cg": 172, "nelder": 172, "mead": 172, "bfg": 172, "cma": 172, "scipi": 172, "minim": 172, "solver": 172, "covari": 172, "matrix": 172, "adapt": 172, "strategi": 172, "mathcal": 172, "mathbf": 172, "lambda_i": 172, "text": 172, "hcub": 172, "ith": 172, "kkt": 172, "h_i": 172, "optima": 172, "quad": 172, "ldot": 172, "our": 172, "obtain": 172, "situat": 172, "contraint": 172, "conflict": 172, "vanilla": 172, "oscil": 172, "boundari": 172, "dampen": 172, "momentum": 172, "mitig": 172, "far": 172, "therefor": 172, "deem": 172, "assembl": 172, "interact": 172}, "objects": {"": [[0, 0, 0, "-", "seldonian"]], "seldonian": [[1, 0, 0, "-", "RL"], [67, 0, 0, "-", "candidate_selection"], [70, 0, 0, "-", "dataset"], [76, 0, 0, "-", "models"], [115, 0, 0, "-", "optimizers"], [119, 0, 0, "-", "parse_tree"], [131, 0, 0, "-", "safety_test"], [134, 0, 0, "-", "seldonian_algorithm"], [136, 0, 0, "-", "spec"], [142, 0, 0, "-", "utils"], [166, 0, 0, "-", "warnings"]], "seldonian.RL": [[2, 0, 0, "-", "Agents"], [32, 0, 0, "-", "Env_Description"], [39, 0, 0, "-", "RL_generate_dataset_and_spec_file"], [45, 0, 0, "-", "RL_model"], [47, 0, 0, "-", "RL_runner"], [54, 0, 0, "-", "environments"], [65, 0, 0, "-", "hyperparams_and_settings"]], "seldonian.RL.Agents": [[3, 0, 0, "-", "Agent"], [5, 0, 0, "-", "Bases"], [8, 0, 0, "-", "Discrete_Random_Agent"], [10, 0, 0, "-", "Function_Approximators"], [20, 0, 0, "-", "Parameterized_non_learning_softmax_agent"], [22, 0, 0, "-", "Policies"], [28, 0, 0, "-", "keyboard_gridworld"], [30, 0, 0, "-", "mountain_car_rough_solution"]], "seldonian.RL.Agents.Agent": [[4, 1, 1, "", "Agent"]], "seldonian.RL.Agents.Agent.Agent": [[4, 2, 1, "", "__init__"], [4, 2, 1, "", "__repr__"], [4, 2, 1, "", "choose_action"], [4, 2, 1, "", "get_prob_this_action"], [4, 2, 1, "", "update"]], "seldonian.RL.Agents.Bases": [[6, 0, 0, "-", "Fourier"]], "seldonian.RL.Agents.Bases.Fourier": [[7, 1, 1, "", "Fourier"]], "seldonian.RL.Agents.Bases.Fourier.Fourier": [[7, 2, 1, "", "__init__"], [7, 2, 1, "", "__repr__"]], "seldonian.RL.Agents.Discrete_Random_Agent": [[9, 1, 1, "", "Discrete_Random_Agent"]], "seldonian.RL.Agents.Discrete_Random_Agent.Discrete_Random_Agent": [[9, 2, 1, "", "__init__"], [9, 2, 1, "", "__repr__"], [9, 2, 1, "", "choose_action"], [9, 2, 1, "", "get_prob_this_action"], [9, 2, 1, "", "update"]], "seldonian.RL.Agents.Function_Approximators": [[11, 0, 0, "-", "Function_Approximator"], [13, 0, 0, "-", "Linear_FA"], [16, 0, 0, "-", "Table"]], "seldonian.RL.Agents.Function_Approximators.Function_Approximator": [[12, 1, 1, "", "Function_Approximator"]], "seldonian.RL.Agents.Function_Approximators.Function_Approximator.Function_Approximator": [[12, 2, 1, "", "__init__"], [12, 2, 1, "", "__repr__"]], "seldonian.RL.Agents.Function_Approximators.Linear_FA": [[14, 1, 1, "", "Linear_FA"], [15, 1, 1, "", "Linear_state_action_value_FA"]], "seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_FA": [[14, 2, 1, "", "__init__"], [14, 2, 1, "", "__repr__"]], "seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_state_action_value_FA": [[15, 2, 1, "", "__init__"], [15, 2, 1, "", "__repr__"]], "seldonian.RL.Agents.Function_Approximators.Table": [[17, 1, 1, "", "Q_Table"], [18, 1, 1, "", "Table"], [19, 3, 1, "", "construct_Q_Table_From_Env_Description"]], "seldonian.RL.Agents.Function_Approximators.Table.Q_Table": [[17, 2, 1, "", "__init__"], [17, 2, 1, "", "__repr__"], [17, 2, 1, "", "from_environment_state_to_0_indexed_state"], [17, 2, 1, "", "get_action_values_given_state"], [17, 2, 1, "", "get_action_values_given_zero_indexed_state"]], "seldonian.RL.Agents.Function_Approximators.Table.Table": [[18, 2, 1, "", "__init__"], [18, 2, 1, "", "__repr__"], [18, 2, 1, "", "from_environment_state_to_0_indexed_state"]], "seldonian.RL.Agents.Parameterized_non_learning_softmax_agent": [[21, 1, 1, "", "Parameterized_non_learning_softmax_agent"]], "seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.Parameterized_non_learning_softmax_agent": [[21, 2, 1, "", "__init__"], [21, 2, 1, "", "__repr__"], [21, 2, 1, "", "choose_action"], [21, 2, 1, "", "get_action_values"], [21, 2, 1, "", "get_params"], [21, 2, 1, "", "get_prob_this_action"], [21, 2, 1, "", "set_new_params"], [21, 2, 1, "", "update"]], "seldonian.RL.Agents.Policies": [[23, 0, 0, "-", "Policy"], [26, 0, 0, "-", "Softmax"]], "seldonian.RL.Agents.Policies.Policy": [[24, 1, 1, "", "Discrete_Action_Policy"], [25, 1, 1, "", "Policy"]], "seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy": [[24, 2, 1, "", "__init__"], [24, 2, 1, "", "__repr__"], [24, 2, 1, "", "construct_basis_and_linear_FA"], [24, 2, 1, "", "get_params"], [24, 2, 1, "", "make_state_action_FA"], [24, 2, 1, "", "set_new_params"]], "seldonian.RL.Agents.Policies.Policy.Policy": [[25, 2, 1, "", "__init__"], [25, 2, 1, "", "__repr__"]], "seldonian.RL.Agents.Policies.Softmax": [[27, 1, 1, "", "Softmax"]], "seldonian.RL.Agents.Policies.Softmax.Softmax": [[27, 2, 1, "", "__init__"], [27, 2, 1, "", "__repr__"], [27, 2, 1, "", "choose_action"], [27, 2, 1, "", "construct_basis_and_linear_FA"], [27, 2, 1, "", "get_params"], [27, 2, 1, "", "get_prob_this_action"], [27, 2, 1, "", "make_state_action_FA"], [27, 2, 1, "", "set_new_params"]], "seldonian.RL.Agents.keyboard_gridworld": [[29, 1, 1, "", "Keyboard_gridworld"]], "seldonian.RL.Agents.keyboard_gridworld.Keyboard_gridworld": [[29, 2, 1, "", "__init__"], [29, 2, 1, "", "__repr__"], [29, 2, 1, "", "choose_action"], [29, 2, 1, "", "get_prob_this_action"], [29, 2, 1, "", "update"]], "seldonian.RL.Agents.mountain_car_rough_solution": [[31, 1, 1, "", "Mountain_car_rough_solution"]], "seldonian.RL.Agents.mountain_car_rough_solution.Mountain_car_rough_solution": [[31, 2, 1, "", "__init__"], [31, 2, 1, "", "__repr__"], [31, 2, 1, "", "choose_action"], [31, 2, 1, "", "get_prob_this_action"], [31, 2, 1, "", "update"]], "seldonian.RL.Env_Description": [[33, 0, 0, "-", "Env_Description"], [36, 0, 0, "-", "Spaces"]], "seldonian.RL.Env_Description.Env_Description": [[34, 1, 1, "", "Env_Description"], [35, 3, 1, "", "check_space_type"]], "seldonian.RL.Env_Description.Env_Description.Env_Description": [[34, 2, 1, "", "__init__"], [34, 2, 1, "", "__repr__"], [34, 2, 1, "", "get_min_action"], [34, 2, 1, "", "get_min_state"], [34, 2, 1, "", "get_num_actions"], [34, 2, 1, "", "get_num_observation_dims"], [34, 2, 1, "", "get_num_states"]], "seldonian.RL.Env_Description.Spaces": [[37, 1, 1, "", "Continuous_Space"], [38, 1, 1, "", "Discrete_Space"]], "seldonian.RL.Env_Description.Spaces.Continuous_Space": [[37, 2, 1, "", "__init__"], [37, 2, 1, "", "__repr__"], [37, 2, 1, "", "check_bounds_valid"], [37, 2, 1, "", "get_num_dims"]], "seldonian.RL.Env_Description.Spaces.Discrete_Space": [[38, 2, 1, "", "__init__"], [38, 2, 1, "", "__repr__"], [38, 2, 1, "", "get_num_values"]], "seldonian.RL.RL_generate_dataset_and_spec_file": [[40, 3, 1, "", "get_constraint_string"], [41, 3, 1, "", "get_env_kwargs"], [42, 3, 1, "", "get_metadata_path"], [43, 3, 1, "", "main"], [44, 3, 1, "", "print_return_info"]], "seldonian.RL.RL_model": [[46, 1, 1, "", "RL_model"]], "seldonian.RL.RL_model.RL_model": [[46, 2, 1, "", "__init__"], [46, 2, 1, "", "__repr__"]], "seldonian.RL.RL_runner": [[48, 3, 1, "", "create_agent"], [49, 3, 1, "", "create_env"], [50, 3, 1, "", "run_all_trials"], [51, 3, 1, "", "run_episode"], [52, 3, 1, "", "run_trial"], [53, 3, 1, "", "run_trial_given_agent_and_env"]], "seldonian.RL.environments": [[55, 0, 0, "-", "Environment"], [57, 0, 0, "-", "gridworld"], [59, 0, 0, "-", "mountaincar"], [61, 0, 0, "-", "n_step_mountaincar"], [63, 0, 0, "-", "simglucose_env"]], "seldonian.RL.environments.Environment": [[56, 1, 1, "", "Environment"]], "seldonian.RL.environments.Environment.Environment": [[56, 2, 1, "", "__init__"], [56, 2, 1, "", "__repr__"], [56, 2, 1, "", "get_env_description"], [56, 2, 1, "", "get_observation"], [56, 2, 1, "", "reset"], [56, 2, 1, "", "start_visualizing"], [56, 2, 1, "", "stop_visualizing"], [56, 2, 1, "", "terminated"], [56, 2, 1, "", "transition"], [56, 2, 1, "", "visualize"]], "seldonian.RL.environments.gridworld": [[58, 1, 1, "", "Gridworld"]], "seldonian.RL.environments.gridworld.Gridworld": [[58, 2, 1, "", "__init__"], [58, 2, 1, "", "__repr__"], [58, 2, 1, "", "create_env_description"], [58, 2, 1, "", "get_env_description"], [58, 2, 1, "", "get_observation"], [58, 2, 1, "", "is_in_goal_state"], [58, 2, 1, "", "reset"], [58, 2, 1, "", "start_visualizing"], [58, 2, 1, "", "stop_visualizing"], [58, 2, 1, "", "terminated"], [58, 2, 1, "", "transition"], [58, 2, 1, "", "update_position"], [58, 2, 1, "", "visualize"]], "seldonian.RL.environments.mountaincar": [[60, 1, 1, "", "Mountaincar"]], "seldonian.RL.environments.mountaincar.Mountaincar": [[60, 2, 1, "", "__init__"], [60, 2, 1, "", "__repr__"], [60, 2, 1, "", "get_env_description"], [60, 2, 1, "", "get_observation"], [60, 2, 1, "", "reset"], [60, 2, 1, "", "start_visualizing"], [60, 2, 1, "", "stop_visualizing"], [60, 2, 1, "", "terminated"], [60, 2, 1, "", "transition"], [60, 2, 1, "", "visualize"]], "seldonian.RL.environments.n_step_mountaincar": [[62, 1, 1, "", "N_step_mountaincar"]], "seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar": [[62, 2, 1, "", "__init__"], [62, 2, 1, "", "__repr__"], [62, 2, 1, "", "get_env_description"], [62, 2, 1, "", "get_observation"], [62, 2, 1, "", "reset"], [62, 2, 1, "", "start_visualizing"], [62, 2, 1, "", "stop_visualizing"], [62, 2, 1, "", "terminated"], [62, 2, 1, "", "transition"], [62, 2, 1, "", "visualize"]], "seldonian.RL.environments.simglucose_env": [[64, 1, 1, "", "Simglucose"]], "seldonian.RL.environments.simglucose_env.Simglucose": [[64, 2, 1, "", "__init__"], [64, 2, 1, "", "__repr__"], [64, 2, 1, "", "get_env_description"], [64, 2, 1, "", "get_observation"], [64, 2, 1, "", "reset"], [64, 2, 1, "", "start_visualizing"], [64, 2, 1, "", "stop_visualizing"], [64, 2, 1, "", "terminated"], [64, 2, 1, "", "transition"], [64, 2, 1, "", "visualize"]], "seldonian.RL.hyperparams_and_settings": [[66, 3, 1, "", "define_hyperparameter_and_setting_dict"]], "seldonian.candidate_selection": [[68, 0, 0, "-", "candidate_selection"]], "seldonian.candidate_selection.candidate_selection": [[69, 1, 1, "", "CandidateSelection"]], "seldonian.candidate_selection.candidate_selection.CandidateSelection": [[69, 2, 1, "", "__init__"], [69, 2, 1, "", "__repr__"], [69, 2, 1, "", "evaluate_primary_objective"], [69, 2, 1, "", "get_constraint_upper_bounds"], [69, 2, 1, "", "objective_with_barrier"], [69, 2, 1, "", "run"]], "seldonian.dataset": [[71, 1, 1, "", "DataSet"], [72, 1, 1, "", "DataSetLoader"], [73, 1, 1, "", "Episode"], [74, 1, 1, "", "RLDataSet"], [75, 1, 1, "", "SupervisedDataSet"]], "seldonian.dataset.DataSet": [[71, 2, 1, "", "__init__"], [71, 2, 1, "", "__repr__"]], "seldonian.dataset.DataSetLoader": [[72, 2, 1, "", "__init__"], [72, 2, 1, "", "__repr__"], [72, 2, 1, "", "load_RL_dataset_from_csv"], [72, 2, 1, "", "load_RL_dataset_from_episode_file"], [72, 2, 1, "", "load_supervised_dataset"]], "seldonian.dataset.Episode": [[73, 2, 1, "", "__init__"], [73, 2, 1, "", "__repr__"]], "seldonian.dataset.RLDataSet": [[74, 2, 1, "", "__init__"], [74, 2, 1, "", "__repr__"]], "seldonian.dataset.SupervisedDataSet": [[75, 2, 1, "", "__init__"], [75, 2, 1, "", "__repr__"]], "seldonian.models": [[77, 0, 0, "-", "models"], [87, 0, 0, "-", "objectives"]], "seldonian.models.models": [[78, 1, 1, "", "BoundedLinearRegressionModel"], [79, 1, 1, "", "ClassificationModel"], [80, 1, 1, "", "DummyClassifierModel"], [81, 1, 1, "", "LinearRegressionModel"], [82, 1, 1, "", "LogisticRegressionModel"], [83, 1, 1, "", "RandomClassifierModel"], [84, 1, 1, "", "RegressionModel"], [85, 1, 1, "", "SeldonianModel"], [86, 1, 1, "", "SupervisedModel"]], "seldonian.models.models.BoundedLinearRegressionModel": [[78, 2, 1, "", "__init__"], [78, 2, 1, "", "__repr__"], [78, 2, 1, "", "fit"], [78, 2, 1, "", "predict"]], "seldonian.models.models.ClassificationModel": [[79, 2, 1, "", "__init__"], [79, 2, 1, "", "__repr__"]], "seldonian.models.models.DummyClassifierModel": [[80, 2, 1, "", "__init__"], [80, 2, 1, "", "__repr__"], [80, 2, 1, "", "predict"]], "seldonian.models.models.LinearRegressionModel": [[81, 2, 1, "", "__init__"], [81, 2, 1, "", "__repr__"], [81, 2, 1, "", "fit"], [81, 2, 1, "", "predict"]], "seldonian.models.models.LogisticRegressionModel": [[82, 2, 1, "", "__init__"], [82, 2, 1, "", "__repr__"], [82, 2, 1, "", "fit"], [82, 2, 1, "", "predict"]], "seldonian.models.models.RandomClassifierModel": [[83, 2, 1, "", "__init__"], [83, 2, 1, "", "__repr__"], [83, 2, 1, "", "predict"]], "seldonian.models.models.RegressionModel": [[84, 2, 1, "", "__init__"], [84, 2, 1, "", "__repr__"]], "seldonian.models.models.SeldonianModel": [[85, 2, 1, "", "__init__"], [85, 2, 1, "", "__repr__"]], "seldonian.models.models.SupervisedModel": [[86, 2, 1, "", "__init__"], [86, 2, 1, "", "__repr__"]], "seldonian.models.objectives": [[88, 3, 1, "", "False_Negative_Rate"], [89, 3, 1, "", "False_Positive_Rate"], [90, 3, 1, "", "IS_estimate"], [91, 3, 1, "", "Mean_Error"], [92, 3, 1, "", "Mean_Squared_Error"], [93, 3, 1, "", "Negative_Rate"], [94, 3, 1, "", "Positive_Rate"], [95, 3, 1, "", "True_Negative_Rate"], [96, 3, 1, "", "True_Positive_Rate"], [97, 3, 1, "", "evaluate_statistic"], [98, 3, 1, "", "gradient_Bounded_Squared_Error"], [99, 3, 1, "", "gradient_Mean_Squared_Error"], [100, 3, 1, "", "gradient_logistic_loss"], [101, 3, 1, "", "logistic_loss"], [102, 3, 1, "", "sample_from_statistic"], [103, 3, 1, "", "vector_Error"], [104, 3, 1, "", "vector_False_Negative_Rate"], [105, 3, 1, "", "vector_False_Positive_Rate"], [106, 3, 1, "", "vector_IS_estimate"], [107, 3, 1, "", "vector_Negative_Rate"], [108, 3, 1, "", "vector_Positive_Rate"], [109, 3, 1, "", "vector_Squared_Error"], [110, 3, 1, "", "vector_True_Negative_Rate"], [111, 3, 1, "", "vector_True_Positive_Rate"], [112, 3, 1, "", "vector_logistic_loss"], [113, 3, 1, "", "vector_weighted_loss"], [114, 3, 1, "", "weighted_loss"]], "seldonian.optimizers": [[116, 0, 0, "-", "gradient_descent"]], "seldonian.optimizers.gradient_descent": [[117, 3, 1, "", "gradient_descent_adam"], [118, 3, 1, "", "setup_gradients"]], "seldonian.parse_tree": [[120, 0, 0, "-", "nodes"], [127, 0, 0, "-", "operators"], [128, 0, 0, "-", "parse_tree"]], "seldonian.parse_tree.nodes": [[121, 1, 1, "", "BaseNode"], [122, 1, 1, "", "CVaRSQeBaseNode"], [123, 1, 1, "", "ConstantNode"], [124, 1, 1, "", "InternalNode"], [125, 1, 1, "", "MEDCustomBaseNode"], [126, 1, 1, "", "Node"]], "seldonian.parse_tree.nodes.BaseNode": [[121, 2, 1, "", "__init__"], [121, 2, 1, "", "__repr__"], [121, 2, 1, "", "calculate_bounds"], [121, 2, 1, "", "calculate_data_forbound"], [121, 2, 1, "", "calculate_value"], [121, 2, 1, "", "compute_HC_lowerbound"], [121, 2, 1, "", "compute_HC_upper_and_lowerbound"], [121, 2, 1, "", "compute_HC_upperbound"], [121, 2, 1, "", "mask_dataframe"], [121, 2, 1, "", "predict_HC_lowerbound"], [121, 2, 1, "", "predict_HC_upper_and_lowerbound"], [121, 2, 1, "", "predict_HC_upperbound"], [121, 2, 1, "", "zhat"]], "seldonian.parse_tree.nodes.CVaRSQeBaseNode": [[122, 2, 1, "", "__init__"], [122, 2, 1, "", "__repr__"], [122, 2, 1, "", "calculate_bounds"], [122, 2, 1, "", "calculate_data_forbound"], [122, 2, 1, "", "calculate_value"], [122, 2, 1, "", "compute_HC_lowerbound"], [122, 2, 1, "", "compute_HC_upper_and_lowerbound"], [122, 2, 1, "", "compute_HC_upperbound"], [122, 2, 1, "", "mask_dataframe"], [122, 2, 1, "", "predict_HC_lowerbound"], [122, 2, 1, "", "predict_HC_upper_and_lowerbound"], [122, 2, 1, "", "predict_HC_upperbound"], [122, 2, 1, "", "zhat"]], "seldonian.parse_tree.nodes.ConstantNode": [[123, 2, 1, "", "__init__"], [123, 2, 1, "", "__repr__"]], "seldonian.parse_tree.nodes.InternalNode": [[124, 2, 1, "", "__init__"], [124, 2, 1, "", "__repr__"]], "seldonian.parse_tree.nodes.MEDCustomBaseNode": [[125, 2, 1, "", "__init__"], [125, 2, 1, "", "__repr__"], [125, 2, 1, "", "calculate_bounds"], [125, 2, 1, "", "calculate_data_forbound"], [125, 2, 1, "", "calculate_value"], [125, 2, 1, "", "compute_HC_lowerbound"], [125, 2, 1, "", "compute_HC_upper_and_lowerbound"], [125, 2, 1, "", "compute_HC_upperbound"], [125, 2, 1, "", "mask_dataframe"], [125, 2, 1, "", "precalculate_data"], [125, 2, 1, "", "predict_HC_lowerbound"], [125, 2, 1, "", "predict_HC_upper_and_lowerbound"], [125, 2, 1, "", "predict_HC_upperbound"], [125, 2, 1, "", "zhat"]], "seldonian.parse_tree.nodes.Node": [[126, 2, 1, "", "__init__"], [126, 2, 1, "", "__repr__"]], "seldonian.parse_tree.operators": [[127, 4, 1, "", "bounds_required_dict"], [127, 4, 1, "", "custom_base_node_dict"], [127, 4, 1, "", "measure_functions_dict"], [127, 4, 1, "", "not_supported_op_mapper"], [127, 4, 1, "", "op_mapper"]], "seldonian.parse_tree.parse_tree": [[129, 1, 1, "", "ParseTree"], [130, 3, 1, "", "make_parse_trees_from_constraints"]], "seldonian.parse_tree.parse_tree.ParseTree": [[129, 2, 1, "", "__init__"], [129, 2, 1, "", "__repr__"], [129, 2, 1, "", "_abs"], [129, 2, 1, "", "_add"], [129, 2, 1, "", "_assign_bounds_helper"], [129, 2, 1, "", "_assign_deltas_helper"], [129, 2, 1, "", "_ast2pt_node"], [129, 2, 1, "", "_ast_tree_helper"], [129, 2, 1, "", "_div"], [129, 2, 1, "", "_evaluator_helper"], [129, 2, 1, "", "_exp"], [129, 2, 1, "", "_max"], [129, 2, 1, "", "_min"], [129, 2, 1, "", "_mult"], [129, 2, 1, "", "_pow"], [129, 2, 1, "", "_preprocess_constraint_str"], [129, 2, 1, "", "_propagate_value"], [129, 2, 1, "", "_propagator_helper"], [129, 2, 1, "", "_protect_nan"], [129, 2, 1, "", "_sub"], [129, 2, 1, "", "assign_bounds_needed"], [129, 2, 1, "", "assign_deltas"], [129, 2, 1, "", "build_tree"], [129, 2, 1, "", "create_from_ast"], [129, 2, 1, "", "evaluate_constraint"], [129, 2, 1, "", "make_viz"], [129, 2, 1, "", "make_viz_helper"], [129, 2, 1, "", "propagate"], [129, 2, 1, "", "propagate_bounds"], [129, 2, 1, "", "reset_base_node_dict"]], "seldonian.safety_test": [[132, 0, 0, "-", "safety_test"]], "seldonian.safety_test.safety_test": [[133, 1, 1, "", "SafetyTest"]], "seldonian.safety_test.safety_test.SafetyTest": [[133, 2, 1, "", "__init__"], [133, 2, 1, "", "__repr__"], [133, 2, 1, "", "evaluate_primary_objective"], [133, 2, 1, "", "run"]], "seldonian.seldonian_algorithm": [[135, 1, 1, "", "SeldonianAlgorithm"]], "seldonian.seldonian_algorithm.SeldonianAlgorithm": [[135, 2, 1, "", "__init__"], [135, 2, 1, "", "__repr__"], [135, 2, 1, "", "candidate_selection"], [135, 2, 1, "", "evaluate_primary_objective"], [135, 2, 1, "", "run"], [135, 2, 1, "", "safety_test"]], "seldonian.spec": [[137, 1, 1, "", "RLSpec"], [138, 1, 1, "", "Spec"], [139, 1, 1, "", "SupervisedSpec"], [140, 3, 1, "", "createRLSpec"], [141, 3, 1, "", "createSupervisedSpec"]], "seldonian.spec.RLSpec": [[137, 2, 1, "", "__init__"], [137, 2, 1, "", "__repr__"]], "seldonian.spec.Spec": [[138, 2, 1, "", "__init__"], [138, 2, 1, "", "__repr__"]], "seldonian.spec.SupervisedSpec": [[139, 2, 1, "", "__init__"], [139, 2, 1, "", "__repr__"]], "seldonian.utils": [[143, 0, 0, "-", "RL_utils"], [147, 0, 0, "-", "io_utils"], [155, 0, 0, "-", "plot_utils"], [157, 0, 0, "-", "stats_utils"], [162, 0, 0, "-", "tutorial_utils"]], "seldonian.utils.RL_utils": [[144, 3, 1, "", "argmax_multi"], [145, 3, 1, "", "clamp"], [146, 3, 1, "", "error"]], "seldonian.utils.io_utils": [[148, 3, 1, "", "dir_path"], [149, 3, 1, "", "load_json"], [150, 3, 1, "", "load_pickle"], [151, 3, 1, "", "load_supervised_metadata"], [152, 3, 1, "", "save_json"], [153, 3, 1, "", "save_pickle"], [154, 3, 1, "", "yes_or_no_input"]], "seldonian.utils.plot_utils": [[156, 3, 1, "", "plot_gradient_descent"]], "seldonian.utils.stats_utils": [[158, 3, 1, "", "generate_data"], [159, 3, 1, "", "stddev"], [160, 3, 1, "", "tinv"], [161, 3, 1, "", "weighted_sum_gamma"]], "seldonian.utils.tutorial_utils": [[163, 3, 1, "", "generate_clipped_data"], [164, 3, 1, "", "generate_data"], [165, 3, 1, "", "make_synthetic_regression_dataset"]], "seldonian.warnings": [[167, 0, 0, "-", "custom_warnings"]], "seldonian.warnings.custom_warnings": [[168, 3, 1, "", "custom_formatwarning"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "data", "Python data"]}, "titleterms": {"seldonian": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 171], "rl": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66], "agent": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "base": [5, 6, 7], "fourier": [6, 7], "discrete_random_ag": [8, 9], "function_approxim": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "linear_fa": [13, 14, 15], "linear_state_action_value_fa": 15, "tabl": [16, 17, 18, 19, 171], "q_tabl": 17, "construct_q_table_from_env_descript": 19, "parameterized_non_learning_softmax_ag": [20, 21], "polici": [22, 23, 24, 25, 26, 27], "discrete_action_polici": 24, "softmax": [26, 27], "keyboard_gridworld": [28, 29], "mountain_car_rough_solut": [30, 31], "env_descript": [32, 33, 34, 35, 36, 37, 38], "check_space_typ": 35, "space": [36, 37, 38], "continuous_spac": 37, "discrete_spac": 38, "rl_generate_dataset_and_spec_fil": [39, 40, 41, 42, 43, 44], "get_constraint_str": 40, "get_env_kwarg": 41, "get_metadata_path": 42, "main": 43, "print_return_info": 44, "rl_model": [45, 46], "rl_runner": [47, 48, 49, 50, 51, 52, 53], "create_ag": 48, "create_env": 49, "run_all_tri": 50, "run_episod": 51, "run_trial": 52, "run_trial_given_agent_and_env": 53, "environ": [54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64], "gridworld": [57, 58], "mountaincar": [59, 60], "n_step_mountaincar": [61, 62], "simglucose_env": [63, 64], "simglucos": 64, "hyperparams_and_set": [65, 66], "define_hyperparameter_and_setting_dict": 66, "candidate_select": [67, 68, 69], "candidateselect": 69, "dataset": [70, 71, 72, 73, 74, 75, 172], "datasetload": 72, "episod": 73, "rldataset": 74, "superviseddataset": 75, "model": [76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 172], "boundedlinearregressionmodel": 78, "classificationmodel": 79, "dummyclassifiermodel": 80, "linearregressionmodel": 81, "logisticregressionmodel": 82, "randomclassifiermodel": 83, "regressionmodel": 84, "seldonianmodel": 85, "supervisedmodel": 86, "object": [87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 172], "false_negative_r": 88, "false_positive_r": 89, "is_estim": 90, "mean_error": 91, "mean_squared_error": 92, "negative_r": 93, "positive_r": 94, "true_negative_r": 95, "true_positive_r": 96, "evaluate_statist": 97, "gradient_bounded_squared_error": 98, "gradient_mean_squared_error": 99, "gradient_logistic_loss": 100, "logistic_loss": 101, "sample_from_statist": 102, "vector_error": 103, "vector_false_negative_r": 104, "vector_false_positive_r": 105, "vector_is_estim": 106, "vector_negative_r": 107, "vector_positive_r": 108, "vector_squared_error": 109, "vector_true_negative_r": 110, "vector_true_positive_r": 111, "vector_logistic_loss": 112, "vector_weighted_loss": 113, "weighted_loss": 114, "optim": [115, 116, 117, 118], "gradient_desc": [116, 117, 118], "gradient_descent_adam": 117, "setup_gradi": 118, "parse_tre": [119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130], "node": [120, 121, 122, 123, 124, 125, 126], "basenod": 121, "cvarsqebasenod": 122, "constantnod": 123, "internalnod": 124, "medcustombasenod": 125, "oper": 127, "parsetre": 129, "make_parse_trees_from_constraint": 130, "safety_test": [131, 132, 133], "safetytest": 133, "seldonian_algorithm": [134, 135], "seldonianalgorithm": 135, "spec": [136, 137, 138, 139, 140, 141, 172], "rlspec": 137, "supervisedspec": 139, "createrlspec": 140, "createsupervisedspec": 141, "util": [142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165], "rl_util": [143, 144, 145, 146], "argmax_multi": 144, "clamp": 145, "error": 146, "io_util": [147, 148, 149, 150, 151, 152, 153, 154], "dir_path": 148, "load_json": 149, "load_pickl": 150, "load_supervised_metadata": 151, "save_json": 152, "save_pickl": 153, "yes_or_no_input": 154, "plot_util": [155, 156], "plot_gradient_desc": 156, "stats_util": [157, 158, 159, 160, 161], "generate_data": [158, 164], "stddev": 159, "tinv": 160, "weighted_sum_gamma": 161, "tutorial_util": [162, 163, 164, 165], "generate_clipped_data": 163, "make_synthetic_regression_dataset": 165, "warn": [166, 167, 168], "custom_warn": [167, 168], "custom_formatwarn": 168, "api": 169, "get": 170, "start": 170, "instal": 170, "A": 170, "first": 170, "tutori": 170, "engin": 171, "document": 171, "content": 171, "overview": 172, "interfac": 172, "behavior": 172, "constraint": 172, "string": 172, "what": 172, "doe": 172, "sa": 172, "run": 172, "do": 172, "candid": 172, "select": 172, "safeti": 172, "test": 172}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 56}})