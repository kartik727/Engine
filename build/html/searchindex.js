Search.setIndex({"docnames": ["_autosummary/interface", "_autosummary/interface.cli_supervised", "_autosummary/interface.cli_supervised.run_interface", "_autosummary/interface.command_line_interface", "_autosummary/interface.command_line_interface.run_interface", "_autosummary/seldonian", "_autosummary/seldonian.RL", "_autosummary/seldonian.RL.environments", "_autosummary/seldonian.RL.environments.gridworld3x3", "_autosummary/seldonian.RL.environments.gridworld3x3.Environment", "_autosummary/seldonian.RL.environments.mountaincar", "_autosummary/seldonian.RL.environments.mountaincar.Basis", "_autosummary/seldonian.RL.environments.mountaincar.Environment", "_autosummary/seldonian.RL.environments.mountaincar.FourierBasis", "_autosummary/seldonian.RL.environments.mountaincar.Linear_Softmax", "_autosummary/seldonian.RL.environments.mountaincar.Mountaincar", "_autosummary/seldonian.RL.environments.mountaincar.Policy", "_autosummary/seldonian.RL.environments.mountaincar.increment_counter", "_autosummary/seldonian.candidate_selection", "_autosummary/seldonian.candidate_selection.candidate_selection", "_autosummary/seldonian.candidate_selection.candidate_selection.CandidateSelection", "_autosummary/seldonian.dataset", "_autosummary/seldonian.dataset.DataSet", "_autosummary/seldonian.dataset.DataSetLoader", "_autosummary/seldonian.dataset.Episode", "_autosummary/seldonian.dataset.RLDataSet", "_autosummary/seldonian.dataset.SupervisedDataSet", "_autosummary/seldonian.models", "_autosummary/seldonian.models.model", "_autosummary/seldonian.models.model.ClassificationModel", "_autosummary/seldonian.models.model.LinearClassifierModel", "_autosummary/seldonian.models.model.LinearRegressionModel", "_autosummary/seldonian.models.model.LinearSoftmaxModel", "_autosummary/seldonian.models.model.LogisticRegressionModel", "_autosummary/seldonian.models.model.RLModel", "_autosummary/seldonian.models.model.RegressionModel", "_autosummary/seldonian.models.model.SGDClassifierModel", "_autosummary/seldonian.models.model.SeldonianModel", "_autosummary/seldonian.models.model.SupervisedModel", "_autosummary/seldonian.models.model.TabularSoftmaxModel", "_autosummary/seldonian.optimizers", "_autosummary/seldonian.optimizers.gradient_descent", "_autosummary/seldonian.optimizers.gradient_descent.gradient_descent_adam", "_autosummary/seldonian.parse_tree", "_autosummary/seldonian.parse_tree.nodes", "_autosummary/seldonian.parse_tree.nodes.BaseNode", "_autosummary/seldonian.parse_tree.nodes.ConstantNode", "_autosummary/seldonian.parse_tree.nodes.InternalNode", "_autosummary/seldonian.parse_tree.nodes.MEDCustomBaseNode", "_autosummary/seldonian.parse_tree.nodes.Node", "_autosummary/seldonian.parse_tree.operators", "_autosummary/seldonian.parse_tree.parse_tree", "_autosummary/seldonian.parse_tree.parse_tree.ParseTree", "_autosummary/seldonian.safety_test", "_autosummary/seldonian.safety_test.safety_test", "_autosummary/seldonian.safety_test.safety_test.SafetyTest", "_autosummary/seldonian.seldonian_algorithm", "_autosummary/seldonian.seldonian_algorithm.seldonian_algorithm", "_autosummary/seldonian.spec", "_autosummary/seldonian.spec.RLSpec", "_autosummary/seldonian.spec.Spec", "_autosummary/seldonian.spec.SupervisedSpec", "_autosummary/seldonian.utils", "_autosummary/seldonian.utils.io_utils", "_autosummary/seldonian.utils.io_utils.dir_path", "_autosummary/seldonian.utils.io_utils.load_json", "_autosummary/seldonian.utils.io_utils.load_pickle", "_autosummary/seldonian.utils.io_utils.save_pickle", "_autosummary/seldonian.utils.io_utils.yes_or_no_input", "_autosummary/seldonian.utils.stats_utils", "_autosummary/seldonian.utils.stats_utils.generate_data", "_autosummary/seldonian.utils.stats_utils.stddev", "_autosummary/seldonian.utils.stats_utils.tinv", "_autosummary/seldonian.utils.stats_utils.weighted_sum_gamma", "_autosummary/seldonian.warnings", "_autosummary/seldonian.warnings.custom_warnings", "_autosummary/seldonian.warnings.custom_warnings.custom_formatwarning", "api", "getting_started", "glossary", "index", "overview"], "filenames": ["_autosummary/interface.rst", "_autosummary/interface.cli_supervised.rst", "_autosummary/interface.cli_supervised.run_interface.rst", "_autosummary/interface.command_line_interface.rst", "_autosummary/interface.command_line_interface.run_interface.rst", "_autosummary/seldonian.rst", "_autosummary/seldonian.RL.rst", "_autosummary/seldonian.RL.environments.rst", "_autosummary/seldonian.RL.environments.gridworld3x3.rst", "_autosummary/seldonian.RL.environments.gridworld3x3.Environment.rst", "_autosummary/seldonian.RL.environments.mountaincar.rst", "_autosummary/seldonian.RL.environments.mountaincar.Basis.rst", "_autosummary/seldonian.RL.environments.mountaincar.Environment.rst", "_autosummary/seldonian.RL.environments.mountaincar.FourierBasis.rst", "_autosummary/seldonian.RL.environments.mountaincar.Linear_Softmax.rst", "_autosummary/seldonian.RL.environments.mountaincar.Mountaincar.rst", "_autosummary/seldonian.RL.environments.mountaincar.Policy.rst", "_autosummary/seldonian.RL.environments.mountaincar.increment_counter.rst", "_autosummary/seldonian.candidate_selection.rst", "_autosummary/seldonian.candidate_selection.candidate_selection.rst", "_autosummary/seldonian.candidate_selection.candidate_selection.CandidateSelection.rst", "_autosummary/seldonian.dataset.rst", "_autosummary/seldonian.dataset.DataSet.rst", "_autosummary/seldonian.dataset.DataSetLoader.rst", "_autosummary/seldonian.dataset.Episode.rst", "_autosummary/seldonian.dataset.RLDataSet.rst", "_autosummary/seldonian.dataset.SupervisedDataSet.rst", "_autosummary/seldonian.models.rst", "_autosummary/seldonian.models.model.rst", "_autosummary/seldonian.models.model.ClassificationModel.rst", "_autosummary/seldonian.models.model.LinearClassifierModel.rst", "_autosummary/seldonian.models.model.LinearRegressionModel.rst", "_autosummary/seldonian.models.model.LinearSoftmaxModel.rst", "_autosummary/seldonian.models.model.LogisticRegressionModel.rst", "_autosummary/seldonian.models.model.RLModel.rst", "_autosummary/seldonian.models.model.RegressionModel.rst", "_autosummary/seldonian.models.model.SGDClassifierModel.rst", "_autosummary/seldonian.models.model.SeldonianModel.rst", "_autosummary/seldonian.models.model.SupervisedModel.rst", "_autosummary/seldonian.models.model.TabularSoftmaxModel.rst", "_autosummary/seldonian.optimizers.rst", "_autosummary/seldonian.optimizers.gradient_descent.rst", "_autosummary/seldonian.optimizers.gradient_descent.gradient_descent_adam.rst", "_autosummary/seldonian.parse_tree.rst", "_autosummary/seldonian.parse_tree.nodes.rst", "_autosummary/seldonian.parse_tree.nodes.BaseNode.rst", "_autosummary/seldonian.parse_tree.nodes.ConstantNode.rst", "_autosummary/seldonian.parse_tree.nodes.InternalNode.rst", "_autosummary/seldonian.parse_tree.nodes.MEDCustomBaseNode.rst", "_autosummary/seldonian.parse_tree.nodes.Node.rst", "_autosummary/seldonian.parse_tree.operators.rst", "_autosummary/seldonian.parse_tree.parse_tree.rst", "_autosummary/seldonian.parse_tree.parse_tree.ParseTree.rst", "_autosummary/seldonian.safety_test.rst", "_autosummary/seldonian.safety_test.safety_test.rst", "_autosummary/seldonian.safety_test.safety_test.SafetyTest.rst", "_autosummary/seldonian.seldonian_algorithm.rst", "_autosummary/seldonian.seldonian_algorithm.seldonian_algorithm.rst", "_autosummary/seldonian.spec.rst", "_autosummary/seldonian.spec.RLSpec.rst", "_autosummary/seldonian.spec.Spec.rst", "_autosummary/seldonian.spec.SupervisedSpec.rst", "_autosummary/seldonian.utils.rst", "_autosummary/seldonian.utils.io_utils.rst", "_autosummary/seldonian.utils.io_utils.dir_path.rst", "_autosummary/seldonian.utils.io_utils.load_json.rst", "_autosummary/seldonian.utils.io_utils.load_pickle.rst", "_autosummary/seldonian.utils.io_utils.save_pickle.rst", "_autosummary/seldonian.utils.io_utils.yes_or_no_input.rst", "_autosummary/seldonian.utils.stats_utils.rst", "_autosummary/seldonian.utils.stats_utils.generate_data.rst", "_autosummary/seldonian.utils.stats_utils.stddev.rst", "_autosummary/seldonian.utils.stats_utils.tinv.rst", "_autosummary/seldonian.utils.stats_utils.weighted_sum_gamma.rst", "_autosummary/seldonian.warnings.rst", "_autosummary/seldonian.warnings.custom_warnings.rst", "_autosummary/seldonian.warnings.custom_warnings.custom_formatwarning.rst", "api.rst", "getting_started.rst", "glossary.rst", "index.rst", "overview.rst"], "titles": ["interface", "interface.cli_supervised", "interface.cli_supervised.run_interface", "interface.command_line_interface", "interface.command_line_interface.run_interface", "seldonian", "seldonian.RL", "seldonian.RL.environments", "seldonian.RL.environments.gridworld3x3", "seldonian.RL.environments.gridworld3x3.Environment", "seldonian.RL.environments.mountaincar", "seldonian.RL.environments.mountaincar.Basis", "seldonian.RL.environments.mountaincar.Environment", "seldonian.RL.environments.mountaincar.FourierBasis", "seldonian.RL.environments.mountaincar.Linear_Softmax", "seldonian.RL.environments.mountaincar.Mountaincar", "seldonian.RL.environments.mountaincar.Policy", "seldonian.RL.environments.mountaincar.increment_counter", "seldonian.candidate_selection", "seldonian.candidate_selection.candidate_selection", "seldonian.candidate_selection.candidate_selection.CandidateSelection", "seldonian.dataset", "seldonian.dataset.DataSet", "seldonian.dataset.DataSetLoader", "seldonian.dataset.Episode", "seldonian.dataset.RLDataSet", "seldonian.dataset.SupervisedDataSet", "seldonian.models", "seldonian.models.model", "seldonian.models.model.ClassificationModel", "seldonian.models.model.LinearClassifierModel", "seldonian.models.model.LinearRegressionModel", "seldonian.models.model.LinearSoftmaxModel", "seldonian.models.model.LogisticRegressionModel", "seldonian.models.model.RLModel", "seldonian.models.model.RegressionModel", "seldonian.models.model.SGDClassifierModel", "seldonian.models.model.SeldonianModel", "seldonian.models.model.SupervisedModel", "seldonian.models.model.TabularSoftmaxModel", "seldonian.optimizers", "seldonian.optimizers.gradient_descent", "seldonian.optimizers.gradient_descent.gradient_descent_adam", "seldonian.parse_tree", "seldonian.parse_tree.nodes", "seldonian.parse_tree.nodes.BaseNode", "seldonian.parse_tree.nodes.ConstantNode", "seldonian.parse_tree.nodes.InternalNode", "seldonian.parse_tree.nodes.MEDCustomBaseNode", "seldonian.parse_tree.nodes.Node", "seldonian.parse_tree.operators", "seldonian.parse_tree.parse_tree", "seldonian.parse_tree.parse_tree.ParseTree", "seldonian.safety_test", "seldonian.safety_test.safety_test", "seldonian.safety_test.safety_test.SafetyTest", "seldonian.seldonian_algorithm", "seldonian.seldonian_algorithm.seldonian_algorithm", "seldonian.spec", "seldonian.spec.RLSpec", "seldonian.spec.Spec", "seldonian.spec.SupervisedSpec", "seldonian.utils", "seldonian.utils.io_utils", "seldonian.utils.io_utils.dir_path", "seldonian.utils.io_utils.load_json", "seldonian.utils.io_utils.load_pickle", "seldonian.utils.io_utils.save_pickle", "seldonian.utils.io_utils.yes_or_no_input", "seldonian.utils.stats_utils", "seldonian.utils.stats_utils.generate_data", "seldonian.utils.stats_utils.stddev", "seldonian.utils.stats_utils.tinv", "seldonian.utils.stats_utils.weighted_sum_gamma", "seldonian.warnings", "seldonian.warnings.custom_warnings", "seldonian.warnings.custom_warnings.custom_formatwarning", "API", "Getting Started", "Glossary", "Seldonian Engine documentation", "Overview"], "terms": {"seldonian": [0, 1, 3, 78, 79, 81], "packag": [0, 5, 81], "modul": [0, 5, 6, 7, 18, 19, 27, 28, 32, 39, 40, 43, 50, 51, 53, 54, 56, 58, 59, 62, 74, 76, 81], "command": [1, 2, 3, 4, 68, 78], "line": [1, 2, 3, 4, 12, 15, 68, 78], "supervis": [1, 3, 20, 22, 23, 26, 38, 52, 55, 61, 78, 79, 81], "learn": [1, 3, 15, 20, 22, 23, 26, 28, 29, 35, 37, 38, 42, 45, 48, 52, 55, 61, 78, 79, 81], "algorithm": [1, 3, 20, 21, 22, 23, 26, 27, 48, 52, 55, 56, 57, 58, 59, 60, 61, 78, 79, 80, 81], "usag": [1, 3, 78], "python": [1, 3, 52, 72, 78, 81], "py": [1, 3, 78], "data_pth": [1, 2, 3, 4, 78], "metadata_pth": [1, 2, 3, 4, 78], "include_sensitive_column": [1, 2, 4, 23, 26, 78], "include_intercept_term": [1, 2, 4, 23, 26, 78], "save_dir": [1, 2, 4, 78], "function": [1, 3, 8, 9, 10, 20, 39, 41, 42, 45, 50, 52, 56, 59, 60, 61, 63, 69, 72, 75, 78, 79, 81], "fals": [2, 4, 9, 12, 13, 20, 23, 26, 29, 30, 33, 36, 42, 52, 59, 60, 61, 67, 81], "run": [2, 4, 20, 21, 27, 42, 54, 55, 56, 57, 58, 59, 60, 61, 78, 81], "paramet": [2, 4, 9, 14, 16, 20, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 42, 45, 46, 47, 48, 49, 52, 55, 57, 59, 60, 61, 64, 65, 66, 67, 68, 70, 71, 72, 73, 81], "str": [2, 4, 9, 20, 22, 23, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 39, 45, 46, 47, 48, 49, 52, 55, 59, 60, 61, 64, 65, 66, 67, 68], "path": [2, 4, 64, 78], "main": [2, 4, 28, 51, 81], "dataset": [2, 4, 12, 20, 31, 32, 34, 35, 39, 45, 48, 55, 59, 60, 61, 78, 80, 81], "file": [2, 4, 9, 23, 65, 66, 67, 78, 80], "metadata": [2, 4, 22, 23, 25, 26, 32, 34, 39, 42, 78, 80], "json": [2, 4, 65, 81], "bool": [2, 9, 12, 15, 20, 23, 42, 49, 52, 55, 59, 60, 61, 68], "default": [2, 9, 23, 30, 31, 32, 33, 39, 49, 52, 55, 59, 60, 61, 78, 81], "whether": [2, 9, 20, 23, 26, 42, 49, 52, 55, 57, 59, 60, 61, 64], "includ": [2, 26, 36, 42, 52, 81], "sensit": [2, 23, 26, 79, 81], "column": [2, 22, 23, 26, 36, 45, 48, 52, 78, 81], "dure": [2, 20, 23, 26, 50, 57, 59, 60, 61, 78, 81], "train": [2, 23, 26, 29, 30, 31, 33, 35, 36, 38, 81], "predict": [2, 20, 26, 29, 30, 31, 33, 36, 78, 79, 81], "add": [2, 20, 26, 52, 78], "ones": [2, 23, 26, 78], "first": [2, 26, 36, 52, 78, 81], "engin": [5, 50, 78, 81], "3x3": [8, 9], "gridworld": [8, 9, 39], "state": [8, 9, 12, 15, 24, 32, 39, 52, 81], "0": [8, 9, 15, 29, 30, 32, 33, 36, 42, 45, 48, 55, 59, 60, 61, 70, 73, 78, 81], "8": [8, 9, 12, 81], "reward": [8, 9, 12, 15, 24, 73], "everywher": [8, 9], "except": [8, 9], "r": [8, 9, 12, 15, 25, 29, 30, 33, 36, 78], "1": [8, 9, 15, 29, 30, 32, 33, 36, 45, 55, 59, 70, 76, 78, 79, 81], "cell": [8, 9], "7": [8, 9], "bottom": [8, 9], "middl": [8, 9], "right": [8, 9, 15, 49, 52], "action": [8, 9, 12, 15, 24, 32, 39], "ar": [8, 9, 20, 50, 52, 55, 59, 60, 61, 73, 78, 79, 80, 81], "2": [8, 9, 48, 78, 81], "3": [8, 9], "up": [8, 9, 48, 52, 78, 81], "down": [8, 9], "left": [8, 9, 15, 49, 52], "respect": [8, 9], "an": [8, 9, 36, 45, 49, 50, 59, 60, 61, 64, 65, 66, 67, 68, 73, 78, 79, 81], "episod": [8, 9, 12, 15, 25, 32, 34, 39, 80], "start": [8, 9, 80, 81], "top": [8, 9, 52], "termin": [8, 9, 12, 15], "timeout": [8, 9], "occur": [8, 9], "class": [8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 58, 59, 60, 61, 81], "base": [9, 11, 12, 13, 14, 15, 16, 20, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 45, 46, 47, 48, 49, 50, 52, 55, 59, 60, 61, 78], "object": [9, 11, 15, 16, 20, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 42, 45, 48, 49, 52, 55, 57, 58, 59, 60, 61, 65, 66, 67, 78, 79, 80], "__init__": [9, 11, 12, 13, 14, 15, 16, 20, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 45, 46, 47, 48, 49, 52, 55, 59, 60, 61], "variabl": [9, 32, 45, 46, 48, 49, 50, 52, 55, 59, 60, 61, 78], "gamma": [9, 12, 55, 73], "float": [9, 12, 15, 29, 30, 31, 32, 33, 34, 35, 36, 39, 42, 45, 46, 48, 49, 52, 55, 59, 60, 61, 70, 71, 72, 73], "discount": [9, 12, 55], "factor": [9, 55], "when": [9, 20, 29, 30, 33, 36, 45, 52, 81], "calcul": [9, 12, 29, 30, 31, 32, 33, 34, 35, 36, 39, 42, 45, 48, 52, 55, 59, 60, 61, 73], "return": [9, 11, 12, 13, 14, 15, 16, 20, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 42, 45, 48, 52, 55, 57, 59, 60, 61, 68, 71, 72, 73, 78, 81], "int": [9, 12, 14, 15, 20, 32, 39, 42, 45, 48, 49, 52, 70, 72], "The": [9, 15, 20, 22, 23, 26, 29, 30, 31, 32, 33, 34, 35, 36, 39, 42, 45, 46, 47, 48, 49, 52, 55, 59, 60, 61, 67, 68, 70, 73, 78, 79, 80, 81], "number": [9, 29, 30, 33, 36, 42, 45, 48, 52, 70, 81], "timestep": [9, 12, 15, 24], "after": 9, "which": [9, 29, 30, 33, 36, 45, 47, 48, 50, 52, 59, 60, 61, 78, 79, 81], "we": [9, 45, 48, 52, 78, 81], "agent": [9, 15], "regardless": 9, "numpi": [9, 14, 16, 20, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 45, 48, 55, 71, 73, 78], "ndarrai": [9, 12, 15, 16, 20, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 45, 48, 55, 71, 73], "possibl": [9, 32, 39, 55], "reward_dict": 9, "dict": [9, 29, 30, 31, 32, 33, 34, 35, 36, 39, 42, 45, 48, 50, 52, 59, 60, 61], "map": [9, 50], "pair": [9, 29, 30, 31, 35, 36, 38, 48], "environ_dict": 9, "next": [9, 12, 15], "initial_st": 9, "where": [9, 20, 45, 48, 52, 73, 81], "each": [9, 24, 25, 29, 30, 31, 32, 33, 34, 35, 36, 39, 45, 48, 50, 52, 78, 81], "terminal_st": 9, "current_st": 9, "current": [9, 29, 81], "initial_weight": 9, "initi": [9, 12, 15, 20, 42, 52, 59, 60, 61, 78], "weight": [9, 20, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 42, 45, 48, 57, 59, 60, 61, 73, 78, 81], "s": [9, 15, 45, 48, 52, 71, 72, 78, 81], "polici": [9, 14, 39, 79, 80, 81], "model": [9, 15, 20, 23, 42, 45, 48, 55, 57, 59, 60, 61, 78, 79, 80, 81], "param_weight": 9, "__repr__": [9, 11, 12, 13, 14, 15, 16, 20, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 45, 46, 47, 48, 49, 52, 55, 59, 60, 61], "repr": [9, 11, 12, 13, 14, 15, 16, 20, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 52, 55, 59, 60, 61], "self": [9, 11, 12, 13, 14, 15, 16, 20, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 52, 55, 59, 60, 61], "method": [9, 11, 12, 13, 14, 15, 16, 20, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 42, 45, 46, 47, 48, 49, 52, 55, 59, 60, 61, 78, 81], "_arg": 9, "helper": [9, 39, 52], "pi": [9, 24, 25], "_denom": 9, "calc_j": 9, "n_episod": [9, 12], "parallel": [9, 12], "true": [9, 12, 29, 30, 33, 36, 42, 45, 48, 55, 59, 60, 61, 78, 81], "n_worker": [9, 12], "expect": [9, 12, 45, 48], "sum": [9, 12, 29, 30, 33, 36, 73, 81], "gener": [9, 70, 78, 81], "us": [9, 12, 15, 20, 23, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 45, 48, 50, 52, 55, 59, 60, 61, 72, 73, 78, 79, 81], "new": [9, 80, 81], "perform": [9, 47, 81], "multipl": [9, 78], "worker": 9, "data": [9, 20, 23, 32, 34, 39, 45, 48, 52, 55, 59, 60, 61, 67, 70, 71, 78, 80], "multiprocess": 9, "j": 9, "type": [9, 20, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 42, 45, 48, 55, 57, 71, 72, 73, 79], "generate_data": [9, 12, 78, 80], "savenam": [9, 12], "none": [9, 14, 16, 20, 49, 59, 60, 61], "list": [9, 20, 22, 24, 25, 26, 45, 48, 52, 55, 59, 60, 61, 78, 81], "episode_index": 9, "probability_of_act": 9, "name": [9, 20, 22, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 39, 45, 46, 47, 48, 49, 50, 52, 59, 60, 61, 78, 81], "save": [9, 67], "datafram": [9, 22, 25, 26, 32, 34, 39, 45, 48, 52, 78], "generate_episod": 9, "return_index": 9, "entir": 9, "part": [9, 81], "generate_episodes_par": 9, "thi": [9, 15, 29, 30, 32, 33, 35, 36, 37, 38, 45, 48, 49, 52, 59, 78, 79, 80, 81], "appli": [9, 39, 79, 81], "tabular": [9, 39], "softmax": [9, 32, 39], "get": [9, 14, 16, 20, 32, 52, 80], "probabl": [9, 24, 29, 30, 32, 33, 36, 52, 72, 78, 79], "given": [9, 12, 20, 32, 36, 39, 45, 48, 52, 59, 60, 61, 81], "posit": [9, 12, 15, 29, 30, 33, 36, 52, 81], "between": [9, 29, 30, 33, 36, 48, 81], "correspond": [9, 72], "reset": [9, 12, 15, 52], "take_step": 9, "take": [9, 12, 15, 32, 57, 78], "chang": 9, "attribut": [12, 15, 25, 26, 52, 79, 81], "next_stat": [12, 15], "transit": [12, 15], "calc_j_from_df": 12, "df": [12, 26, 78], "header": [12, 81], "nextstat": [12, 15], "comput": [12, 15, 48, 52, 59, 60, 61], "pendulum": [12, 15], "euler": [12, 15], "approxim": [12, 15], "dynam": [12, 15], "configur": [12, 15], "step": [12, 15], "tupl": [12, 15, 52, 57], "one": [12, 15, 32, 50, 52, 59, 60, 61, 78, 79, 81], "time": [12, 15], "greater": [12, 15, 81], "than": [12, 15, 52, 55, 78, 81], "max": [12, 15, 81], "pass": [12, 15, 45, 48, 55, 57], "finish": [12, 15], "rang": [13, 78], "dorder": 13, "iorder": 13, "both": [13, 52], "basi": [13, 14, 80], "n_action": 14, "get_param": [14, 16], "vector": [14, 16, 31, 32, 34, 35, 36, 39, 45, 48, 71, 78, 81], "set_param": [14, 16], "param": [14, 16], "set": [14, 16, 36, 43, 46, 78, 81], "cart": 15, "pole": 15, "describ": [15, 23], "687": 15, "cours": 15, "materi": 15, "domain": 15, "balanc": 15, "must": [15, 45, 81], "move": 15, "forward": 15, "backward": 15, "keep": [15, 52], "from": [15, 23, 29, 30, 31, 32, 35, 36, 38, 39, 43, 48, 51, 52, 59, 65, 66, 68, 78, 79, 81], "fall": [15, 59, 60, 61], "alwai": [15, 45, 48, 52], "see": [15, 48, 59, 60, 61, 78, 79, 80, 81], "work": 15, "florian": 15, "2007": 15, "correct": [15, 71], "equat": 15, "system": [15, 78, 79], "observ": [15, 29, 30, 31, 33, 35, 36, 45, 48], "barrow": 15, "phil": 15, "thoma": [15, 48], "2019": [15, 48], "written": [15, 52, 81], "blossom": 15, "metevi": 15, "scott": 15, "jordan": 15, "counter": 17, "maxdigit": 17, "candid": [18, 19, 20, 40, 45, 48, 55, 57, 59, 60, 61, 79, 80], "select": [18, 19, 20, 40, 45, 48, 55, 57, 59, 60, 61, 79, 80], "candidate_dataset": 20, "n_safeti": 20, "parse_tre": [20, 55, 59, 60, 61, 78, 80, 81], "primary_object": [20, 42, 59, 60, 61, 78], "optimization_techniqu": [20, 59, 60, 61], "barrier_funct": [20, 59, 60, 61], "optim": [20, 57, 59, 60, 61, 78, 79, 80, 81], "powel": 20, "initial_solut": 20, "regim": [20, 22, 23, 26, 50, 52, 55, 78, 79, 81], "write_logfil": 20, "kwarg": [20, 22, 23, 25, 26, 42, 45, 46, 47, 48, 52, 55, 76], "seldonianmodel": [20, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 45, 48, 55, 59, 60, 61, 80], "contain": [20, 23, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 42, 45, 48, 50, 52, 55, 59, 60, 61, 78, 81], "length": [20, 50], "safeti": [20, 45, 48, 53, 54, 55, 57, 59, 60, 61, 79, 80], "confid": [20, 45, 48, 49, 52, 55, 59, 60, 61, 78, 79, 81], "bound": [20, 42, 45, 46, 48, 49, 50, 52, 55, 59, 60, 61, 78, 81], "parsetre": [20, 55, 59, 60, 61, 78, 80], "pars": [20, 43, 45, 46, 47, 48, 49, 50, 51, 52, 55, 59, 60, 61, 78], "tree": [20, 43, 45, 46, 47, 48, 49, 50, 51, 52, 55, 59, 60, 61, 78], "behavior": [20, 42, 43, 50, 51, 52, 55, 59, 60, 61, 78, 79, 80], "constraint": [20, 42, 43, 50, 51, 52, 55, 59, 60, 61, 78, 79, 80], "would": [20, 42, 50, 59, 60, 61], "sole": [20, 42, 59, 60, 61], "absenc": [20, 42, 59, 60, 61], "i": [20, 42, 52, 59, 60, 61, 81], "e": [20, 22, 23, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 39, 42, 45, 48, 52, 55, 59, 60, 61, 79, 81], "loss": [20, 29, 30, 33, 36, 42, 59, 60, 61, 79], "g": [20, 22, 23, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 39, 45, 48, 52, 55, 59, 60, 61, 79], "gradient_desc": [20, 59, 60, 61, 80], "string": [20, 46, 47, 49, 50, 52, 59, 60, 61, 78, 81], "categori": [20, 22, 23, 26, 52, 55, 76], "machin": [20, 22, 23, 26, 28, 29, 35, 36, 37, 38, 45, 48, 52, 55, 78, 79], "rl": [20, 22, 23, 24, 25, 26, 32, 34, 39, 52, 55, 59, 73, 80, 81], "write": [20, 78], "output": [20, 78], "disk": [20, 23], "evaluate_primary_object": 20, "theta": [20, 29, 30, 31, 32, 33, 34, 35, 36, 39, 42, 45, 48, 78, 81], "valu": [20, 31, 35, 42, 45, 46, 48, 52, 68, 78, 81], "primari": [20, 30, 31, 32, 33, 39, 59, 60, 61, 78, 79, 81], "wrapper": [20, 65, 66, 67], "fix": 20, "input": [20, 45, 48, 64, 65, 68, 73, 78, 79, 81], "gradient": [20, 29, 30, 33, 36, 42, 59, 60, 61, 81], "descent": [20, 42, 81], "get_constraint_upper_bound": 20, "upper": [20, 42, 45, 46, 47, 48, 49, 52, 55, 81], "objective_with_barri": 20, "minimization_techniqu": 20, "barrier": [20, 81], "larg": 20, "penalti": 20, "ani": [20, 81], "violat": [20, 52, 81], "nsf": [20, 57, 81], "build": [21, 43, 51, 52, 58], "load": [21, 23, 65, 66], "meta_inform": [22, 25, 26, 78], "hold": [22, 24, 25, 26], "all": [22, 26, 29, 32, 34, 35, 37, 38, 39, 49, 52, 55, 78, 81], "load_rl_dataset": 23, "filenam": [23, 65, 66, 67, 76], "metadata_filenam": 23, "file_typ": 23, "csv": 23, "creat": [23, 45, 48, 52, 78, 81], "rldataset": [23, 80], "you": [23, 52, 67, 78, 80, 81], "want": [23, 52, 67, 78, 81], "extens": 23, "load_supervised_dataset": 23, "superviseddataset": [23, 78, 80], "pre": 23, "append": [23, 78], "featur": [23, 29, 30, 31, 33, 35, 36, 38, 45, 48, 78, 79], "arrai": [23, 29, 30, 33, 36, 50, 73, 78], "o": 25, "label_column": [26, 78, 81], "sensitive_column_nam": 26, "panda": [26, 34, 39, 48, 78], "full": [26, 81], "target": 26, "label": [26, 29, 30, 31, 33, 35, 36, 38, 45, 48, 78], "supervisedmodel": [29, 35, 80], "parent": [29, 32, 35, 37, 38, 48], "classif": [29, 30, 33, 36, 52, 79, 81], "librari": [29, 35, 37, 38, 59, 79, 80, 81], "onli": [29, 55, 78, 79, 81], "support": [29, 36, 50, 79, 81], "binari": [29, 30, 33, 36], "accuraci": [29, 30, 33, 36], "x": [29, 30, 31, 32, 33, 35, 36, 38, 48, 70, 78], "y": [29, 30, 31, 33, 35, 36, 38, 48, 70, 78], "evaluate_statist": [29, 30, 31, 32, 33, 34, 35, 36, 39], "statistic_nam": [29, 30, 31, 32, 33, 34, 35, 36, 39], "data_dict": [29, 30, 31, 32, 33, 34, 35, 36, 39, 45, 48], "evalu": [29, 30, 31, 32, 33, 34, 35, 36, 39, 42, 45, 48, 52], "provid": [29, 30, 31, 32, 33, 34, 35, 36, 39, 52, 59, 60, 61, 68, 79, 81], "statist": [29, 30, 31, 32, 33, 34, 35, 36, 39, 45, 50, 55, 59, 60, 61, 81], "whole": [29, 30, 31, 32, 33, 34, 35, 36, 39, 52], "sampl": [29, 30, 31, 32, 33, 34, 35, 36, 39, 71, 78], "fpr": [29, 30, 33, 36, 45, 81], "rate": [29, 30, 33, 36, 42, 52, 81], "over": [29, 30, 31, 32, 33, 34, 35, 36, 39, 55, 81], "fit": [29, 30, 31, 33, 35, 36, 38, 78], "nxm": [29, 30, 31, 35, 36, 38], "nx1": [29, 30, 31, 35, 36, 38], "gradient_sample_logistic_loss": [29, 30, 33, 36], "logist": [29, 30, 33, 36], "w": [29, 30, 33, 36, 78], "t": [29, 30, 33, 36, 45, 48, 72, 78], "perceptron": [29, 30, 33, 36], "sample_false_negative_r": [29, 30, 33, 36], "neg": [29, 30, 33, 36, 52], "being": [29, 30, 33, 36, 45], "fact": [29, 30, 33, 36], "wa": [29, 30, 33, 36, 48, 81], "sample_false_positive_r": [29, 30, 33, 36], "sample_negative_r": [29, 30, 33, 36], "sample_positive_r": [29, 30, 33, 36], "normal": [29, 30, 32, 33, 36, 55, 59, 70, 78, 79], "sample_from_statist": [29, 30, 31, 32, 33, 34, 35, 36, 39], "sample_logistic_loss": [29, 30, 33, 36], "sample_perceptron_loss": [29, 30, 33, 36], "fraction": [29, 30, 33, 36, 59, 60, 61], "incorrect": [29, 30, 33, 36], "vector_false_negative_r": [29, 30, 33, 36], "subject": [29, 30, 33, 36, 81], "actual": [29, 30, 33, 36, 81], "vector_false_positive_r": [29, 30, 33, 36], "vector_negative_r": [29, 30, 33, 36], "vector_positive_r": [29, 30, 33, 36], "vector_true_negative_r": [29, 30, 33, 36], "vector_true_positive_r": [29, 30, 33, 36], "vector_logistic_loss": [29, 30, 33, 36], "classificationmodel": [30, 33, 36, 80], "implement": [30, 31, 33, 36, 42, 72, 80, 81], "linear": [30, 31, 32, 36, 78], "classifi": 30, "regress": [30, 31, 33, 35, 48, 52, 78, 79, 81], "default_object": [30, 31, 32, 33, 39], "make": [30, 36, 52, 78, 79], "regressionmodel": [31, 80], "mean": [31, 35, 48, 50, 78, 79, 81], "squar": [31, 35, 78, 79, 81], "error": [31, 35, 48, 78, 79, 81], "mean_squared_error": [31, 35, 78, 81], "sample_mean_error": [31, 35], "sample_mean_squared_error": [31, 35, 78], "vector_mean_error": [31, 35], "vector_mean_squared_error": [31, 35], "environ": [32, 39, 59, 80, 81], "rlmodel": [32, 39, 80], "mountaincar": [32, 80], "is_estim": 32, "unweight": [32, 34, 39], "import": [32, 34, 39, 78, 81], "estim": [32, 34, 39, 45], "overrid": [32, 45, 48], "so": [32, 48, 78, 81], "can": [32, 52, 78, 81], "IS": [32, 34, 39], "apply_polici": [32, 39], "A": [32, 34, 39, 50, 52, 59, 60, 61, 64, 65, 66, 67, 81], "defin": [32, 50, 78, 79], "j_pi_new": [32, 34, 39, 81], "get_p": 32, "probabilit": 32, "encod": 32, "sample_is_estim": [32, 34, 39], "vector_is_estim": [32, 34, 39], "have": [33, 52, 78, 79, 81], "offset": 36, "upper_bound_funct": 42, "theta_init": 42, "lambda_init": [42, 59, 60, 61], "alpha_theta": [42, 59, 60, 61], "05": [42, 45, 48, 78, 81], "alpha_lamb": [42, 59, 60, 61], "beta_veloc": [42, 59, 60, 61], "9": [42, 59, 60, 61, 73], "beta_rmsprop": [42, 59, 60, 61], "num_it": [42, 59, 60, 61], "200": [42, 59, 60, 61], "store_valu": 42, "verbos": [42, 59, 60, 61, 67], "adam": [42, 59, 60, 61, 81], "lagrang": [42, 81], "multipli": [42, 52, 81], "term": 42, "lambda": [42, 81], "exponenti": [42, 52], "decai": 42, "veloc": 42, "rmsprop": 42, "iter": [42, 48], "variou": 42, "quantiti": 42, "solut": [42, 52, 55, 57, 78, 81], "dictionari": [42, 50], "about": [42, 52, 81], "lower": [45, 46, 47, 48, 49, 52], "inf": [45, 47, 48], "conditional_column": [45, 48], "leaf": [45, 46, 47, 55], "measur": [45, 52, 81], "condit": [45, 48, 52], "node_typ": [45, 46], "equal": [45, 52, 55, 78, 81], "base_nod": 45, "delta": [45, 48, 52, 78, 79, 81], "share": [45, 48], "put": [45, 48, 78], "measure_function_nam": 45, "repres": [45, 46, 47, 50, 52], "measure_funct": [45, 81], "oper": [45, 47, 80, 81], "calculate_bound": [45, 48], "bound_method": [45, 48, 55, 59, 60, 61], "test": [45, 48, 53, 54, 55, 57, 59, 60, 61, 79, 80], "calculate_data_forbound": [45, 48], "prepar": 45, "calculate_valu": [45, 48], "etc": [45, 47, 48], "compute_hc_lowerbound": [45, 48], "datas": [45, 48], "high": [45, 48, 78, 79], "level": [45, 48, 52, 78, 79, 81], "compute_hc_upper_and_lowerbound": [45, 48], "depend": [45, 48, 81], "equival": [45, 48], "call": [45, 48, 79, 81], "compute_hc_upperbound": [45, 48], "independ": [45, 48], "mask_datafram": [45, 48], "mask": [45, 48], "joint": [45, 48], "AND": [45, 48], "predict_hc_lowerbound": [45, 48], "predict_hc_upper_and_lowerbound": [45, 48], "predict_hc_upperbound": [45, 48], "zhat": [45, 48], "unbias": 45, "constant": [46, 52, 73], "constant_nod": 46, "represent": [46, 47, 49, 50], "also": [46, 47, 49, 78, 79, 81], "what": [46, 47, 49, 78, 81], "displai": [46, 47, 49, 52], "insid": [46, 47, 49, 81], "box": [46, 47, 49, 81], "visual": [46, 47, 49, 52, 78], "graph": [46, 47, 49, 52, 78], "intern": 47, "non": 47, "These": [47, 81], "basenod": [48, 80], "custom": [48, 50, 81], "wise": 48, "differ": [48, 81], "male": [48, 81], "femal": [48, 81], "point": [48, 65, 66, 70, 81], "et": 48, "al": 48, "scienc": [48, 81], "paper": [48, 81], "figur": 48, "sever": 48, "same": [48, 68], "precalculate_data": 48, "preconfigur": 48, "doe": [48, 52, 79], "need": [48, 49, 52, 58, 78, 81], "recalcul": 48, "through": [48, 52], "y_i": 48, "y_hat_i": 48, "m": [48, 52, 81], "y_j": 48, "y_hat_j": 48, "f": [48, 81], "epsilon": 48, "There": [48, 52, 81], "mai": [48, 64, 81], "row": [48, 78, 81], "min": [48, 81], "n_male": 48, "n_femal": 48, "index": [49, 73], "child": [49, 50, 52, 59, 60, 61], "will_lower_bound": 49, "will_upper_bound": 49, "global": [50, 81], "construct": 50, "measure_functions_dict": 50, "sub_regim": [50, 52, 78, 81], "appear": [50, 52, 81], "recogn": [50, 81], "special": [50, 81], "organ": 50, "sub": [50, 52, 79], "custom_base_node_dict": 50, "node": [50, 52, 55, 78, 80], "op_mapp": 50, "ast": [50, 52], "those": 50, "thei": [50, 68, 81], "not_supported_op_mapp": 50, "Not": 50, "bounds_required_dict": 50, "specifi": [50, 52, 81], "requir": [50, 52, 60, 78, 81], "If": [50, 52, 59, 60, 61, 68, 78, 80], "ha": [50, 81], "two": [50, 52, 78, 81], "children": [50, 52], "b": [50, 52], "boolean": 50, "4": [50, 81], "like": [50, 52, 81], "need_a_low": 50, "need_a_upp": 50, "need_b_low": 50, "need_b_upp": 50, "singl": [52, 78], "maximum": [52, 55, 81], "ml": 52, "determin": 52, "user": [52, 68, 79, 81], "appropri": 52, "root": [52, 55], "via": 52, "assign": [52, 78], "built": [52, 59, 60, 61, 81], "constraint_str": [52, 78], "express": 52, "n_node": 52, "total": 52, "n_base_nod": 52, "pr": [52, 81], "more": [52, 81], "onc": 52, "contribut": 52, "base_node_dict": 52, "track": 52, "uniqu": [52, 78], "been": 52, "alreadi": 52, "help": [52, 72], "handl": 52, "case": [52, 78, 81], "duplic": 52, "node_fonts": 52, "fontsiz": 52, "graphviz": [52, 78], "available_measure_funct": 52, "mean_error": 52, "_ab": 52, "absolut": [52, 81], "interv": [52, 55], "_add": 52, "_assign_bounds_help": 52, "lower_need": 52, "upper_need": 52, "travers": 52, "_assign_deltas_help": 52, "weight_method": [52, 78], "how": [52, 81], "_ast2pt_nod": 52, "ast_nod": 52, "_ast_tree_help": 52, "recurs": 52, "_div": 52, "divid": 52, "_evaluator_help": 52, "_exp": 52, "_max": 52, "_min": 52, "minimum": [52, 55, 81], "_mult": 52, "_pow": 52, "pow": 52, "_propagate_valu": 52, "propag": [52, 55], "_propagator_help": 52, "_protect_nan": 52, "bound_typ": 52, "nan": 52, "infin": 52, "postit": 52, "_sub": 52, "subract": 52, "assign_bounds_need": [52, 78], "breadth": 52, "search": 52, "decid": 52, "eventu": 52, "necessari": 52, "becaus": [52, 81], "end": 52, "care": 52, "assign_delta": [52, 78], "split": [52, 81], "among": 52, "create_from_ast": [52, 78], "structur": 52, "mathemat": [52, 81], "syntax": 52, "evaluate_constraint": 52, "itself": 52, "postord": 52, "logic": 52, "make_viz": 52, "titl": 52, "diagram": 52, "make_viz_help": 52, "edg": 52, "digraph": 52, "propagate_bound": 52, "reset_base_node_dict": 52, "reset_data": 52, "cach": 52, "less": [52, 55, 78, 81], "frequent": 52, "relev": 55, "normalize_return": [55, 59], "min_return": 55, "max_return": 55, "candidate_solut": [55, 78, 81], "ttest": [55, 59, 60, 61], "loop": 55, "found": [55, 57, 81], "spec": [57, 78, 80], "specif": [57, 58, 59, 60, 61, 78, 81], "obect": 57, "passed_safeti": [57, 78], "indic": 57, "model_class": [59, 60, 61, 78], "frac_data_in_safeti": [59, 60, 61, 78], "initial_solution_fn": [59, 60, 61, 78], "rl_environment_obj": 59, "use_builtin_primary_gradient_fn": [59, 60, 61], "custom_primary_gradient_fn": [59, 60, 61], "optimization_hyperparam": [59, 60, 61], "005": [59, 60, 61], "95": [59, 60, 61, 78], "hyper_search": [59, 60, 61], "5": [59, 60, 61, 81], "regularization_hyperparam": [59, 60, 61], "instanc": [59, 60, 61], "remain": [59, 60, 61], "exist": [59, 60, 61], "autograd": [59, 60, 61, 78], "back": [59, 60, 61], "builtin": [59, 60, 61], "hyperparamet": [59, 60, 61, 78], "regular": [59, 60, 61], "usable_opt_dict": [59, 60, 61], "show": [59, 60, 61, 68, 81], "accept": [59, 60, 61], "techniqu": [59, 60, 61, 81], "check": 64, "directori": 64, "pickl": [66, 67], "abl": 67, "str_to_show": 68, "default_str": 68, "default_v": 68, "ye": 68, "question": 68, "gather": 68, "invalid": 68, "answer": 68, "let": [68, 78], "them": [68, 81], "know": 68, "again": 68, "shown": 68, "enter": 68, "noth": 68, "numpoint": [70, 78], "loc_x": [70, 78], "loc_i": [70, 78], "sigma_x": [70, 78], "sigma_i": [70, 78], "2d": 70, "random": [70, 78], "center": 70, "distribut": [70, 78], "dimens": 70, "standard": [70, 71, 78], "deviat": [70, 71], "v": 71, "bessel": 71, "p": 72, "nu": 72, "invers": [72, 81], "student": 72, "cdf": 72, "degre": 72, "freedom": 72, "matlab": 72, "http": 72, "www": 72, "mathwork": 72, "com": 72, "stat": 72, "html": 72, "arr": 73, "msg": 76, "lineno": 76, "arg": 76, "To": [78, 81], "pip": 78, "venv": 78, "wide": 78, "consid": 78, "problem": [78, 79, 81], "contin": 78, "our": [78, 81], "goal": 78, "solv": 78, "could": 78, "univari": 78, "mse": 78, "find": [78, 81], "minim": 78, "just": 78, "intercept": 78, "slope": 78, "now": 78, "suppos": 78, "follow": [78, 81], "enforc": [78, 79, 81], "inform": [78, 81], "code": [78, 80, 81], "real": 78, "ll": 78, "some": 78, "synthet": 78, "togeth": 78, "underli": 78, "mostli": 78, "out": 78, "do": [78, 81], "np": 78, "thinli": 78, "wrap": 78, "version": 78, "pd": 78, "linearregressionmodel": [78, 80], "supervisedspec": [78, 80], "seldonian_algorithm": [78, 80, 81], "def": 78, "plu": 78, "nois": 78, "__name__": 78, "__main__": 78, "seed": 78, "1000": 78, "metadataa": 78, "feature1": 78, "hstack": 78, "expand_dim": 78, "axi": 78, "conveni": 78, "matrix": 78, "even": 78, "though": 78, "still": 78, "ii": 78, "len": 78, "fill": 78, "lot": 78, "hidden": 78, "6": [78, 81], "print": 78, "In": [78, 79, 81], "order": 78, "suppli": 78, "interfac": [78, 79, 80], "cli": [78, 81], "look": [78, 81], "document": [78, 81], "cli_supervis": [78, 80], "argument": 78, "download": 78, "sourc": [78, 80], "repositori": 78, "github": [78, 80], "other": [78, 79], "option": [78, 81], "criteria": 79, "fair": [79, 81], "ensur": [79, 81], "met": 79, "while": 79, "simultan": [79, 81], "tbd": 79, "often": 79, "simpli": 79, "satisfi": [79, 81], "interact": [79, 81], "paradigm": 79, "adopt": 79, "reinforc": [79, 81], "design": [79, 81], "against": 79, "should": [79, 81], "discrimin": 79, "gender": 79, "race": [79, 81], "common": 79, "exampl": [79, 80, 81], "sometim": 79, "protect": 79, "pertain": 79, "within": [79, 81], "welcom": 80, "core": 80, "host": 80, "complet": [80, 81], "overview": 80, "instal": 80, "simpl": [80, 81], "api": [80, 81], "gridworld3x3": 80, "increment_count": 80, "fourierbasi": 80, "linear_softmax": 80, "candidate_select": 80, "candidateselect": [80, 81], "datasetload": 80, "linearclassifiermodel": 80, "linearsoftmaxmodel": 80, "logisticregressionmodel": 80, "sgdclassifiermodel": 80, "tabularsoftmaxmodel": 80, "gradient_descent_adam": 80, "constantnod": 80, "internalnod": 80, "medcustombasenod": 80, "safety_test": 80, "safetytest": [80, 81], "rlspec": 80, "util": 80, "io_util": 80, "dir_path": 80, "load_json": 80, "load_pickl": 80, "save_pickl": 80, "yes_or_no_input": 80, "stats_util": 80, "stddev": 80, "tinv": 80, "weighted_sum_gamma": 80, "warn": 80, "custom_warn": 80, "custom_formatwarn": 80, "run_interfac": 80, "command_line_interfac": [80, 81], "glossari": 80, "sa": 81, "For": 81, "detail": 81, "descript": 81, "umass": 81, "ai": 81, "page": 81, "At": 81, "broadest": 81, "scope": 81, "consist": 81, "three": 81, "below": 81, "compon": 81, "graphic": 81, "gui": 81, "develop": 81, "its": 81, "entireti": 81, "mani": 81, "modifi": 81, "own": 81, "script": 81, "comma": 81, "separ": 81, "newlin": 81, "might": 81, "622": 81, "491": 81, "56": 81, "439": 81, "93": 81, "707": 81, "64": 81, "663": 81, "65": 81, "557": 81, "09": 81, "711": 81, "37": 81, "731": 81, "31": 81, "509": 81, "33333": 81, "538": 81, "490": 81, "58": 81, "406": 81, "59": 81, "529": 81, "532": 81, "28": 81, "447": 81, "23": 81, "527": 81, "379": 81, "14": 81, "488": 81, "98333": 81, "455": 81, "18": 81, "440": 81, "570": 81, "86": 81, "417": 81, "54": 81, "453": 81, "53": 81, "425": 81, "87": 81, "475": 81, "63": 81, "476": 81, "11": 81, "407": 81, "15": 81, "97333": 81, "756": 81, "91": 81, "679": 81, "62": 81, "531": 81, "583": 81, "534": 81, "42": 81, "521": 81, "592": 81, "41": 81, "783": 81, "76": 81, "588": 81, "26": 81, "53333": 81, "befor": 81, "valid": 81, "partit": 81, "your": 81, "intention": 81, "exclud": 81, "format": 81, "properti": 81, "It": 81, "kei": 81, "either": 81, "try": 81, "sensitive_column": 81, "rl_environment_nam": 81, "definit": 81, "g_i": 81, "_i": 81, "_": 81, "n": 81, "directli": 81, "nativ": 81, "ab": 81, "exp": 81, "certain": 81, "associ": 81, "interpret": 81, "correctli": 81, "most": 81, "basic": 81, "plain": 81, "english": 81, "rememb": 81, "framework": 81, "leq": 81, "omit": 81, "here": 81, "88": 81, "tpr": 81, "cover": 81, "howev": 81, "commonli": 81, "atr1": 81, "atr2": 81, "placehold": 81, "parenthes": 81, "surround": 81, "statement": 81, "r1": 81, "r2": 81, "demograph": 81, "pariti": 81, "toler": 81, "ratio": 81, "least": 81, "dispar": 81, "impact": 81, "yet": 81, "anoth": 81, "permit": 81, "belong": 81, "note": 81, "short": 81, "edit": 81, "practic": 81, "assembl": 81, "obtain": 81, "black": 81, "shape": 81, "ad": 81, "cost": 81, "forc": 81, "toward": 81, "feasibl": 81, "lagrangian": 81, "mathcal": 81, "l": 81, "mathbf": 81, "lambda_i": 81, "ith": 81, "kkt": 81, "theorem": 81, "saddl": 81, "optima": 81, "quad": 81, "ldot": 81, "ascent": 81, "situat": 81, "contraint": 81, "conflict": 81, "vanilla": 81, "result": 81, "oscil": 81, "boundari": 81, "dampen": 81, "momentum": 81, "mitig": 81, "far": 81}, "objects": {"": [[0, 0, 0, "-", "interface"], [5, 0, 0, "-", "seldonian"]], "interface": [[1, 0, 0, "-", "cli_supervised"], [3, 0, 0, "-", "command_line_interface"]], "interface.cli_supervised": [[2, 1, 1, "", "run_interface"]], "interface.command_line_interface": [[4, 1, 1, "", "run_interface"]], "seldonian": [[6, 0, 0, "-", "RL"], [18, 0, 0, "-", "candidate_selection"], [21, 0, 0, "-", "dataset"], [27, 0, 0, "-", "models"], [40, 0, 0, "-", "optimizers"], [43, 0, 0, "-", "parse_tree"], [53, 0, 0, "-", "safety_test"], [56, 0, 0, "-", "seldonian_algorithm"], [58, 0, 0, "-", "spec"], [62, 0, 0, "-", "utils"], [74, 0, 0, "-", "warnings"]], "seldonian.RL": [[7, 0, 0, "-", "environments"]], "seldonian.RL.environments": [[8, 0, 0, "-", "gridworld3x3"], [10, 0, 0, "-", "mountaincar"]], "seldonian.RL.environments.gridworld3x3": [[9, 2, 1, "", "Environment"]], "seldonian.RL.environments.gridworld3x3.Environment": [[9, 3, 1, "", "__init__"], [9, 3, 1, "", "__repr__"], [9, 3, 1, "", "_arg"], [9, 3, 1, "", "_denom"], [9, 3, 1, "", "calc_J"], [9, 3, 1, "", "generate_data"], [9, 3, 1, "", "generate_episode"], [9, 3, 1, "", "generate_episodes_par"], [9, 3, 1, "", "pi"], [9, 3, 1, "", "reset"], [9, 3, 1, "", "take_step"]], "seldonian.RL.environments.mountaincar": [[11, 2, 1, "", "Basis"], [12, 2, 1, "", "Environment"], [13, 2, 1, "", "FourierBasis"], [14, 2, 1, "", "Linear_Softmax"], [15, 2, 1, "", "Mountaincar"], [16, 2, 1, "", "Policy"], [17, 1, 1, "", "increment_counter"]], "seldonian.RL.environments.mountaincar.Basis": [[11, 3, 1, "", "__init__"], [11, 3, 1, "", "__repr__"]], "seldonian.RL.environments.mountaincar.Environment": [[12, 3, 1, "", "R"], [12, 3, 1, "", "__init__"], [12, 3, 1, "", "__repr__"], [12, 3, 1, "", "calc_J_from_df"], [12, 3, 1, "", "generate_data"], [12, 3, 1, "", "nextState"], [12, 3, 1, "", "reset"], [12, 3, 1, "", "step"], [12, 3, 1, "", "terminal"]], "seldonian.RL.environments.mountaincar.FourierBasis": [[13, 3, 1, "", "__init__"], [13, 3, 1, "", "__repr__"]], "seldonian.RL.environments.mountaincar.Linear_Softmax": [[14, 3, 1, "", "__init__"], [14, 3, 1, "", "__repr__"], [14, 3, 1, "", "get_params"], [14, 3, 1, "", "set_params"]], "seldonian.RL.environments.mountaincar.Mountaincar": [[15, 3, 1, "", "R"], [15, 3, 1, "", "__init__"], [15, 3, 1, "", "__repr__"], [15, 3, 1, "", "nextState"], [15, 3, 1, "", "reset"], [15, 3, 1, "", "step"], [15, 3, 1, "", "terminal"]], "seldonian.RL.environments.mountaincar.Policy": [[16, 3, 1, "", "__init__"], [16, 3, 1, "", "__repr__"], [16, 3, 1, "", "get_params"], [16, 3, 1, "", "set_params"]], "seldonian.candidate_selection": [[19, 0, 0, "-", "candidate_selection"]], "seldonian.candidate_selection.candidate_selection": [[20, 2, 1, "", "CandidateSelection"]], "seldonian.candidate_selection.candidate_selection.CandidateSelection": [[20, 3, 1, "", "__init__"], [20, 3, 1, "", "__repr__"], [20, 3, 1, "", "evaluate_primary_objective"], [20, 3, 1, "", "get_constraint_upper_bound"], [20, 3, 1, "", "objective_with_barrier"], [20, 3, 1, "", "run"]], "seldonian.dataset": [[22, 2, 1, "", "DataSet"], [23, 2, 1, "", "DataSetLoader"], [24, 2, 1, "", "Episode"], [25, 2, 1, "", "RLDataSet"], [26, 2, 1, "", "SupervisedDataSet"]], "seldonian.dataset.DataSet": [[22, 3, 1, "", "__init__"], [22, 3, 1, "", "__repr__"]], "seldonian.dataset.DataSetLoader": [[23, 3, 1, "", "__init__"], [23, 3, 1, "", "__repr__"], [23, 3, 1, "", "load_RL_dataset"], [23, 3, 1, "", "load_supervised_dataset"]], "seldonian.dataset.Episode": [[24, 3, 1, "", "__init__"], [24, 3, 1, "", "__repr__"]], "seldonian.dataset.RLDataSet": [[25, 3, 1, "", "__init__"], [25, 3, 1, "", "__repr__"]], "seldonian.dataset.SupervisedDataSet": [[26, 3, 1, "", "__init__"], [26, 3, 1, "", "__repr__"]], "seldonian.models": [[28, 0, 0, "-", "model"]], "seldonian.models.model": [[29, 2, 1, "", "ClassificationModel"], [30, 2, 1, "", "LinearClassifierModel"], [31, 2, 1, "", "LinearRegressionModel"], [32, 2, 1, "", "LinearSoftmaxModel"], [33, 2, 1, "", "LogisticRegressionModel"], [34, 2, 1, "", "RLModel"], [35, 2, 1, "", "RegressionModel"], [36, 2, 1, "", "SGDClassifierModel"], [37, 2, 1, "", "SeldonianModel"], [38, 2, 1, "", "SupervisedModel"], [39, 2, 1, "", "TabularSoftmaxModel"]], "seldonian.models.model.ClassificationModel": [[29, 3, 1, "", "__init__"], [29, 3, 1, "", "__repr__"], [29, 3, 1, "", "accuracy"], [29, 3, 1, "", "evaluate_statistic"], [29, 3, 1, "", "fit"], [29, 3, 1, "", "gradient_sample_logistic_loss"], [29, 3, 1, "", "sample_False_Negative_Rate"], [29, 3, 1, "", "sample_False_Positive_Rate"], [29, 3, 1, "", "sample_Negative_Rate"], [29, 3, 1, "", "sample_Positive_Rate"], [29, 3, 1, "", "sample_from_statistic"], [29, 3, 1, "", "sample_logistic_loss"], [29, 3, 1, "", "sample_perceptron_loss"], [29, 3, 1, "", "vector_False_Negative_Rate"], [29, 3, 1, "", "vector_False_Positive_Rate"], [29, 3, 1, "", "vector_Negative_Rate"], [29, 3, 1, "", "vector_Positive_Rate"], [29, 3, 1, "", "vector_True_Negative_Rate"], [29, 3, 1, "", "vector_True_Positive_Rate"], [29, 3, 1, "", "vector_logistic_loss"]], "seldonian.models.model.LinearClassifierModel": [[30, 3, 1, "", "__init__"], [30, 3, 1, "", "__repr__"], [30, 3, 1, "", "accuracy"], [30, 3, 1, "", "default_objective"], [30, 3, 1, "", "evaluate_statistic"], [30, 3, 1, "", "fit"], [30, 3, 1, "", "gradient_sample_logistic_loss"], [30, 3, 1, "", "predict"], [30, 3, 1, "", "sample_False_Negative_Rate"], [30, 3, 1, "", "sample_False_Positive_Rate"], [30, 3, 1, "", "sample_Negative_Rate"], [30, 3, 1, "", "sample_Positive_Rate"], [30, 3, 1, "", "sample_from_statistic"], [30, 3, 1, "", "sample_logistic_loss"], [30, 3, 1, "", "sample_perceptron_loss"], [30, 3, 1, "", "vector_False_Negative_Rate"], [30, 3, 1, "", "vector_False_Positive_Rate"], [30, 3, 1, "", "vector_Negative_Rate"], [30, 3, 1, "", "vector_Positive_Rate"], [30, 3, 1, "", "vector_True_Negative_Rate"], [30, 3, 1, "", "vector_True_Positive_Rate"], [30, 3, 1, "", "vector_logistic_loss"]], "seldonian.models.model.LinearRegressionModel": [[31, 3, 1, "", "__init__"], [31, 3, 1, "", "__repr__"], [31, 3, 1, "", "default_objective"], [31, 3, 1, "", "evaluate_statistic"], [31, 3, 1, "", "fit"], [31, 3, 1, "", "predict"], [31, 3, 1, "", "sample_Mean_Error"], [31, 3, 1, "", "sample_Mean_Squared_Error"], [31, 3, 1, "", "sample_from_statistic"], [31, 3, 1, "", "vector_Mean_Error"], [31, 3, 1, "", "vector_Mean_Squared_Error"]], "seldonian.models.model.LinearSoftmaxModel": [[32, 3, 1, "", "IS_estimate"], [32, 3, 1, "", "__init__"], [32, 3, 1, "", "__repr__"], [32, 3, 1, "", "apply_policy"], [32, 3, 1, "", "default_objective"], [32, 3, 1, "", "evaluate_statistic"], [32, 3, 1, "", "get_p"], [32, 3, 1, "", "sample_IS_estimate"], [32, 3, 1, "", "sample_from_statistic"], [32, 3, 1, "", "vector_IS_estimate"]], "seldonian.models.model.LogisticRegressionModel": [[33, 3, 1, "", "__init__"], [33, 3, 1, "", "__repr__"], [33, 3, 1, "", "accuracy"], [33, 3, 1, "", "default_objective"], [33, 3, 1, "", "evaluate_statistic"], [33, 3, 1, "", "fit"], [33, 3, 1, "", "gradient_sample_logistic_loss"], [33, 3, 1, "", "predict"], [33, 3, 1, "", "sample_False_Negative_Rate"], [33, 3, 1, "", "sample_False_Positive_Rate"], [33, 3, 1, "", "sample_Negative_Rate"], [33, 3, 1, "", "sample_Positive_Rate"], [33, 3, 1, "", "sample_from_statistic"], [33, 3, 1, "", "sample_logistic_loss"], [33, 3, 1, "", "sample_perceptron_loss"], [33, 3, 1, "", "vector_False_Negative_Rate"], [33, 3, 1, "", "vector_False_Positive_Rate"], [33, 3, 1, "", "vector_Negative_Rate"], [33, 3, 1, "", "vector_Positive_Rate"], [33, 3, 1, "", "vector_True_Negative_Rate"], [33, 3, 1, "", "vector_True_Positive_Rate"], [33, 3, 1, "", "vector_logistic_loss"]], "seldonian.models.model.RLModel": [[34, 3, 1, "", "__init__"], [34, 3, 1, "", "__repr__"], [34, 3, 1, "", "evaluate_statistic"], [34, 3, 1, "", "sample_IS_estimate"], [34, 3, 1, "", "sample_from_statistic"], [34, 3, 1, "", "vector_IS_estimate"]], "seldonian.models.model.RegressionModel": [[35, 3, 1, "", "__init__"], [35, 3, 1, "", "__repr__"], [35, 3, 1, "", "evaluate_statistic"], [35, 3, 1, "", "fit"], [35, 3, 1, "", "sample_Mean_Error"], [35, 3, 1, "", "sample_Mean_Squared_Error"], [35, 3, 1, "", "sample_from_statistic"], [35, 3, 1, "", "vector_Mean_Error"], [35, 3, 1, "", "vector_Mean_Squared_Error"]], "seldonian.models.model.SGDClassifierModel": [[36, 3, 1, "", "__init__"], [36, 3, 1, "", "__repr__"], [36, 3, 1, "", "accuracy"], [36, 3, 1, "", "evaluate_statistic"], [36, 3, 1, "", "fit"], [36, 3, 1, "", "gradient_sample_logistic_loss"], [36, 3, 1, "", "predict"], [36, 3, 1, "", "sample_False_Negative_Rate"], [36, 3, 1, "", "sample_False_Positive_Rate"], [36, 3, 1, "", "sample_Negative_Rate"], [36, 3, 1, "", "sample_Positive_Rate"], [36, 3, 1, "", "sample_from_statistic"], [36, 3, 1, "", "sample_logistic_loss"], [36, 3, 1, "", "sample_perceptron_loss"], [36, 3, 1, "", "vector_False_Negative_Rate"], [36, 3, 1, "", "vector_False_Positive_Rate"], [36, 3, 1, "", "vector_Negative_Rate"], [36, 3, 1, "", "vector_Positive_Rate"], [36, 3, 1, "", "vector_True_Negative_Rate"], [36, 3, 1, "", "vector_True_Positive_Rate"], [36, 3, 1, "", "vector_logistic_loss"]], "seldonian.models.model.SeldonianModel": [[37, 3, 1, "", "__init__"], [37, 3, 1, "", "__repr__"]], "seldonian.models.model.SupervisedModel": [[38, 3, 1, "", "__init__"], [38, 3, 1, "", "__repr__"], [38, 3, 1, "", "fit"]], "seldonian.models.model.TabularSoftmaxModel": [[39, 3, 1, "", "__init__"], [39, 3, 1, "", "__repr__"], [39, 3, 1, "", "apply_policy"], [39, 3, 1, "", "default_objective"], [39, 3, 1, "", "evaluate_statistic"], [39, 3, 1, "", "sample_IS_estimate"], [39, 3, 1, "", "sample_from_statistic"], [39, 3, 1, "", "vector_IS_estimate"]], "seldonian.optimizers": [[41, 0, 0, "-", "gradient_descent"]], "seldonian.optimizers.gradient_descent": [[42, 1, 1, "", "gradient_descent_adam"]], "seldonian.parse_tree": [[44, 0, 0, "-", "nodes"], [50, 0, 0, "-", "operators"], [51, 0, 0, "-", "parse_tree"]], "seldonian.parse_tree.nodes": [[45, 2, 1, "", "BaseNode"], [46, 2, 1, "", "ConstantNode"], [47, 2, 1, "", "InternalNode"], [48, 2, 1, "", "MEDCustomBaseNode"], [49, 2, 1, "", "Node"]], "seldonian.parse_tree.nodes.BaseNode": [[45, 3, 1, "", "__init__"], [45, 3, 1, "", "__repr__"], [45, 3, 1, "", "calculate_bounds"], [45, 3, 1, "", "calculate_data_forbound"], [45, 3, 1, "", "calculate_value"], [45, 3, 1, "", "compute_HC_lowerbound"], [45, 3, 1, "", "compute_HC_upper_and_lowerbound"], [45, 3, 1, "", "compute_HC_upperbound"], [45, 3, 1, "", "mask_dataframe"], [45, 3, 1, "", "predict_HC_lowerbound"], [45, 3, 1, "", "predict_HC_upper_and_lowerbound"], [45, 3, 1, "", "predict_HC_upperbound"], [45, 3, 1, "", "zhat"]], "seldonian.parse_tree.nodes.ConstantNode": [[46, 3, 1, "", "__init__"], [46, 3, 1, "", "__repr__"]], "seldonian.parse_tree.nodes.InternalNode": [[47, 3, 1, "", "__init__"], [47, 3, 1, "", "__repr__"]], "seldonian.parse_tree.nodes.MEDCustomBaseNode": [[48, 3, 1, "", "__init__"], [48, 3, 1, "", "__repr__"], [48, 3, 1, "", "calculate_bounds"], [48, 3, 1, "", "calculate_data_forbound"], [48, 3, 1, "", "calculate_value"], [48, 3, 1, "", "compute_HC_lowerbound"], [48, 3, 1, "", "compute_HC_upper_and_lowerbound"], [48, 3, 1, "", "compute_HC_upperbound"], [48, 3, 1, "", "mask_dataframe"], [48, 3, 1, "", "precalculate_data"], [48, 3, 1, "", "predict_HC_lowerbound"], [48, 3, 1, "", "predict_HC_upper_and_lowerbound"], [48, 3, 1, "", "predict_HC_upperbound"], [48, 3, 1, "", "zhat"]], "seldonian.parse_tree.nodes.Node": [[49, 3, 1, "", "__init__"], [49, 3, 1, "", "__repr__"]], "seldonian.parse_tree.operators": [[50, 4, 1, "", "bounds_required_dict"], [50, 4, 1, "", "custom_base_node_dict"], [50, 4, 1, "", "measure_functions_dict"], [50, 4, 1, "", "not_supported_op_mapper"], [50, 4, 1, "", "op_mapper"]], "seldonian.parse_tree.parse_tree": [[52, 2, 1, "", "ParseTree"]], "seldonian.parse_tree.parse_tree.ParseTree": [[52, 3, 1, "", "__init__"], [52, 3, 1, "", "__repr__"], [52, 3, 1, "", "_abs"], [52, 3, 1, "", "_add"], [52, 3, 1, "", "_assign_bounds_helper"], [52, 3, 1, "", "_assign_deltas_helper"], [52, 3, 1, "", "_ast2pt_node"], [52, 3, 1, "", "_ast_tree_helper"], [52, 3, 1, "", "_div"], [52, 3, 1, "", "_evaluator_helper"], [52, 3, 1, "", "_exp"], [52, 3, 1, "", "_max"], [52, 3, 1, "", "_min"], [52, 3, 1, "", "_mult"], [52, 3, 1, "", "_pow"], [52, 3, 1, "", "_propagate_value"], [52, 3, 1, "", "_propagator_helper"], [52, 3, 1, "", "_protect_nan"], [52, 3, 1, "", "_sub"], [52, 3, 1, "", "assign_bounds_needed"], [52, 3, 1, "", "assign_deltas"], [52, 3, 1, "", "create_from_ast"], [52, 3, 1, "", "evaluate_constraint"], [52, 3, 1, "", "make_viz"], [52, 3, 1, "", "make_viz_helper"], [52, 3, 1, "", "propagate"], [52, 3, 1, "", "propagate_bounds"], [52, 3, 1, "", "reset_base_node_dict"]], "seldonian.safety_test": [[54, 0, 0, "-", "safety_test"]], "seldonian.safety_test.safety_test": [[55, 2, 1, "", "SafetyTest"]], "seldonian.safety_test.safety_test.SafetyTest": [[55, 3, 1, "", "__init__"], [55, 3, 1, "", "__repr__"], [55, 3, 1, "", "run"]], "seldonian.seldonian_algorithm": [[57, 1, 1, "", "seldonian_algorithm"]], "seldonian.spec": [[59, 2, 1, "", "RLSpec"], [60, 2, 1, "", "Spec"], [61, 2, 1, "", "SupervisedSpec"]], "seldonian.spec.RLSpec": [[59, 3, 1, "", "__init__"], [59, 3, 1, "", "__repr__"]], "seldonian.spec.Spec": [[60, 3, 1, "", "__init__"], [60, 3, 1, "", "__repr__"]], "seldonian.spec.SupervisedSpec": [[61, 3, 1, "", "__init__"], [61, 3, 1, "", "__repr__"]], "seldonian.utils": [[63, 0, 0, "-", "io_utils"], [69, 0, 0, "-", "stats_utils"]], "seldonian.utils.io_utils": [[64, 1, 1, "", "dir_path"], [65, 1, 1, "", "load_json"], [66, 1, 1, "", "load_pickle"], [67, 1, 1, "", "save_pickle"], [68, 1, 1, "", "yes_or_no_input"]], "seldonian.utils.stats_utils": [[70, 1, 1, "", "generate_data"], [71, 1, 1, "", "stddev"], [72, 1, 1, "", "tinv"], [73, 1, 1, "", "weighted_sum_gamma"]], "seldonian.warnings": [[75, 0, 0, "-", "custom_warnings"]], "seldonian.warnings.custom_warnings": [[76, 1, 1, "", "custom_formatwarning"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "data", "Python data"]}, "titleterms": {"interfac": [0, 1, 2, 3, 4, 81], "cli_supervis": [1, 2], "run_interfac": [2, 4], "command_line_interfac": [3, 4], "seldonian": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 80], "rl": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "environ": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "gridworld3x3": [8, 9], "mountaincar": [10, 11, 12, 13, 14, 15, 16, 17], "basi": 11, "fourierbasi": 13, "linear_softmax": 14, "polici": 16, "increment_count": 17, "candidate_select": [18, 19, 20], "candidateselect": 20, "dataset": [21, 22, 23, 24, 25, 26], "datasetload": 23, "episod": 24, "rldataset": 25, "superviseddataset": 26, "model": [27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39], "classificationmodel": 29, "linearclassifiermodel": 30, "linearregressionmodel": 31, "linearsoftmaxmodel": 32, "logisticregressionmodel": 33, "rlmodel": 34, "regressionmodel": 35, "sgdclassifiermodel": 36, "seldonianmodel": 37, "supervisedmodel": 38, "tabularsoftmaxmodel": 39, "optim": [40, 41, 42], "gradient_desc": [41, 42], "gradient_descent_adam": 42, "parse_tre": [43, 44, 45, 46, 47, 48, 49, 50, 51, 52], "node": [44, 45, 46, 47, 48, 49], "basenod": 45, "constantnod": 46, "internalnod": 47, "medcustombasenod": 48, "oper": 50, "parsetre": 52, "safety_test": [53, 54, 55], "safetytest": 55, "seldonian_algorithm": [56, 57], "spec": [58, 59, 60, 61, 81], "rlspec": 59, "supervisedspec": 61, "util": [62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73], "io_util": [63, 64, 65, 66, 67, 68], "dir_path": 64, "load_json": 65, "load_pickl": 66, "save_pickl": 67, "yes_or_no_input": 68, "stats_util": [69, 70, 71, 72, 73], "generate_data": 70, "stddev": 71, "tinv": 72, "weighted_sum_gamma": 73, "warn": [74, 75, 76], "custom_warn": [75, 76], "custom_formatwarn": 76, "api": 77, "get": 78, "start": 78, "instal": 78, "simpl": 78, "exampl": 78, "glossari": 79, "engin": 80, "document": 80, "tabl": 80, "content": 80, "overview": 81, "data": 81, "file": 81, "metadata": 81, "behavior": 81, "constraint": 81, "object": 81, "candid": 81, "select": 81, "safeti": 81, "test": 81}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 56}})