Search.setIndex({"docnames": ["_autosummary/interface", "_autosummary/interface.cli_supervised", "_autosummary/interface.cli_supervised.run_interface", "_autosummary/seldonian", "_autosummary/seldonian.RL", "_autosummary/seldonian.RL.environments", "_autosummary/seldonian.RL.environments.gridworld3x3", "_autosummary/seldonian.RL.environments.gridworld3x3.Environment", "_autosummary/seldonian.RL.environments.mountaincar", "_autosummary/seldonian.RL.environments.mountaincar.Basis", "_autosummary/seldonian.RL.environments.mountaincar.Environment", "_autosummary/seldonian.RL.environments.mountaincar.FourierBasis", "_autosummary/seldonian.RL.environments.mountaincar.Linear_Softmax", "_autosummary/seldonian.RL.environments.mountaincar.Mountaincar", "_autosummary/seldonian.RL.environments.mountaincar.Policy", "_autosummary/seldonian.RL.environments.mountaincar.increment_counter", "_autosummary/seldonian.candidate_selection", "_autosummary/seldonian.candidate_selection.CandidateSelection", "_autosummary/seldonian.candidate_selection.candidate_selection", "_autosummary/seldonian.candidate_selection.candidate_selection.CandidateSelection", "_autosummary/seldonian.dataset", "_autosummary/seldonian.dataset.DataSet", "_autosummary/seldonian.dataset.DataSetLoader", "_autosummary/seldonian.dataset.RLDataSet", "_autosummary/seldonian.dataset.SupervisedDataSet", "_autosummary/seldonian.models", "_autosummary/seldonian.models.model", "_autosummary/seldonian.models.model.ClassificationModel", "_autosummary/seldonian.models.model.LinearClassifierModel", "_autosummary/seldonian.models.model.LinearRegressionModel", "_autosummary/seldonian.models.model.LinearSoftmaxModel", "_autosummary/seldonian.models.model.LogisticRegressionModel", "_autosummary/seldonian.models.model.RLModel", "_autosummary/seldonian.models.model.RegressionModel", "_autosummary/seldonian.models.model.SGDClassifierModel", "_autosummary/seldonian.models.model.SeldonianModel", "_autosummary/seldonian.models.model.SupervisedModel", "_autosummary/seldonian.models.model.TabularSoftmaxModel", "_autosummary/seldonian.optimizers", "_autosummary/seldonian.optimizers.gradient_descent", "_autosummary/seldonian.optimizers.gradient_descent.gradient_descent_adam", "_autosummary/seldonian.parse_tree", "_autosummary/seldonian.parse_tree.nodes", "_autosummary/seldonian.parse_tree.nodes.BaseNode", "_autosummary/seldonian.parse_tree.nodes.ConstantNode", "_autosummary/seldonian.parse_tree.nodes.InternalNode", "_autosummary/seldonian.parse_tree.nodes.MEDCustomBaseNode", "_autosummary/seldonian.parse_tree.nodes.Node", "_autosummary/seldonian.parse_tree.operators", "_autosummary/seldonian.parse_tree.parse_tree", "_autosummary/seldonian.parse_tree.parse_tree.ParseTree", "_autosummary/seldonian.safety_test", "_autosummary/seldonian.safety_test.SafetyTest", "_autosummary/seldonian.safety_test.safety_test", "_autosummary/seldonian.safety_test.safety_test.SafetyTest", "_autosummary/seldonian.seldonian_algorithm", "_autosummary/seldonian.seldonian_algorithm.seldonian_algorithm", "_autosummary/seldonian.spec", "_autosummary/seldonian.spec.RLSpec", "_autosummary/seldonian.spec.Spec", "_autosummary/seldonian.spec.SupervisedSpec", "api", "getting_started", "glossary", "index", "overview", "usage"], "filenames": ["_autosummary/interface.rst", "_autosummary/interface.cli_supervised.rst", "_autosummary/interface.cli_supervised.run_interface.rst", "_autosummary/seldonian.rst", "_autosummary/seldonian.RL.rst", "_autosummary/seldonian.RL.environments.rst", "_autosummary/seldonian.RL.environments.gridworld3x3.rst", "_autosummary/seldonian.RL.environments.gridworld3x3.Environment.rst", "_autosummary/seldonian.RL.environments.mountaincar.rst", "_autosummary/seldonian.RL.environments.mountaincar.Basis.rst", "_autosummary/seldonian.RL.environments.mountaincar.Environment.rst", "_autosummary/seldonian.RL.environments.mountaincar.FourierBasis.rst", "_autosummary/seldonian.RL.environments.mountaincar.Linear_Softmax.rst", "_autosummary/seldonian.RL.environments.mountaincar.Mountaincar.rst", "_autosummary/seldonian.RL.environments.mountaincar.Policy.rst", "_autosummary/seldonian.RL.environments.mountaincar.increment_counter.rst", "_autosummary/seldonian.candidate_selection.rst", "_autosummary/seldonian.candidate_selection.CandidateSelection.rst", "_autosummary/seldonian.candidate_selection.candidate_selection.rst", "_autosummary/seldonian.candidate_selection.candidate_selection.CandidateSelection.rst", "_autosummary/seldonian.dataset.rst", "_autosummary/seldonian.dataset.DataSet.rst", "_autosummary/seldonian.dataset.DataSetLoader.rst", "_autosummary/seldonian.dataset.RLDataSet.rst", "_autosummary/seldonian.dataset.SupervisedDataSet.rst", "_autosummary/seldonian.models.rst", "_autosummary/seldonian.models.model.rst", "_autosummary/seldonian.models.model.ClassificationModel.rst", "_autosummary/seldonian.models.model.LinearClassifierModel.rst", "_autosummary/seldonian.models.model.LinearRegressionModel.rst", "_autosummary/seldonian.models.model.LinearSoftmaxModel.rst", "_autosummary/seldonian.models.model.LogisticRegressionModel.rst", "_autosummary/seldonian.models.model.RLModel.rst", "_autosummary/seldonian.models.model.RegressionModel.rst", "_autosummary/seldonian.models.model.SGDClassifierModel.rst", "_autosummary/seldonian.models.model.SeldonianModel.rst", "_autosummary/seldonian.models.model.SupervisedModel.rst", "_autosummary/seldonian.models.model.TabularSoftmaxModel.rst", "_autosummary/seldonian.optimizers.rst", "_autosummary/seldonian.optimizers.gradient_descent.rst", "_autosummary/seldonian.optimizers.gradient_descent.gradient_descent_adam.rst", "_autosummary/seldonian.parse_tree.rst", "_autosummary/seldonian.parse_tree.nodes.rst", "_autosummary/seldonian.parse_tree.nodes.BaseNode.rst", "_autosummary/seldonian.parse_tree.nodes.ConstantNode.rst", "_autosummary/seldonian.parse_tree.nodes.InternalNode.rst", "_autosummary/seldonian.parse_tree.nodes.MEDCustomBaseNode.rst", "_autosummary/seldonian.parse_tree.nodes.Node.rst", "_autosummary/seldonian.parse_tree.operators.rst", "_autosummary/seldonian.parse_tree.parse_tree.rst", "_autosummary/seldonian.parse_tree.parse_tree.ParseTree.rst", "_autosummary/seldonian.safety_test.rst", "_autosummary/seldonian.safety_test.SafetyTest.rst", "_autosummary/seldonian.safety_test.safety_test.rst", "_autosummary/seldonian.safety_test.safety_test.SafetyTest.rst", "_autosummary/seldonian.seldonian_algorithm.rst", "_autosummary/seldonian.seldonian_algorithm.seldonian_algorithm.rst", "_autosummary/seldonian.spec.rst", "_autosummary/seldonian.spec.RLSpec.rst", "_autosummary/seldonian.spec.Spec.rst", "_autosummary/seldonian.spec.SupervisedSpec.rst", "api.rst", "getting_started.rst", "glossary.rst", "index.rst", "overview.rst", "usage.rst"], "titles": ["interface", "interface.cli_supervised", "interface.cli_supervised.run_interface", "seldonian", "seldonian.RL", "seldonian.RL.environments", "seldonian.RL.environments.gridworld3x3", "seldonian.RL.environments.gridworld3x3.Environment", "seldonian.RL.environments.mountaincar", "seldonian.RL.environments.mountaincar.Basis", "seldonian.RL.environments.mountaincar.Environment", "seldonian.RL.environments.mountaincar.FourierBasis", "seldonian.RL.environments.mountaincar.Linear_Softmax", "seldonian.RL.environments.mountaincar.Mountaincar", "seldonian.RL.environments.mountaincar.Policy", "seldonian.RL.environments.mountaincar.increment_counter", "seldonian.candidate_selection", "seldonian.candidate_selection.CandidateSelection", "seldonian.candidate_selection.candidate_selection", "seldonian.candidate_selection.candidate_selection.CandidateSelection", "seldonian.dataset", "seldonian.dataset.DataSet", "seldonian.dataset.DataSetLoader", "seldonian.dataset.RLDataSet", "seldonian.dataset.SupervisedDataSet", "seldonian.models", "seldonian.models.model", "seldonian.models.model.ClassificationModel", "seldonian.models.model.LinearClassifierModel", "seldonian.models.model.LinearRegressionModel", "seldonian.models.model.LinearSoftmaxModel", "seldonian.models.model.LogisticRegressionModel", "seldonian.models.model.RLModel", "seldonian.models.model.RegressionModel", "seldonian.models.model.SGDClassifierModel", "seldonian.models.model.SeldonianModel", "seldonian.models.model.SupervisedModel", "seldonian.models.model.TabularSoftmaxModel", "seldonian.optimizers", "seldonian.optimizers.gradient_descent", "seldonian.optimizers.gradient_descent.gradient_descent_adam", "seldonian.parse_tree", "seldonian.parse_tree.nodes", "seldonian.parse_tree.nodes.BaseNode", "seldonian.parse_tree.nodes.ConstantNode", "seldonian.parse_tree.nodes.InternalNode", "seldonian.parse_tree.nodes.MEDCustomBaseNode", "seldonian.parse_tree.nodes.Node", "seldonian.parse_tree.operators", "seldonian.parse_tree.parse_tree", "seldonian.parse_tree.parse_tree.ParseTree", "seldonian.safety_test", "seldonian.safety_test.SafetyTest", "seldonian.safety_test.safety_test", "seldonian.safety_test.safety_test.SafetyTest", "seldonian.seldonian_algorithm", "seldonian.seldonian_algorithm.seldonian_algorithm", "seldonian.spec", "seldonian.spec.RLSpec", "seldonian.spec.Spec", "seldonian.spec.SupervisedSpec", "API", "Getting Started", "Glossary", "Seldonian Engine documentation", "Overview", "Usage"], "terms": {"seldonian": [0, 1, 62, 63, 65, 66], "packag": [0, 3], "modul": [0, 3, 4, 5, 16, 18, 25, 26, 30, 37, 38, 41, 48, 49, 51, 53, 55, 57, 58], "command": [1, 2, 62], "line": [1, 2, 10, 13, 62], "supervis": [1, 19, 21, 22, 24, 36, 54, 60, 62, 63], "learn": [1, 13, 19, 21, 22, 24, 26, 27, 33, 35, 36, 40, 43, 46, 54, 60, 62, 63], "algorithm": [1, 19, 20, 21, 22, 24, 25, 46, 50, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65], "usag": [1, 62, 64], "python": [1, 50, 62], "py": [1, 62], "data_pth": [1, 2, 62], "metadata_pth": [1, 2, 62], "include_sensitive_column": [1, 2, 22, 24, 62], "include_intercept_term": [1, 2, 22, 24, 62], "save_dir": [1, 2, 62], "function": [1, 6, 7, 8, 19, 37, 39, 40, 43, 48, 50, 55, 58, 59, 60, 63], "fals": [2, 7, 10, 11, 19, 22, 24, 27, 28, 31, 34, 40, 50, 58, 59, 60], "run": [2, 19, 20, 25, 40, 53, 54, 55, 56, 57, 58, 59, 60, 62, 65], "paramet": [2, 7, 12, 14, 19, 21, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 40, 43, 44, 45, 46, 47, 50, 54, 56, 58, 59, 60, 65], "path": [2, 62], "main": [2, 26, 49, 65], "dataset": [2, 10, 19, 29, 30, 32, 33, 37, 43, 46, 54, 58, 59, 60, 62, 64], "file": [2, 7, 22, 62], "metadata": [2, 21, 23, 24, 30, 32, 37, 40, 62, 65], "json": 2, "whether": [2, 7, 19, 22, 24, 40, 47, 50, 54, 58, 59, 60], "includ": [2, 7, 22, 24, 34, 40, 50], "sensit": [2, 22, 24, 63], "column": [2, 7, 21, 22, 23, 24, 34, 43, 46], "dure": [2, 19, 22, 24, 48, 58, 59, 60], "train": [2, 22, 24, 27, 28, 29, 31, 33, 34, 36, 65], "predict": [2, 19, 22, 24, 27, 28, 29, 31, 34, 63], "add": [2, 19, 22, 24, 50], "ones": [2, 22, 24], "first": [2, 22, 24, 34, 50, 62, 66], "engin": [3, 66], "3x3": [6, 7], "gridworld": [6, 7, 37], "state": [6, 7, 10, 13, 30, 37, 50], "0": [6, 7, 13, 27, 28, 30, 31, 34, 40, 43, 46, 54, 58], "8": [6, 7, 10], "reward": [6, 7, 10, 13], "everywher": [6, 7], "except": [6, 7], "r": [6, 7, 10, 13, 27, 28, 31, 34], "1": [6, 7, 13, 27, 28, 30, 31, 34, 43, 54, 58, 63], "cell": [6, 7], "7": [6, 7], "bottom": [6, 7], "middl": [6, 7], "right": [6, 7, 13, 47, 50], "action": [6, 7, 10, 13, 30, 37], "ar": [6, 7, 19, 48, 50, 54, 58, 59, 60, 62, 63, 64, 65], "2": [6, 7, 40, 46], "3": [6, 7], "up": [6, 7, 46, 50], "down": [6, 7], "left": [6, 7, 13, 47, 50], "respect": [6, 7], "an": [6, 7, 34, 43, 47, 48, 58, 59, 60, 62, 63], "episod": [6, 7, 10, 13, 30, 32, 37], "start": [6, 7, 64], "top": [6, 7, 50], "termin": [6, 7, 10, 13], "timeout": [6, 7], "occur": [6, 7], "class": [6, 7, 8, 9, 10, 11, 12, 13, 14, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53, 54, 57, 58, 59, 60], "base": [7, 9, 10, 11, 12, 13, 14, 19, 21, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 43, 44, 45, 46, 47, 48, 50, 54, 58, 59, 60], "object": [7, 9, 13, 14, 19, 21, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 40, 43, 46, 47, 50, 54, 56, 57, 58, 59, 60, 63, 64], "__init__": [7, 9, 10, 11, 12, 13, 14, 19, 21, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 43, 44, 45, 46, 47, 50, 54, 58, 59, 60], "variabl": [7, 22, 30, 37, 43, 44, 46, 47, 48, 50, 54, 58, 59, 60], "gamma": [7, 10, 54], "float": [7, 10, 13, 27, 28, 29, 30, 31, 32, 33, 34, 37, 40, 43, 44, 46, 47, 50, 54, 58, 59, 60], "discount": [7, 10, 54], "factor": [7, 54], "when": [7, 19, 27, 28, 31, 34, 43, 50], "calcul": [7, 10, 27, 28, 29, 30, 31, 32, 33, 34, 37, 40, 43, 46, 50, 54, 58, 59, 60], "return": [7, 9, 10, 11, 12, 13, 14, 19, 21, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 43, 46, 50, 54, 58, 59, 60], "int": [7, 10, 12, 13, 19, 30, 37, 40, 43, 46, 47, 50], "The": [7, 13, 19, 21, 22, 24, 27, 28, 29, 30, 31, 32, 33, 34, 37, 40, 43, 44, 45, 46, 47, 50, 54, 58, 59, 60, 62, 63, 64, 65], "number": [7, 27, 28, 31, 34, 40, 43, 46, 50], "timestep": [7, 10, 13], "after": 7, "which": [7, 27, 28, 31, 34, 43, 45, 46, 48, 50, 58, 59, 60, 63, 65], "we": [7, 43, 46, 50, 62], "agent": [7, 13], "regardless": 7, "numpi": [7, 12, 14, 19, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 43, 46, 54], "ndarrai": [7, 10, 13, 14, 19, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 43, 46, 54], "possibl": [7, 30, 37, 54], "reward_dict": 7, "dict": [7, 27, 28, 29, 30, 31, 32, 33, 34, 37, 40, 43, 46, 48, 50, 58, 59, 60], "map": [7, 48], "pair": [7, 27, 28, 29, 33, 34, 36, 46], "environ_dict": 7, "next": [7, 10, 13], "initial_st": 7, "where": [7, 19, 43, 46, 50], "each": [7, 27, 28, 29, 30, 31, 32, 33, 34, 37, 43, 46, 48, 50, 65], "terminal_st": 7, "current_st": 7, "current": [7, 27], "initial_weight": 7, "initi": [7, 10, 13, 19, 40, 50, 58, 59, 60], "weight": [7, 19, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 40, 43, 46, 58, 59, 60], "s": [7, 13, 43, 46, 50, 62], "polici": [7, 12, 37, 63, 64], "model": [7, 13, 19, 40, 43, 46, 54, 58, 59, 60, 63, 64], "param_weight": 7, "__repr__": [7, 9, 10, 11, 12, 13, 14, 19, 21, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 43, 44, 45, 46, 47, 50, 54, 58, 59, 60], "repr": [7, 9, 10, 11, 12, 13, 14, 19, 21, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 50, 54, 58, 59, 60], "self": [7, 9, 10, 11, 12, 13, 14, 19, 21, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 50, 54, 58, 59, 60], "method": [7, 9, 10, 11, 12, 13, 14, 19, 21, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 43, 44, 45, 46, 47, 50, 54, 58, 59, 60], "_arg": [7, 37], "helper": [7, 37, 50], "pi": 7, "_denom": [7, 37], "calc_j": 7, "n_episod": [7, 10], "parallel": [7, 10], "true": [7, 10, 27, 28, 31, 34, 40, 43, 46, 54, 58, 59, 60], "n_worker": [7, 10], "expect": [7, 10, 43, 46], "sum": [7, 10, 27, 28, 31, 34], "gener": [7, 65], "us": [7, 10, 13, 19, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 43, 46, 48, 50, 54, 58, 59, 60, 62, 65, 66], "perform": [7, 45], "bool": [7, 10, 13, 19, 40, 47, 50, 54, 58, 59, 60], "multipl": 7, "worker": 7, "data": [7, 19, 22, 30, 32, 37, 43, 46, 50, 54, 58, 59, 60, 62, 65], "multiprocess": 7, "j": 7, "type": [7, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 40, 43, 46, 63], "generate_data": [7, 10], "savenam": [7, 10], "none": [7, 12, 14, 19, 47, 58, 59, 60], "header": [7, 10], "panda": [7, 21, 23, 24, 32, 37, 46], "datafram": [7, 21, 23, 24, 30, 32, 37, 43, 46], "consist": [7, 65], "episode_index": 7, "probability_of_act": 7, "str": [7, 19, 21, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 37, 43, 44, 45, 46, 47, 48, 50, 54, 58, 59, 60], "default": [7, 28, 29, 30, 31, 37, 47, 50, 54, 58, 59, 60, 65], "name": [7, 19, 21, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 37, 43, 44, 45, 46, 47, 48, 58, 59, 60], "save": 7, "generate_episod": 7, "return_index": 7, "entir": 7, "part": [7, 65], "generate_episodes_par": 7, "thi": [7, 13, 27, 28, 30, 31, 33, 34, 35, 36, 43, 46, 47, 50, 58, 62, 63, 64, 65], "appli": [7, 37, 63], "tabular": [7, 37], "softmax": [7, 30, 37], "get": [7, 12, 14, 19, 30, 50, 64], "probabl": [7, 27, 28, 30, 31, 34, 50, 63], "given": [7, 10, 19, 30, 34, 37, 43, 46, 50, 58, 59, 60], "posit": [7, 10, 13, 27, 28, 31, 34], "between": [7, 27, 28, 31, 34, 46], "correspond": 7, "reset": [7, 10, 13, 50], "take_step": 7, "take": [7, 10, 13, 30, 56], "chang": 7, "attribut": [10, 13, 22, 24, 50, 63], "next_stat": [10, 13], "transit": [10, 13], "calc_j_from_df": 10, "df": [10, 21, 23, 24], "nextstat": [10, 13], "comput": [10, 13, 46, 50, 58, 59, 60], "pendulum": [10, 13], "euler": [10, 13], "approxim": [10, 13], "dynam": [10, 13], "configur": [10, 13], "step": [10, 13], "tupl": [10, 13, 50], "one": [10, 13, 30, 48, 50, 58, 59, 60, 63], "time": [10, 13], "greater": [10, 13], "than": [10, 13, 50, 65], "max": [10, 13], "pass": [10, 13, 43, 46, 54], "finish": [10, 13], "rang": 11, "dorder": 11, "iorder": 11, "both": [11, 50], "basi": [11, 12, 64], "n_action": 12, "get_param": [12, 14], "vector": [12, 14, 29, 30, 32, 33, 34, 37, 43, 46], "set_param": [12, 14], "param": [12, 14], "set": [12, 14, 34, 41, 44, 65], "cart": 13, "pole": 13, "describ": [13, 65], "687": 13, "cours": 13, "materi": 13, "domain": 13, "balanc": 13, "must": [13, 43], "move": 13, "forward": 13, "backward": 13, "keep": [13, 50], "from": [13, 22, 27, 28, 29, 30, 33, 34, 36, 37, 41, 46, 49, 50, 58, 62, 63, 65], "fall": [13, 58, 59, 60], "alwai": [13, 43, 46, 50], "see": [13, 46, 58, 59, 60, 62, 63, 64, 65], "work": 13, "florian": 13, "2007": 13, "correct": 13, "equat": 13, "system": [13, 63, 66], "observ": [13, 27, 28, 29, 31, 33, 34, 43, 46], "barrow": 13, "phil": 13, "thoma": [13, 46], "2019": [13, 46], "written": [13, 50], "blossom": 13, "metevi": 13, "scott": 13, "jordan": 13, "counter": 15, "maxdigit": 15, "candid": [16, 18, 19, 38, 43, 46, 54, 58, 59, 60, 63, 64], "select": [16, 18, 19, 38, 43, 46, 54, 58, 59, 60, 63, 64], "candidate_dataset": 19, "n_safeti": 19, "parse_tre": [19, 54, 58, 59, 60, 64], "primary_object": [19, 40, 58, 59, 60], "optimization_techniqu": [19, 58, 59, 60], "barrier_funct": [19, 58, 59, 60], "optim": [19, 58, 59, 60, 63, 64], "powel": 19, "initial_solut": 19, "regim": [19, 21, 22, 24, 54, 63], "write_logfil": 19, "kwarg": [19, 21, 22, 23, 24, 40, 43, 44, 45, 46, 50, 54], "seldonianmodel": [19, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 43, 46, 54, 58, 59, 60, 64], "contain": [19, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 40, 43, 46, 48, 50, 54, 58, 59, 60, 65], "length": [19, 48], "safeti": [19, 43, 46, 51, 53, 54, 58, 59, 60, 62, 63, 65], "confid": [19, 43, 46, 47, 50, 54, 58, 59, 60, 63, 65], "bound": [19, 40, 43, 44, 46, 47, 48, 50, 54, 58, 59, 60], "list": [19, 21, 22, 23, 24, 43, 46, 48, 54, 58, 59, 60], "parsetre": [19, 54, 58, 59, 60, 64, 65], "pars": [19, 41, 43, 44, 45, 46, 47, 48, 49, 50, 54, 58, 59, 60, 64, 66], "tree": [19, 41, 43, 44, 45, 46, 47, 48, 49, 50, 54, 58, 59, 60, 64, 66], "behavior": [19, 40, 41, 48, 49, 50, 54, 58, 59, 60, 63], "constraint": [19, 40, 41, 48, 49, 50, 54, 58, 59, 60, 62, 63, 65], "would": [19, 40, 48, 58, 59, 60], "sole": [19, 40, 58, 59, 60], "absenc": [19, 40, 58, 59, 60], "i": [19, 40, 58, 59, 60], "e": [19, 21, 22, 24, 27, 28, 29, 30, 31, 32, 33, 34, 37, 40, 43, 46, 54, 58, 59, 60, 63], "loss": [19, 27, 28, 31, 34, 40, 58, 59, 60, 63], "g": [19, 21, 22, 24, 27, 28, 29, 30, 31, 32, 33, 34, 37, 43, 46, 54, 58, 59, 60, 63], "gradient_desc": [19, 58, 59, 60, 64], "string": [19, 44, 45, 47, 48, 50, 58, 59, 60], "categori": [19, 21, 22, 24, 54], "machin": [19, 21, 22, 24, 26, 27, 33, 34, 35, 36, 43, 46, 54, 63], "rl": [19, 21, 22, 23, 24, 30, 32, 37, 54, 58, 64], "write": 19, "output": 19, "disk": [19, 22], "evaluate_primary_object": 19, "theta": [19, 27, 28, 29, 30, 31, 32, 33, 34, 37, 40, 43, 46], "valu": [19, 29, 33, 40, 43, 44, 46, 50], "primari": [19, 28, 29, 30, 31, 37, 58, 59, 60, 63], "wrapper": 19, "fix": 19, "input": [19, 43, 46, 63], "gradient": [19, 27, 28, 31, 34, 40, 58, 59, 60], "descent": [19, 40], "get_constraint_upper_bound": 19, "upper": [19, 40, 43, 44, 45, 46, 47, 50, 54], "objective_with_barri": 19, "minimization_techniqu": 19, "barrier": 19, "larg": 19, "penalti": 19, "ani": 19, "violat": [19, 50], "build": [20, 41, 49, 50, 57], "load": [20, 22], "meta_inform": [21, 23, 24], "hold": [21, 23, 24], "full": [21, 23, 24, 65], "all": [21, 22, 23, 24, 27, 30, 32, 33, 35, 36, 37, 47, 50, 54], "column_nam": 22, "sensitive_column_nam": [22, 24], "label_column": [22, 24], "target": [22, 24], "label": [22, 24, 27, 28, 29, 31, 33, 34, 36, 43, 46], "from_csv": 22, "csv_file": 22, "creat": [22, 43, 46, 50, 65], "csv": 22, "filenam": 22, "you": [22, 50, 64, 66], "want": [22, 50, 62, 65, 66], "from_pickl": 22, "pkl_file": 22, "pickl": 22, "supervisedmodel": [27, 33, 64], "parent": [27, 30, 33, 35, 36, 46], "classif": [27, 28, 31, 34, 63], "librari": [27, 33, 35, 36, 58, 63, 64, 65], "onli": [27, 54, 63], "support": [27, 34, 48, 63], "binari": [27, 28, 31, 34], "accuraci": [27, 28, 31, 34], "x": [27, 28, 29, 30, 31, 33, 34, 36, 46], "y": [27, 28, 29, 31, 33, 34, 36, 46], "featur": [27, 28, 29, 31, 33, 34, 36, 43, 46, 63], "evaluate_statist": [27, 28, 29, 30, 31, 32, 33, 34, 37], "statistic_nam": [27, 28, 29, 30, 31, 32, 33, 34, 37], "data_dict": [27, 28, 29, 30, 31, 32, 33, 34, 37, 43, 46], "evalu": [27, 28, 29, 30, 31, 32, 33, 34, 37, 40, 43, 46, 50], "provid": [27, 28, 29, 30, 31, 32, 33, 34, 37, 48, 58, 59, 60, 63, 65], "statist": [27, 28, 29, 30, 31, 32, 33, 34, 37, 43, 48, 54, 58, 59, 60], "whole": [27, 28, 29, 30, 31, 32, 33, 34, 37, 50], "sampl": [27, 28, 29, 30, 31, 32, 33, 34, 37], "fpr": [27, 28, 31, 34, 43], "rate": [27, 28, 31, 34, 40], "over": [27, 28, 29, 30, 31, 32, 33, 34, 37, 54], "fit": [27, 28, 29, 31, 33, 34, 36], "nx1": [27, 28, 29, 33, 34, 36], "gradient_sample_logistic_loss": [27, 28, 31, 34], "logist": [27, 28, 31, 34], "w": [27, 28, 31, 34], "t": [27, 28, 31, 34, 43, 46], "perceptron": [27, 28, 31, 34], "sample_false_negative_r": [27, 28, 31, 34], "neg": [27, 28, 31, 34, 50], "being": [27, 28, 31, 34, 43], "fact": [27, 28, 31, 34], "wa": [27, 28, 31, 34, 46], "sample_false_positive_r": [27, 28, 31, 34], "sample_negative_r": [27, 28, 31, 34], "sample_positive_r": [27, 28, 31, 34], "normal": [27, 28, 30, 31, 34, 54, 58, 63, 65], "sample_from_statist": [27, 28, 29, 30, 31, 32, 33, 34, 37], "sample_logistic_loss": [27, 28, 31, 34], "sample_perceptron_loss": [27, 28, 31, 34], "fraction": [27, 28, 31, 34, 58, 59, 60], "incorrect": [27, 28, 31, 34], "vector_false_negative_r": [27, 28, 31, 34], "subject": [27, 28, 31, 34], "actual": [27, 28, 31, 34], "vector_false_positive_r": [27, 28, 31, 34], "vector_negative_r": [27, 28, 31, 34], "vector_positive_r": [27, 28, 31, 34], "vector_true_negative_r": [27, 28, 31, 34], "vector_true_positive_r": [27, 28, 31, 34], "vector_logistic_loss": [27, 28, 31, 34], "arrai": [27, 28, 31, 34, 40, 48], "classificationmodel": [28, 31, 34, 64], "implement": [28, 29, 31, 34, 40, 64, 65], "linear": [28, 29, 30, 34, 62], "classifi": 28, "regress": [28, 29, 31, 33, 46, 62, 63], "default_object": [28, 29, 30, 31, 37], "make": [28, 34, 50, 63], "regressionmodel": [29, 64], "mean": [29, 33, 46, 48, 63], "squar": [29, 33, 63], "error": [29, 33, 46, 63], "mean_squared_error": [29, 33], "sample_mean_error": [29, 33], "sample_mean_squared_error": [29, 33], "vector_mean_error": [29, 33], "vector_mean_squared_error": [29, 33], "environ": [30, 37, 58, 64], "rlmodel": [30, 37, 64], "mountaincar": [30, 64], "is_estim": 30, "unweight": [30, 32, 37], "import": [30, 32, 37, 62], "estim": [30, 32, 37, 43], "overrid": [30, 43, 46], "so": [30, 46], "can": [30, 50, 62, 65], "IS": [30, 32, 37], "apply_polici": [30, 37], "A": [30, 32, 37, 48, 58, 59, 60], "defin": [30, 48], "j_pi_new": [30, 32, 37], "get_p": 30, "probabilit": 30, "encod": 30, "sample_is_estim": [30, 32, 37], "vector_is_estim": [30, 32, 37], "have": [31, 48, 50, 63], "offset": 34, "upper_bound_funct": 40, "theta_init": 40, "lambda_init": 40, "5": 40, "alpha_theta": 40, "05": [40, 43, 46], "alpha_lamb": 40, "beta_veloc": 40, "9": 40, "beta_rmsprop": 40, "num_it": 40, "200": 40, "store_valu": 40, "verbos": 40, "adam": [40, 58, 59, 60], "lagrang": 40, "multipli": [40, 50], "term": 40, "lambda": 40, "exponenti": [40, 50], "decai": 40, "veloc": 40, "rmsprop": 40, "iter": [40, 46], "variou": 40, "quantiti": 40, "solut": [40, 50, 54], "dictionari": [40, 48], "about": [40, 50], "lower": [43, 44, 45, 46, 47, 50], "inf": [43, 45, 46], "conditional_column": [43, 46], "leaf": [43, 44, 45, 54], "measur": 43, "condit": [43, 46], "node_typ": [43, 44], "equal": [43, 50], "base_nod": 43, "delta": [43, 46, 50, 63], "share": [43, 46], "put": [43, 46], "measure_function_nam": 43, "repres": [43, 44, 45, 48, 50], "measure_funct": [43, 48], "oper": [43, 45, 64], "calculate_bound": [43, 46], "bound_method": [43, 46, 54, 58, 59, 60], "test": [43, 46, 51, 53, 54, 58, 59, 60, 63, 65], "calculate_data_forbound": [43, 46], "prepar": 43, "calculate_valu": [43, 46], "etc": [43, 45, 46], "compute_hc_lowerbound": [43, 46], "datas": [43, 46], "high": [43, 46, 63], "level": [43, 46, 50], "compute_hc_upper_and_lowerbound": [43, 46], "depend": [43, 46], "equival": [43, 46], "call": [43, 46, 63], "compute_hc_upperbound": [43, 46], "independ": [43, 46], "mask_datafram": [43, 46], "mask": [43, 46], "joint": [43, 46], "AND": [43, 46], "predict_hc_lowerbound": [43, 46], "predict_hc_upper_and_lowerbound": [43, 46], "predict_hc_upperbound": [43, 46], "zhat": [43, 46], "unbias": 43, "constant": [44, 50], "constant_nod": 44, "represent": [44, 45, 47, 48], "also": [44, 45, 47, 63, 65], "what": [44, 45, 47, 62, 65], "displai": [44, 45, 47, 50], "insid": [44, 45, 47], "box": [44, 45, 47], "visual": [44, 45, 47, 50, 66], "graph": [44, 45, 47, 50, 66], "intern": 45, "non": 45, "These": 45, "basenod": [46, 64], "custom": [46, 48, 65], "wise": 46, "differ": 46, "male": 46, "femal": 46, "point": 46, "et": 46, "al": 46, "scienc": [46, 65], "paper": [46, 65], "figur": 46, "sever": 46, "same": 46, "precalculate_data": 46, "preconfigur": 46, "doe": [46, 50, 63], "need": [46, 47, 50, 57, 62], "recalcul": 46, "through": [46, 50, 62], "y_i": 46, "y_hat_i": 46, "m": [46, 50], "y_j": 46, "y_hat_j": 46, "f": 46, "epsilon": 46, "There": [46, 50], "mai": [46, 65], "row": 46, "min": 46, "n_male": 46, "n_femal": 46, "index": 47, "child": [47, 48, 50, 58, 59, 60], "will_lower_bound": 47, "will_upper_bound": 47, "global": 48, "construct": 48, "short": 48, "hand": 48, "recogn": 48, "specif": [48, 56, 57, 58, 59, 60, 62, 64], "interfac": [48, 62, 63, 64], "custom_base_node_dict": 48, "node": [48, 50, 54, 64], "appear": [48, 50], "op_mapp": 48, "ast": [48, 50], "those": 48, "thei": [48, 65], "not_supported_op_mapp": 48, "Not": 48, "bounds_required_dict": 48, "specifi": [48, 50], "requir": [48, 50, 59, 62, 66], "If": [48, 50, 58, 59, 60, 64, 66], "ha": [48, 65], "two": [48, 50, 62], "children": [48, 50], "b": [48, 50], "boolean": 48, "4": 48, "like": [48, 50], "need_a_low": 48, "need_a_upp": 48, "need_b_low": 48, "need_b_upp": 48, "singl": 50, "maximum": [50, 54], "root": [50, 54], "via": 50, "assign": 50, "built": [50, 58, 59, 60], "constraint_str": 50, "express": 50, "n_node": 50, "total": 50, "n_base_nod": 50, "pr": 50, "more": 50, "onc": 50, "contribut": 50, "base_node_dict": 50, "track": 50, "uniqu": 50, "been": 50, "alreadi": 50, "help": 50, "handl": 50, "case": 50, "duplic": 50, "node_fonts": 50, "fontsiz": 50, "graphviz": [50, 66], "_ab": 50, "absolut": 50, "interv": [50, 54], "_add": 50, "_assign_bounds_help": 50, "lower_need": 50, "upper_need": 50, "travers": 50, "_assign_deltas_help": 50, "weight_method": 50, "how": 50, "_ast2pt_nod": 50, "ast_nod": 50, "_ast_tree_help": 50, "recurs": 50, "_div": 50, "divid": 50, "_evaluator_help": 50, "_exp": 50, "_max": 50, "_min": 50, "minimum": [50, 54], "_mult": 50, "_pow": 50, "pow": 50, "_propagate_valu": 50, "propag": [50, 54], "_propagator_help": 50, "_protect_nan": 50, "bound_typ": 50, "nan": 50, "infin": 50, "postit": 50, "_sub": 50, "subract": 50, "assign_bounds_need": 50, "breadth": 50, "search": 50, "decid": 50, "eventu": 50, "necessari": 50, "becaus": 50, "end": 50, "care": 50, "assign_delta": 50, "split": [50, 65], "among": 50, "create_from_ast": 50, "structur": 50, "mathemat": 50, "syntax": 50, "evaluate_constraint": 50, "itself": 50, "postord": 50, "logic": 50, "make_viz": 50, "titl": 50, "diagram": 50, "make_viz_help": 50, "edg": 50, "digraph": 50, "propagate_bound": 50, "reset_base_node_dict": 50, "reset_data": 50, "cach": 50, "less": 50, "frequent": 50, "relev": 54, "normalize_return": [54, 58], "min_return": 54, "max_return": 54, "candidate_solut": 54, "ttest": [54, 58, 59, 60], "loop": 54, "found": 54, "spec": [56, 64], "obect": 56, "model_class": [58, 59, 60], "frac_data_in_safeti": [58, 59, 60], "initial_solution_fn": [58, 59, 60], "rl_environment_obj": 58, "use_builtin_primary_gradient_fn": [58, 59, 60], "custom_primary_gradient_fn": [58, 59, 60], "optimization_hyperparam": [58, 59, 60], "regularization_hyperparam": [58, 59, 60], "instanc": [58, 59, 60], "remain": [58, 59, 60], "exist": [58, 59, 60], "autograd": [58, 59, 60], "back": [58, 59, 60], "builtin": [58, 59, 60], "hyperparamet": [58, 59, 60], "regular": [58, 59, 60], "usable_opt_dict": [58, 59, 60], "show": [58, 59, 60], "accept": [58, 59, 60], "techniqu": [58, 59, 60], "let": 62, "exampl": [62, 63], "ai": [62, 65], "tutori": 62, "go": 62, "acquaint": 62, "mani": [62, 65], "most": 62, "piec": 62, "libari": 62, "tell": 62, "cli": 62, "look": 62, "document": 62, "cli_supervis": [62, 64], "argument": 62, "download": 62, "sourc": [62, 64], "code": [62, 64], "repositori": 62, "github": [62, 64], "other": [62, 63], "option": 62, "criteria": 63, "fair": 63, "user": [63, 65], "ensur": 63, "met": 63, "while": 63, "simultan": 63, "tbd": 63, "threshold": [63, 65], "often": [63, 65], "simpli": 63, "enforc": [63, 65], "interact": 63, "paradigm": 63, "adopt": 63, "reinforc": 63, "problem": [63, 65], "design": 63, "In": [63, 65], "against": 63, "should": 63, "discrimin": 63, "gender": 63, "race": 63, "common": 63, "sometim": [63, 65], "protect": 63, "pertain": 63, "sub": 63, "within": 63, "welcom": 64, "core": 64, "host": 64, "complet": [64, 65], "new": 64, "overview": 64, "api": [64, 65], "gridworld3x3": 64, "increment_count": 64, "fourierbasi": 64, "linear_softmax": 64, "candidate_select": 64, "candidateselect": 64, "datasetload": 64, "rldataset": 64, "superviseddataset": 64, "linearclassifiermodel": 64, "linearregressionmodel": 64, "linearsoftmaxmodel": 64, "logisticregressionmodel": 64, "sgdclassifiermodel": 64, "tabularsoftmaxmodel": 64, "gradient_descent_adam": 64, "constantnod": 64, "internalnod": 64, "medcustombasenod": 64, "safety_test": 64, "safetytest": 64, "seldonian_algorithm": 64, "rlspec": 64, "supervisedspec": 64, "run_interfac": 64, "instal": 64, "glossari": 64, "focu": 65, "sa": 65, "rather": 65, "descript": 65, "For": 65, "detail": 65, "umass": 65, "page": 65, "ml": 65, "valid": 65, "three": 65, "below": 65, "interpret": 65, "final": 65, "its": 65, "entireti": 65, "modifi": 65, "own": 65, "script": 65, "refer": 65, "explain": 65, "hyperparam": 65, "To": 66, "pip": 66, "venv": 66, "wide": 66}, "objects": {"": [[0, 0, 0, "-", "interface"], [3, 0, 0, "-", "seldonian"]], "interface": [[1, 0, 0, "-", "cli_supervised"]], "interface.cli_supervised": [[2, 1, 1, "", "run_interface"]], "seldonian": [[4, 0, 0, "-", "RL"], [16, 0, 0, "-", "candidate_selection"], [20, 0, 0, "-", "dataset"], [25, 0, 0, "-", "models"], [38, 0, 0, "-", "optimizers"], [41, 0, 0, "-", "parse_tree"], [51, 0, 0, "-", "safety_test"], [55, 0, 0, "-", "seldonian_algorithm"], [57, 0, 0, "-", "spec"]], "seldonian.RL": [[5, 0, 0, "-", "environments"]], "seldonian.RL.environments": [[6, 0, 0, "-", "gridworld3x3"], [8, 0, 0, "-", "mountaincar"]], "seldonian.RL.environments.gridworld3x3": [[7, 2, 1, "", "Environment"]], "seldonian.RL.environments.gridworld3x3.Environment": [[7, 3, 1, "", "__init__"], [7, 3, 1, "", "__repr__"], [7, 3, 1, "", "_arg"], [7, 3, 1, "", "_denom"], [7, 3, 1, "", "calc_J"], [7, 3, 1, "", "generate_data"], [7, 3, 1, "", "generate_episode"], [7, 3, 1, "", "generate_episodes_par"], [7, 3, 1, "", "pi"], [7, 3, 1, "", "reset"], [7, 3, 1, "", "take_step"]], "seldonian.RL.environments.mountaincar": [[9, 2, 1, "", "Basis"], [10, 2, 1, "", "Environment"], [11, 2, 1, "", "FourierBasis"], [12, 2, 1, "", "Linear_Softmax"], [13, 2, 1, "", "Mountaincar"], [14, 2, 1, "", "Policy"], [15, 1, 1, "", "increment_counter"]], "seldonian.RL.environments.mountaincar.Basis": [[9, 3, 1, "", "__init__"], [9, 3, 1, "", "__repr__"]], "seldonian.RL.environments.mountaincar.Environment": [[10, 3, 1, "", "R"], [10, 3, 1, "", "__init__"], [10, 3, 1, "", "__repr__"], [10, 3, 1, "", "calc_J_from_df"], [10, 3, 1, "", "generate_data"], [10, 3, 1, "", "nextState"], [10, 3, 1, "", "reset"], [10, 3, 1, "", "step"], [10, 3, 1, "", "terminal"]], "seldonian.RL.environments.mountaincar.FourierBasis": [[11, 3, 1, "", "__init__"], [11, 3, 1, "", "__repr__"]], "seldonian.RL.environments.mountaincar.Linear_Softmax": [[12, 3, 1, "", "__init__"], [12, 3, 1, "", "__repr__"], [12, 3, 1, "", "get_params"], [12, 3, 1, "", "set_params"]], "seldonian.RL.environments.mountaincar.Mountaincar": [[13, 3, 1, "", "R"], [13, 3, 1, "", "__init__"], [13, 3, 1, "", "__repr__"], [13, 3, 1, "", "nextState"], [13, 3, 1, "", "reset"], [13, 3, 1, "", "step"], [13, 3, 1, "", "terminal"]], "seldonian.RL.environments.mountaincar.Policy": [[14, 3, 1, "", "__init__"], [14, 3, 1, "", "__repr__"], [14, 3, 1, "", "get_params"], [14, 3, 1, "", "set_params"]], "seldonian.candidate_selection": [[18, 0, 0, "-", "candidate_selection"]], "seldonian.candidate_selection.candidate_selection": [[19, 2, 1, "", "CandidateSelection"]], "seldonian.candidate_selection.candidate_selection.CandidateSelection": [[19, 3, 1, "", "__init__"], [19, 3, 1, "", "__repr__"], [19, 3, 1, "", "evaluate_primary_objective"], [19, 3, 1, "", "get_constraint_upper_bound"], [19, 3, 1, "", "objective_with_barrier"], [19, 3, 1, "", "run"]], "seldonian.dataset": [[21, 2, 1, "", "DataSet"], [22, 2, 1, "", "DataSetLoader"], [23, 2, 1, "", "RLDataSet"], [24, 2, 1, "", "SupervisedDataSet"]], "seldonian.dataset.DataSet": [[21, 3, 1, "", "__init__"], [21, 3, 1, "", "__repr__"]], "seldonian.dataset.DataSetLoader": [[22, 3, 1, "", "__init__"], [22, 3, 1, "", "__repr__"], [22, 3, 1, "", "from_csv"], [22, 3, 1, "", "from_pickle"]], "seldonian.dataset.RLDataSet": [[23, 3, 1, "", "__init__"], [23, 3, 1, "", "__repr__"]], "seldonian.dataset.SupervisedDataSet": [[24, 3, 1, "", "__init__"], [24, 3, 1, "", "__repr__"]], "seldonian.models": [[26, 0, 0, "-", "model"]], "seldonian.models.model": [[27, 2, 1, "", "ClassificationModel"], [28, 2, 1, "", "LinearClassifierModel"], [29, 2, 1, "", "LinearRegressionModel"], [30, 2, 1, "", "LinearSoftmaxModel"], [31, 2, 1, "", "LogisticRegressionModel"], [32, 2, 1, "", "RLModel"], [33, 2, 1, "", "RegressionModel"], [34, 2, 1, "", "SGDClassifierModel"], [35, 2, 1, "", "SeldonianModel"], [36, 2, 1, "", "SupervisedModel"], [37, 2, 1, "", "TabularSoftmaxModel"]], "seldonian.models.model.ClassificationModel": [[27, 3, 1, "", "__init__"], [27, 3, 1, "", "__repr__"], [27, 3, 1, "", "accuracy"], [27, 3, 1, "", "evaluate_statistic"], [27, 3, 1, "", "fit"], [27, 3, 1, "", "gradient_sample_logistic_loss"], [27, 3, 1, "", "sample_False_Negative_Rate"], [27, 3, 1, "", "sample_False_Positive_Rate"], [27, 3, 1, "", "sample_Negative_Rate"], [27, 3, 1, "", "sample_Positive_Rate"], [27, 3, 1, "", "sample_from_statistic"], [27, 3, 1, "", "sample_logistic_loss"], [27, 3, 1, "", "sample_perceptron_loss"], [27, 3, 1, "", "vector_False_Negative_Rate"], [27, 3, 1, "", "vector_False_Positive_Rate"], [27, 3, 1, "", "vector_Negative_Rate"], [27, 3, 1, "", "vector_Positive_Rate"], [27, 3, 1, "", "vector_True_Negative_Rate"], [27, 3, 1, "", "vector_True_Positive_Rate"], [27, 3, 1, "", "vector_logistic_loss"]], "seldonian.models.model.LinearClassifierModel": [[28, 3, 1, "", "__init__"], [28, 3, 1, "", "__repr__"], [28, 3, 1, "", "accuracy"], [28, 3, 1, "", "default_objective"], [28, 3, 1, "", "evaluate_statistic"], [28, 3, 1, "", "fit"], [28, 3, 1, "", "gradient_sample_logistic_loss"], [28, 3, 1, "", "predict"], [28, 3, 1, "", "sample_False_Negative_Rate"], [28, 3, 1, "", "sample_False_Positive_Rate"], [28, 3, 1, "", "sample_Negative_Rate"], [28, 3, 1, "", "sample_Positive_Rate"], [28, 3, 1, "", "sample_from_statistic"], [28, 3, 1, "", "sample_logistic_loss"], [28, 3, 1, "", "sample_perceptron_loss"], [28, 3, 1, "", "vector_False_Negative_Rate"], [28, 3, 1, "", "vector_False_Positive_Rate"], [28, 3, 1, "", "vector_Negative_Rate"], [28, 3, 1, "", "vector_Positive_Rate"], [28, 3, 1, "", "vector_True_Negative_Rate"], [28, 3, 1, "", "vector_True_Positive_Rate"], [28, 3, 1, "", "vector_logistic_loss"]], "seldonian.models.model.LinearRegressionModel": [[29, 3, 1, "", "__init__"], [29, 3, 1, "", "__repr__"], [29, 3, 1, "", "default_objective"], [29, 3, 1, "", "evaluate_statistic"], [29, 3, 1, "", "fit"], [29, 3, 1, "", "predict"], [29, 3, 1, "", "sample_Mean_Error"], [29, 3, 1, "", "sample_Mean_Squared_Error"], [29, 3, 1, "", "sample_from_statistic"], [29, 3, 1, "", "vector_Mean_Error"], [29, 3, 1, "", "vector_Mean_Squared_Error"]], "seldonian.models.model.LinearSoftmaxModel": [[30, 3, 1, "", "IS_estimate"], [30, 3, 1, "", "__init__"], [30, 3, 1, "", "__repr__"], [30, 3, 1, "", "apply_policy"], [30, 3, 1, "", "default_objective"], [30, 3, 1, "", "evaluate_statistic"], [30, 3, 1, "", "get_p"], [30, 3, 1, "", "sample_IS_estimate"], [30, 3, 1, "", "sample_from_statistic"], [30, 3, 1, "", "vector_IS_estimate"]], "seldonian.models.model.LogisticRegressionModel": [[31, 3, 1, "", "__init__"], [31, 3, 1, "", "__repr__"], [31, 3, 1, "", "accuracy"], [31, 3, 1, "", "default_objective"], [31, 3, 1, "", "evaluate_statistic"], [31, 3, 1, "", "fit"], [31, 3, 1, "", "gradient_sample_logistic_loss"], [31, 3, 1, "", "predict"], [31, 3, 1, "", "sample_False_Negative_Rate"], [31, 3, 1, "", "sample_False_Positive_Rate"], [31, 3, 1, "", "sample_Negative_Rate"], [31, 3, 1, "", "sample_Positive_Rate"], [31, 3, 1, "", "sample_from_statistic"], [31, 3, 1, "", "sample_logistic_loss"], [31, 3, 1, "", "sample_perceptron_loss"], [31, 3, 1, "", "vector_False_Negative_Rate"], [31, 3, 1, "", "vector_False_Positive_Rate"], [31, 3, 1, "", "vector_Negative_Rate"], [31, 3, 1, "", "vector_Positive_Rate"], [31, 3, 1, "", "vector_True_Negative_Rate"], [31, 3, 1, "", "vector_True_Positive_Rate"], [31, 3, 1, "", "vector_logistic_loss"]], "seldonian.models.model.RLModel": [[32, 3, 1, "", "__init__"], [32, 3, 1, "", "__repr__"], [32, 3, 1, "", "evaluate_statistic"], [32, 3, 1, "", "sample_IS_estimate"], [32, 3, 1, "", "sample_from_statistic"], [32, 3, 1, "", "vector_IS_estimate"]], "seldonian.models.model.RegressionModel": [[33, 3, 1, "", "__init__"], [33, 3, 1, "", "__repr__"], [33, 3, 1, "", "evaluate_statistic"], [33, 3, 1, "", "fit"], [33, 3, 1, "", "sample_Mean_Error"], [33, 3, 1, "", "sample_Mean_Squared_Error"], [33, 3, 1, "", "sample_from_statistic"], [33, 3, 1, "", "vector_Mean_Error"], [33, 3, 1, "", "vector_Mean_Squared_Error"]], "seldonian.models.model.SGDClassifierModel": [[34, 3, 1, "", "__init__"], [34, 3, 1, "", "__repr__"], [34, 3, 1, "", "accuracy"], [34, 3, 1, "", "evaluate_statistic"], [34, 3, 1, "", "fit"], [34, 3, 1, "", "gradient_sample_logistic_loss"], [34, 3, 1, "", "predict"], [34, 3, 1, "", "sample_False_Negative_Rate"], [34, 3, 1, "", "sample_False_Positive_Rate"], [34, 3, 1, "", "sample_Negative_Rate"], [34, 3, 1, "", "sample_Positive_Rate"], [34, 3, 1, "", "sample_from_statistic"], [34, 3, 1, "", "sample_logistic_loss"], [34, 3, 1, "", "sample_perceptron_loss"], [34, 3, 1, "", "vector_False_Negative_Rate"], [34, 3, 1, "", "vector_False_Positive_Rate"], [34, 3, 1, "", "vector_Negative_Rate"], [34, 3, 1, "", "vector_Positive_Rate"], [34, 3, 1, "", "vector_True_Negative_Rate"], [34, 3, 1, "", "vector_True_Positive_Rate"], [34, 3, 1, "", "vector_logistic_loss"]], "seldonian.models.model.SeldonianModel": [[35, 3, 1, "", "__init__"], [35, 3, 1, "", "__repr__"]], "seldonian.models.model.SupervisedModel": [[36, 3, 1, "", "__init__"], [36, 3, 1, "", "__repr__"], [36, 3, 1, "", "fit"]], "seldonian.models.model.TabularSoftmaxModel": [[37, 3, 1, "", "__init__"], [37, 3, 1, "", "__repr__"], [37, 3, 1, "", "_arg"], [37, 3, 1, "", "_denom"], [37, 3, 1, "", "apply_policy"], [37, 3, 1, "", "default_objective"], [37, 3, 1, "", "evaluate_statistic"], [37, 3, 1, "", "sample_IS_estimate"], [37, 3, 1, "", "sample_from_statistic"], [37, 3, 1, "", "vector_IS_estimate"]], "seldonian.optimizers": [[39, 0, 0, "-", "gradient_descent"]], "seldonian.optimizers.gradient_descent": [[40, 1, 1, "", "gradient_descent_adam"]], "seldonian.parse_tree": [[42, 0, 0, "-", "nodes"], [48, 0, 0, "-", "operators"], [49, 0, 0, "-", "parse_tree"]], "seldonian.parse_tree.nodes": [[43, 2, 1, "", "BaseNode"], [44, 2, 1, "", "ConstantNode"], [45, 2, 1, "", "InternalNode"], [46, 2, 1, "", "MEDCustomBaseNode"], [47, 2, 1, "", "Node"]], "seldonian.parse_tree.nodes.BaseNode": [[43, 3, 1, "", "__init__"], [43, 3, 1, "", "__repr__"], [43, 3, 1, "", "calculate_bounds"], [43, 3, 1, "", "calculate_data_forbound"], [43, 3, 1, "", "calculate_value"], [43, 3, 1, "", "compute_HC_lowerbound"], [43, 3, 1, "", "compute_HC_upper_and_lowerbound"], [43, 3, 1, "", "compute_HC_upperbound"], [43, 3, 1, "", "mask_dataframe"], [43, 3, 1, "", "predict_HC_lowerbound"], [43, 3, 1, "", "predict_HC_upper_and_lowerbound"], [43, 3, 1, "", "predict_HC_upperbound"], [43, 3, 1, "", "zhat"]], "seldonian.parse_tree.nodes.ConstantNode": [[44, 3, 1, "", "__init__"], [44, 3, 1, "", "__repr__"]], "seldonian.parse_tree.nodes.InternalNode": [[45, 3, 1, "", "__init__"], [45, 3, 1, "", "__repr__"]], "seldonian.parse_tree.nodes.MEDCustomBaseNode": [[46, 3, 1, "", "__init__"], [46, 3, 1, "", "__repr__"], [46, 3, 1, "", "calculate_bounds"], [46, 3, 1, "", "calculate_data_forbound"], [46, 3, 1, "", "calculate_value"], [46, 3, 1, "", "compute_HC_lowerbound"], [46, 3, 1, "", "compute_HC_upper_and_lowerbound"], [46, 3, 1, "", "compute_HC_upperbound"], [46, 3, 1, "", "mask_dataframe"], [46, 3, 1, "", "precalculate_data"], [46, 3, 1, "", "predict_HC_lowerbound"], [46, 3, 1, "", "predict_HC_upper_and_lowerbound"], [46, 3, 1, "", "predict_HC_upperbound"], [46, 3, 1, "", "zhat"]], "seldonian.parse_tree.nodes.Node": [[47, 3, 1, "", "__init__"], [47, 3, 1, "", "__repr__"]], "seldonian.parse_tree.operators": [[48, 4, 1, "", "bounds_required_dict"], [48, 4, 1, "", "custom_base_node_dict"], [48, 4, 1, "", "measure_functions"], [48, 4, 1, "", "not_supported_op_mapper"], [48, 4, 1, "", "op_mapper"]], "seldonian.parse_tree.parse_tree": [[50, 2, 1, "", "ParseTree"]], "seldonian.parse_tree.parse_tree.ParseTree": [[50, 3, 1, "", "__init__"], [50, 3, 1, "", "__repr__"], [50, 3, 1, "", "_abs"], [50, 3, 1, "", "_add"], [50, 3, 1, "", "_assign_bounds_helper"], [50, 3, 1, "", "_assign_deltas_helper"], [50, 3, 1, "", "_ast2pt_node"], [50, 3, 1, "", "_ast_tree_helper"], [50, 3, 1, "", "_div"], [50, 3, 1, "", "_evaluator_helper"], [50, 3, 1, "", "_exp"], [50, 3, 1, "", "_max"], [50, 3, 1, "", "_min"], [50, 3, 1, "", "_mult"], [50, 3, 1, "", "_pow"], [50, 3, 1, "", "_propagate_value"], [50, 3, 1, "", "_propagator_helper"], [50, 3, 1, "", "_protect_nan"], [50, 3, 1, "", "_sub"], [50, 3, 1, "", "assign_bounds_needed"], [50, 3, 1, "", "assign_deltas"], [50, 3, 1, "", "create_from_ast"], [50, 3, 1, "", "evaluate_constraint"], [50, 3, 1, "", "make_viz"], [50, 3, 1, "", "make_viz_helper"], [50, 3, 1, "", "propagate"], [50, 3, 1, "", "propagate_bounds"], [50, 3, 1, "", "reset_base_node_dict"]], "seldonian.safety_test": [[53, 0, 0, "-", "safety_test"]], "seldonian.safety_test.safety_test": [[54, 2, 1, "", "SafetyTest"]], "seldonian.safety_test.safety_test.SafetyTest": [[54, 3, 1, "", "__init__"], [54, 3, 1, "", "__repr__"], [54, 3, 1, "", "run"]], "seldonian.seldonian_algorithm": [[56, 1, 1, "", "seldonian_algorithm"]], "seldonian.spec": [[58, 2, 1, "", "RLSpec"], [59, 2, 1, "", "Spec"], [60, 2, 1, "", "SupervisedSpec"]], "seldonian.spec.RLSpec": [[58, 3, 1, "", "__init__"], [58, 3, 1, "", "__repr__"]], "seldonian.spec.Spec": [[59, 3, 1, "", "__init__"], [59, 3, 1, "", "__repr__"]], "seldonian.spec.SupervisedSpec": [[60, 3, 1, "", "__init__"], [60, 3, 1, "", "__repr__"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "data", "Python data"]}, "titleterms": {"interfac": [0, 1, 2, 65], "cli_supervis": [1, 2], "run_interfac": 2, "seldonian": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 64], "rl": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "environ": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "gridworld3x3": [6, 7], "mountaincar": [8, 9, 10, 11, 12, 13, 14, 15], "basi": 9, "fourierbasi": 11, "linear_softmax": 12, "polici": 14, "increment_count": 15, "candidate_select": [16, 17, 18, 19], "candidateselect": [17, 19], "dataset": [20, 21, 22, 23, 24, 65], "datasetload": 22, "rldataset": 23, "superviseddataset": 24, "model": [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37], "classificationmodel": 27, "linearclassifiermodel": 28, "linearregressionmodel": 29, "linearsoftmaxmodel": 30, "logisticregressionmodel": 31, "rlmodel": 32, "regressionmodel": 33, "sgdclassifiermodel": 34, "seldonianmodel": 35, "supervisedmodel": 36, "tabularsoftmaxmodel": 37, "optim": [38, 39, 40], "gradient_desc": [39, 40], "gradient_descent_adam": 40, "parse_tre": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50], "node": [42, 43, 44, 45, 46, 47], "basenod": 43, "constantnod": 44, "internalnod": 45, "medcustombasenod": 46, "oper": 48, "parsetre": 50, "safety_test": [51, 52, 53, 54], "safetytest": [52, 54], "seldonian_algorithm": [55, 56], "spec": [57, 58, 59, 60, 65], "rlspec": 58, "supervisedspec": 60, "api": 61, "get": 62, "start": 62, "glossari": 63, "engin": 64, "document": 64, "tabl": 64, "content": 64, "overview": 65, "pars": 65, "tree": 65, "specif": 65, "object": 65, "candid": 65, "select": 65, "usag": 66, "instal": 66}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 56}})