Search.setIndex({"docnames": ["_autosummary/seldonian", "_autosummary/seldonian.RL", "_autosummary/seldonian.RL.Agents", "_autosummary/seldonian.RL.Agents.Agent", "_autosummary/seldonian.RL.Agents.Agent.Agent", "_autosummary/seldonian.RL.Agents.Bases", "_autosummary/seldonian.RL.Agents.Bases.Fourier", "_autosummary/seldonian.RL.Agents.Bases.Fourier.Fourier", "_autosummary/seldonian.RL.Agents.Discrete_Random_Agent", "_autosummary/seldonian.RL.Agents.Discrete_Random_Agent.Discrete_Random_Agent", "_autosummary/seldonian.RL.Agents.Function_Approximators", "_autosummary/seldonian.RL.Agents.Function_Approximators.Function_Approximator", "_autosummary/seldonian.RL.Agents.Function_Approximators.Function_Approximator.Function_Approximator", "_autosummary/seldonian.RL.Agents.Function_Approximators.Linear_FA", "_autosummary/seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_FA", "_autosummary/seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_state_action_value_FA", "_autosummary/seldonian.RL.Agents.Function_Approximators.Table", "_autosummary/seldonian.RL.Agents.Function_Approximators.Table.Q_Table", "_autosummary/seldonian.RL.Agents.Function_Approximators.Table.Table", "_autosummary/seldonian.RL.Agents.Function_Approximators.Table.construct_Q_Table_From_Env_Description", "_autosummary/seldonian.RL.Agents.Parameterized_non_learning_softmax_agent", "_autosummary/seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.Parameterized_non_learning_softmax_agent", "_autosummary/seldonian.RL.Agents.Policies", "_autosummary/seldonian.RL.Agents.Policies.Policy", "_autosummary/seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy", "_autosummary/seldonian.RL.Agents.Policies.Policy.Policy", "_autosummary/seldonian.RL.Agents.Policies.Softmax", "_autosummary/seldonian.RL.Agents.Policies.Softmax.Softmax", "_autosummary/seldonian.RL.Agents.keyboard_gridworld", "_autosummary/seldonian.RL.Agents.keyboard_gridworld.Keyboard_gridworld", "_autosummary/seldonian.RL.Agents.mountain_car_rough_solution", "_autosummary/seldonian.RL.Agents.mountain_car_rough_solution.Mountain_car_rough_solution", "_autosummary/seldonian.RL.Env_Description", "_autosummary/seldonian.RL.Env_Description.Env_Description", "_autosummary/seldonian.RL.Env_Description.Env_Description.Env_Description", "_autosummary/seldonian.RL.Env_Description.Env_Description.check_space_type", "_autosummary/seldonian.RL.Env_Description.Spaces", "_autosummary/seldonian.RL.Env_Description.Spaces.Continuous_Space", "_autosummary/seldonian.RL.Env_Description.Spaces.Discrete_Space", "_autosummary/seldonian.RL.RL_model", "_autosummary/seldonian.RL.RL_model.RL_model", "_autosummary/seldonian.RL.environments", "_autosummary/seldonian.RL.environments.Environment", "_autosummary/seldonian.RL.environments.Environment.Environment", "_autosummary/seldonian.RL.environments.gridworld", "_autosummary/seldonian.RL.environments.gridworld.Gridworld", "_autosummary/seldonian.RL.environments.mountaincar", "_autosummary/seldonian.RL.environments.mountaincar.Mountaincar", "_autosummary/seldonian.RL.environments.n_step_mountaincar", "_autosummary/seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar", "_autosummary/seldonian.RL.hyperparams_and_settings", "_autosummary/seldonian.RL.hyperparams_and_settings.define_hyperparameter_and_setting_dict", "_autosummary/seldonian.candidate_selection", "_autosummary/seldonian.candidate_selection.candidate_selection", "_autosummary/seldonian.candidate_selection.candidate_selection.CandidateSelection", "_autosummary/seldonian.dataset", "_autosummary/seldonian.dataset.DataSet", "_autosummary/seldonian.dataset.DataSetLoader", "_autosummary/seldonian.dataset.Episode", "_autosummary/seldonian.dataset.RLDataSet", "_autosummary/seldonian.dataset.SupervisedDataSet", "_autosummary/seldonian.models", "_autosummary/seldonian.models.models", "_autosummary/seldonian.models.models.BoundedLinearRegressionModel", "_autosummary/seldonian.models.models.ClassificationModel", "_autosummary/seldonian.models.models.DummyClassifierModel", "_autosummary/seldonian.models.models.LinearRegressionModel", "_autosummary/seldonian.models.models.LogisticRegressionModel", "_autosummary/seldonian.models.models.RandomClassifierModel", "_autosummary/seldonian.models.models.RegressionModel", "_autosummary/seldonian.models.models.SeldonianModel", "_autosummary/seldonian.models.models.SupervisedModel", "_autosummary/seldonian.models.objectives", "_autosummary/seldonian.models.objectives.False_Negative_Rate", "_autosummary/seldonian.models.objectives.False_Positive_Rate", "_autosummary/seldonian.models.objectives.IS_estimate", "_autosummary/seldonian.models.objectives.Mean_Error", "_autosummary/seldonian.models.objectives.Mean_Squared_Error", "_autosummary/seldonian.models.objectives.Negative_Rate", "_autosummary/seldonian.models.objectives.Positive_Rate", "_autosummary/seldonian.models.objectives.True_Negative_Rate", "_autosummary/seldonian.models.objectives.True_Positive_Rate", "_autosummary/seldonian.models.objectives.evaluate_statistic", "_autosummary/seldonian.models.objectives.gradient_Bounded_Squared_Error", "_autosummary/seldonian.models.objectives.gradient_Mean_Squared_Error", "_autosummary/seldonian.models.objectives.gradient_logistic_loss", "_autosummary/seldonian.models.objectives.logistic_loss", "_autosummary/seldonian.models.objectives.sample_from_statistic", "_autosummary/seldonian.models.objectives.vector_Error", "_autosummary/seldonian.models.objectives.vector_False_Negative_Rate", "_autosummary/seldonian.models.objectives.vector_False_Positive_Rate", "_autosummary/seldonian.models.objectives.vector_IS_estimate", "_autosummary/seldonian.models.objectives.vector_Negative_Rate", "_autosummary/seldonian.models.objectives.vector_Positive_Rate", "_autosummary/seldonian.models.objectives.vector_Squared_Error", "_autosummary/seldonian.models.objectives.vector_True_Negative_Rate", "_autosummary/seldonian.models.objectives.vector_True_Positive_Rate", "_autosummary/seldonian.models.objectives.vector_logistic_loss", "_autosummary/seldonian.models.objectives.vector_weighted_loss", "_autosummary/seldonian.models.objectives.weighted_loss", "_autosummary/seldonian.optimizers", "_autosummary/seldonian.optimizers.gradient_descent", "_autosummary/seldonian.optimizers.gradient_descent.gradient_descent_adam", "_autosummary/seldonian.optimizers.gradient_descent.setup_gradients", "_autosummary/seldonian.parse_tree", "_autosummary/seldonian.parse_tree.nodes", "_autosummary/seldonian.parse_tree.nodes.BaseNode", "_autosummary/seldonian.parse_tree.nodes.CVaRSQeBaseNode", "_autosummary/seldonian.parse_tree.nodes.ConstantNode", "_autosummary/seldonian.parse_tree.nodes.InternalNode", "_autosummary/seldonian.parse_tree.nodes.MEDCustomBaseNode", "_autosummary/seldonian.parse_tree.nodes.Node", "_autosummary/seldonian.parse_tree.operators", "_autosummary/seldonian.parse_tree.parse_tree", "_autosummary/seldonian.parse_tree.parse_tree.ParseTree", "_autosummary/seldonian.parse_tree.parse_tree.make_parse_trees_from_constraints", "_autosummary/seldonian.safety_test", "_autosummary/seldonian.safety_test.safety_test", "_autosummary/seldonian.safety_test.safety_test.SafetyTest", "_autosummary/seldonian.seldonian_algorithm", "_autosummary/seldonian.seldonian_algorithm.SeldonianAlgorithm", "_autosummary/seldonian.spec", "_autosummary/seldonian.spec.RLSpec", "_autosummary/seldonian.spec.Spec", "_autosummary/seldonian.spec.SupervisedSpec", "_autosummary/seldonian.spec.createRLSpec", "_autosummary/seldonian.spec.createSupervisedSpec", "_autosummary/seldonian.utils", "_autosummary/seldonian.utils.RL_utils", "_autosummary/seldonian.utils.RL_utils.argmax_multi", "_autosummary/seldonian.utils.RL_utils.clamp", "_autosummary/seldonian.utils.RL_utils.error", "_autosummary/seldonian.utils.io_utils", "_autosummary/seldonian.utils.io_utils.dir_path", "_autosummary/seldonian.utils.io_utils.load_json", "_autosummary/seldonian.utils.io_utils.load_pickle", "_autosummary/seldonian.utils.io_utils.load_supervised_metadata", "_autosummary/seldonian.utils.io_utils.save_json", "_autosummary/seldonian.utils.io_utils.save_pickle", "_autosummary/seldonian.utils.io_utils.yes_or_no_input", "_autosummary/seldonian.utils.plot_utils", "_autosummary/seldonian.utils.plot_utils.plot_gradient_descent", "_autosummary/seldonian.utils.stats_utils", "_autosummary/seldonian.utils.stats_utils.generate_data", "_autosummary/seldonian.utils.stats_utils.stddev", "_autosummary/seldonian.utils.stats_utils.tinv", "_autosummary/seldonian.utils.stats_utils.weighted_sum_gamma", "_autosummary/seldonian.utils.tutorial_utils", "_autosummary/seldonian.utils.tutorial_utils.generate_clipped_data", "_autosummary/seldonian.utils.tutorial_utils.generate_data", "_autosummary/seldonian.utils.tutorial_utils.make_synthetic_regression_dataset", "_autosummary/seldonian.warnings", "_autosummary/seldonian.warnings.custom_warnings", "_autosummary/seldonian.warnings.custom_warnings.custom_formatwarning", "api", "getting_started", "index", "overview"], "filenames": ["_autosummary/seldonian.rst", "_autosummary/seldonian.RL.rst", "_autosummary/seldonian.RL.Agents.rst", "_autosummary/seldonian.RL.Agents.Agent.rst", "_autosummary/seldonian.RL.Agents.Agent.Agent.rst", "_autosummary/seldonian.RL.Agents.Bases.rst", "_autosummary/seldonian.RL.Agents.Bases.Fourier.rst", "_autosummary/seldonian.RL.Agents.Bases.Fourier.Fourier.rst", "_autosummary/seldonian.RL.Agents.Discrete_Random_Agent.rst", "_autosummary/seldonian.RL.Agents.Discrete_Random_Agent.Discrete_Random_Agent.rst", "_autosummary/seldonian.RL.Agents.Function_Approximators.rst", "_autosummary/seldonian.RL.Agents.Function_Approximators.Function_Approximator.rst", "_autosummary/seldonian.RL.Agents.Function_Approximators.Function_Approximator.Function_Approximator.rst", "_autosummary/seldonian.RL.Agents.Function_Approximators.Linear_FA.rst", "_autosummary/seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_FA.rst", "_autosummary/seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_state_action_value_FA.rst", "_autosummary/seldonian.RL.Agents.Function_Approximators.Table.rst", "_autosummary/seldonian.RL.Agents.Function_Approximators.Table.Q_Table.rst", "_autosummary/seldonian.RL.Agents.Function_Approximators.Table.Table.rst", "_autosummary/seldonian.RL.Agents.Function_Approximators.Table.construct_Q_Table_From_Env_Description.rst", "_autosummary/seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.rst", "_autosummary/seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.Parameterized_non_learning_softmax_agent.rst", "_autosummary/seldonian.RL.Agents.Policies.rst", "_autosummary/seldonian.RL.Agents.Policies.Policy.rst", "_autosummary/seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy.rst", "_autosummary/seldonian.RL.Agents.Policies.Policy.Policy.rst", "_autosummary/seldonian.RL.Agents.Policies.Softmax.rst", "_autosummary/seldonian.RL.Agents.Policies.Softmax.Softmax.rst", "_autosummary/seldonian.RL.Agents.keyboard_gridworld.rst", "_autosummary/seldonian.RL.Agents.keyboard_gridworld.Keyboard_gridworld.rst", "_autosummary/seldonian.RL.Agents.mountain_car_rough_solution.rst", "_autosummary/seldonian.RL.Agents.mountain_car_rough_solution.Mountain_car_rough_solution.rst", "_autosummary/seldonian.RL.Env_Description.rst", "_autosummary/seldonian.RL.Env_Description.Env_Description.rst", "_autosummary/seldonian.RL.Env_Description.Env_Description.Env_Description.rst", "_autosummary/seldonian.RL.Env_Description.Env_Description.check_space_type.rst", "_autosummary/seldonian.RL.Env_Description.Spaces.rst", "_autosummary/seldonian.RL.Env_Description.Spaces.Continuous_Space.rst", "_autosummary/seldonian.RL.Env_Description.Spaces.Discrete_Space.rst", "_autosummary/seldonian.RL.RL_model.rst", "_autosummary/seldonian.RL.RL_model.RL_model.rst", "_autosummary/seldonian.RL.environments.rst", "_autosummary/seldonian.RL.environments.Environment.rst", "_autosummary/seldonian.RL.environments.Environment.Environment.rst", "_autosummary/seldonian.RL.environments.gridworld.rst", "_autosummary/seldonian.RL.environments.gridworld.Gridworld.rst", "_autosummary/seldonian.RL.environments.mountaincar.rst", "_autosummary/seldonian.RL.environments.mountaincar.Mountaincar.rst", "_autosummary/seldonian.RL.environments.n_step_mountaincar.rst", "_autosummary/seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar.rst", "_autosummary/seldonian.RL.hyperparams_and_settings.rst", "_autosummary/seldonian.RL.hyperparams_and_settings.define_hyperparameter_and_setting_dict.rst", "_autosummary/seldonian.candidate_selection.rst", "_autosummary/seldonian.candidate_selection.candidate_selection.rst", "_autosummary/seldonian.candidate_selection.candidate_selection.CandidateSelection.rst", "_autosummary/seldonian.dataset.rst", "_autosummary/seldonian.dataset.DataSet.rst", "_autosummary/seldonian.dataset.DataSetLoader.rst", "_autosummary/seldonian.dataset.Episode.rst", "_autosummary/seldonian.dataset.RLDataSet.rst", "_autosummary/seldonian.dataset.SupervisedDataSet.rst", "_autosummary/seldonian.models.rst", "_autosummary/seldonian.models.models.rst", "_autosummary/seldonian.models.models.BoundedLinearRegressionModel.rst", "_autosummary/seldonian.models.models.ClassificationModel.rst", "_autosummary/seldonian.models.models.DummyClassifierModel.rst", "_autosummary/seldonian.models.models.LinearRegressionModel.rst", "_autosummary/seldonian.models.models.LogisticRegressionModel.rst", "_autosummary/seldonian.models.models.RandomClassifierModel.rst", "_autosummary/seldonian.models.models.RegressionModel.rst", "_autosummary/seldonian.models.models.SeldonianModel.rst", "_autosummary/seldonian.models.models.SupervisedModel.rst", "_autosummary/seldonian.models.objectives.rst", "_autosummary/seldonian.models.objectives.False_Negative_Rate.rst", "_autosummary/seldonian.models.objectives.False_Positive_Rate.rst", "_autosummary/seldonian.models.objectives.IS_estimate.rst", "_autosummary/seldonian.models.objectives.Mean_Error.rst", "_autosummary/seldonian.models.objectives.Mean_Squared_Error.rst", "_autosummary/seldonian.models.objectives.Negative_Rate.rst", "_autosummary/seldonian.models.objectives.Positive_Rate.rst", "_autosummary/seldonian.models.objectives.True_Negative_Rate.rst", "_autosummary/seldonian.models.objectives.True_Positive_Rate.rst", "_autosummary/seldonian.models.objectives.evaluate_statistic.rst", "_autosummary/seldonian.models.objectives.gradient_Bounded_Squared_Error.rst", "_autosummary/seldonian.models.objectives.gradient_Mean_Squared_Error.rst", "_autosummary/seldonian.models.objectives.gradient_logistic_loss.rst", "_autosummary/seldonian.models.objectives.logistic_loss.rst", "_autosummary/seldonian.models.objectives.sample_from_statistic.rst", "_autosummary/seldonian.models.objectives.vector_Error.rst", "_autosummary/seldonian.models.objectives.vector_False_Negative_Rate.rst", "_autosummary/seldonian.models.objectives.vector_False_Positive_Rate.rst", "_autosummary/seldonian.models.objectives.vector_IS_estimate.rst", "_autosummary/seldonian.models.objectives.vector_Negative_Rate.rst", "_autosummary/seldonian.models.objectives.vector_Positive_Rate.rst", "_autosummary/seldonian.models.objectives.vector_Squared_Error.rst", "_autosummary/seldonian.models.objectives.vector_True_Negative_Rate.rst", "_autosummary/seldonian.models.objectives.vector_True_Positive_Rate.rst", "_autosummary/seldonian.models.objectives.vector_logistic_loss.rst", "_autosummary/seldonian.models.objectives.vector_weighted_loss.rst", "_autosummary/seldonian.models.objectives.weighted_loss.rst", "_autosummary/seldonian.optimizers.rst", "_autosummary/seldonian.optimizers.gradient_descent.rst", "_autosummary/seldonian.optimizers.gradient_descent.gradient_descent_adam.rst", "_autosummary/seldonian.optimizers.gradient_descent.setup_gradients.rst", "_autosummary/seldonian.parse_tree.rst", "_autosummary/seldonian.parse_tree.nodes.rst", "_autosummary/seldonian.parse_tree.nodes.BaseNode.rst", "_autosummary/seldonian.parse_tree.nodes.CVaRSQeBaseNode.rst", "_autosummary/seldonian.parse_tree.nodes.ConstantNode.rst", "_autosummary/seldonian.parse_tree.nodes.InternalNode.rst", "_autosummary/seldonian.parse_tree.nodes.MEDCustomBaseNode.rst", "_autosummary/seldonian.parse_tree.nodes.Node.rst", "_autosummary/seldonian.parse_tree.operators.rst", "_autosummary/seldonian.parse_tree.parse_tree.rst", "_autosummary/seldonian.parse_tree.parse_tree.ParseTree.rst", "_autosummary/seldonian.parse_tree.parse_tree.make_parse_trees_from_constraints.rst", "_autosummary/seldonian.safety_test.rst", "_autosummary/seldonian.safety_test.safety_test.rst", "_autosummary/seldonian.safety_test.safety_test.SafetyTest.rst", "_autosummary/seldonian.seldonian_algorithm.rst", "_autosummary/seldonian.seldonian_algorithm.SeldonianAlgorithm.rst", "_autosummary/seldonian.spec.rst", "_autosummary/seldonian.spec.RLSpec.rst", "_autosummary/seldonian.spec.Spec.rst", "_autosummary/seldonian.spec.SupervisedSpec.rst", "_autosummary/seldonian.spec.createRLSpec.rst", "_autosummary/seldonian.spec.createSupervisedSpec.rst", "_autosummary/seldonian.utils.rst", "_autosummary/seldonian.utils.RL_utils.rst", "_autosummary/seldonian.utils.RL_utils.argmax_multi.rst", "_autosummary/seldonian.utils.RL_utils.clamp.rst", "_autosummary/seldonian.utils.RL_utils.error.rst", "_autosummary/seldonian.utils.io_utils.rst", "_autosummary/seldonian.utils.io_utils.dir_path.rst", "_autosummary/seldonian.utils.io_utils.load_json.rst", "_autosummary/seldonian.utils.io_utils.load_pickle.rst", "_autosummary/seldonian.utils.io_utils.load_supervised_metadata.rst", "_autosummary/seldonian.utils.io_utils.save_json.rst", "_autosummary/seldonian.utils.io_utils.save_pickle.rst", "_autosummary/seldonian.utils.io_utils.yes_or_no_input.rst", "_autosummary/seldonian.utils.plot_utils.rst", "_autosummary/seldonian.utils.plot_utils.plot_gradient_descent.rst", "_autosummary/seldonian.utils.stats_utils.rst", "_autosummary/seldonian.utils.stats_utils.generate_data.rst", "_autosummary/seldonian.utils.stats_utils.stddev.rst", "_autosummary/seldonian.utils.stats_utils.tinv.rst", "_autosummary/seldonian.utils.stats_utils.weighted_sum_gamma.rst", "_autosummary/seldonian.utils.tutorial_utils.rst", "_autosummary/seldonian.utils.tutorial_utils.generate_clipped_data.rst", "_autosummary/seldonian.utils.tutorial_utils.generate_data.rst", "_autosummary/seldonian.utils.tutorial_utils.make_synthetic_regression_dataset.rst", "_autosummary/seldonian.warnings.rst", "_autosummary/seldonian.warnings.custom_warnings.rst", "_autosummary/seldonian.warnings.custom_warnings.custom_formatwarning.rst", "api.rst", "getting_started.rst", "index.rst", "overview.rst"], "titles": ["seldonian", "seldonian.RL", "seldonian.RL.Agents", "seldonian.RL.Agents.Agent", "seldonian.RL.Agents.Agent.Agent", "seldonian.RL.Agents.Bases", "seldonian.RL.Agents.Bases.Fourier", "seldonian.RL.Agents.Bases.Fourier.Fourier", "seldonian.RL.Agents.Discrete_Random_Agent", "seldonian.RL.Agents.Discrete_Random_Agent.Discrete_Random_Agent", "seldonian.RL.Agents.Function_Approximators", "seldonian.RL.Agents.Function_Approximators.Function_Approximator", "seldonian.RL.Agents.Function_Approximators.Function_Approximator.Function_Approximator", "seldonian.RL.Agents.Function_Approximators.Linear_FA", "seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_FA", "seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_state_action_value_FA", "seldonian.RL.Agents.Function_Approximators.Table", "seldonian.RL.Agents.Function_Approximators.Table.Q_Table", "seldonian.RL.Agents.Function_Approximators.Table.Table", "seldonian.RL.Agents.Function_Approximators.Table.construct_Q_Table_From_Env_Description", "seldonian.RL.Agents.Parameterized_non_learning_softmax_agent", "seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.Parameterized_non_learning_softmax_agent", "seldonian.RL.Agents.Policies", "seldonian.RL.Agents.Policies.Policy", "seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy", "seldonian.RL.Agents.Policies.Policy.Policy", "seldonian.RL.Agents.Policies.Softmax", "seldonian.RL.Agents.Policies.Softmax.Softmax", "seldonian.RL.Agents.keyboard_gridworld", "seldonian.RL.Agents.keyboard_gridworld.Keyboard_gridworld", "seldonian.RL.Agents.mountain_car_rough_solution", "seldonian.RL.Agents.mountain_car_rough_solution.Mountain_car_rough_solution", "seldonian.RL.Env_Description", "seldonian.RL.Env_Description.Env_Description", "seldonian.RL.Env_Description.Env_Description.Env_Description", "seldonian.RL.Env_Description.Env_Description.check_space_type", "seldonian.RL.Env_Description.Spaces", "seldonian.RL.Env_Description.Spaces.Continuous_Space", "seldonian.RL.Env_Description.Spaces.Discrete_Space", "seldonian.RL.RL_model", "seldonian.RL.RL_model.RL_model", "seldonian.RL.environments", "seldonian.RL.environments.Environment", "seldonian.RL.environments.Environment.Environment", "seldonian.RL.environments.gridworld", "seldonian.RL.environments.gridworld.Gridworld", "seldonian.RL.environments.mountaincar", "seldonian.RL.environments.mountaincar.Mountaincar", "seldonian.RL.environments.n_step_mountaincar", "seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar", "seldonian.RL.hyperparams_and_settings", "seldonian.RL.hyperparams_and_settings.define_hyperparameter_and_setting_dict", "seldonian.candidate_selection", "seldonian.candidate_selection.candidate_selection", "seldonian.candidate_selection.candidate_selection.CandidateSelection", "seldonian.dataset", "seldonian.dataset.DataSet", "seldonian.dataset.DataSetLoader", "seldonian.dataset.Episode", "seldonian.dataset.RLDataSet", "seldonian.dataset.SupervisedDataSet", "seldonian.models", "seldonian.models.models", "seldonian.models.models.BoundedLinearRegressionModel", "seldonian.models.models.ClassificationModel", "seldonian.models.models.DummyClassifierModel", "seldonian.models.models.LinearRegressionModel", "seldonian.models.models.LogisticRegressionModel", "seldonian.models.models.RandomClassifierModel", "seldonian.models.models.RegressionModel", "seldonian.models.models.SeldonianModel", "seldonian.models.models.SupervisedModel", "seldonian.models.objectives", "seldonian.models.objectives.False_Negative_Rate", "seldonian.models.objectives.False_Positive_Rate", "seldonian.models.objectives.IS_estimate", "seldonian.models.objectives.Mean_Error", "seldonian.models.objectives.Mean_Squared_Error", "seldonian.models.objectives.Negative_Rate", "seldonian.models.objectives.Positive_Rate", "seldonian.models.objectives.True_Negative_Rate", "seldonian.models.objectives.True_Positive_Rate", "seldonian.models.objectives.evaluate_statistic", "seldonian.models.objectives.gradient_Bounded_Squared_Error", "seldonian.models.objectives.gradient_Mean_Squared_Error", "seldonian.models.objectives.gradient_logistic_loss", "seldonian.models.objectives.logistic_loss", "seldonian.models.objectives.sample_from_statistic", "seldonian.models.objectives.vector_Error", "seldonian.models.objectives.vector_False_Negative_Rate", "seldonian.models.objectives.vector_False_Positive_Rate", "seldonian.models.objectives.vector_IS_estimate", "seldonian.models.objectives.vector_Negative_Rate", "seldonian.models.objectives.vector_Positive_Rate", "seldonian.models.objectives.vector_Squared_Error", "seldonian.models.objectives.vector_True_Negative_Rate", "seldonian.models.objectives.vector_True_Positive_Rate", "seldonian.models.objectives.vector_logistic_loss", "seldonian.models.objectives.vector_weighted_loss", "seldonian.models.objectives.weighted_loss", "seldonian.optimizers", "seldonian.optimizers.gradient_descent", "seldonian.optimizers.gradient_descent.gradient_descent_adam", "seldonian.optimizers.gradient_descent.setup_gradients", "seldonian.parse_tree", "seldonian.parse_tree.nodes", "seldonian.parse_tree.nodes.BaseNode", "seldonian.parse_tree.nodes.CVaRSQeBaseNode", "seldonian.parse_tree.nodes.ConstantNode", "seldonian.parse_tree.nodes.InternalNode", "seldonian.parse_tree.nodes.MEDCustomBaseNode", "seldonian.parse_tree.nodes.Node", "seldonian.parse_tree.operators", "seldonian.parse_tree.parse_tree", "seldonian.parse_tree.parse_tree.ParseTree", "seldonian.parse_tree.parse_tree.make_parse_trees_from_constraints", "seldonian.safety_test", "seldonian.safety_test.safety_test", "seldonian.safety_test.safety_test.SafetyTest", "seldonian.seldonian_algorithm", "seldonian.seldonian_algorithm.SeldonianAlgorithm", "seldonian.spec", "seldonian.spec.RLSpec", "seldonian.spec.Spec", "seldonian.spec.SupervisedSpec", "seldonian.spec.createRLSpec", "seldonian.spec.createSupervisedSpec", "seldonian.utils", "seldonian.utils.RL_utils", "seldonian.utils.RL_utils.argmax_multi", "seldonian.utils.RL_utils.clamp", "seldonian.utils.RL_utils.error", "seldonian.utils.io_utils", "seldonian.utils.io_utils.dir_path", "seldonian.utils.io_utils.load_json", "seldonian.utils.io_utils.load_pickle", "seldonian.utils.io_utils.load_supervised_metadata", "seldonian.utils.io_utils.save_json", "seldonian.utils.io_utils.save_pickle", "seldonian.utils.io_utils.yes_or_no_input", "seldonian.utils.plot_utils", "seldonian.utils.plot_utils.plot_gradient_descent", "seldonian.utils.stats_utils", "seldonian.utils.stats_utils.generate_data", "seldonian.utils.stats_utils.stddev", "seldonian.utils.stats_utils.tinv", "seldonian.utils.stats_utils.weighted_sum_gamma", "seldonian.utils.tutorial_utils", "seldonian.utils.tutorial_utils.generate_clipped_data", "seldonian.utils.tutorial_utils.generate_data", "seldonian.utils.tutorial_utils.make_synthetic_regression_dataset", "seldonian.warnings", "seldonian.warnings.custom_warnings", "seldonian.warnings.custom_warnings.custom_formatwarning", "API", "Getting Started", "Seldonian Engine documentation", "Overview"], "terms": {"engin": [0, 112, 155, 157], "packag": [0, 157], "modul": [0, 1, 2, 5, 10, 22, 32, 41, 52, 53, 61, 62, 100, 104, 112, 113, 116, 117, 119, 121, 122, 127, 151, 153, 157], "class": [3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 78, 79, 80, 81, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 157], "base": [4, 9, 12, 14, 15, 17, 18, 21, 24, 25, 27, 29, 31, 34, 37, 38, 40, 43, 45, 47, 49, 54, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 106, 107, 108, 109, 110, 111, 112, 114, 118, 120, 122, 123, 124, 156, 157], "object": [4, 7, 12, 19, 21, 24, 25, 27, 34, 37, 38, 40, 43, 45, 54, 56, 57, 58, 59, 60, 70, 102, 106, 107, 110, 111, 114, 118, 120, 121, 122, 123, 124, 126, 134, 135, 137, 138, 141, 156], "all": [4, 21, 43, 56, 60, 64, 69, 70, 71, 75, 111, 114, 118, 157], "mani": 4, "method": [4, 7, 9, 12, 14, 15, 17, 18, 21, 24, 25, 27, 29, 31, 34, 37, 38, 40, 43, 45, 47, 49, 54, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 102, 106, 107, 108, 109, 110, 111, 114, 118, 120, 122, 123, 124, 157], "requir": [4, 112, 114, 123, 155, 157], "overrid": [4, 43, 45, 47, 49, 63, 106, 107, 110, 157], "child": [4, 43, 45, 47, 49, 111, 112, 114, 122, 123, 124, 157], "us": [4, 21, 37, 38, 43, 47, 49, 54, 57, 63, 64, 66, 67, 69, 70, 71, 102, 106, 107, 110, 112, 114, 118, 120, 122, 123, 124, 126, 145, 146, 155, 157], "__init__": [4, 7, 9, 12, 14, 15, 17, 18, 21, 24, 25, 27, 29, 31, 34, 37, 38, 40, 43, 45, 47, 49, 54, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 106, 107, 108, 109, 110, 111, 114, 118, 120, 122, 123, 124], "__repr__": [4, 7, 9, 12, 14, 15, 17, 18, 21, 24, 25, 27, 29, 31, 34, 37, 38, 40, 43, 45, 47, 49, 54, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 106, 107, 108, 109, 110, 111, 114, 118, 120, 122, 123, 124], "return": [4, 7, 9, 12, 14, 15, 17, 18, 19, 21, 24, 25, 27, 29, 31, 34, 37, 38, 40, 43, 45, 47, 49, 54, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 102, 106, 107, 110, 112, 114, 118, 120, 122, 123, 124, 139, 141, 144, 145, 146, 157], "repr": [4, 7, 9, 12, 14, 15, 17, 18, 21, 24, 25, 27, 29, 31, 34, 37, 38, 40, 43, 45, 47, 49, 54, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 114, 118, 120, 122, 123, 124], "self": [4, 7, 9, 12, 14, 15, 17, 18, 21, 24, 25, 27, 29, 31, 34, 37, 38, 40, 43, 45, 47, 49, 54, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 114, 118, 120, 122, 123, 124], "choose_act": [4, 9, 21, 27, 29, 31], "observ": [4, 9, 21, 24, 27, 29, 31, 34, 37, 38, 43, 47, 49, 58, 65, 67, 68, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 106, 107, 110], "choos": [4, 9, 29, 31, 157], "an": [4, 9, 19, 21, 24, 27, 29, 31, 34, 43, 45, 47, 49, 106, 107, 111, 112, 122, 123, 124, 133, 134, 135, 137, 138, 139, 146, 157], "action": [4, 9, 17, 21, 27, 29, 31, 34, 37, 38, 43, 45, 47, 49, 57, 58], "given": [4, 9, 17, 19, 21, 27, 29, 31, 43, 45, 47, 49, 54, 106, 107, 110, 114, 118, 120, 122, 123, 124, 157], "To": [4, 9, 29, 31, 155, 157], "overridden": [4, 9, 29, 31], "paramet": [4, 9, 17, 18, 19, 21, 24, 27, 29, 31, 34, 35, 37, 38, 43, 45, 47, 49, 54, 56, 57, 58, 59, 60, 63, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 102, 106, 107, 108, 109, 110, 111, 114, 118, 120, 122, 123, 124, 126, 133, 134, 135, 137, 138, 139, 141, 143, 144, 145, 146, 148, 149, 157], "The": [4, 9, 17, 18, 21, 27, 29, 31, 37, 45, 54, 56, 57, 60, 63, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 102, 106, 107, 108, 109, 110, 111, 112, 114, 118, 120, 122, 123, 124, 126, 138, 139, 141, 143, 146, 148, 149, 156, 157], "current": [4, 9, 21, 24, 27, 29, 31, 43, 45, 47, 49, 64, 157], "type": [4, 9, 19, 21, 24, 27, 29, 31, 35, 45, 54, 63, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 102, 106, 107, 110, 114, 118, 120, 144, 145, 146, 157], "depend": [4, 9, 21, 24, 27, 29, 31, 106, 107, 110, 157], "environ": [4, 9, 17, 18, 19, 21, 24, 27, 29, 31, 34, 122, 156, 157], "get_prob_this_act": [4, 9, 21, 27, 29, 31], "get": [4, 9, 17, 21, 24, 27, 29, 31, 34, 37, 38, 43, 45, 47, 49, 54, 114, 118, 120, 156], "probabl": [4, 9, 17, 21, 27, 29, 31, 58, 65, 67, 68, 73, 74, 78, 79, 80, 81, 89, 90, 92, 93, 95, 96, 107, 114, 145, 157], "provid": [4, 9, 29, 31, 34, 82, 87, 114, 120, 122, 123, 124, 139, 157], "i": [4, 9, 21, 24, 27, 29, 31, 37, 45, 54, 63, 73, 74, 75, 78, 79, 80, 81, 89, 90, 91, 92, 93, 95, 96, 99, 102, 106, 107, 108, 109, 110, 111, 112, 114, 118, 120, 122, 123, 124, 133, 139, 155, 156, 157], "updat": [4, 9, 21, 29, 31, 45], "next_observ": [4, 9, 21, 29, 31], "reward": [4, 9, 21, 29, 31, 45, 57, 58, 112, 146], "termin": [4, 9, 21, 29, 31, 43, 45, 47, 49], "": [4, 9, 21, 29, 31, 34, 106, 107, 110, 114, 144, 145, 157], "accord": [4, 9, 21, 29, 31], "learn": [4, 9, 21, 29, 31, 54, 56, 57, 60, 62, 64, 69, 70, 71, 102, 106, 107, 110, 112, 114, 118, 124, 156, 157], "rule": [4, 9, 21, 29, 31], "overriden": [4, 9, 29, 31], "after": [4, 9, 21, 29, 31], "taken": [4, 9, 21, 29, 31, 34], "take": [4, 9, 21, 29, 31, 157], "bool": [4, 9, 21, 29, 31, 45, 54, 57, 102, 111, 114, 118, 122, 123, 124, 126, 139, 141], "whether": [4, 9, 21, 24, 27, 29, 31, 45, 54, 57, 60, 102, 111, 114, 118, 120, 122, 123, 124, 133, 141, 157], "hyperparam_and_setting_dict": [7, 21, 24, 27], "env_desc": 7, "env_descript": [9, 14, 15, 19, 21, 24, 27, 29, 45, 156], "basi": [14, 15, 24, 27], "function": [16, 21, 24, 27, 33, 45, 50, 54, 63, 72, 101, 102, 106, 112, 113, 114, 121, 122, 123, 124, 126, 128, 132, 140, 141, 142, 145, 147, 152, 157], "min_stat": [17, 18], "num_stat": [17, 18, 45], "num_act": 17, "A": [17, 19, 43, 45, 47, 49, 59, 91, 112, 114, 122, 123, 124, 133, 134, 135, 137, 138, 156], "q": [17, 19], "contain": [17, 21, 45, 54, 57, 60, 62, 75, 82, 87, 91, 102, 106, 107, 110, 112, 114, 118, 120, 122, 123, 124, 126, 157], "transit": [17, 43, 45, 47, 49], "int": [17, 18, 38, 45, 54, 102, 106, 107, 110, 111, 114, 143, 145, 148, 149], "smallest": [17, 18], "ob": [17, 18, 21, 27, 34, 43, 45, 47, 49, 57, 114], "number": [17, 18, 24, 27, 34, 37, 38, 45, 79, 102, 106, 107, 110, 114, 143, 148, 149, 157], "total": [17, 18, 38, 114], "state": [17, 18, 21, 34, 45, 157], "from_environment_state_to_0_indexed_st": [17, 18], "env_stat": [17, 18], "convert": [17, 18], "0": [17, 18, 37, 63, 68, 73, 74, 78, 79, 80, 81, 89, 90, 92, 93, 95, 96, 102, 106, 107, 110, 114, 118, 122, 123, 124, 125, 143, 146, 148, 149, 157], "index": [17, 18, 111, 146], "you": [17, 18, 57, 114, 138, 141, 155, 156, 157], "want": [17, 18, 35, 57, 114, 138, 141, 155, 157], "get_action_values_given_st": 17, "state_number_not_zero_index": 17, "possibl": [17, 21, 34, 43, 45, 47, 49, 107, 118, 157], "valu": [17, 38, 54, 88, 94, 102, 106, 107, 108, 110, 114, 118, 120, 139, 141, 157], "environment": 17, "specif": [17, 24, 27, 120, 121, 122, 123, 124, 157], "arrai": [17, 21, 24, 27, 37, 54, 57, 97, 98, 112, 146, 157], "get_action_values_given_zero_indexed_st": 17, "zero_indexed_state_numb": 17, "hold": [18, 56, 58, 59, 60], "capabl": 18, "reindex": 18, "creat": [19, 24, 27, 45, 57, 106, 107, 110, 114, 120, 126, 157], "descript": [19, 24, 27, 43, 45, 47, 49, 157], "access": [19, 21, 24, 27, 34], "attribut": [19, 21, 24, 27, 34, 45, 59, 60, 114, 157], "q_tabl": [19, 21, 156], "parametr": 21, "softmax": [21, 156, 157], "pi": [21, 58, 59], "frac": 21, "e": [21, 54, 56, 57, 59, 60, 82, 87, 102, 106, 107, 110, 114, 118, 122, 123, 124, 157], "p": [21, 145], "sum_": 21, "addit": 21, "info": 21, "about": [21, 102, 114, 157], "data": [21, 54, 57, 75, 106, 107, 110, 114, 118, 120, 122, 123, 124, 126, 137, 138, 143, 144, 148, 149, 157], "gener": [21, 143, 148, 149, 157], "variabl": [21, 37, 45, 106, 107, 108, 110, 111, 112, 114, 118, 122, 123, 124], "fa": 21, "approxim": [21, 24, 27], "polici": [21, 40, 112, 125, 156, 157], "select": [21, 27, 52, 53, 54, 100, 106, 107, 110, 118, 120, 122, 123, 124, 156], "get_action_valu": 21, "from": [21, 24, 27, 57, 63, 66, 104, 110, 113, 114, 122, 134, 135, 136, 137, 139, 157], "thi": [21, 43, 45, 47, 49, 64, 69, 70, 71, 78, 79, 83, 89, 90, 92, 93, 95, 96, 106, 107, 110, 111, 114, 120, 122, 156, 157], "get_param": [21, 24, 27], "weight": [21, 24, 27, 54, 63, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 102, 106, 107, 110, 112, 114, 118, 120, 122, 123, 124, 146, 157], "float": [21, 27, 45, 65, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 102, 106, 107, 108, 110, 111, 114, 118, 120, 122, 123, 124, 126, 143, 144, 145, 146, 148, 149, 157], "set_new_param": [21, 24, 27], "new_param": [21, 24, 27], "set": [21, 24, 27, 104, 108, 120, 157], "Not": [21, 112], "implement": [21, 43, 45, 47, 49, 63, 65, 66, 67, 68, 102, 145, 157], "construct_basis_and_linear_fa": [24, 27], "linear": [24, 27, 63, 66], "dictionari": [24, 27, 102, 112, 136, 141], "hyperparameter_and_setting_dict": [24, 27], "specifi": [24, 27, 112, 114, 157], "episod": [24, 27, 57, 59, 75, 91, 156], "per": [24, 27], "trial": [24, 27], "make_state_action_fa": [24, 27], "space": [24, 27, 34, 35, 45, 156], "discret": [24, 27, 34, 35, 38], "contin": [24, 27, 35], "discrete_action_polici": [27, 156], "observation_spac": 34, "action_spac": 34, "describ": [34, 45, 57], "conveni": [34, 114, 126, 157], "continu": [34, 37], "made": 34, "get_min_act": 34, "first": [34, 60, 114, 156, 157], "get_min_st": 34, "get_num_act": 34, "get_num_observation_dim": 34, "dimens": [34, 37, 143, 148, 149], "get_num_st": 34, "also": [34, 108, 109, 111, 114, 157], "call": [34, 106, 107, 110, 157], "here": [34, 112, 157], "desired_typ": 35, "valid": [35, 37, 114, 157], "ensur": [35, 157], "ar": [35, 37, 54, 107, 112, 114, 118, 122, 123, 124, 146, 156, 157], "equival": [35, 106, 107, 110], "discrete_spac": [35, 156], "continous_spac": 35, "which": [35, 78, 106, 107, 109, 110, 112, 114, 122, 123, 124, 157], "we": [35, 106, 107, 110, 114, 155, 157], "match": 35, "bound": [37, 54, 63, 83, 102, 106, 107, 108, 110, 111, 112, 114, 118, 122, 123, 124, 157], "np": 37, "ndarrai": [37, 54, 63, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 106, 107, 110, 118, 120, 144, 146], "shape": [37, 157], "num_dim": 37, "2": [37, 110, 137, 157], "defin": [37, 107, 112, 157], "min": [37, 38, 110, 157], "max": [37, 38, 157], "each": [37, 58, 59, 65, 67, 68, 73, 74, 78, 79, 80, 81, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 106, 107, 110, 112, 114, 157], "For": [37, 112, 157], "exampl": [37, 157], "3d": 37, "x": [37, 63, 65, 66, 67, 68, 73, 74, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 110, 143, 148, 149], "1": [37, 73, 74, 78, 79, 80, 81, 89, 90, 92, 93, 95, 96, 99, 106, 107, 118, 122, 143, 148, 149, 153, 157], "y": [37, 63, 66, 67, 73, 74, 76, 77, 80, 81, 83, 84, 85, 86, 88, 89, 90, 94, 95, 96, 97, 98, 99, 110, 143, 148, 149], "5": [37, 68, 99, 122, 123, 124, 157], "4": [37, 107, 112, 157], "z": [37, 107], "12": 37, "6": [37, 124, 125, 157], "8": [37, 157], "would": [37, 54, 102, 112, 122, 123, 124, 157], "check_bounds_valid": 37, "check": [37, 45, 114, 133], "format": [37, 57, 157], "maximum": [37, 38, 45, 107, 114, 118, 157], "larger": [37, 107], "than": [37, 107, 114, 118, 157], "minimum": [37, 38, 107, 114, 118, 157], "get_num_dim": 37, "get_num_valu": 38, "env_kwarg": [40, 122, 125], "get_env_descript": [43, 45, 47, 49], "get_observ": [43, 45, 47, 49], "reset": [43, 45, 47, 49, 114], "initi": [43, 45, 47, 49, 54, 102, 114, 122, 123, 124], "start_visu": [43, 45, 47, 49], "turn": [43, 45, 47, 49], "visual": [43, 45, 47, 49, 108, 109, 111, 114, 155], "debugg": [43, 45, 47, 49], "stop_visu": [43, 45, 47, 49], "off": [43, 45, 47, 49], "new": [43, 47, 49, 112, 156, 157], "print": [43, 45, 47, 49], "out": [43, 45, 47, 49, 120, 157], "debug": [43, 47, 49, 102, 120], "size": 45, "3": [45, 107, 148, 150], "squar": [45, 76, 77, 83, 84, 94, 107, 112, 157], "arbitrari": 45, "grid": 45, "cell": 45, "side": [45, 114], "distinct": 45, "terminal_st": 45, "occupi": 45, "time": [45, 99], "timestep": [45, 58], "max_tim": 45, "allow": 45, "gamma": [45, 146], "discount": 45, "factor": 45, "calcul": [45, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 88, 89, 90, 91, 92, 93, 94, 97, 98, 99, 102, 106, 107, 110, 114, 118, 122, 123, 124, 146, 157], "expect": [45, 106, 107, 110, 112], "create_env_descript": 45, "is_in_goal_st": 45, "goal": [45, 157], "true": [45, 80, 81, 95, 96, 102, 106, 107, 110, 112, 118, 122, 123, 124, 150, 157], "fals": [45, 54, 57, 60, 73, 74, 80, 81, 82, 89, 90, 99, 102, 112, 114, 120, 122, 123, 124, 125, 126, 137, 138, 141, 150, 157], "go": [45, 157], "back": [45, 122, 123, 124], "between": [45, 73, 74, 78, 79, 80, 81, 89, 90, 92, 93, 95, 96, 110, 157], "reach": 45, "next": 45, "update_posit": 45, "helper": [45, 114], "posit": [45, 65, 67, 68, 73, 74, 78, 79, 80, 81, 82, 89, 90, 92, 93, 96, 99, 107, 112, 114, 157], "inform": [45, 157], "candid": [52, 53, 54, 100, 106, 107, 110, 118, 120, 122, 123, 124, 156], "model": [54, 57, 102, 106, 107, 110, 118, 120, 122, 123, 124, 126, 156], "candidate_dataset": 54, "n_safeti": [54, 107], "parse_tre": [54, 118, 122, 123, 124, 156, 157], "primary_object": [54, 102, 103, 118, 120, 122, 123, 124], "optimization_techniqu": [54, 122, 123, 124, 157], "barrier_funct": [54, 122, 123, 124, 157], "optim": [54, 120, 122, 123, 124, 156, 157], "powel": [54, 157], "initial_solut": 54, "none": [54, 57, 111, 122, 123, 124, 125], "regim": [54, 56, 57, 60, 112, 114, 115, 118, 157], "supervised_learn": [54, 56, 57, 60, 114, 115, 118, 157], "write_logfil": 54, "store_valu": [54, 102], "kwarg": [54, 56, 57, 59, 60, 102, 106, 107, 108, 109, 110, 114, 118, 153], "run": [54, 55, 61, 102, 117, 118, 119, 120, 121, 122, 123, 124, 156], "seldonianmodel": [54, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 106, 107, 110, 118, 122, 123, 124, 156], "dataset": [54, 75, 88, 94, 106, 107, 110, 118, 120, 122, 123, 124, 125, 126, 156], "length": [54, 107, 112], "safeti": [54, 106, 107, 110, 116, 117, 118, 120, 122, 123, 124, 156], "when": [54, 73, 74, 80, 81, 106, 114, 157], "predict": [54, 60, 63, 65, 66, 67, 68, 79, 89, 90, 95, 96, 157], "confid": [54, 106, 107, 110, 111, 114, 122, 123, 124, 126, 157], "dure": [54, 57, 60, 112, 120, 122, 123, 124, 157], "list": [54, 56, 57, 58, 59, 60, 106, 107, 110, 112, 114, 118, 122, 123, 124, 126, 157], "parsetre": [54, 118, 122, 123, 156, 157], "pars": [54, 104, 106, 108, 109, 110, 111, 112, 113, 114, 118, 122, 123, 124, 155, 157], "tree": [54, 104, 106, 108, 109, 110, 111, 112, 113, 114, 118, 122, 123, 124, 155, 157], "behavior": [54, 102, 104, 112, 113, 114, 118, 122, 123, 124, 156], "constraint": [54, 102, 104, 112, 113, 114, 118, 122, 123, 124, 126, 141, 156], "sole": [54, 102, 122, 123, 124], "absenc": [54, 102, 122, 123, 124], "loss": [54, 85, 86, 97, 98, 99, 102, 112, 122, 123, 124], "str": [54, 56, 57, 59, 60, 82, 87, 102, 106, 107, 108, 109, 110, 111, 114, 118, 120, 122, 123, 124, 126, 133, 134, 135, 137, 138, 139, 141], "g": [54, 56, 57, 59, 60, 82, 87, 102, 106, 107, 110, 114, 118, 122, 123, 124, 141, 157], "gradient_desc": [54, 122, 123, 124, 156, 157], "string": [54, 108, 109, 111, 112, 114, 122, 123, 124, 126, 156], "name": [54, 56, 57, 59, 60, 82, 87, 102, 106, 107, 108, 109, 110, 111, 112, 114, 122, 123, 124, 157], "numpi": [54, 63, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 106, 107, 110, 118, 120, 144, 146], "categori": [54, 56, 57, 60, 114, 118, 153], "machin": [54, 56, 57, 60, 62, 64, 69, 70, 71, 106, 107, 110, 114, 118, 156, 157], "algorithm": [54, 55, 56, 57, 60, 61, 110, 114, 118, 119, 120, 121, 122, 123, 124, 157], "reinforcement_learn": [54, 56, 57, 60, 114, 118, 157], "write": [54, 120, 157], "output": [54, 157], "disk": [54, 57], "evaluate_primary_object": [54, 118, 120], "theta": [54, 63, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 102, 106, 107, 110, 118, 120, 157], "primari": [54, 102, 118, 120, 122, 123, 124, 141, 157], "wrapper": [54, 118, 120, 134, 135, 137, 138], "where": [54, 99, 102, 106, 107, 110, 114, 118, 120, 126, 141, 146, 157], "fix": [54, 107, 118, 120], "input": [54, 65, 68, 106, 107, 110, 133, 134, 137, 139, 146, 157], "gradient": [54, 83, 84, 85, 102, 122, 123, 124, 141, 157], "descent": [54, 102, 141, 157], "get_constraint_upper_bound": 54, "upper": [54, 102, 106, 107, 108, 109, 110, 111, 114, 118, 157], "objective_with_barri": 54, "minimization_techniqu": 54, "barrier": [54, 157], "add": [54, 60, 114], "larg": 54, "penalti": 54, "ani": [54, 157], "violat": [54, 114, 157], "nsf": [54, 120, 157], "build": [55, 104, 113, 114, 121], "load": [55, 57, 134, 135, 136, 137, 157], "meta_inform": [56, 59, 60], "datafram": [56, 59, 60, 75, 91, 106, 107, 110, 114], "metadata": [56, 57, 59, 60, 75, 102, 126, 136, 157], "column": [56, 57, 60, 106, 107, 110, 114, 115, 157], "load_rl_dataset_from_csv": 57, "filenam": [57, 134, 135, 136, 137, 138, 153, 157], "metadata_filenam": [57, 157], "rldataset": [57, 156, 157], "file": [57, 120, 126, 134, 135, 136, 137, 138, 157], "csv": 57, "episode_index": 57, "probability_of_act": 57, "load_rl_dataset_from_episode_fil": 57, "pickl": [57, 120, 135, 138], "load_supervised_dataset": [57, 157], "include_sensitive_column": [57, 60], "include_intercept_term": [57, 60, 150], "file_typ": 57, "superviseddataset": [57, 156, 157], "sensit": [57, 60, 157], "train": [57, 60, 63, 66, 67, 157], "pre": 57, "append": 57, "ones": [57, 60], "featur": [57, 63, 65, 66, 67, 68, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 106, 107, 110, 157], "default": [57, 102, 111, 114, 122, 123, 124, 126, 157], "extens": 57, "rl": [58, 59, 114, 118, 122, 146, 156, 157], "o": 59, "r": [59, 85], "df": 60, "label_column": [60, 157], "sensitive_column_nam": 60, "supervis": [60, 71, 112, 114, 124, 157], "panda": [60, 91, 110], "full": [60, 110, 141, 157], "target": 60, "label": [60, 63, 65, 66, 67, 68, 76, 77, 82, 83, 84, 85, 86, 87, 88, 89, 90, 94, 95, 96, 97, 98, 99, 106, 107, 110, 141, 157], "includ": [60, 102, 114, 157], "main": [62, 113], "linearregressionmodel": [63, 156, 157], "regress": [63, 66, 67, 69, 110, 112, 114, 115, 124, 157], "sever": [63, 107, 110, 157], "parent": [63, 64, 69, 70, 71, 107, 110, 157], "assum": 63, "intercept": 63, "fit": [63, 66, 67, 157], "pair": [63, 66, 110, 157], "nxm": [63, 66], "nx1": [63, 66], "origin": 63, "squash": 63, "supervisedmodel": [64, 69, 156], "classif": [64, 112, 114, 124, 157], "librari": [64, 69, 70, 71, 102, 122, 156, 157], "onli": [64, 107, 118, 157], "support": [64, 112, 157], "binari": 64, "classificationmodel": [65, 67, 68, 156, 157], "classifi": [65, 68], "alwai": [65, 68, 106, 107, 110, 114, 157], "regardless": [65, 68], "have": [65, 67, 68, 99, 114, 157], "regressionmodel": [66, 156, 157], "logist": [67, 85, 86, 97, 112], "ha": [68, 112, 157], "prob": 68, "neg": [73, 74, 78, 80, 89, 90, 92, 95, 99, 112, 114], "rate": [73, 74, 78, 79, 80, 81, 82, 89, 90, 92, 93, 95, 96, 102, 112, 114, 157], "whole": [73, 74, 76, 77, 78, 79, 80, 81, 82, 86, 114], "sampl": [73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 86, 87, 91, 97, 98, 107, 144, 157], "sum": [73, 74, 78, 79, 80, 81, 146, 157], "being": [73, 74, 78, 79, 80, 81, 89, 90, 92, 93, 95, 96, 106], "fact": [73, 74, 80, 81], "wa": [73, 74, 80, 81, 110, 114, 157], "instanc": [73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 122, 123, 124], "data_dict": [75, 82, 87, 91, 106, 107, 110], "unweight": [75, 91], "import": [75, 91, 155, 157], "estim": [75, 91, 106, 107, 157], "over": [75, 76, 77, 82, 118, 157], "mean": [76, 77, 84, 88, 94, 110, 112, 157], "error": [76, 77, 83, 84, 88, 94, 107, 110, 112, 156, 157], "y_hat": 76, "normal": [79, 118, 122, 143, 148, 149], "param": [79, 83], "statistic_nam": [82, 87], "evalu": [82, 83, 87, 102, 106, 107, 110, 114, 120], "statist": [82, 87, 106, 112, 122, 123, 124, 157], "fpr": [82, 87, 106, 112, 157], "dict": [82, 87, 102, 106, 107, 110, 112, 114, 122, 123, 124, 141], "analyt": 83, "rtype": 83, "w": 85, "t": [85, 106, 107, 110, 145], "perceptron": 85, "vector": [88, 91, 94, 102, 106, 107, 110, 144], "subject": [89, 90, 95, 96, 157], "actual": [89, 90, 95, 96, 107, 157], "ndarra": 97, "averag": [98, 99], "cost": [98, 99, 157], "sum_i": 99, "p_": 99, "wrong": 99, "answer": [99, 139], "point": [99, 102, 110, 134, 135, 137, 143, 148, 149, 157], "c_i": 99, "upper_bounds_funct": [102, 103], "theta_init": 102, "lambda_init": [102, 122, 123, 124], "alpha_theta": [102, 122, 123, 124], "05": [102, 106, 107, 110, 157], "alpha_lamb": [102, 122, 123, 124], "beta_veloc": [102, 122, 123, 124], "9": [102, 122, 123, 124, 146], "beta_rmsprop": [102, 122, 123, 124], "num_it": [102, 122, 123, 124], "200": [102, 122, 123, 124], "gradient_librari": [102, 103, 122, 123, 124], "autograd": [102, 122, 123, 124], "verbos": [102, 122, 123, 124, 125, 126, 137, 138], "simultan": [102, 157], "ascent": [102, 157], "adam": [102, 122, 123, 124, 157], "lagrangian": [102, 141, 157], "l": [102, 141, 157], "lambda": [102, 141, 157], "f": [102, 110, 141, 157], "lagrang": [102, 141, 157], "multipli": [102, 114, 141, 157], "done": 102, "find": [102, 157], "saddl": [102, 157], "term": 102, "exponenti": [102, 114], "decai": 102, "veloc": 102, "rmsprop": 102, "iter": [102, 110], "comput": [102, 110, 114, 122, 123, 124], "automat": 102, "variou": 102, "quantiti": [102, 157], "solut": [102, 114, 118, 120, 141, 157], "lower": [106, 107, 108, 109, 110, 111, 114], "inf": [106, 107, 109, 110], "conditional_column": [106, 107, 110], "leaf": [106, 108, 109, 118], "measur": [106, 112, 114, 157], "condit": [106, 107, 110, 114], "node_typ": [106, 108], "equal": [106, 114, 115, 118, 157], "base_nod": 106, "delta": [106, 107, 110, 114, 115, 125, 126, 157], "share": [106, 107, 110], "put": [106, 107, 110], "measure_function_nam": 106, "repres": [106, 108, 109, 112, 114, 157], "must": [106, 157], "measure_funct": [106, 157], "oper": [106, 109, 156, 157], "calculate_bound": [106, 107, 110], "bound_method": [106, 107, 110, 122, 123, 124], "test": [106, 107, 110, 116, 117, 118, 120, 122, 123, 124, 141, 156], "calculate_data_forbound": [106, 107, 110], "prepar": [106, 107], "calculate_valu": [106, 107, 110], "etc": [106, 109, 110], "compute_hc_lowerbound": [106, 107, 110], "datas": [106, 107, 110], "high": [106, 107, 110, 157], "level": [106, 107, 110, 114, 157], "compute_hc_upper_and_lowerbound": [106, 107, 110], "compute_hc_upperbound": [106, 107, 110], "independ": [106, 107, 110, 157], "mask_datafram": [106, 107, 110], "mask": [106, 107, 110], "joint": [106, 107, 110], "AND": [106, 107, 110], "predict_hc_lowerbound": [106, 107, 110], "pass": [106, 107, 110, 114, 118, 120, 157], "predict_hc_upper_and_lowerbound": [106, 107, 110], "predict_hc_upperbound": [106, 107, 110], "zhat": [106, 107, 110], "unbias": [106, 107], "basenod": [107, 110, 156], "custom": [107, 110, 112, 157], "cvar_alpha": 107, "alpha": 107, "definit": [107, 157], "consid": 107, "least": [107, 157], "var_alpha": 107, "largest": 107, "100": 107, "thoma": [107, 110], "miller": 107, "2019": [107, 110], "http": [107, 110, 145], "peopl": 107, "c": 107, "umass": 107, "edu": 107, "pthoma": 107, "paper": 107, "thomas2019": 107, "pdf": 107, "see": [107, 110, 122, 123, 124, 156, 157], "theorem": [107, 157], "threshold": [107, 126], "cvar": 107, "sort": 107, "b": [107, 112, 114], "n_candid": 107, "constant": [108, 114, 146, 157], "constant_nod": 108, "represent": [108, 109, 111, 112], "what": [108, 109, 111, 156], "displai": [108, 109, 111, 114, 141], "insid": [108, 109, 111, 157], "box": [108, 109, 111, 157], "graph": [108, 109, 111, 114, 155], "intern": [109, 157], "non": 109, "These": [109, 157], "perform": [109, 112, 157], "wise": 110, "differ": [110, 157], "male": [110, 157], "femal": [110, 157], "present": [110, 114], "et": 110, "al": 110, "www": [110, 145], "scienc": 110, "org": 110, "stoken": 110, "author": 110, "token": 110, "st": 110, "119": 110, "figur": [110, 141], "same": [110, 139], "precalculate_data": 110, "preconfigur": 110, "so": [110, 114, 157], "doe": [110, 114, 156], "need": [110, 111, 114, 121, 157], "recalcul": 110, "through": [110, 114], "up": [110, 114, 157], "y_i": 110, "y_hat_i": 110, "m": [110, 114, 157], "y_j": 110, "y_hat_j": 110, "There": [110, 114, 157], "mai": [110, 133, 157], "row": [110, 157], "n_male": 110, "n_femal": 110, "left": [111, 114, 157], "right": [111, 114], "will_lower_bound": 111, "will_upper_bound": 111, "global": [112, 157], "construct": [112, 157], "measure_functions_dict": 112, "sub_regim": [112, 114, 115, 124, 157], "appear": [112, 114, 157], "recogn": 112, "special": [112, 157], "organ": 112, "sub": [112, 114, 157], "refer": [112, 157], "pr": [112, 114, 157], "nr": 112, "tpr": [112, 157], "fnr": 112, "tnr": 112, "logistic_loss": [112, 156], "mean_error": [112, 114, 156], "mean_squared_error": [112, 156, 157], "reinforc": [112, 157], "j_pi_new": [112, 157], "custom_base_node_dict": 112, "map": 112, "node": [112, 114, 118, 156, 157], "op_mapp": 112, "ast": [112, 114], "those": 112, "thei": [112, 139, 157], "not_supported_op_mapp": 112, "bounds_required_dict": 112, "If": [112, 114, 122, 123, 124, 139, 155, 156], "two": [112, 114, 157], "children": [112, 114], "boolean": [112, 157], "like": [112, 114, 157], "need_a_low": 112, "need_a_upp": 112, "need_b_low": 112, "need_b_upp": 112, "one": [112, 114, 122, 123, 124, 157], "singl": [114, 157], "can": [114, 157], "ml": [114, 157], "determin": 114, "user": [114, 139, 157], "appropri": 114, "root": [114, 118], "via": [114, 157], "assign": 114, "built": [114, 122, 123, 124, 157], "constraint_str": [114, 115, 125, 126], "express": [114, 157], "n_node": 114, "n_base_nod": 114, "more": [114, 157], "onc": [114, 157], "contribut": 114, "base_node_dict": 114, "keep": 114, "track": 114, "uniqu": 114, "been": [114, 157], "alreadi": [114, 157], "help": [114, 145], "handl": 114, "case": [114, 157], "duplic": 114, "node_fonts": 114, "fontsiz": 114, "graphviz": [114, 155], "available_measure_funct": 114, "_ab": 114, "absolut": [114, 157], "interv": [114, 118], "tupl": [114, 120, 157], "_add": 114, "_assign_bounds_help": 114, "lower_need": 114, "upper_need": 114, "travers": 114, "_assign_deltas_help": 114, "weight_method": 114, "how": [114, 157], "_ast2pt_nod": 114, "ast_nod": 114, "_ast_tree_help": 114, "make": [114, 141, 157], "recurs": 114, "_div": 114, "divid": 114, "_evaluator_help": 114, "_exp": 114, "_max": 114, "_min": 114, "_mult": 114, "_pow": 114, "pow": 114, "both": [114, 157], "_preprocess_constraint_str": 114, "inequ": [114, 157], "move": 114, "everyth": 114, "final": 114, "form": 114, "some": [114, 157], "sure": 114, "mathemat": [114, 157], "written": [114, 157], "python": [114, 145, 155, 157], "syntax": 114, "_propagate_valu": 114, "propag": [114, 118], "_propagator_help": 114, "_protect_nan": 114, "bound_typ": 114, "nan": 114, "infin": 114, "postit": 114, "_sub": 114, "subract": 114, "assign_bounds_need": 114, "breadth": 114, "search": 114, "decid": 114, "eventu": 114, "necessari": 114, "becaus": 114, "end": [114, 157], "care": 114, "assign_delta": 114, "split": [114, 157], "among": 114, "build_tre": 114, "delta_weight_method": [114, 115], "create_from_ast": 114, "structur": 114, "evaluate_constraint": 114, "itself": 114, "postord": 114, "logic": 114, "make_viz": 114, "titl": 114, "diagram": 114, "top": [114, 157], "make_viz_help": 114, "edg": 114, "digraph": 114, "propagate_bound": 114, "reset_base_node_dict": 114, "reset_data": 114, "cach": 114, "less": [114, 118, 157], "frequent": 114, "safety_dataset": 118, "normalize_return": [118, 122], "relev": 118, "min_return": 118, "max_return": 118, "loop": 118, "found": [118, 120, 157], "spec": [120, 156], "introspect": 120, "complet": [120, 156, 157], "candidate_select": [120, 156], "write_cs_logfil": 120, "store_cs_valu": 120, "branch": 120, "either": [120, 157], "just": 120, "safety_test": [120, 156, 157], "result": [120, 157], "evolut": [120, 141, 157], "passed_safeti": [120, 157], "indic": [120, 157], "model_class": [122, 123, 124], "frac_data_in_safeti": [122, 123, 124, 125], "initial_solution_fn": [122, 123, 124, 125], "rl_policy_obj": 122, "base_node_bound_method_dict": [122, 123, 124], "use_builtin_primary_gradient_fn": [122, 123, 124, 125], "custom_primary_gradient_fn": [122, 123, 124], "optimization_hyperparam": [122, 123, 124, 157], "005": [122, 123, 124], "95": [122, 123, 124], "hyper_search": [122, 123, 124], "regularization_hyperparam": [122, 123, 124], "fraction": [122, 123, 124], "remain": [122, 123, 124], "rl_environment_obj": 122, "exist": [122, 123, 124], "fall": [122, 123, 124], "builtin": [122, 123, 124], "ttest": [122, 123, 124], "hyperparamet": [122, 123, 124, 157], "regular": [122, 123, 124], "usable_opt_dict": [122, 123, 124], "show": [122, 123, 124, 139, 141], "accept": [122, 123, 124, 157], "techniqu": [122, 123, 124, 157], "save": [125, 126, 138, 141], "save_dir": [125, 126], "metadata_pth": 126, "supervisedspec": [126, 156, 157], "pkl": [126, 157], "path": [126, 133, 141], "directori": [126, 133], "flag": [126, 157], "control": [126, 157], "array_in": 129, "val_in": 130, "min_val": 130, "max_val": 130, "output_str": 131, "json": [134, 136, 137, 157], "indent": 137, "abl": 138, "str_to_show": 139, "default_str": 139, "default_v": 139, "ye": 139, "question": 139, "gather": 139, "command": [139, 157], "line": [139, 157], "invalid": 139, "let": [139, 157], "them": 139, "know": [139, 157], "again": 139, "shown": [139, 157], "enter": 139, "noth": 139, "primary_objective_nam": 141, "savenam": 141, "png": 141, "dot": 141, "plot": 141, "numpoint": 143, "loc_x": [143, 148, 149, 150], "loc_i": [143, 148, 149, 150], "sigma_x": [143, 148, 149, 150], "sigma_i": [143, 148, 149, 150], "2d": [143, 148, 149], "random": [143, 148, 149], "center": [143, 148, 149], "distribut": [143, 148, 149], "standard": [143, 144, 148, 149], "deviat": [143, 144, 148, 149], "v": 144, "bessel": 144, "correct": 144, "nu": 145, "invers": [145, 157], "student": 145, "cdf": 145, "degre": 145, "freedom": 145, "correspond": [145, 157], "matlab": 145, "mathwork": 145, "com": 145, "stat": 145, "html": 145, "arr": 146, "num_point": [148, 149, 150], "clip_min": [148, 150], "clip_max": [148, 150], "clip": 150, "msg": 153, "lineno": 153, "arg": 153, "seldonian": [155, 157], "pip": 155, "Then": 155, "system": 155, "wide": 155, "recommend": 155, "welcom": 156, "core": 156, "toolkit": [156, 157], "sourc": 156, "code": [156, 157], "host": 156, "github": 156, "overview": 156, "interfac": 156, "sa": 156, "do": 156, "start": 156, "instal": 156, "tutori": [156, 157], "api": [156, 157], "agent": [156, 157], "fourier": 156, "discrete_random_ag": 156, "function_approxim": 156, "linear_fa": 156, "linear_state_action_value_fa": 156, "construct_q_table_from_env_descript": 156, "parameterized_non_learning_softmax_ag": [156, 157], "keyboard_gridworld": 156, "mountain_car_rough_solut": 156, "check_space_typ": 156, "continuous_spac": 156, "rl_model": [156, 157], "gridworld": [156, 157], "mountaincar": 156, "n_step_mountaincar": 156, "hyperparams_and_set": 156, "define_hyperparameter_and_setting_dict": 156, "candidateselect": [156, 157], "datasetload": [156, 157], "boundedlinearregressionmodel": 156, "dummyclassifiermodel": 156, "logisticregressionmodel": [156, 157], "randomclassifiermodel": 156, "false_negative_r": 156, "false_positive_r": 156, "is_estim": 156, "negative_r": 156, "positive_r": 156, "true_negative_r": 156, "true_positive_r": 156, "evaluate_statist": 156, "gradient_bounded_squared_error": 156, "gradient_mean_squared_error": 156, "gradient_logistic_loss": 156, "sample_from_statist": 156, "vector_error": 156, "vector_false_negative_r": 156, "vector_false_positive_r": 156, "vector_is_estim": 156, "vector_negative_r": 156, "vector_positive_r": 156, "vector_squared_error": 156, "vector_true_negative_r": 156, "vector_true_positive_r": 156, "vector_logistic_loss": 156, "vector_weighted_loss": 156, "weighted_loss": 156, "gradient_descent_adam": 156, "setup_gradi": 156, "cvarsqebasenod": 156, "constantnod": 156, "internalnod": 156, "medcustombasenod": 156, "make_parse_trees_from_constraint": 156, "safetytest": [156, 157], "seldonian_algorithm": [156, 157], "seldonianalgorithm": [156, 157], "createrlspec": [156, 157], "createsupervisedspec": [156, 157], "rlspec": [156, 157], "util": [156, 157], "rl_util": 156, "argmax_multi": 156, "clamp": 156, "io_util": [156, 157], "dir_path": 156, "load_json": 156, "load_pickl": [156, 157], "load_supervised_metadata": 156, "save_json": 156, "save_pickl": 156, "yes_or_no_input": 156, "plot_util": 156, "plot_gradient_desc": 156, "stats_util": 156, "generate_data": 156, "stddev": 156, "tinv": 156, "weighted_sum_gamma": 156, "tutorial_util": 156, "generate_clipped_data": 156, "make_synthetic_regression_dataset": 156, "warn": 156, "custom_warn": 156, "custom_formatwarn": 156, "document": 157, "detail": 157, "homepag": 157, "most": 157, "piec": 157, "One": 157, "In": 157, "cover": 157, "note": 157, "could": 157, "unifi": 157, "work": 157, "howev": 157, "notic": 157, "pattern": 157, "inherit": 157, "concept": 157, "conceptu": 157, "enforc": 157, "consist": 157, "develop": 157, "design": 157, "applic": 157, "part": 157, "graphic": 157, "short": 157, "underli": 157, "discuss": 157, "below": 157, "well": 157, "manual": 157, "loader": 157, "comma": 157, "separ": 157, "header": 157, "categor": 157, "numer": 157, "encod": 157, "might": 157, "look": 157, "622": 157, "491": 157, "56": 157, "439": 157, "93": 157, "707": 157, "64": 157, "663": 157, "65": 157, "557": 157, "09": 157, "711": 157, "37": 157, "731": 157, "31": 157, "509": 157, "33333": 157, "538": 157, "490": 157, "58": 157, "406": 157, "59": 157, "529": 157, "532": 157, "28": 157, "447": 157, "23": 157, "527": 157, "379": 157, "14": 157, "488": 157, "98333": 157, "455": 157, "18": 157, "440": 157, "570": 157, "86": 157, "417": 157, "54": 157, "453": 157, "53": 157, "425": 157, "87": 157, "475": 157, "63": 157, "476": 157, "11": 157, "407": 157, "15": 157, "97333": 157, "756": 157, "91": 157, "679": 157, "62": 157, "531": 157, "583": 157, "534": 157, "42": 157, "521": 157, "592": 157, "41": 157, "783": 157, "76": 157, "588": 157, "26": 157, "53333": 157, "should": 157, "befor": 157, "partit": 157, "your": 157, "intention": 157, "exclud": 157, "kei": 157, "problem": 157, "try": 157, "sensitive_column": 157, "rl_module_nam": 157, "within": 157, "rl_class_nam": 157, "biggest": 157, "essenti": 157, "wrap": 157, "scikit": 157, "linearregress": 157, "unless": 157, "own": 157, "best": 157, "though": 157, "chosen": 157, "explicitli": 157, "thing": 157, "live": 157, "likewis": 157, "inact": 157, "illustr": 157, "extend": 157, "g_i": 157, "_i": 157, "_": 157, "n": 157, "directli": 157, "often": 157, "five": 157, "follow": 157, "math": 157, "four": 157, "nativ": 157, "ab": 157, "exp": 157, "integ": 157, "239": 157, "trigger": 157, "open": 157, "ad": 157, "It": 157, "someth": 157, "other": 157, "wai": 157, "wrote": 157, "instruct": 157, "option": 157, "recal": 157, "leq": 157, "satisfi": 157, "cumbersom": 157, "symbol": 157, "interpret": 157, "ident": 157, "themselv": 157, "tri": 157, "few": 157, "basic": 157, "plain": 157, "english": 157, "88": 157, "greater": 157, "commonli": 157, "fair": 157, "filter": 157, "atr1": 157, "atr2": 157, "placehold": 157, "parenthes": 157, "surround": 157, "statement": 157, "sai": 157, "r1": 157, "r2": 157, "stand": 157, "race": 157, "demograph": 157, "pariti": 157, "toler": 157, "ratio": 157, "dispar": 157, "impact": 157, "anoth": 157, "permit": 157, "belong": 157, "bundl": 157, "block": 157, "page": 157, "At": 157, "broad": 157, "scope": 157, "No": 157, "throught": 157, "now": 157, "happen": 157, "even": 157, "low": 157, "process": 157, "black": 157, "forc": 157, "toward": 157, "feasibl": 157, "cg": 157, "nelder": 157, "mead": 157, "bfg": 157, "cma": 157, "scipi": 157, "minim": 157, "solver": 157, "covari": 157, "matrix": 157, "adapt": 157, "strategi": 157, "mathcal": 157, "mathbf": 157, "lambda_i": 157, "text": 157, "hcub": 157, "ith": 157, "kkt": 157, "h_i": 157, "optima": 157, "quad": 157, "ldot": 157, "our": 157, "obtain": 157, "situat": 157, "contraint": 157, "conflict": 157, "vanilla": 157, "oscil": 157, "boundari": 157, "dampen": 157, "momentum": 157, "mitig": 157, "far": 157, "therefor": 157, "deem": 157, "assembl": 157, "interact": 157}, "objects": {"": [[0, 0, 0, "-", "seldonian"]], "seldonian": [[1, 0, 0, "-", "RL"], [52, 0, 0, "-", "candidate_selection"], [55, 0, 0, "-", "dataset"], [61, 0, 0, "-", "models"], [100, 0, 0, "-", "optimizers"], [104, 0, 0, "-", "parse_tree"], [116, 0, 0, "-", "safety_test"], [119, 0, 0, "-", "seldonian_algorithm"], [121, 0, 0, "-", "spec"], [127, 0, 0, "-", "utils"], [151, 0, 0, "-", "warnings"]], "seldonian.RL": [[2, 0, 0, "-", "Agents"], [32, 0, 0, "-", "Env_Description"], [39, 0, 0, "-", "RL_model"], [41, 0, 0, "-", "environments"], [50, 0, 0, "-", "hyperparams_and_settings"]], "seldonian.RL.Agents": [[3, 0, 0, "-", "Agent"], [5, 0, 0, "-", "Bases"], [8, 0, 0, "-", "Discrete_Random_Agent"], [10, 0, 0, "-", "Function_Approximators"], [20, 0, 0, "-", "Parameterized_non_learning_softmax_agent"], [22, 0, 0, "-", "Policies"], [28, 0, 0, "-", "keyboard_gridworld"], [30, 0, 0, "-", "mountain_car_rough_solution"]], "seldonian.RL.Agents.Agent": [[4, 1, 1, "", "Agent"]], "seldonian.RL.Agents.Agent.Agent": [[4, 2, 1, "", "__init__"], [4, 2, 1, "", "__repr__"], [4, 2, 1, "", "choose_action"], [4, 2, 1, "", "get_prob_this_action"], [4, 2, 1, "", "update"]], "seldonian.RL.Agents.Bases": [[6, 0, 0, "-", "Fourier"]], "seldonian.RL.Agents.Bases.Fourier": [[7, 1, 1, "", "Fourier"]], "seldonian.RL.Agents.Bases.Fourier.Fourier": [[7, 2, 1, "", "__init__"], [7, 2, 1, "", "__repr__"]], "seldonian.RL.Agents.Discrete_Random_Agent": [[9, 1, 1, "", "Discrete_Random_Agent"]], "seldonian.RL.Agents.Discrete_Random_Agent.Discrete_Random_Agent": [[9, 2, 1, "", "__init__"], [9, 2, 1, "", "__repr__"], [9, 2, 1, "", "choose_action"], [9, 2, 1, "", "get_prob_this_action"], [9, 2, 1, "", "update"]], "seldonian.RL.Agents.Function_Approximators": [[11, 0, 0, "-", "Function_Approximator"], [13, 0, 0, "-", "Linear_FA"], [16, 0, 0, "-", "Table"]], "seldonian.RL.Agents.Function_Approximators.Function_Approximator": [[12, 1, 1, "", "Function_Approximator"]], "seldonian.RL.Agents.Function_Approximators.Function_Approximator.Function_Approximator": [[12, 2, 1, "", "__init__"], [12, 2, 1, "", "__repr__"]], "seldonian.RL.Agents.Function_Approximators.Linear_FA": [[14, 1, 1, "", "Linear_FA"], [15, 1, 1, "", "Linear_state_action_value_FA"]], "seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_FA": [[14, 2, 1, "", "__init__"], [14, 2, 1, "", "__repr__"]], "seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_state_action_value_FA": [[15, 2, 1, "", "__init__"], [15, 2, 1, "", "__repr__"]], "seldonian.RL.Agents.Function_Approximators.Table": [[17, 1, 1, "", "Q_Table"], [18, 1, 1, "", "Table"], [19, 3, 1, "", "construct_Q_Table_From_Env_Description"]], "seldonian.RL.Agents.Function_Approximators.Table.Q_Table": [[17, 2, 1, "", "__init__"], [17, 2, 1, "", "__repr__"], [17, 2, 1, "", "from_environment_state_to_0_indexed_state"], [17, 2, 1, "", "get_action_values_given_state"], [17, 2, 1, "", "get_action_values_given_zero_indexed_state"]], "seldonian.RL.Agents.Function_Approximators.Table.Table": [[18, 2, 1, "", "__init__"], [18, 2, 1, "", "__repr__"], [18, 2, 1, "", "from_environment_state_to_0_indexed_state"]], "seldonian.RL.Agents.Parameterized_non_learning_softmax_agent": [[21, 1, 1, "", "Parameterized_non_learning_softmax_agent"]], "seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.Parameterized_non_learning_softmax_agent": [[21, 2, 1, "", "__init__"], [21, 2, 1, "", "__repr__"], [21, 2, 1, "", "choose_action"], [21, 2, 1, "", "get_action_values"], [21, 2, 1, "", "get_params"], [21, 2, 1, "", "get_prob_this_action"], [21, 2, 1, "", "set_new_params"], [21, 2, 1, "", "update"]], "seldonian.RL.Agents.Policies": [[23, 0, 0, "-", "Policy"], [26, 0, 0, "-", "Softmax"]], "seldonian.RL.Agents.Policies.Policy": [[24, 1, 1, "", "Discrete_Action_Policy"], [25, 1, 1, "", "Policy"]], "seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy": [[24, 2, 1, "", "__init__"], [24, 2, 1, "", "__repr__"], [24, 2, 1, "", "construct_basis_and_linear_FA"], [24, 2, 1, "", "get_params"], [24, 2, 1, "", "make_state_action_FA"], [24, 2, 1, "", "set_new_params"]], "seldonian.RL.Agents.Policies.Policy.Policy": [[25, 2, 1, "", "__init__"], [25, 2, 1, "", "__repr__"]], "seldonian.RL.Agents.Policies.Softmax": [[27, 1, 1, "", "Softmax"]], "seldonian.RL.Agents.Policies.Softmax.Softmax": [[27, 2, 1, "", "__init__"], [27, 2, 1, "", "__repr__"], [27, 2, 1, "", "choose_action"], [27, 2, 1, "", "construct_basis_and_linear_FA"], [27, 2, 1, "", "get_params"], [27, 2, 1, "", "get_prob_this_action"], [27, 2, 1, "", "make_state_action_FA"], [27, 2, 1, "", "set_new_params"]], "seldonian.RL.Agents.keyboard_gridworld": [[29, 1, 1, "", "Keyboard_gridworld"]], "seldonian.RL.Agents.keyboard_gridworld.Keyboard_gridworld": [[29, 2, 1, "", "__init__"], [29, 2, 1, "", "__repr__"], [29, 2, 1, "", "choose_action"], [29, 2, 1, "", "get_prob_this_action"], [29, 2, 1, "", "update"]], "seldonian.RL.Agents.mountain_car_rough_solution": [[31, 1, 1, "", "Mountain_car_rough_solution"]], "seldonian.RL.Agents.mountain_car_rough_solution.Mountain_car_rough_solution": [[31, 2, 1, "", "__init__"], [31, 2, 1, "", "__repr__"], [31, 2, 1, "", "choose_action"], [31, 2, 1, "", "get_prob_this_action"], [31, 2, 1, "", "update"]], "seldonian.RL.Env_Description": [[33, 0, 0, "-", "Env_Description"], [36, 0, 0, "-", "Spaces"]], "seldonian.RL.Env_Description.Env_Description": [[34, 1, 1, "", "Env_Description"], [35, 3, 1, "", "check_space_type"]], "seldonian.RL.Env_Description.Env_Description.Env_Description": [[34, 2, 1, "", "__init__"], [34, 2, 1, "", "__repr__"], [34, 2, 1, "", "get_min_action"], [34, 2, 1, "", "get_min_state"], [34, 2, 1, "", "get_num_actions"], [34, 2, 1, "", "get_num_observation_dims"], [34, 2, 1, "", "get_num_states"]], "seldonian.RL.Env_Description.Spaces": [[37, 1, 1, "", "Continuous_Space"], [38, 1, 1, "", "Discrete_Space"]], "seldonian.RL.Env_Description.Spaces.Continuous_Space": [[37, 2, 1, "", "__init__"], [37, 2, 1, "", "__repr__"], [37, 2, 1, "", "check_bounds_valid"], [37, 2, 1, "", "get_num_dims"]], "seldonian.RL.Env_Description.Spaces.Discrete_Space": [[38, 2, 1, "", "__init__"], [38, 2, 1, "", "__repr__"], [38, 2, 1, "", "get_num_values"]], "seldonian.RL.RL_model": [[40, 1, 1, "", "RL_model"]], "seldonian.RL.RL_model.RL_model": [[40, 2, 1, "", "__init__"], [40, 2, 1, "", "__repr__"]], "seldonian.RL.environments": [[42, 0, 0, "-", "Environment"], [44, 0, 0, "-", "gridworld"], [46, 0, 0, "-", "mountaincar"], [48, 0, 0, "-", "n_step_mountaincar"]], "seldonian.RL.environments.Environment": [[43, 1, 1, "", "Environment"]], "seldonian.RL.environments.Environment.Environment": [[43, 2, 1, "", "__init__"], [43, 2, 1, "", "__repr__"], [43, 2, 1, "", "get_env_description"], [43, 2, 1, "", "get_observation"], [43, 2, 1, "", "reset"], [43, 2, 1, "", "start_visualizing"], [43, 2, 1, "", "stop_visualizing"], [43, 2, 1, "", "terminated"], [43, 2, 1, "", "transition"], [43, 2, 1, "", "visualize"]], "seldonian.RL.environments.gridworld": [[45, 1, 1, "", "Gridworld"]], "seldonian.RL.environments.gridworld.Gridworld": [[45, 2, 1, "", "__init__"], [45, 2, 1, "", "__repr__"], [45, 2, 1, "", "create_env_description"], [45, 2, 1, "", "get_env_description"], [45, 2, 1, "", "get_observation"], [45, 2, 1, "", "is_in_goal_state"], [45, 2, 1, "", "reset"], [45, 2, 1, "", "start_visualizing"], [45, 2, 1, "", "stop_visualizing"], [45, 2, 1, "", "terminated"], [45, 2, 1, "", "transition"], [45, 2, 1, "", "update_position"], [45, 2, 1, "", "visualize"]], "seldonian.RL.environments.mountaincar": [[47, 1, 1, "", "Mountaincar"]], "seldonian.RL.environments.mountaincar.Mountaincar": [[47, 2, 1, "", "__init__"], [47, 2, 1, "", "__repr__"], [47, 2, 1, "", "get_env_description"], [47, 2, 1, "", "get_observation"], [47, 2, 1, "", "reset"], [47, 2, 1, "", "start_visualizing"], [47, 2, 1, "", "stop_visualizing"], [47, 2, 1, "", "terminated"], [47, 2, 1, "", "transition"], [47, 2, 1, "", "visualize"]], "seldonian.RL.environments.n_step_mountaincar": [[49, 1, 1, "", "N_step_mountaincar"]], "seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar": [[49, 2, 1, "", "__init__"], [49, 2, 1, "", "__repr__"], [49, 2, 1, "", "get_env_description"], [49, 2, 1, "", "get_observation"], [49, 2, 1, "", "reset"], [49, 2, 1, "", "start_visualizing"], [49, 2, 1, "", "stop_visualizing"], [49, 2, 1, "", "terminated"], [49, 2, 1, "", "transition"], [49, 2, 1, "", "visualize"]], "seldonian.RL.hyperparams_and_settings": [[51, 3, 1, "", "define_hyperparameter_and_setting_dict"]], "seldonian.candidate_selection": [[53, 0, 0, "-", "candidate_selection"]], "seldonian.candidate_selection.candidate_selection": [[54, 1, 1, "", "CandidateSelection"]], "seldonian.candidate_selection.candidate_selection.CandidateSelection": [[54, 2, 1, "", "__init__"], [54, 2, 1, "", "__repr__"], [54, 2, 1, "", "evaluate_primary_objective"], [54, 2, 1, "", "get_constraint_upper_bounds"], [54, 2, 1, "", "objective_with_barrier"], [54, 2, 1, "", "run"]], "seldonian.dataset": [[56, 1, 1, "", "DataSet"], [57, 1, 1, "", "DataSetLoader"], [58, 1, 1, "", "Episode"], [59, 1, 1, "", "RLDataSet"], [60, 1, 1, "", "SupervisedDataSet"]], "seldonian.dataset.DataSet": [[56, 2, 1, "", "__init__"], [56, 2, 1, "", "__repr__"]], "seldonian.dataset.DataSetLoader": [[57, 2, 1, "", "__init__"], [57, 2, 1, "", "__repr__"], [57, 2, 1, "", "load_RL_dataset_from_csv"], [57, 2, 1, "", "load_RL_dataset_from_episode_file"], [57, 2, 1, "", "load_supervised_dataset"]], "seldonian.dataset.Episode": [[58, 2, 1, "", "__init__"], [58, 2, 1, "", "__repr__"]], "seldonian.dataset.RLDataSet": [[59, 2, 1, "", "__init__"], [59, 2, 1, "", "__repr__"]], "seldonian.dataset.SupervisedDataSet": [[60, 2, 1, "", "__init__"], [60, 2, 1, "", "__repr__"]], "seldonian.models": [[62, 0, 0, "-", "models"], [72, 0, 0, "-", "objectives"]], "seldonian.models.models": [[63, 1, 1, "", "BoundedLinearRegressionModel"], [64, 1, 1, "", "ClassificationModel"], [65, 1, 1, "", "DummyClassifierModel"], [66, 1, 1, "", "LinearRegressionModel"], [67, 1, 1, "", "LogisticRegressionModel"], [68, 1, 1, "", "RandomClassifierModel"], [69, 1, 1, "", "RegressionModel"], [70, 1, 1, "", "SeldonianModel"], [71, 1, 1, "", "SupervisedModel"]], "seldonian.models.models.BoundedLinearRegressionModel": [[63, 2, 1, "", "__init__"], [63, 2, 1, "", "__repr__"], [63, 2, 1, "", "fit"], [63, 2, 1, "", "predict"]], "seldonian.models.models.ClassificationModel": [[64, 2, 1, "", "__init__"], [64, 2, 1, "", "__repr__"]], "seldonian.models.models.DummyClassifierModel": [[65, 2, 1, "", "__init__"], [65, 2, 1, "", "__repr__"], [65, 2, 1, "", "predict"]], "seldonian.models.models.LinearRegressionModel": [[66, 2, 1, "", "__init__"], [66, 2, 1, "", "__repr__"], [66, 2, 1, "", "fit"], [66, 2, 1, "", "predict"]], "seldonian.models.models.LogisticRegressionModel": [[67, 2, 1, "", "__init__"], [67, 2, 1, "", "__repr__"], [67, 2, 1, "", "fit"], [67, 2, 1, "", "predict"]], "seldonian.models.models.RandomClassifierModel": [[68, 2, 1, "", "__init__"], [68, 2, 1, "", "__repr__"], [68, 2, 1, "", "predict"]], "seldonian.models.models.RegressionModel": [[69, 2, 1, "", "__init__"], [69, 2, 1, "", "__repr__"]], "seldonian.models.models.SeldonianModel": [[70, 2, 1, "", "__init__"], [70, 2, 1, "", "__repr__"]], "seldonian.models.models.SupervisedModel": [[71, 2, 1, "", "__init__"], [71, 2, 1, "", "__repr__"]], "seldonian.models.objectives": [[73, 3, 1, "", "False_Negative_Rate"], [74, 3, 1, "", "False_Positive_Rate"], [75, 3, 1, "", "IS_estimate"], [76, 3, 1, "", "Mean_Error"], [77, 3, 1, "", "Mean_Squared_Error"], [78, 3, 1, "", "Negative_Rate"], [79, 3, 1, "", "Positive_Rate"], [80, 3, 1, "", "True_Negative_Rate"], [81, 3, 1, "", "True_Positive_Rate"], [82, 3, 1, "", "evaluate_statistic"], [83, 3, 1, "", "gradient_Bounded_Squared_Error"], [84, 3, 1, "", "gradient_Mean_Squared_Error"], [85, 3, 1, "", "gradient_logistic_loss"], [86, 3, 1, "", "logistic_loss"], [87, 3, 1, "", "sample_from_statistic"], [88, 3, 1, "", "vector_Error"], [89, 3, 1, "", "vector_False_Negative_Rate"], [90, 3, 1, "", "vector_False_Positive_Rate"], [91, 3, 1, "", "vector_IS_estimate"], [92, 3, 1, "", "vector_Negative_Rate"], [93, 3, 1, "", "vector_Positive_Rate"], [94, 3, 1, "", "vector_Squared_Error"], [95, 3, 1, "", "vector_True_Negative_Rate"], [96, 3, 1, "", "vector_True_Positive_Rate"], [97, 3, 1, "", "vector_logistic_loss"], [98, 3, 1, "", "vector_weighted_loss"], [99, 3, 1, "", "weighted_loss"]], "seldonian.optimizers": [[101, 0, 0, "-", "gradient_descent"]], "seldonian.optimizers.gradient_descent": [[102, 3, 1, "", "gradient_descent_adam"], [103, 3, 1, "", "setup_gradients"]], "seldonian.parse_tree": [[105, 0, 0, "-", "nodes"], [112, 0, 0, "-", "operators"], [113, 0, 0, "-", "parse_tree"]], "seldonian.parse_tree.nodes": [[106, 1, 1, "", "BaseNode"], [107, 1, 1, "", "CVaRSQeBaseNode"], [108, 1, 1, "", "ConstantNode"], [109, 1, 1, "", "InternalNode"], [110, 1, 1, "", "MEDCustomBaseNode"], [111, 1, 1, "", "Node"]], "seldonian.parse_tree.nodes.BaseNode": [[106, 2, 1, "", "__init__"], [106, 2, 1, "", "__repr__"], [106, 2, 1, "", "calculate_bounds"], [106, 2, 1, "", "calculate_data_forbound"], [106, 2, 1, "", "calculate_value"], [106, 2, 1, "", "compute_HC_lowerbound"], [106, 2, 1, "", "compute_HC_upper_and_lowerbound"], [106, 2, 1, "", "compute_HC_upperbound"], [106, 2, 1, "", "mask_dataframe"], [106, 2, 1, "", "predict_HC_lowerbound"], [106, 2, 1, "", "predict_HC_upper_and_lowerbound"], [106, 2, 1, "", "predict_HC_upperbound"], [106, 2, 1, "", "zhat"]], "seldonian.parse_tree.nodes.CVaRSQeBaseNode": [[107, 2, 1, "", "__init__"], [107, 2, 1, "", "__repr__"], [107, 2, 1, "", "calculate_bounds"], [107, 2, 1, "", "calculate_data_forbound"], [107, 2, 1, "", "calculate_value"], [107, 2, 1, "", "compute_HC_lowerbound"], [107, 2, 1, "", "compute_HC_upper_and_lowerbound"], [107, 2, 1, "", "compute_HC_upperbound"], [107, 2, 1, "", "mask_dataframe"], [107, 2, 1, "", "predict_HC_lowerbound"], [107, 2, 1, "", "predict_HC_upper_and_lowerbound"], [107, 2, 1, "", "predict_HC_upperbound"], [107, 2, 1, "", "zhat"]], "seldonian.parse_tree.nodes.ConstantNode": [[108, 2, 1, "", "__init__"], [108, 2, 1, "", "__repr__"]], "seldonian.parse_tree.nodes.InternalNode": [[109, 2, 1, "", "__init__"], [109, 2, 1, "", "__repr__"]], "seldonian.parse_tree.nodes.MEDCustomBaseNode": [[110, 2, 1, "", "__init__"], [110, 2, 1, "", "__repr__"], [110, 2, 1, "", "calculate_bounds"], [110, 2, 1, "", "calculate_data_forbound"], [110, 2, 1, "", "calculate_value"], [110, 2, 1, "", "compute_HC_lowerbound"], [110, 2, 1, "", "compute_HC_upper_and_lowerbound"], [110, 2, 1, "", "compute_HC_upperbound"], [110, 2, 1, "", "mask_dataframe"], [110, 2, 1, "", "precalculate_data"], [110, 2, 1, "", "predict_HC_lowerbound"], [110, 2, 1, "", "predict_HC_upper_and_lowerbound"], [110, 2, 1, "", "predict_HC_upperbound"], [110, 2, 1, "", "zhat"]], "seldonian.parse_tree.nodes.Node": [[111, 2, 1, "", "__init__"], [111, 2, 1, "", "__repr__"]], "seldonian.parse_tree.operators": [[112, 4, 1, "", "bounds_required_dict"], [112, 4, 1, "", "custom_base_node_dict"], [112, 4, 1, "", "measure_functions_dict"], [112, 4, 1, "", "not_supported_op_mapper"], [112, 4, 1, "", "op_mapper"]], "seldonian.parse_tree.parse_tree": [[114, 1, 1, "", "ParseTree"], [115, 3, 1, "", "make_parse_trees_from_constraints"]], "seldonian.parse_tree.parse_tree.ParseTree": [[114, 2, 1, "", "__init__"], [114, 2, 1, "", "__repr__"], [114, 2, 1, "", "_abs"], [114, 2, 1, "", "_add"], [114, 2, 1, "", "_assign_bounds_helper"], [114, 2, 1, "", "_assign_deltas_helper"], [114, 2, 1, "", "_ast2pt_node"], [114, 2, 1, "", "_ast_tree_helper"], [114, 2, 1, "", "_div"], [114, 2, 1, "", "_evaluator_helper"], [114, 2, 1, "", "_exp"], [114, 2, 1, "", "_max"], [114, 2, 1, "", "_min"], [114, 2, 1, "", "_mult"], [114, 2, 1, "", "_pow"], [114, 2, 1, "", "_preprocess_constraint_str"], [114, 2, 1, "", "_propagate_value"], [114, 2, 1, "", "_propagator_helper"], [114, 2, 1, "", "_protect_nan"], [114, 2, 1, "", "_sub"], [114, 2, 1, "", "assign_bounds_needed"], [114, 2, 1, "", "assign_deltas"], [114, 2, 1, "", "build_tree"], [114, 2, 1, "", "create_from_ast"], [114, 2, 1, "", "evaluate_constraint"], [114, 2, 1, "", "make_viz"], [114, 2, 1, "", "make_viz_helper"], [114, 2, 1, "", "propagate"], [114, 2, 1, "", "propagate_bounds"], [114, 2, 1, "", "reset_base_node_dict"]], "seldonian.safety_test": [[117, 0, 0, "-", "safety_test"]], "seldonian.safety_test.safety_test": [[118, 1, 1, "", "SafetyTest"]], "seldonian.safety_test.safety_test.SafetyTest": [[118, 2, 1, "", "__init__"], [118, 2, 1, "", "__repr__"], [118, 2, 1, "", "evaluate_primary_objective"], [118, 2, 1, "", "run"]], "seldonian.seldonian_algorithm": [[120, 1, 1, "", "SeldonianAlgorithm"]], "seldonian.seldonian_algorithm.SeldonianAlgorithm": [[120, 2, 1, "", "__init__"], [120, 2, 1, "", "__repr__"], [120, 2, 1, "", "candidate_selection"], [120, 2, 1, "", "evaluate_primary_objective"], [120, 2, 1, "", "run"], [120, 2, 1, "", "safety_test"]], "seldonian.spec": [[122, 1, 1, "", "RLSpec"], [123, 1, 1, "", "Spec"], [124, 1, 1, "", "SupervisedSpec"], [125, 3, 1, "", "createRLSpec"], [126, 3, 1, "", "createSupervisedSpec"]], "seldonian.spec.RLSpec": [[122, 2, 1, "", "__init__"], [122, 2, 1, "", "__repr__"]], "seldonian.spec.Spec": [[123, 2, 1, "", "__init__"], [123, 2, 1, "", "__repr__"]], "seldonian.spec.SupervisedSpec": [[124, 2, 1, "", "__init__"], [124, 2, 1, "", "__repr__"]], "seldonian.utils": [[128, 0, 0, "-", "RL_utils"], [132, 0, 0, "-", "io_utils"], [140, 0, 0, "-", "plot_utils"], [142, 0, 0, "-", "stats_utils"], [147, 0, 0, "-", "tutorial_utils"]], "seldonian.utils.RL_utils": [[129, 3, 1, "", "argmax_multi"], [130, 3, 1, "", "clamp"], [131, 3, 1, "", "error"]], "seldonian.utils.io_utils": [[133, 3, 1, "", "dir_path"], [134, 3, 1, "", "load_json"], [135, 3, 1, "", "load_pickle"], [136, 3, 1, "", "load_supervised_metadata"], [137, 3, 1, "", "save_json"], [138, 3, 1, "", "save_pickle"], [139, 3, 1, "", "yes_or_no_input"]], "seldonian.utils.plot_utils": [[141, 3, 1, "", "plot_gradient_descent"]], "seldonian.utils.stats_utils": [[143, 3, 1, "", "generate_data"], [144, 3, 1, "", "stddev"], [145, 3, 1, "", "tinv"], [146, 3, 1, "", "weighted_sum_gamma"]], "seldonian.utils.tutorial_utils": [[148, 3, 1, "", "generate_clipped_data"], [149, 3, 1, "", "generate_data"], [150, 3, 1, "", "make_synthetic_regression_dataset"]], "seldonian.warnings": [[152, 0, 0, "-", "custom_warnings"]], "seldonian.warnings.custom_warnings": [[153, 3, 1, "", "custom_formatwarning"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "data", "Python data"]}, "titleterms": {"seldonian": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156], "rl": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51], "agent": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "base": [5, 6, 7], "fourier": [6, 7], "discrete_random_ag": [8, 9], "function_approxim": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "linear_fa": [13, 14, 15], "linear_state_action_value_fa": 15, "tabl": [16, 17, 18, 19, 156], "q_tabl": 17, "construct_q_table_from_env_descript": 19, "parameterized_non_learning_softmax_ag": [20, 21], "polici": [22, 23, 24, 25, 26, 27], "discrete_action_polici": 24, "softmax": [26, 27], "keyboard_gridworld": [28, 29], "mountain_car_rough_solut": [30, 31], "env_descript": [32, 33, 34, 35, 36, 37, 38], "check_space_typ": 35, "space": [36, 37, 38], "continuous_spac": 37, "discrete_spac": 38, "rl_model": [39, 40], "environ": [41, 42, 43, 44, 45, 46, 47, 48, 49], "gridworld": [44, 45], "mountaincar": [46, 47], "n_step_mountaincar": [48, 49], "hyperparams_and_set": [50, 51], "define_hyperparameter_and_setting_dict": 51, "candidate_select": [52, 53, 54], "candidateselect": 54, "dataset": [55, 56, 57, 58, 59, 60, 157], "datasetload": 57, "episod": 58, "rldataset": 59, "superviseddataset": 60, "model": [61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 157], "boundedlinearregressionmodel": 63, "classificationmodel": 64, "dummyclassifiermodel": 65, "linearregressionmodel": 66, "logisticregressionmodel": 67, "randomclassifiermodel": 68, "regressionmodel": 69, "seldonianmodel": 70, "supervisedmodel": 71, "object": [72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 157], "false_negative_r": 73, "false_positive_r": 74, "is_estim": 75, "mean_error": 76, "mean_squared_error": 77, "negative_r": 78, "positive_r": 79, "true_negative_r": 80, "true_positive_r": 81, "evaluate_statist": 82, "gradient_bounded_squared_error": 83, "gradient_mean_squared_error": 84, "gradient_logistic_loss": 85, "logistic_loss": 86, "sample_from_statist": 87, "vector_error": 88, "vector_false_negative_r": 89, "vector_false_positive_r": 90, "vector_is_estim": 91, "vector_negative_r": 92, "vector_positive_r": 93, "vector_squared_error": 94, "vector_true_negative_r": 95, "vector_true_positive_r": 96, "vector_logistic_loss": 97, "vector_weighted_loss": 98, "weighted_loss": 99, "optim": [100, 101, 102, 103], "gradient_desc": [101, 102, 103], "gradient_descent_adam": 102, "setup_gradi": 103, "parse_tre": [104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], "node": [105, 106, 107, 108, 109, 110, 111], "basenod": 106, "cvarsqebasenod": 107, "constantnod": 108, "internalnod": 109, "medcustombasenod": 110, "oper": 112, "parsetre": 114, "make_parse_trees_from_constraint": 115, "safety_test": [116, 117, 118], "safetytest": 118, "seldonian_algorithm": [119, 120], "seldonianalgorithm": 120, "spec": [121, 122, 123, 124, 125, 126, 157], "rlspec": 122, "supervisedspec": 124, "createrlspec": 125, "createsupervisedspec": 126, "util": [127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150], "rl_util": [128, 129, 130, 131], "argmax_multi": 129, "clamp": 130, "error": 131, "io_util": [132, 133, 134, 135, 136, 137, 138, 139], "dir_path": 133, "load_json": 134, "load_pickl": 135, "load_supervised_metadata": 136, "save_json": 137, "save_pickl": 138, "yes_or_no_input": 139, "plot_util": [140, 141], "plot_gradient_desc": 141, "stats_util": [142, 143, 144, 145, 146], "generate_data": [143, 149], "stddev": 144, "tinv": 145, "weighted_sum_gamma": 146, "tutorial_util": [147, 148, 149, 150], "generate_clipped_data": 148, "make_synthetic_regression_dataset": 150, "warn": [151, 152, 153], "custom_warn": [152, 153], "custom_formatwarn": 153, "api": 154, "get": 155, "start": 155, "instal": 155, "A": 155, "first": 155, "tutori": 155, "engin": 156, "document": 156, "content": 156, "overview": 157, "interfac": 157, "behavior": 157, "constraint": 157, "string": 157, "what": 157, "doe": 157, "sa": 157, "run": 157, "do": 157, "candid": 157, "select": 157, "safeti": 157, "test": 157}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 56}})