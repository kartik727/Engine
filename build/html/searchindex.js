Search.setIndex({"docnames": ["_autosummary/seldonian", "_autosummary/seldonian.RL", "_autosummary/seldonian.RL.Agents", "_autosummary/seldonian.RL.Agents.Agent", "_autosummary/seldonian.RL.Agents.Agent.Agent", "_autosummary/seldonian.RL.Agents.Bases", "_autosummary/seldonian.RL.Agents.Bases.Fourier", "_autosummary/seldonian.RL.Agents.Bases.Fourier.Fourier", "_autosummary/seldonian.RL.Agents.Discrete_Random_Agent", "_autosummary/seldonian.RL.Agents.Discrete_Random_Agent.Discrete_Random_Agent", "_autosummary/seldonian.RL.Agents.Function_Approximators", "_autosummary/seldonian.RL.Agents.Function_Approximators.Function_Approximator", "_autosummary/seldonian.RL.Agents.Function_Approximators.Function_Approximator.Function_Approximator", "_autosummary/seldonian.RL.Agents.Function_Approximators.Linear_FA", "_autosummary/seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_FA", "_autosummary/seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_state_action_value_FA", "_autosummary/seldonian.RL.Agents.Function_Approximators.Table", "_autosummary/seldonian.RL.Agents.Function_Approximators.Table.Q_Table", "_autosummary/seldonian.RL.Agents.Function_Approximators.Table.Table", "_autosummary/seldonian.RL.Agents.Function_Approximators.Table.construct_Q_Table_From_Env_Description", "_autosummary/seldonian.RL.Agents.Parameterized_non_learning_softmax_agent", "_autosummary/seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.Parameterized_non_learning_softmax_agent", "_autosummary/seldonian.RL.Agents.Policies", "_autosummary/seldonian.RL.Agents.Policies.Policy", "_autosummary/seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy", "_autosummary/seldonian.RL.Agents.Policies.Policy.Policy", "_autosummary/seldonian.RL.Agents.Policies.Softmax", "_autosummary/seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax", "_autosummary/seldonian.RL.Agents.Policies.Softmax.Softmax", "_autosummary/seldonian.RL.Agents.keyboard_gridworld", "_autosummary/seldonian.RL.Agents.keyboard_gridworld.Keyboard_gridworld", "_autosummary/seldonian.RL.Agents.mountain_car_rough_solution", "_autosummary/seldonian.RL.Agents.mountain_car_rough_solution.Mountain_car_rough_solution", "_autosummary/seldonian.RL.Env_Description", "_autosummary/seldonian.RL.Env_Description.Env_Description", "_autosummary/seldonian.RL.Env_Description.Env_Description.Env_Description", "_autosummary/seldonian.RL.Env_Description.Env_Description.check_space_type", "_autosummary/seldonian.RL.Env_Description.Spaces", "_autosummary/seldonian.RL.Env_Description.Spaces.Continuous_Space", "_autosummary/seldonian.RL.Env_Description.Spaces.Discrete_Space", "_autosummary/seldonian.RL.RL_generate_dataset_and_spec_file", "_autosummary/seldonian.RL.RL_generate_dataset_and_spec_file.get_constraint_string", "_autosummary/seldonian.RL.RL_generate_dataset_and_spec_file.get_env_kwargs", "_autosummary/seldonian.RL.RL_generate_dataset_and_spec_file.get_metadata_path", "_autosummary/seldonian.RL.RL_generate_dataset_and_spec_file.main", "_autosummary/seldonian.RL.RL_generate_dataset_and_spec_file.print_return_info", "_autosummary/seldonian.RL.RL_model", "_autosummary/seldonian.RL.RL_model.RL_model", "_autosummary/seldonian.RL.RL_runner", "_autosummary/seldonian.RL.RL_runner.create_agent", "_autosummary/seldonian.RL.RL_runner.create_env", "_autosummary/seldonian.RL.RL_runner.run_all_trials", "_autosummary/seldonian.RL.RL_runner.run_episode", "_autosummary/seldonian.RL.RL_runner.run_trial", "_autosummary/seldonian.RL.RL_runner.run_trial_given_agent_and_env", "_autosummary/seldonian.RL.environments", "_autosummary/seldonian.RL.environments.Environment", "_autosummary/seldonian.RL.environments.Environment.Environment", "_autosummary/seldonian.RL.environments.gridworld", "_autosummary/seldonian.RL.environments.gridworld.Gridworld", "_autosummary/seldonian.RL.environments.mountaincar", "_autosummary/seldonian.RL.environments.mountaincar.Mountaincar", "_autosummary/seldonian.RL.environments.n_step_mountaincar", "_autosummary/seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar", "_autosummary/seldonian.RL.environments.simglucose_env", "_autosummary/seldonian.RL.environments.simglucose_env.Simglucose", "_autosummary/seldonian.RL.generate_mountaincar_episodes", "_autosummary/seldonian.RL.generate_mountaincar_episodes.main", "_autosummary/seldonian.RL.generate_simglucose_episodes", "_autosummary/seldonian.RL.generate_simglucose_episodes.get_max_obs", "_autosummary/seldonian.RL.generate_simglucose_episodes.main", "_autosummary/seldonian.RL.hyperparams_and_settings", "_autosummary/seldonian.RL.hyperparams_and_settings.define_hyperparameter_and_setting_dict", "_autosummary/seldonian.candidate_selection", "_autosummary/seldonian.candidate_selection.candidate_selection", "_autosummary/seldonian.candidate_selection.candidate_selection.CandidateSelection", "_autosummary/seldonian.dataset", "_autosummary/seldonian.dataset.DataSet", "_autosummary/seldonian.dataset.DataSetLoader", "_autosummary/seldonian.dataset.Episode", "_autosummary/seldonian.dataset.RLDataSet", "_autosummary/seldonian.dataset.SupervisedDataSet", "_autosummary/seldonian.models", "_autosummary/seldonian.models.models", "_autosummary/seldonian.models.models.BoundedLinearRegressionModel", "_autosummary/seldonian.models.models.ClassificationModel", "_autosummary/seldonian.models.models.DummyClassifierModel", "_autosummary/seldonian.models.models.LinearRegressionModel", "_autosummary/seldonian.models.models.LogisticRegressionModel", "_autosummary/seldonian.models.models.RandomClassifierModel", "_autosummary/seldonian.models.models.RegressionModel", "_autosummary/seldonian.models.models.SeldonianModel", "_autosummary/seldonian.models.models.SupervisedModel", "_autosummary/seldonian.models.objectives", "_autosummary/seldonian.models.objectives.False_Negative_Rate", "_autosummary/seldonian.models.objectives.False_Positive_Rate", "_autosummary/seldonian.models.objectives.IS_estimate", "_autosummary/seldonian.models.objectives.Mean_Error", "_autosummary/seldonian.models.objectives.Mean_Squared_Error", "_autosummary/seldonian.models.objectives.Negative_Rate", "_autosummary/seldonian.models.objectives.Positive_Rate", "_autosummary/seldonian.models.objectives.True_Negative_Rate", "_autosummary/seldonian.models.objectives.True_Positive_Rate", "_autosummary/seldonian.models.objectives.evaluate_statistic", "_autosummary/seldonian.models.objectives.gradient_Bounded_Squared_Error", "_autosummary/seldonian.models.objectives.gradient_Mean_Squared_Error", "_autosummary/seldonian.models.objectives.gradient_logistic_loss", "_autosummary/seldonian.models.objectives.logistic_loss", "_autosummary/seldonian.models.objectives.sample_from_statistic", "_autosummary/seldonian.models.objectives.vector_Error", "_autosummary/seldonian.models.objectives.vector_False_Negative_Rate", "_autosummary/seldonian.models.objectives.vector_False_Positive_Rate", "_autosummary/seldonian.models.objectives.vector_IS_estimate", "_autosummary/seldonian.models.objectives.vector_Negative_Rate", "_autosummary/seldonian.models.objectives.vector_Positive_Rate", "_autosummary/seldonian.models.objectives.vector_Squared_Error", "_autosummary/seldonian.models.objectives.vector_True_Negative_Rate", "_autosummary/seldonian.models.objectives.vector_True_Positive_Rate", "_autosummary/seldonian.models.objectives.vector_logistic_loss", "_autosummary/seldonian.models.objectives.vector_weighted_loss", "_autosummary/seldonian.models.objectives.weighted_loss", "_autosummary/seldonian.optimizers", "_autosummary/seldonian.optimizers.gradient_descent", "_autosummary/seldonian.optimizers.gradient_descent.gradient_descent_adam", "_autosummary/seldonian.optimizers.gradient_descent.setup_gradients", "_autosummary/seldonian.parse_tree", "_autosummary/seldonian.parse_tree.nodes", "_autosummary/seldonian.parse_tree.nodes.BaseNode", "_autosummary/seldonian.parse_tree.nodes.CVaRSQeBaseNode", "_autosummary/seldonian.parse_tree.nodes.ConstantNode", "_autosummary/seldonian.parse_tree.nodes.InternalNode", "_autosummary/seldonian.parse_tree.nodes.MEDCustomBaseNode", "_autosummary/seldonian.parse_tree.nodes.Node", "_autosummary/seldonian.parse_tree.operators", "_autosummary/seldonian.parse_tree.parse_tree", "_autosummary/seldonian.parse_tree.parse_tree.ParseTree", "_autosummary/seldonian.parse_tree.parse_tree.make_parse_trees_from_constraints", "_autosummary/seldonian.safety_test", "_autosummary/seldonian.safety_test.safety_test", "_autosummary/seldonian.safety_test.safety_test.SafetyTest", "_autosummary/seldonian.seldonian_algorithm", "_autosummary/seldonian.seldonian_algorithm.SeldonianAlgorithm", "_autosummary/seldonian.spec", "_autosummary/seldonian.spec.RLSpec", "_autosummary/seldonian.spec.Spec", "_autosummary/seldonian.spec.SupervisedSpec", "_autosummary/seldonian.spec.createRLSpec", "_autosummary/seldonian.spec.createSupervisedSpec", "_autosummary/seldonian.utils", "_autosummary/seldonian.utils.RL_utils", "_autosummary/seldonian.utils.RL_utils.argmax_multi", "_autosummary/seldonian.utils.RL_utils.clamp", "_autosummary/seldonian.utils.RL_utils.error", "_autosummary/seldonian.utils.io_utils", "_autosummary/seldonian.utils.io_utils.dir_path", "_autosummary/seldonian.utils.io_utils.load_json", "_autosummary/seldonian.utils.io_utils.load_pickle", "_autosummary/seldonian.utils.io_utils.load_supervised_metadata", "_autosummary/seldonian.utils.io_utils.save_json", "_autosummary/seldonian.utils.io_utils.save_pickle", "_autosummary/seldonian.utils.io_utils.yes_or_no_input", "_autosummary/seldonian.utils.plot_utils", "_autosummary/seldonian.utils.plot_utils.plot_gradient_descent", "_autosummary/seldonian.utils.stats_utils", "_autosummary/seldonian.utils.stats_utils.generate_data", "_autosummary/seldonian.utils.stats_utils.stddev", "_autosummary/seldonian.utils.stats_utils.tinv", "_autosummary/seldonian.utils.stats_utils.weighted_sum_gamma", "_autosummary/seldonian.utils.tutorial_utils", "_autosummary/seldonian.utils.tutorial_utils.generate_clipped_data", "_autosummary/seldonian.utils.tutorial_utils.generate_data", "_autosummary/seldonian.utils.tutorial_utils.make_synthetic_regression_dataset", "_autosummary/seldonian.warnings", "_autosummary/seldonian.warnings.custom_warnings", "_autosummary/seldonian.warnings.custom_warnings.custom_formatwarning", "api", "getting_started", "index", "overview"], "filenames": ["_autosummary/seldonian.rst", "_autosummary/seldonian.RL.rst", "_autosummary/seldonian.RL.Agents.rst", "_autosummary/seldonian.RL.Agents.Agent.rst", "_autosummary/seldonian.RL.Agents.Agent.Agent.rst", "_autosummary/seldonian.RL.Agents.Bases.rst", "_autosummary/seldonian.RL.Agents.Bases.Fourier.rst", "_autosummary/seldonian.RL.Agents.Bases.Fourier.Fourier.rst", "_autosummary/seldonian.RL.Agents.Discrete_Random_Agent.rst", "_autosummary/seldonian.RL.Agents.Discrete_Random_Agent.Discrete_Random_Agent.rst", "_autosummary/seldonian.RL.Agents.Function_Approximators.rst", "_autosummary/seldonian.RL.Agents.Function_Approximators.Function_Approximator.rst", "_autosummary/seldonian.RL.Agents.Function_Approximators.Function_Approximator.Function_Approximator.rst", "_autosummary/seldonian.RL.Agents.Function_Approximators.Linear_FA.rst", "_autosummary/seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_FA.rst", "_autosummary/seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_state_action_value_FA.rst", "_autosummary/seldonian.RL.Agents.Function_Approximators.Table.rst", "_autosummary/seldonian.RL.Agents.Function_Approximators.Table.Q_Table.rst", "_autosummary/seldonian.RL.Agents.Function_Approximators.Table.Table.rst", "_autosummary/seldonian.RL.Agents.Function_Approximators.Table.construct_Q_Table_From_Env_Description.rst", "_autosummary/seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.rst", "_autosummary/seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.Parameterized_non_learning_softmax_agent.rst", "_autosummary/seldonian.RL.Agents.Policies.rst", "_autosummary/seldonian.RL.Agents.Policies.Policy.rst", "_autosummary/seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy.rst", "_autosummary/seldonian.RL.Agents.Policies.Policy.Policy.rst", "_autosummary/seldonian.RL.Agents.Policies.Softmax.rst", "_autosummary/seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax.rst", "_autosummary/seldonian.RL.Agents.Policies.Softmax.Softmax.rst", "_autosummary/seldonian.RL.Agents.keyboard_gridworld.rst", "_autosummary/seldonian.RL.Agents.keyboard_gridworld.Keyboard_gridworld.rst", "_autosummary/seldonian.RL.Agents.mountain_car_rough_solution.rst", "_autosummary/seldonian.RL.Agents.mountain_car_rough_solution.Mountain_car_rough_solution.rst", "_autosummary/seldonian.RL.Env_Description.rst", "_autosummary/seldonian.RL.Env_Description.Env_Description.rst", "_autosummary/seldonian.RL.Env_Description.Env_Description.Env_Description.rst", "_autosummary/seldonian.RL.Env_Description.Env_Description.check_space_type.rst", "_autosummary/seldonian.RL.Env_Description.Spaces.rst", "_autosummary/seldonian.RL.Env_Description.Spaces.Continuous_Space.rst", "_autosummary/seldonian.RL.Env_Description.Spaces.Discrete_Space.rst", "_autosummary/seldonian.RL.RL_generate_dataset_and_spec_file.rst", "_autosummary/seldonian.RL.RL_generate_dataset_and_spec_file.get_constraint_string.rst", "_autosummary/seldonian.RL.RL_generate_dataset_and_spec_file.get_env_kwargs.rst", "_autosummary/seldonian.RL.RL_generate_dataset_and_spec_file.get_metadata_path.rst", "_autosummary/seldonian.RL.RL_generate_dataset_and_spec_file.main.rst", "_autosummary/seldonian.RL.RL_generate_dataset_and_spec_file.print_return_info.rst", "_autosummary/seldonian.RL.RL_model.rst", "_autosummary/seldonian.RL.RL_model.RL_model.rst", "_autosummary/seldonian.RL.RL_runner.rst", "_autosummary/seldonian.RL.RL_runner.create_agent.rst", "_autosummary/seldonian.RL.RL_runner.create_env.rst", "_autosummary/seldonian.RL.RL_runner.run_all_trials.rst", "_autosummary/seldonian.RL.RL_runner.run_episode.rst", "_autosummary/seldonian.RL.RL_runner.run_trial.rst", "_autosummary/seldonian.RL.RL_runner.run_trial_given_agent_and_env.rst", "_autosummary/seldonian.RL.environments.rst", "_autosummary/seldonian.RL.environments.Environment.rst", "_autosummary/seldonian.RL.environments.Environment.Environment.rst", "_autosummary/seldonian.RL.environments.gridworld.rst", "_autosummary/seldonian.RL.environments.gridworld.Gridworld.rst", "_autosummary/seldonian.RL.environments.mountaincar.rst", "_autosummary/seldonian.RL.environments.mountaincar.Mountaincar.rst", "_autosummary/seldonian.RL.environments.n_step_mountaincar.rst", "_autosummary/seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar.rst", "_autosummary/seldonian.RL.environments.simglucose_env.rst", "_autosummary/seldonian.RL.environments.simglucose_env.Simglucose.rst", "_autosummary/seldonian.RL.generate_mountaincar_episodes.rst", "_autosummary/seldonian.RL.generate_mountaincar_episodes.main.rst", "_autosummary/seldonian.RL.generate_simglucose_episodes.rst", "_autosummary/seldonian.RL.generate_simglucose_episodes.get_max_obs.rst", "_autosummary/seldonian.RL.generate_simglucose_episodes.main.rst", "_autosummary/seldonian.RL.hyperparams_and_settings.rst", "_autosummary/seldonian.RL.hyperparams_and_settings.define_hyperparameter_and_setting_dict.rst", "_autosummary/seldonian.candidate_selection.rst", "_autosummary/seldonian.candidate_selection.candidate_selection.rst", "_autosummary/seldonian.candidate_selection.candidate_selection.CandidateSelection.rst", "_autosummary/seldonian.dataset.rst", "_autosummary/seldonian.dataset.DataSet.rst", "_autosummary/seldonian.dataset.DataSetLoader.rst", "_autosummary/seldonian.dataset.Episode.rst", "_autosummary/seldonian.dataset.RLDataSet.rst", "_autosummary/seldonian.dataset.SupervisedDataSet.rst", "_autosummary/seldonian.models.rst", "_autosummary/seldonian.models.models.rst", "_autosummary/seldonian.models.models.BoundedLinearRegressionModel.rst", "_autosummary/seldonian.models.models.ClassificationModel.rst", "_autosummary/seldonian.models.models.DummyClassifierModel.rst", "_autosummary/seldonian.models.models.LinearRegressionModel.rst", "_autosummary/seldonian.models.models.LogisticRegressionModel.rst", "_autosummary/seldonian.models.models.RandomClassifierModel.rst", "_autosummary/seldonian.models.models.RegressionModel.rst", "_autosummary/seldonian.models.models.SeldonianModel.rst", "_autosummary/seldonian.models.models.SupervisedModel.rst", "_autosummary/seldonian.models.objectives.rst", "_autosummary/seldonian.models.objectives.False_Negative_Rate.rst", "_autosummary/seldonian.models.objectives.False_Positive_Rate.rst", "_autosummary/seldonian.models.objectives.IS_estimate.rst", "_autosummary/seldonian.models.objectives.Mean_Error.rst", "_autosummary/seldonian.models.objectives.Mean_Squared_Error.rst", "_autosummary/seldonian.models.objectives.Negative_Rate.rst", "_autosummary/seldonian.models.objectives.Positive_Rate.rst", "_autosummary/seldonian.models.objectives.True_Negative_Rate.rst", "_autosummary/seldonian.models.objectives.True_Positive_Rate.rst", "_autosummary/seldonian.models.objectives.evaluate_statistic.rst", "_autosummary/seldonian.models.objectives.gradient_Bounded_Squared_Error.rst", "_autosummary/seldonian.models.objectives.gradient_Mean_Squared_Error.rst", "_autosummary/seldonian.models.objectives.gradient_logistic_loss.rst", "_autosummary/seldonian.models.objectives.logistic_loss.rst", "_autosummary/seldonian.models.objectives.sample_from_statistic.rst", "_autosummary/seldonian.models.objectives.vector_Error.rst", "_autosummary/seldonian.models.objectives.vector_False_Negative_Rate.rst", "_autosummary/seldonian.models.objectives.vector_False_Positive_Rate.rst", "_autosummary/seldonian.models.objectives.vector_IS_estimate.rst", "_autosummary/seldonian.models.objectives.vector_Negative_Rate.rst", "_autosummary/seldonian.models.objectives.vector_Positive_Rate.rst", "_autosummary/seldonian.models.objectives.vector_Squared_Error.rst", "_autosummary/seldonian.models.objectives.vector_True_Negative_Rate.rst", "_autosummary/seldonian.models.objectives.vector_True_Positive_Rate.rst", "_autosummary/seldonian.models.objectives.vector_logistic_loss.rst", "_autosummary/seldonian.models.objectives.vector_weighted_loss.rst", "_autosummary/seldonian.models.objectives.weighted_loss.rst", "_autosummary/seldonian.optimizers.rst", "_autosummary/seldonian.optimizers.gradient_descent.rst", "_autosummary/seldonian.optimizers.gradient_descent.gradient_descent_adam.rst", "_autosummary/seldonian.optimizers.gradient_descent.setup_gradients.rst", "_autosummary/seldonian.parse_tree.rst", "_autosummary/seldonian.parse_tree.nodes.rst", "_autosummary/seldonian.parse_tree.nodes.BaseNode.rst", "_autosummary/seldonian.parse_tree.nodes.CVaRSQeBaseNode.rst", "_autosummary/seldonian.parse_tree.nodes.ConstantNode.rst", "_autosummary/seldonian.parse_tree.nodes.InternalNode.rst", "_autosummary/seldonian.parse_tree.nodes.MEDCustomBaseNode.rst", "_autosummary/seldonian.parse_tree.nodes.Node.rst", "_autosummary/seldonian.parse_tree.operators.rst", "_autosummary/seldonian.parse_tree.parse_tree.rst", "_autosummary/seldonian.parse_tree.parse_tree.ParseTree.rst", "_autosummary/seldonian.parse_tree.parse_tree.make_parse_trees_from_constraints.rst", "_autosummary/seldonian.safety_test.rst", "_autosummary/seldonian.safety_test.safety_test.rst", "_autosummary/seldonian.safety_test.safety_test.SafetyTest.rst", "_autosummary/seldonian.seldonian_algorithm.rst", "_autosummary/seldonian.seldonian_algorithm.SeldonianAlgorithm.rst", "_autosummary/seldonian.spec.rst", "_autosummary/seldonian.spec.RLSpec.rst", "_autosummary/seldonian.spec.Spec.rst", "_autosummary/seldonian.spec.SupervisedSpec.rst", "_autosummary/seldonian.spec.createRLSpec.rst", "_autosummary/seldonian.spec.createSupervisedSpec.rst", "_autosummary/seldonian.utils.rst", "_autosummary/seldonian.utils.RL_utils.rst", "_autosummary/seldonian.utils.RL_utils.argmax_multi.rst", "_autosummary/seldonian.utils.RL_utils.clamp.rst", "_autosummary/seldonian.utils.RL_utils.error.rst", "_autosummary/seldonian.utils.io_utils.rst", "_autosummary/seldonian.utils.io_utils.dir_path.rst", "_autosummary/seldonian.utils.io_utils.load_json.rst", "_autosummary/seldonian.utils.io_utils.load_pickle.rst", "_autosummary/seldonian.utils.io_utils.load_supervised_metadata.rst", "_autosummary/seldonian.utils.io_utils.save_json.rst", "_autosummary/seldonian.utils.io_utils.save_pickle.rst", "_autosummary/seldonian.utils.io_utils.yes_or_no_input.rst", "_autosummary/seldonian.utils.plot_utils.rst", "_autosummary/seldonian.utils.plot_utils.plot_gradient_descent.rst", "_autosummary/seldonian.utils.stats_utils.rst", "_autosummary/seldonian.utils.stats_utils.generate_data.rst", "_autosummary/seldonian.utils.stats_utils.stddev.rst", "_autosummary/seldonian.utils.stats_utils.tinv.rst", "_autosummary/seldonian.utils.stats_utils.weighted_sum_gamma.rst", "_autosummary/seldonian.utils.tutorial_utils.rst", "_autosummary/seldonian.utils.tutorial_utils.generate_clipped_data.rst", "_autosummary/seldonian.utils.tutorial_utils.generate_data.rst", "_autosummary/seldonian.utils.tutorial_utils.make_synthetic_regression_dataset.rst", "_autosummary/seldonian.warnings.rst", "_autosummary/seldonian.warnings.custom_warnings.rst", "_autosummary/seldonian.warnings.custom_warnings.custom_formatwarning.rst", "api.rst", "getting_started.rst", "index.rst", "overview.rst"], "titles": ["seldonian", "seldonian.RL", "seldonian.RL.Agents", "seldonian.RL.Agents.Agent", "seldonian.RL.Agents.Agent.Agent", "seldonian.RL.Agents.Bases", "seldonian.RL.Agents.Bases.Fourier", "seldonian.RL.Agents.Bases.Fourier.Fourier", "seldonian.RL.Agents.Discrete_Random_Agent", "seldonian.RL.Agents.Discrete_Random_Agent.Discrete_Random_Agent", "seldonian.RL.Agents.Function_Approximators", "seldonian.RL.Agents.Function_Approximators.Function_Approximator", "seldonian.RL.Agents.Function_Approximators.Function_Approximator.Function_Approximator", "seldonian.RL.Agents.Function_Approximators.Linear_FA", "seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_FA", "seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_state_action_value_FA", "seldonian.RL.Agents.Function_Approximators.Table", "seldonian.RL.Agents.Function_Approximators.Table.Q_Table", "seldonian.RL.Agents.Function_Approximators.Table.Table", "seldonian.RL.Agents.Function_Approximators.Table.construct_Q_Table_From_Env_Description", "seldonian.RL.Agents.Parameterized_non_learning_softmax_agent", "seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.Parameterized_non_learning_softmax_agent", "seldonian.RL.Agents.Policies", "seldonian.RL.Agents.Policies.Policy", "seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy", "seldonian.RL.Agents.Policies.Policy.Policy", "seldonian.RL.Agents.Policies.Softmax", "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax", "seldonian.RL.Agents.Policies.Softmax.Softmax", "seldonian.RL.Agents.keyboard_gridworld", "seldonian.RL.Agents.keyboard_gridworld.Keyboard_gridworld", "seldonian.RL.Agents.mountain_car_rough_solution", "seldonian.RL.Agents.mountain_car_rough_solution.Mountain_car_rough_solution", "seldonian.RL.Env_Description", "seldonian.RL.Env_Description.Env_Description", "seldonian.RL.Env_Description.Env_Description.Env_Description", "seldonian.RL.Env_Description.Env_Description.check_space_type", "seldonian.RL.Env_Description.Spaces", "seldonian.RL.Env_Description.Spaces.Continuous_Space", "seldonian.RL.Env_Description.Spaces.Discrete_Space", "seldonian.RL.RL_generate_dataset_and_spec_file", "seldonian.RL.RL_generate_dataset_and_spec_file.get_constraint_string", "seldonian.RL.RL_generate_dataset_and_spec_file.get_env_kwargs", "seldonian.RL.RL_generate_dataset_and_spec_file.get_metadata_path", "seldonian.RL.RL_generate_dataset_and_spec_file.main", "seldonian.RL.RL_generate_dataset_and_spec_file.print_return_info", "seldonian.RL.RL_model", "seldonian.RL.RL_model.RL_model", "seldonian.RL.RL_runner", "seldonian.RL.RL_runner.create_agent", "seldonian.RL.RL_runner.create_env", "seldonian.RL.RL_runner.run_all_trials", "seldonian.RL.RL_runner.run_episode", "seldonian.RL.RL_runner.run_trial", "seldonian.RL.RL_runner.run_trial_given_agent_and_env", "seldonian.RL.environments", "seldonian.RL.environments.Environment", "seldonian.RL.environments.Environment.Environment", "seldonian.RL.environments.gridworld", "seldonian.RL.environments.gridworld.Gridworld", "seldonian.RL.environments.mountaincar", "seldonian.RL.environments.mountaincar.Mountaincar", "seldonian.RL.environments.n_step_mountaincar", "seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar", "seldonian.RL.environments.simglucose_env", "seldonian.RL.environments.simglucose_env.Simglucose", "seldonian.RL.generate_mountaincar_episodes", "seldonian.RL.generate_mountaincar_episodes.main", "seldonian.RL.generate_simglucose_episodes", "seldonian.RL.generate_simglucose_episodes.get_max_obs", "seldonian.RL.generate_simglucose_episodes.main", "seldonian.RL.hyperparams_and_settings", "seldonian.RL.hyperparams_and_settings.define_hyperparameter_and_setting_dict", "seldonian.candidate_selection", "seldonian.candidate_selection.candidate_selection", "seldonian.candidate_selection.candidate_selection.CandidateSelection", "seldonian.dataset", "seldonian.dataset.DataSet", "seldonian.dataset.DataSetLoader", "seldonian.dataset.Episode", "seldonian.dataset.RLDataSet", "seldonian.dataset.SupervisedDataSet", "seldonian.models", "seldonian.models.models", "seldonian.models.models.BoundedLinearRegressionModel", "seldonian.models.models.ClassificationModel", "seldonian.models.models.DummyClassifierModel", "seldonian.models.models.LinearRegressionModel", "seldonian.models.models.LogisticRegressionModel", "seldonian.models.models.RandomClassifierModel", "seldonian.models.models.RegressionModel", "seldonian.models.models.SeldonianModel", "seldonian.models.models.SupervisedModel", "seldonian.models.objectives", "seldonian.models.objectives.False_Negative_Rate", "seldonian.models.objectives.False_Positive_Rate", "seldonian.models.objectives.IS_estimate", "seldonian.models.objectives.Mean_Error", "seldonian.models.objectives.Mean_Squared_Error", "seldonian.models.objectives.Negative_Rate", "seldonian.models.objectives.Positive_Rate", "seldonian.models.objectives.True_Negative_Rate", "seldonian.models.objectives.True_Positive_Rate", "seldonian.models.objectives.evaluate_statistic", "seldonian.models.objectives.gradient_Bounded_Squared_Error", "seldonian.models.objectives.gradient_Mean_Squared_Error", "seldonian.models.objectives.gradient_logistic_loss", "seldonian.models.objectives.logistic_loss", "seldonian.models.objectives.sample_from_statistic", "seldonian.models.objectives.vector_Error", "seldonian.models.objectives.vector_False_Negative_Rate", "seldonian.models.objectives.vector_False_Positive_Rate", "seldonian.models.objectives.vector_IS_estimate", "seldonian.models.objectives.vector_Negative_Rate", "seldonian.models.objectives.vector_Positive_Rate", "seldonian.models.objectives.vector_Squared_Error", "seldonian.models.objectives.vector_True_Negative_Rate", "seldonian.models.objectives.vector_True_Positive_Rate", "seldonian.models.objectives.vector_logistic_loss", "seldonian.models.objectives.vector_weighted_loss", "seldonian.models.objectives.weighted_loss", "seldonian.optimizers", "seldonian.optimizers.gradient_descent", "seldonian.optimizers.gradient_descent.gradient_descent_adam", "seldonian.optimizers.gradient_descent.setup_gradients", "seldonian.parse_tree", "seldonian.parse_tree.nodes", "seldonian.parse_tree.nodes.BaseNode", "seldonian.parse_tree.nodes.CVaRSQeBaseNode", "seldonian.parse_tree.nodes.ConstantNode", "seldonian.parse_tree.nodes.InternalNode", "seldonian.parse_tree.nodes.MEDCustomBaseNode", "seldonian.parse_tree.nodes.Node", "seldonian.parse_tree.operators", "seldonian.parse_tree.parse_tree", "seldonian.parse_tree.parse_tree.ParseTree", "seldonian.parse_tree.parse_tree.make_parse_trees_from_constraints", "seldonian.safety_test", "seldonian.safety_test.safety_test", "seldonian.safety_test.safety_test.SafetyTest", "seldonian.seldonian_algorithm", "seldonian.seldonian_algorithm.SeldonianAlgorithm", "seldonian.spec", "seldonian.spec.RLSpec", "seldonian.spec.Spec", "seldonian.spec.SupervisedSpec", "seldonian.spec.createRLSpec", "seldonian.spec.createSupervisedSpec", "seldonian.utils", "seldonian.utils.RL_utils", "seldonian.utils.RL_utils.argmax_multi", "seldonian.utils.RL_utils.clamp", "seldonian.utils.RL_utils.error", "seldonian.utils.io_utils", "seldonian.utils.io_utils.dir_path", "seldonian.utils.io_utils.load_json", "seldonian.utils.io_utils.load_pickle", "seldonian.utils.io_utils.load_supervised_metadata", "seldonian.utils.io_utils.save_json", "seldonian.utils.io_utils.save_pickle", "seldonian.utils.io_utils.yes_or_no_input", "seldonian.utils.plot_utils", "seldonian.utils.plot_utils.plot_gradient_descent", "seldonian.utils.stats_utils", "seldonian.utils.stats_utils.generate_data", "seldonian.utils.stats_utils.stddev", "seldonian.utils.stats_utils.tinv", "seldonian.utils.stats_utils.weighted_sum_gamma", "seldonian.utils.tutorial_utils", "seldonian.utils.tutorial_utils.generate_clipped_data", "seldonian.utils.tutorial_utils.generate_data", "seldonian.utils.tutorial_utils.make_synthetic_regression_dataset", "seldonian.warnings", "seldonian.warnings.custom_warnings", "seldonian.warnings.custom_warnings.custom_formatwarning", "API", "Getting Started", "Seldonian Engine documentation", "Overview"], "terms": {"engin": [0, 133, 176, 178], "packag": [0, 178], "modul": [0, 1, 2, 5, 10, 22, 33, 55, 73, 74, 82, 83, 121, 125, 133, 134, 137, 138, 140, 142, 143, 148, 172, 174, 178], "class": [3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 37, 38, 39, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 99, 100, 101, 102, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 145, 178], "base": [4, 9, 12, 14, 15, 17, 18, 21, 24, 25, 27, 28, 30, 32, 35, 38, 39, 47, 57, 59, 61, 63, 65, 75, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 127, 128, 129, 130, 131, 132, 133, 135, 139, 141, 143, 144, 145, 177, 178], "object": [4, 7, 12, 19, 21, 24, 25, 27, 28, 35, 38, 39, 44, 45, 57, 59, 75, 77, 78, 79, 80, 81, 91, 123, 127, 128, 131, 132, 135, 139, 141, 142, 143, 144, 145, 146, 147, 155, 156, 158, 159, 162, 177], "all": [4, 21, 24, 27, 28, 47, 57, 77, 81, 85, 90, 91, 92, 96, 132, 135, 139, 178], "overrid": [4, 57, 59, 61, 63, 65, 84, 127, 128, 131], "follow": [4, 178], "method": [4, 7, 9, 12, 14, 15, 17, 18, 21, 24, 25, 27, 28, 30, 32, 35, 38, 39, 47, 57, 59, 61, 63, 65, 75, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 123, 127, 128, 129, 130, 131, 132, 135, 139, 141, 143, 144, 145, 178], "child": [4, 57, 59, 61, 63, 65, 132, 133, 135, 178], "implement": [4, 21, 25, 57, 59, 61, 63, 65, 84, 86, 87, 88, 89, 123, 166, 178], "__init__": [4, 7, 9, 12, 14, 15, 17, 18, 21, 24, 25, 27, 28, 30, 32, 35, 38, 39, 47, 57, 59, 61, 63, 65, 75, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 127, 128, 129, 130, 131, 132, 135, 139, 141, 143, 144, 145], "__repr__": [4, 7, 9, 12, 14, 15, 17, 18, 21, 24, 25, 27, 28, 30, 32, 35, 38, 39, 47, 57, 59, 61, 63, 65, 75, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 127, 128, 129, 130, 131, 132, 135, 139, 141, 143, 144, 145], "return": [4, 7, 9, 12, 14, 15, 17, 18, 19, 21, 24, 25, 27, 28, 30, 32, 35, 38, 39, 41, 42, 43, 45, 47, 49, 50, 51, 52, 53, 54, 57, 59, 61, 63, 65, 75, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 127, 128, 131, 133, 135, 139, 141, 143, 144, 145, 160, 162, 165, 166, 167, 178], "repr": [4, 7, 9, 12, 14, 15, 17, 18, 21, 24, 25, 27, 28, 30, 32, 35, 38, 39, 47, 57, 59, 61, 63, 65, 75, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 135, 139, 141, 143, 144, 145], "self": [4, 7, 9, 12, 14, 15, 17, 18, 21, 24, 25, 27, 28, 30, 32, 35, 38, 39, 47, 57, 59, 61, 63, 65, 75, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 135, 139, 141, 143, 144, 145], "choose_act": [4, 9, 21, 24, 25, 27, 28, 30, 32], "observ": [4, 9, 21, 24, 25, 27, 28, 30, 32, 35, 38, 39, 47, 57, 61, 63, 65, 79, 86, 88, 89, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 127, 128, 131, 178], "choos": [4, 9, 30, 32, 178], "an": [4, 9, 19, 21, 24, 25, 27, 28, 30, 32, 35, 49, 50, 53, 57, 59, 61, 63, 65, 127, 128, 132, 133, 143, 154, 155, 156, 158, 159, 160, 167, 178], "action": [4, 9, 17, 21, 24, 25, 27, 28, 30, 32, 35, 38, 39, 47, 57, 59, 61, 63, 65, 78, 79, 178], "given": [4, 9, 17, 19, 21, 24, 25, 27, 28, 30, 32, 41, 42, 43, 47, 57, 59, 61, 63, 65, 75, 127, 128, 131, 135, 139, 141, 143, 144, 145, 178], "To": [4, 9, 30, 32, 176], "overridden": [4, 9, 25, 30, 32], "paramet": [4, 9, 12, 14, 15, 17, 18, 19, 21, 24, 25, 27, 28, 30, 32, 35, 36, 38, 39, 45, 47, 49, 50, 51, 52, 53, 54, 57, 59, 61, 63, 65, 75, 77, 78, 79, 80, 81, 84, 86, 87, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 127, 128, 129, 130, 131, 132, 135, 139, 141, 143, 144, 145, 146, 147, 154, 155, 156, 158, 159, 160, 162, 164, 165, 166, 167, 169, 170, 178], "The": [4, 9, 14, 15, 17, 18, 21, 27, 28, 30, 32, 38, 59, 75, 77, 78, 81, 84, 86, 87, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 127, 128, 129, 130, 131, 132, 133, 135, 139, 141, 143, 144, 145, 147, 159, 160, 162, 164, 167, 169, 170, 177, 178], "current": [4, 9, 21, 24, 25, 27, 28, 30, 32, 57, 59, 61, 63, 65, 85, 178], "type": [4, 9, 19, 21, 24, 27, 28, 30, 32, 36, 47, 49, 50, 52, 59, 75, 84, 86, 87, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 127, 128, 131, 135, 139, 141, 165, 166, 167, 178], "depend": [4, 9, 21, 24, 27, 28, 30, 32, 127, 128, 131, 178], "environ": [4, 9, 17, 18, 19, 21, 24, 27, 28, 30, 32, 35, 41, 42, 43, 47, 49, 50, 51, 52, 53, 54, 143, 146, 177, 178], "get_prob_this_act": [4, 9, 21, 24, 25, 27, 28, 30, 32, 47], "get": [4, 9, 17, 21, 24, 25, 27, 28, 30, 32, 35, 38, 39, 47, 57, 59, 61, 63, 65, 75, 135, 139, 141, 177, 178], "probabl": [4, 9, 17, 21, 24, 25, 27, 28, 30, 32, 47, 79, 86, 88, 89, 94, 95, 99, 100, 101, 102, 110, 111, 113, 114, 116, 117, 128, 135, 166, 178], "provid": [4, 9, 30, 32, 35, 103, 108, 135, 141, 143, 144, 145, 160, 178], "i": [4, 9, 21, 24, 27, 28, 30, 32, 38, 45, 51, 59, 75, 84, 94, 95, 96, 99, 100, 101, 102, 110, 111, 112, 113, 114, 116, 117, 120, 123, 127, 128, 129, 130, 131, 132, 133, 135, 139, 141, 143, 144, 145, 154, 160, 162, 176, 177, 178], "updat": [4, 9, 21, 25, 30, 32, 59], "next_observ": [4, 9, 21, 30, 32], "reward": [4, 9, 21, 30, 32, 45, 59, 78, 79, 133, 167, 178], "termin": [4, 9, 21, 30, 32, 57, 59, 61, 63, 65], "": [4, 9, 21, 30, 32, 35, 127, 128, 131, 135, 165, 166, 178], "accord": [4, 9, 21, 30, 32], "learn": [4, 9, 21, 30, 32, 75, 77, 78, 81, 83, 85, 90, 91, 92, 123, 127, 128, 131, 133, 135, 139, 145, 177, 178], "rule": [4, 9, 21, 30, 32], "overriden": [4, 9, 30, 32], "after": [4, 9, 21, 30, 32], "taken": [4, 9, 21, 30, 32, 35, 47], "take": [4, 9, 21, 24, 25, 30, 32, 47, 178], "bool": [4, 9, 21, 30, 32, 59, 75, 78, 132, 135, 139, 143, 144, 145, 146, 147, 160, 162], "whether": [4, 9, 21, 24, 27, 28, 30, 32, 59, 75, 78, 81, 132, 135, 139, 141, 143, 144, 145, 154, 162, 178], "hyperparam_and_setting_dict": [7, 21, 24, 27, 28], "env_desc": 7, "env_descript": [9, 14, 15, 19, 21, 24, 27, 28, 30, 59, 177], "function": [12, 14, 15, 16, 21, 24, 27, 28, 34, 40, 48, 59, 66, 68, 71, 75, 84, 93, 122, 123, 127, 133, 134, 135, 142, 143, 144, 145, 146, 147, 149, 153, 161, 162, 163, 166, 168, 173, 178], "approxim": [12, 14, 15, 21, 24, 27, 28], "set_new_param": [12, 14, 15, 17, 18, 21, 24, 25, 27, 28], "new_param": [12, 14, 15, 17, 18, 21, 24, 25, 27, 28, 47], "set": [12, 14, 15, 17, 18, 21, 24, 27, 28, 125, 129, 141, 178], "new": [12, 14, 15, 17, 18, 57, 61, 63, 65, 133, 177, 178], "model": [12, 14, 15, 17, 18, 47, 75, 78, 123, 127, 128, 131, 139, 141, 143, 144, 145, 147, 177], "weight": [12, 14, 15, 17, 18, 21, 24, 27, 28, 47, 75, 84, 86, 87, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 127, 128, 131, 133, 135, 139, 141, 143, 144, 145, 167, 178], "basi": [14, 15, 24, 27, 28], "linear": [14, 15, 24, 27, 28, 84, 87], "us": [14, 15, 21, 27, 38, 39, 45, 47, 57, 61, 63, 65, 75, 78, 84, 85, 87, 88, 90, 91, 92, 123, 127, 128, 131, 133, 135, 139, 141, 143, 144, 145, 147, 166, 167, 176, 178], "encod": [14, 15, 178], "featur": [14, 15, 78, 84, 86, 87, 88, 89, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 127, 128, 131, 178], "min_stat": [17, 18], "num_stat": [17, 18, 59], "num_act": 17, "A": [17, 19, 27, 47, 54, 57, 59, 61, 63, 65, 80, 112, 133, 135, 143, 144, 145, 154, 155, 156, 158, 159, 177], "q": [17, 19, 27], "contain": [17, 21, 25, 59, 75, 78, 81, 83, 96, 103, 108, 112, 123, 127, 128, 131, 133, 135, 139, 143, 144, 145, 147, 178], "transit": [17, 57, 59, 61, 63, 65], "int": [17, 18, 27, 39, 59, 75, 123, 127, 128, 131, 132, 135, 164, 166, 169, 170], "smallest": [17, 18], "ob": [17, 18, 21, 24, 25, 27, 28, 35, 57, 59, 61, 63, 65, 78, 135], "number": [17, 18, 24, 27, 28, 35, 38, 39, 49, 50, 51, 53, 54, 59, 100, 123, 127, 128, 131, 135, 164, 169, 170, 178], "total": [17, 18, 39, 135], "state": [17, 18, 21, 35, 59], "from_environment_state_to_0_indexed_st": [17, 18], "env_stat": [17, 18], "convert": [17, 18, 24, 27, 28], "0": [17, 18, 24, 27, 28, 38, 84, 89, 94, 95, 99, 100, 101, 102, 110, 111, 113, 114, 116, 117, 123, 127, 128, 131, 135, 139, 143, 144, 145, 146, 164, 167, 169, 170, 178], "index": [17, 18, 24, 27, 28, 132, 167, 178], "you": [17, 18, 78, 135, 159, 162, 176, 177, 178], "want": [17, 18, 36, 78, 135, 159, 162, 176, 178], "get_action_values_given_st": [17, 24, 27, 28], "state_number_not_zero_index": 17, "possibl": [17, 21, 24, 27, 28, 35, 57, 59, 61, 63, 65, 128, 139, 178], "valu": [17, 27, 28, 39, 75, 109, 115, 123, 127, 128, 129, 131, 135, 139, 141, 160, 178], "environment": 17, "specif": [17, 24, 27, 28, 49, 50, 141, 142, 143, 144, 145, 178], "arrai": [17, 21, 24, 27, 28, 38, 47, 75, 78, 118, 119, 133, 167, 178], "get_action_values_given_zero_indexed_st": 17, "zero_indexed_state_numb": 17, "hold": [18, 77, 79, 80, 81], "capabl": 18, "reindex": 18, "creat": [19, 24, 27, 28, 44, 49, 50, 59, 78, 127, 128, 131, 135, 141, 146, 147, 178], "descript": [19, 24, 27, 28, 57, 59, 61, 63, 65, 178], "access": [19, 21, 24, 27, 28, 35], "attribut": [19, 21, 24, 27, 28, 35, 59, 80, 81, 135, 178], "q_tabl": [19, 21, 177], "parametr": 21, "softmax": [21, 177, 178], "pi": [21, 79], "frac": 21, "e": [21, 45, 75, 77, 78, 80, 81, 103, 108, 123, 127, 128, 131, 135, 139, 143, 144, 145, 178], "p": [21, 166, 178], "sum_": 21, "addit": [21, 178], "info": 21, "about": [21, 123, 135, 178], "data": [21, 75, 78, 96, 127, 128, 131, 135, 139, 141, 143, 144, 145, 147, 158, 159, 164, 165, 169, 170, 178], "gener": [21, 24, 28, 164, 169, 170, 178], "variabl": [21, 38, 59, 127, 128, 129, 131, 132, 133, 135, 139, 143, 144, 145], "fa": 21, "polici": [21, 47, 79, 133, 146, 177, 178], "select": [21, 24, 25, 27, 28, 73, 74, 75, 121, 123, 127, 128, 131, 139, 141, 143, 144, 145, 177], "get_action_valu": 21, "from": [21, 24, 27, 28, 49, 50, 78, 79, 84, 87, 125, 131, 134, 135, 141, 143, 155, 156, 157, 158, 160, 178], "thi": [21, 47, 57, 59, 61, 63, 65, 85, 90, 91, 92, 99, 100, 104, 110, 111, 113, 114, 116, 117, 123, 127, 128, 131, 132, 135, 141, 143, 177, 178], "get_param": [21, 24, 25, 27, 28], "float": [21, 27, 28, 47, 59, 86, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 127, 128, 129, 131, 132, 135, 139, 141, 143, 144, 145, 147, 164, 165, 166, 167, 169, 170, 178], "Not": [21, 133], "where": [24, 27, 54, 75, 120, 123, 127, 128, 131, 135, 139, 141, 147, 162, 167, 178], "ar": [24, 27, 36, 38, 54, 75, 128, 133, 135, 139, 143, 144, 145, 167, 177, 178], "discret": [24, 27, 28, 35, 36, 39], "hyperparameter_and_setting_dict": [24, 27, 28, 49, 50, 51, 53], "specifi": [24, 27, 28, 49, 50, 51, 53, 54, 133, 135, 178], "episod": [24, 27, 28, 44, 45, 49, 50, 51, 52, 53, 54, 67, 69, 70, 78, 80, 96, 112, 177, 178], "per": [24, 27, 28, 49, 50, 51], "trial": [24, 27, 28, 44, 49, 50, 51, 53, 67, 70], "defin": [24, 25, 38, 128, 133, 178], "how": [24, 25, 135, 178], "construct_basis_and_linear_fa": [24, 27, 28], "dictionari": [24, 27, 28, 49, 50, 54, 123, 133, 157, 162, 178], "from_0_indexed_action_to_environment_act": [24, 27, 28], "action_0_index": [24, 27, 28], "env": [24, 27, 28, 42, 52, 54], "from_environment_action_to_0_indexed_act": [24, 27, 28], "env_act": [24, 27, 28], "make_state_action_fa": [24, 27, 28], "space": [24, 27, 28, 35, 36, 59, 177], "contin": [24, 27, 28, 36], "four": [25, 178], "which": [25, 36, 51, 99, 127, 128, 130, 131, 133, 135, 143, 144, 145, 146, 178], "must": [25, 127, 178], "ani": [25, 75, 178], "both": [27, 135, 178], "faster": 27, "than": [27, 38, 54, 128, 135, 139, 178], "just": [27, 141], "becaus": [27, 135], "cach": [27, 135], "lookup": 27, "tabl": 27, "_arg": 27, "helper": [27, 59, 135], "acceler": 27, "calcul": [27, 59, 94, 95, 96, 97, 98, 99, 100, 101, 102, 107, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 123, 127, 128, 131, 135, 139, 143, 144, 145, 167, 178], "_denom": 27, "choose_action_from_action_valu": [27, 28], "action_valu": [27, 28], "list": [27, 28, 45, 47, 51, 53, 54, 75, 77, 78, 79, 80, 81, 127, 128, 131, 133, 135, 139, 143, 144, 145, 146, 147, 178], "param": [27, 28, 100, 104], "get_action_probs_from_action_valu": [27, 28], "get_e_to_the_something_term": [27, 28], "exponenti": [27, 28, 123, 135], "obsertavt": [27, 28], "obserav": [27, 28], "discrete_action_polici": [28, 177], "observation_spac": 35, "action_spac": 35, "describ": [35, 59, 78], "conveni": [35, 135, 146, 147, 178], "continu": [35, 38], "made": 35, "get_min_act": 35, "first": [35, 81, 135, 177, 178], "get_min_st": 35, "get_num_act": 35, "get_num_observation_dim": 35, "dimens": [35, 38, 164, 169, 170], "get_num_st": 35, "also": [35, 129, 130, 132, 135, 178], "call": [35, 127, 128, 131, 178], "here": [35, 133, 178], "desired_typ": 36, "valid": [36, 38, 135, 178], "ensur": [36, 178], "equival": [36, 127, 128, 131], "discrete_spac": [36, 177], "continous_spac": 36, "we": [36, 127, 128, 131, 135, 176, 178], "match": 36, "bound": [38, 75, 84, 104, 123, 127, 128, 129, 131, 132, 133, 135, 139, 143, 144, 145, 178], "np": 38, "ndarrai": [38, 75, 84, 86, 87, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 127, 128, 131, 139, 141, 165, 167], "shape": [38, 178], "num_dim": 38, "2": [38, 131, 158, 178], "min": [38, 39, 131, 178], "max": [38, 39, 178], "each": [38, 51, 79, 80, 86, 88, 89, 94, 95, 99, 100, 101, 102, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 127, 128, 131, 133, 135, 162, 178], "For": [38, 133, 178], "exampl": [38, 178], "3d": 38, "x": [38, 84, 86, 87, 88, 89, 94, 95, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 131, 164, 169, 170], "1": [38, 94, 95, 99, 100, 101, 102, 110, 111, 113, 114, 116, 117, 120, 127, 128, 139, 143, 164, 169, 170, 174, 178], "y": [38, 84, 87, 88, 94, 95, 97, 98, 101, 102, 104, 105, 106, 107, 109, 110, 111, 115, 116, 117, 118, 119, 120, 131, 164, 169, 170], "5": [38, 89, 120, 143, 144, 145, 178], "4": [38, 128, 133, 178], "z": [38, 128], "12": 38, "6": [38, 143, 145, 146, 178], "8": [38, 178], "would": [38, 75, 123, 133, 143, 144, 145, 178], "check_bounds_valid": 38, "check": [38, 59, 135, 154], "format": [38, 78, 178], "maximum": [38, 39, 59, 128, 135, 139], "larger": [38, 128], "minimum": [38, 39, 128, 135, 139, 178], "get_num_dim": 38, "get_num_valu": 39, "env_nam": [41, 42, 43], "name": [41, 42, 43, 75, 77, 78, 80, 81, 103, 108, 123, 127, 128, 129, 130, 131, 132, 133, 135, 143, 144, 145, 178], "default": [41, 42, 78, 123, 132, 135, 143, 144, 145, 147, 178], "constraint": [41, 75, 123, 125, 133, 134, 135, 139, 143, 144, 145, 146, 147, 162, 177], "string": [41, 75, 129, 130, 132, 133, 135, 143, 144, 145, 146, 147, 177], "kwarg": [42, 47, 75, 77, 78, 80, 81, 123, 127, 128, 129, 130, 131, 135, 139, 146, 174], "path": [43, 147, 154, 162], "metadata": [43, 77, 78, 80, 81, 96, 123, 147, 157, 178], "file": [43, 78, 141, 146, 147, 155, 156, 157, 158, 159, 178], "run": [44, 51, 52, 53, 54, 67, 70, 75, 76, 82, 123, 138, 139, 140, 141, 142, 143, 144, 145, 177], "rlspec": [44, 146, 177, 178], "save": [44, 67, 70, 146, 147, 159, 162, 178], "disk": [44, 67, 70, 75, 78], "print": [45, 57, 59, 61, 63, 65], "sum": [45, 94, 95, 99, 100, 101, 102, 167], "debug": [45, 57, 61, 63, 65, 123, 141], "env_kwarg": [47, 146, 178], "seldonianmodel": [47, 75, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 127, 128, 131, 139, 144, 145, 177], "parameter": [47, 178], "dict": [47, 51, 53, 103, 108, 123, 127, 128, 131, 133, 135, 143, 144, 145, 146, 162], "pertain": [47, 146], "gamma": [47, 59, 146, 167, 178], "discount": [47, 59, 146, 178], "factor": [47, 59, 146, 178], "singl": [47, 52, 53, 135, 178], "pair": [47, 84, 87, 131, 178], "get_probs_from_observations_and_act": 47, "those": [47, 133], "agent": [49, 50, 51, 52, 53, 54, 177], "mani": 51, "consist": [51, 53, 178], "same": [51, 131, 160], "_i": [51, 178], "arbitrari": [53, 59], "num_episod": 54, "wrapper": [54, 75, 139, 141, 155, 156, 158, 159], "run_trial": [54, 177], "explic": 54, "rather": 54, "via": [54, 135, 178], "get_env_descript": [57, 59, 61, 63, 65], "get_observ": [57, 59, 61, 63, 65], "reset": [57, 59, 61, 63, 65, 135], "initi": [57, 59, 61, 63, 65, 75, 123, 135, 143, 144, 145], "start_visu": [57, 59, 61, 63, 65], "turn": [57, 59, 61, 63, 65], "visual": [57, 59, 61, 63, 65, 129, 130, 132, 135, 176, 178], "debugg": [57, 59, 61, 63, 65], "stop_visu": [57, 59, 61, 63, 65], "off": [57, 59, 61, 63, 65], "out": [57, 59, 61, 63, 65], "size": 59, "3": [59, 128, 169, 171], "squar": [59, 97, 98, 104, 105, 115, 128, 133, 178], "grid": 59, "cell": 59, "side": [59, 135], "distinct": 59, "terminal_st": 59, "occupi": 59, "time": [59, 120], "timestep": [59, 79, 178], "max_tim": 59, "allow": 59, "expect": [59, 127, 128, 131, 133], "create_env_descript": 59, "is_in_goal_st": 59, "goal": [59, 178], "true": [59, 101, 102, 116, 117, 127, 128, 131, 133, 139, 143, 144, 145, 147, 162, 171, 178], "fals": [59, 75, 78, 81, 94, 95, 101, 102, 103, 110, 111, 120, 123, 133, 135, 141, 143, 144, 145, 146, 147, 158, 159, 162, 171, 178], "go": [59, 178], "back": [59, 143, 144, 145], "between": [59, 94, 95, 99, 100, 101, 102, 110, 111, 113, 114, 116, 117, 131, 178], "reach": 59, "next": 59, "update_posit": 59, "posit": [59, 86, 88, 89, 94, 95, 99, 100, 101, 102, 103, 110, 111, 113, 114, 117, 120, 128, 133, 135, 178], "inform": [59, 178], "candid": [73, 74, 75, 121, 123, 127, 128, 131, 139, 141, 143, 144, 145, 177], "candidate_dataset": 75, "n_safeti": [75, 128], "parse_tre": [75, 139, 143, 144, 145, 177, 178], "primary_object": [75, 123, 124, 139, 141, 143, 144, 145], "optimization_techniqu": [75, 143, 144, 145, 178], "barrier_funct": [75, 143, 144, 145, 178], "optim": [75, 141, 143, 144, 145, 177, 178], "powel": [75, 178], "initial_solut": 75, "none": [75, 78, 132, 143, 144, 145, 146], "regim": [75, 77, 78, 81, 133, 135, 136, 139, 178], "supervised_learn": [75, 77, 78, 81, 135, 136, 139, 178], "write_logfil": [75, 141], "dataset": [75, 96, 109, 115, 127, 128, 131, 139, 141, 143, 144, 145, 146, 147, 177], "length": [75, 128, 133], "safeti": [75, 123, 127, 128, 131, 137, 138, 139, 141, 143, 144, 145, 177], "when": [75, 94, 95, 101, 102, 127, 135, 162, 178], "predict": [75, 81, 84, 86, 87, 88, 89, 100, 110, 111, 116, 117, 178], "confid": [75, 127, 128, 131, 132, 135, 143, 144, 145, 146, 147, 178], "dure": [75, 78, 81, 133, 141, 143, 144, 145, 178], "parsetre": [75, 139, 143, 144, 177, 178], "pars": [75, 125, 127, 129, 130, 131, 132, 133, 134, 135, 139, 143, 144, 145, 176, 178], "tree": [75, 125, 127, 129, 130, 131, 132, 133, 134, 135, 139, 143, 144, 145, 176, 178], "behavior": [75, 79, 123, 125, 133, 134, 135, 139, 143, 144, 145, 177], "sole": [75, 123, 143, 144, 145], "absenc": [75, 123, 143, 144, 145], "loss": [75, 106, 107, 118, 119, 120, 123, 133, 143, 144, 145, 178], "str": [75, 77, 78, 80, 81, 103, 108, 123, 127, 128, 129, 130, 131, 132, 135, 139, 141, 143, 144, 145, 147, 154, 155, 156, 158, 159, 160, 162], "g": [75, 77, 78, 80, 81, 103, 108, 123, 127, 128, 131, 135, 139, 143, 144, 145, 178], "gradient_desc": [75, 143, 144, 145, 177, 178], "numpi": [75, 84, 86, 87, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 127, 128, 131, 139, 141, 165, 167], "categori": [75, 77, 78, 81, 135, 139, 174], "machin": [75, 77, 78, 81, 83, 85, 90, 91, 92, 127, 128, 131, 135, 139, 177, 178], "algorithm": [75, 76, 77, 78, 81, 82, 131, 135, 139, 140, 141, 142, 143, 144, 145, 178], "reinforcement_learn": [75, 77, 78, 81, 135, 139, 178], "write": [75, 141, 178], "output": [75, 178], "evaluate_primary_object": [75, 139, 141], "theta": [75, 84, 86, 87, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 127, 128, 131, 139, 141, 178], "primari": [75, 123, 139, 141, 143, 144, 145, 162, 178], "fix": [75, 128, 139, 141, 178], "input": [75, 86, 89, 127, 128, 131, 154, 155, 158, 160, 167, 178], "gradient": [75, 104, 105, 106, 123, 143, 144, 145, 162, 178], "descent": [75, 123, 162, 178], "get_constraint_upper_bound": 75, "upper": [75, 123, 127, 128, 129, 130, 131, 132, 135, 139, 178], "objective_with_barri": 75, "minimization_techniqu": 75, "barrier": [75, 178], "add": [75, 81, 135], "larg": 75, "penalti": 75, "violat": [75, 135, 178], "nsf": [75, 141, 178], "build": [76, 125, 134, 135, 142], "load": [76, 78, 155, 156, 157, 158, 178], "meta_inform": [77, 80, 81], "datafram": [77, 80, 81, 96, 112, 127, 128, 131, 135], "column": [77, 78, 81, 127, 128, 131, 135, 136, 178], "load_rl_dataset_from_csv": [78, 178], "filenam": [78, 155, 156, 157, 158, 159, 174, 178], "metadata_filenam": [78, 178], "rldataset": [78, 177, 178], "csv": [78, 178], "episode_index": 78, "probability_of_act": 78, "load_rl_dataset_from_episode_fil": [78, 178], "pickl": [78, 156, 159, 178], "load_supervised_dataset": [78, 178], "include_sensitive_column": [78, 81], "include_intercept_term": [78, 81, 171], "file_typ": 78, "superviseddataset": [78, 177, 178], "sensit": [78, 81, 178], "train": [78, 81, 84, 87, 88, 178], "pre": 78, "append": 78, "ones": [78, 81], "extens": 78, "rl": [79, 80, 135, 139, 143, 167, 177, 178], "o": 80, "r": [80, 106], "pi_b": 80, "df": 81, "label_column": [81, 178], "sensitive_column_nam": 81, "supervis": [81, 92, 133, 135, 145, 178], "panda": [81, 112, 131], "full": [81, 131, 162, 178], "target": 81, "label": [81, 84, 86, 87, 88, 89, 97, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 115, 116, 117, 118, 119, 120, 127, 128, 131, 162, 178], "includ": [81, 135, 178], "main": [83, 134, 177], "linearregressionmodel": [84, 177, 178], "regress": [84, 87, 88, 90, 131, 133, 135, 136, 145, 178], "sever": [84, 128, 131, 178], "parent": [84, 85, 90, 91, 92, 128, 131], "assum": 84, "intercept": 84, "fit": [84, 87, 88, 178], "nxm": [84, 87], "nx1": [84, 87], "origin": 84, "squash": 84, "supervisedmodel": [85, 90, 177], "classif": [85, 133, 135, 145, 178], "librari": [85, 90, 91, 92, 123, 143, 177, 178], "onli": [85, 128, 139, 162, 178], "support": [85, 133, 178], "binari": 85, "classificationmodel": [86, 88, 89, 177, 178], "classifi": [86, 89], "alwai": [86, 89, 123, 127, 128, 131, 135, 178], "regardless": [86, 89, 178], "have": [86, 88, 89, 120, 135, 178], "regressionmodel": [87, 177, 178], "logist": [88, 106, 107, 118, 133], "ha": [89, 133, 178], "prob": 89, "neg": [94, 95, 99, 101, 110, 111, 113, 116, 120, 133, 135], "rate": [94, 95, 99, 100, 101, 102, 103, 110, 111, 113, 114, 116, 117, 123, 133, 135, 178], "whole": [94, 95, 97, 98, 99, 100, 101, 102, 103, 107, 135], "sampl": [94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 107, 108, 112, 118, 119, 128, 165, 178], "being": [94, 95, 99, 100, 101, 102, 110, 111, 113, 114, 116, 117, 127], "fact": [94, 95, 101, 102], "wa": [94, 95, 101, 102, 131, 135, 178], "instanc": [94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120], "data_dict": [96, 103, 108, 112, 127, 128, 131], "unweight": [96, 112], "import": [96, 112, 123, 176, 178], "estim": [96, 112, 127, 128, 178], "over": [96, 97, 98, 103, 139, 178], "mean": [97, 98, 105, 109, 115, 131, 133, 178], "error": [97, 98, 104, 105, 109, 115, 128, 131, 133, 177, 178], "y_hat": 97, "normal": [100, 139, 143, 164, 169, 170], "statistic_nam": [103, 108], "evalu": [103, 104, 108, 127, 128, 131, 135, 141], "statist": [103, 108, 127, 133, 143, 144, 145, 178], "fpr": [103, 108, 127, 133, 178], "analyt": 104, "rtype": 104, "w": 106, "t": [106, 127, 128, 131, 166], "perceptron": 106, "vector": [109, 112, 115, 123, 127, 128, 131, 165], "subject": [110, 111, 116, 117, 178], "actual": [110, 111, 116, 117, 128, 178], "ndarra": 118, "averag": [119, 120], "cost": [119, 120, 178], "sum_i": [120, 162], "p_": 120, "wrong": 120, "answer": [120, 160], "point": [120, 123, 131, 155, 156, 158, 164, 169, 170, 178], "c_i": 120, "n_constraint": 123, "upper_bounds_funct": [123, 124], "theta_init": 123, "lambda_init": [123, 143, 144, 145], "alpha_theta": [123, 143, 144, 145], "05": [123, 127, 128, 131, 178], "alpha_lamb": [123, 143, 144, 145], "beta_veloc": [123, 143, 144, 145], "9": [123, 143, 144, 145, 167, 178], "beta_rmsprop": [123, 143, 144, 145], "num_it": [123, 143, 144, 145], "200": [123, 143, 144, 145], "gradient_librari": [123, 124, 143, 144, 145], "autograd": [123, 143, 144, 145], "verbos": [123, 143, 144, 145, 146, 147, 158, 159], "simultan": 123, "ascent": 123, "adam": [123, 143, 144, 145, 178], "lagrangian": [123, 178], "l": [123, 162, 178], "lambda": [123, 178], "f": [123, 131, 162, 178], "lagrang": [123, 162], "multipli": [123, 135, 162], "done": 123, "find": [123, 178], "saddl": 123, "Being": 123, "part": [123, 178], "solut": [123, 135, 139, 141, 162, 178], "test": [123, 127, 128, 131, 137, 138, 139, 141, 143, 144, 145, 162, 177], "determin": [123, 135], "No": [123, 178], "found": [123, 139, 141, 178], "term": 123, "decai": 123, "veloc": 123, "rmsprop": 123, "iter": [123, 131, 178], "comput": [123, 131, 135, 143, 144, 145], "automat": 123, "lower": [127, 128, 129, 130, 131, 132, 135], "inf": [127, 128, 130, 131], "conditional_column": [127, 128, 131], "leaf": [127, 129, 130, 139], "measur": [127, 133, 135, 178], "condit": [127, 128, 131, 135], "node_typ": [127, 129], "equal": [127, 135, 136, 139, 178], "base_nod": 127, "delta": [127, 128, 131, 135, 136, 146, 147, 178], "share": [127, 128, 131], "put": [127, 128, 131], "measure_function_nam": 127, "repres": [127, 129, 130, 133, 135, 178], "measure_funct": [127, 178], "oper": [127, 130, 177, 178], "calculate_bound": [127, 128, 131], "bound_method": [127, 128, 131, 143, 144, 145], "calculate_data_forbound": [127, 128, 131], "prepar": [127, 128], "calculate_valu": [127, 128, 131], "etc": [127, 130, 131], "compute_hc_lowerbound": [127, 128, 131], "datas": [127, 128, 131], "high": [127, 128, 131], "level": [127, 128, 131, 135, 178], "compute_hc_upper_and_lowerbound": [127, 128, 131], "compute_hc_upperbound": [127, 128, 131], "independ": [127, 128, 131, 178], "mask_datafram": [127, 128, 131], "mask": [127, 128, 131], "joint": [127, 128, 131], "AND": [127, 128, 131], "predict_hc_lowerbound": [127, 128, 131], "pass": [127, 128, 131, 135, 139, 141, 146, 178], "predict_hc_upper_and_lowerbound": [127, 128, 131], "predict_hc_upperbound": [127, 128, 131], "zhat": [127, 128, 131], "unbias": [127, 128], "basenod": [128, 131, 177], "custom": [128, 131, 133, 178], "cvar_alpha": 128, "alpha": 128, "definit": [128, 178], "consid": 128, "least": [128, 178], "var_alpha": 128, "largest": 128, "100": 128, "thoma": [128, 131], "miller": 128, "2019": [128, 131], "http": [128, 131, 166], "peopl": 128, "c": 128, "umass": 128, "edu": 128, "pthoma": 128, "paper": 128, "thomas2019": 128, "pdf": 128, "see": [128, 131, 143, 144, 145, 177, 178], "theorem": 128, "threshold": [128, 146, 147], "cvar": 128, "sort": 128, "b": [128, 133, 135], "n_candid": 128, "constant": [129, 135, 167, 178], "constant_nod": 129, "represent": [129, 130, 132, 133], "what": [129, 130, 132, 177], "displai": [129, 130, 132, 135, 162], "insid": [129, 130, 132], "box": [129, 130, 132, 178], "graph": [129, 130, 132, 135, 176], "intern": [130, 178], "non": 130, "These": [130, 178], "perform": [130, 133, 178], "wise": 131, "differ": [131, 178], "male": [131, 178], "femal": [131, 178], "present": [131, 135], "et": 131, "al": 131, "www": [131, 166], "scienc": 131, "org": 131, "stoken": 131, "author": 131, "token": 131, "st": 131, "119": 131, "figur": [131, 162, 178], "precalculate_data": 131, "preconfigur": 131, "so": [131, 135, 178], "doe": [131, 135, 177], "need": [131, 132, 135, 142, 178], "recalcul": 131, "through": [131, 135], "up": [131, 135, 178], "y_i": 131, "y_hat_i": 131, "m": [131, 135, 178], "y_j": 131, "y_hat_j": 131, "There": [131, 135, 178], "mai": [131, 154, 178], "row": [131, 178], "n_male": 131, "n_femal": 131, "left": [132, 135, 178], "right": [132, 135, 178], "will_lower_bound": 132, "will_upper_bound": 132, "global": 133, "construct": [133, 178], "measure_functions_dict": 133, "sub_regim": [133, 135, 136, 145, 178], "appear": [133, 135, 178], "recogn": 133, "special": [133, 178], "organ": 133, "sub": [133, 135, 178], "refer": [133, 178], "pr": [133, 135, 178], "nr": 133, "tpr": [133, 178], "fnr": 133, "tnr": 133, "logistic_loss": [133, 177], "mean_error": [133, 135, 177], "mean_squared_error": [133, 177, 178], "reinforc": [133, 178], "j_pi_new": [133, 178], "custom_base_node_dict": 133, "map": 133, "node": [133, 135, 139, 177, 178], "op_mapp": 133, "ast": [133, 135], "thei": [133, 160, 178], "not_supported_op_mapp": 133, "bounds_required_dict": 133, "requir": [133, 135, 144, 176, 178], "If": [133, 135, 143, 144, 145, 160, 176, 177, 178], "two": [133, 135, 178], "children": [133, 135], "boolean": [133, 178], "like": [133, 135, 178], "need_a_low": 133, "need_a_upp": 133, "need_b_low": 133, "need_b_upp": 133, "one": [133, 135, 143, 144, 145, 178], "can": [135, 178], "ml": [135, 178], "user": [135, 160, 178], "appropri": 135, "root": [135, 139], "assign": 135, "built": [135, 143, 144, 145, 178], "constraint_str": [135, 136, 146, 147], "express": [135, 178], "n_node": 135, "n_base_nod": 135, "more": [135, 178], "onc": [135, 178], "contribut": 135, "base_node_dict": 135, "keep": 135, "track": 135, "uniqu": 135, "been": [135, 178], "alreadi": [135, 178], "help": [135, 166], "handl": 135, "case": [135, 178], "duplic": 135, "node_fonts": 135, "fontsiz": 135, "graphviz": [135, 176], "available_measure_funct": 135, "_ab": 135, "absolut": [135, 178], "interv": [135, 139], "tupl": [135, 141, 178], "_add": 135, "_assign_bounds_help": 135, "lower_need": 135, "upper_need": 135, "travers": 135, "_assign_deltas_help": 135, "weight_method": 135, "_ast2pt_nod": 135, "ast_nod": 135, "_ast_tree_help": 135, "make": [135, 162, 178], "recurs": 135, "_div": 135, "divid": 135, "_evaluator_help": 135, "_exp": 135, "_max": 135, "_min": 135, "_mult": 135, "_pow": 135, "pow": 135, "_preprocess_constraint_str": 135, "inequ": [135, 178], "move": 135, "everyth": 135, "final": 135, "form": [135, 178], "some": [135, 178], "sure": 135, "mathemat": [135, 178], "written": [135, 178], "python": [135, 166, 176, 178], "syntax": 135, "_propagate_valu": 135, "propag": [135, 139], "_propagator_help": 135, "_protect_nan": 135, "bound_typ": 135, "nan": 135, "infin": 135, "postit": 135, "_sub": 135, "subract": 135, "assign_bounds_need": 135, "breadth": 135, "search": 135, "decid": 135, "eventu": 135, "necessari": [135, 178], "end": [135, 178], "care": 135, "assign_delta": 135, "split": [135, 178], "among": 135, "build_tre": 135, "delta_weight_method": [135, 136], "create_from_ast": 135, "structur": 135, "evaluate_constraint": 135, "itself": 135, "postord": 135, "logic": 135, "make_viz": 135, "titl": 135, "diagram": 135, "top": [135, 178], "make_viz_help": 135, "edg": 135, "digraph": 135, "propagate_bound": 135, "reset_base_node_dict": 135, "reset_data": 135, "less": [135, 139, 178], "frequent": 135, "safety_dataset": 139, "normalize_return": [139, 143], "relev": [139, 162], "min_return": 139, "max_return": 139, "loop": 139, "spec": [141, 177], "introspect": 141, "complet": [141, 177, 178], "candidate_select": [141, 177], "branch": 141, "either": [141, 178], "safety_test": [141, 177, 178], "result": [141, 178], "write_cs_logfil": [141, 178], "log": [141, 178], "passed_safeti": [141, 178], "indic": [141, 178], "run_safety_test": 141, "candidate_solut": 141, "other": [141, 178], "process": [141, 178], "frac_data_in_safeti": [143, 144, 145, 146], "initial_solution_fn": [143, 144, 145, 146], "base_node_bound_method_dict": [143, 144, 145], "use_builtin_primary_gradient_fn": [143, 144, 145, 146], "custom_primary_gradient_fn": [143, 144, 145], "optimization_hyperparam": [143, 144, 145, 178], "005": [143, 144, 145], "95": [143, 144, 145], "hyper_search": [143, 144, 145], "regularization_hyperparam": [143, 144, 145], "rl_model": [143, 146, 177, 178], "fraction": [143, 144, 145], "remain": [143, 144, 145], "rl_environment_obj": 143, "exist": [143, 144, 145], "fall": [143, 144, 145], "builtin": [143, 144, 145], "ttest": [143, 144, 145], "hyperparamet": [143, 144, 145, 178], "regular": [143, 144, 145], "usable_opt_dict": [143, 144, 145], "show": [143, 144, 145, 160, 162, 178], "accept": [143, 144, 145, 178], "techniqu": [143, 144, 145, 178], "save_dir": [146, 147], "pkl": [146, 147, 178], "directori": [146, 147, 154, 178], "flag": [146, 147, 178], "control": [146, 147, 178], "metadata_pth": 147, "supervisedspec": [147, 177, 178], "array_in": 150, "val_in": 151, "min_val": 151, "max_val": 151, "output_str": 152, "json": [155, 157, 158, 178], "indent": 158, "abl": 159, "str_to_show": 160, "default_str": 160, "default_v": 160, "ye": 160, "question": 160, "gather": 160, "command": [160, 178], "line": [160, 178], "invalid": 160, "let": [160, 178], "them": 160, "know": [160, 178], "again": 160, "shown": [160, 178], "enter": 160, "noth": 160, "primary_objective_nam": [162, 178], "savenam": 162, "png": 162, "evolut": [162, 178], "plot": [162, 178], "ii": 162, "lambda_i": [162, 178], "iii": 162, "g_i": [162, 178], "iv": 162, "lagranian": 162, "n": [162, 178], "plt": 162, "numpoint": 164, "loc_x": [164, 169, 170, 171], "loc_i": [164, 169, 170, 171], "sigma_x": [164, 169, 170, 171], "sigma_i": [164, 169, 170, 171], "2d": [164, 169, 170], "random": [164, 169, 170], "center": [164, 169, 170], "distribut": [164, 169, 170], "standard": [164, 165, 169, 170], "deviat": [164, 165, 169, 170], "v": 165, "bessel": 165, "correct": 165, "nu": 166, "invers": [166, 178], "student": 166, "cdf": 166, "degre": 166, "freedom": 166, "correspond": [166, 178], "matlab": 166, "mathwork": 166, "com": 166, "stat": 166, "html": 166, "arr": 167, "num_point": [169, 170, 171], "clip_min": [169, 171], "clip_max": [169, 171], "clip": 171, "msg": 174, "lineno": 174, "arg": 174, "seldonian": [176, 178], "pip": 176, "Then": 176, "system": 176, "wide": 176, "recommend": 176, "welcom": 177, "core": 177, "toolkit": [177, 178], "sourc": 177, "code": [177, 178], "host": 177, "github": 177, "overview": 177, "interfac": 177, "sa": 177, "do": 177, "start": [177, 178], "instal": 177, "tutori": [177, 178], "api": [177, 178], "fourier": 177, "discrete_random_ag": 177, "function_approxim": 177, "linear_fa": 177, "linear_state_action_value_fa": 177, "construct_q_table_from_env_descript": 177, "parameterized_non_learning_softmax_ag": 177, "discretesoftmax": [177, 178], "keyboard_gridworld": 177, "mountain_car_rough_solut": 177, "check_space_typ": 177, "continuous_spac": 177, "rl_generate_dataset_and_spec_fil": 177, "get_constraint_str": 177, "get_env_kwarg": 177, "get_metadata_path": 177, "print_return_info": 177, "rl_runner": 177, "create_ag": 177, "create_env": 177, "run_all_tri": 177, "run_episod": 177, "run_trial_given_agent_and_env": 177, "gridworld": 177, "mountaincar": 177, "n_step_mountaincar": 177, "simglucose_env": 177, "simglucos": 177, "generate_mountaincar_episod": 177, "generate_simglucose_episod": 177, "get_max_ob": 177, "hyperparams_and_set": 177, "define_hyperparameter_and_setting_dict": 177, "candidateselect": [177, 178], "datasetload": [177, 178], "boundedlinearregressionmodel": 177, "dummyclassifiermodel": 177, "logisticregressionmodel": [177, 178], "randomclassifiermodel": 177, "false_negative_r": 177, "false_positive_r": 177, "is_estim": 177, "negative_r": 177, "positive_r": 177, "true_negative_r": 177, "true_positive_r": 177, "evaluate_statist": 177, "gradient_bounded_squared_error": 177, "gradient_mean_squared_error": 177, "gradient_logistic_loss": 177, "sample_from_statist": 177, "vector_error": 177, "vector_false_negative_r": 177, "vector_false_positive_r": 177, "vector_is_estim": 177, "vector_negative_r": 177, "vector_positive_r": 177, "vector_squared_error": 177, "vector_true_negative_r": 177, "vector_true_positive_r": 177, "vector_logistic_loss": 177, "vector_weighted_loss": 177, "weighted_loss": 177, "gradient_descent_adam": 177, "setup_gradi": 177, "cvarsqebasenod": 177, "constantnod": 177, "internalnod": 177, "medcustombasenod": 177, "make_parse_trees_from_constraint": 177, "safetytest": [177, 178], "seldonian_algorithm": [177, 178], "seldonianalgorithm": [177, 178], "createrlspec": [177, 178], "createsupervisedspec": [177, 178], "util": [177, 178], "rl_util": 177, "argmax_multi": 177, "clamp": 177, "io_util": [177, 178], "dir_path": 177, "load_json": 177, "load_pickl": [177, 178], "load_supervised_metadata": 177, "save_json": 177, "save_pickl": 177, "yes_or_no_input": 177, "plot_util": [177, 178], "plot_gradient_desc": [177, 178], "stats_util": 177, "generate_data": 177, "stddev": 177, "tinv": 177, "weighted_sum_gamma": 177, "tutorial_util": 177, "generate_clipped_data": 177, "make_synthetic_regression_dataset": 177, "warn": 177, "custom_warn": 177, "custom_formatwarn": 177, "document": 178, "detail": 178, "homepag": 178, "In": 178, "page": 178, "few": 178, "hand": 178, "illustr": 178, "simul": 178, "realist": 178, "most": 178, "piec": 178, "One": 178, "cover": 178, "note": 178, "could": 178, "unifi": 178, "work": 178, "pattern": 178, "inherit": 178, "concept": 178, "conceptu": 178, "enforc": 178, "develop": 178, "design": 178, "applic": 178, "graphic": 178, "short": 178, "underli": 178, "discuss": 178, "below": 178, "well": 178, "manual": 178, "loader": 178, "comma": 178, "separ": 178, "header": 178, "categor": 178, "numer": 178, "might": 178, "look": 178, "622": 178, "491": 178, "56": 178, "439": 178, "93": 178, "707": 178, "64": 178, "663": 178, "65": 178, "557": 178, "09": 178, "711": 178, "37": 178, "731": 178, "31": 178, "509": 178, "33333": 178, "538": 178, "490": 178, "58": 178, "406": 178, "59": 178, "529": 178, "532": 178, "28": 178, "447": 178, "23": 178, "527": 178, "379": 178, "14": 178, "488": 178, "98333": 178, "455": 178, "18": 178, "440": 178, "570": 178, "86": 178, "417": 178, "54": 178, "453": 178, "53": 178, "425": 178, "87": 178, "475": 178, "63": 178, "476": 178, "11": 178, "407": 178, "15": 178, "97333": 178, "756": 178, "91": 178, "679": 178, "62": 178, "531": 178, "583": 178, "534": 178, "42": 178, "521": 178, "592": 178, "41": 178, "783": 178, "76": 178, "588": 178, "26": 178, "53333": 178, "hot": 178, "option": 178, "10": 178, "integ": 178, "25": 178, "second": 178, "should": 178, "befor": 178, "partit": 178, "intention": 178, "exclud": 178, "kei": 178, "your": 178, "problem": 178, "try": 178, "sensitive_column": 178, "biggest": 178, "essenti": 178, "wrap": 178, "scikit": 178, "linearregress": 178, "unless": 178, "own": 178, "best": 178, "though": 178, "chosen": 178, "explicitli": 178, "thing": 178, "extend": 178, "provi": 178, "py": 178, "_": 178, "directli": 178, "often": 178, "five": 178, "math": 178, "nativ": 178, "ab": 178, "exp": 178, "239": 178, "trigger": 178, "open": 178, "ad": 178, "quantiti": 178, "It": 178, "someth": 178, "wai": 178, "wrote": 178, "instruct": 178, "recal": 178, "leq": 178, "satisfi": 178, "howev": 178, "cumbersom": 178, "symbol": 178, "interpret": 178, "ident": 178, "themselv": 178, "tri": 178, "basic": 178, "plain": 178, "english": 178, "88": 178, "greater": 178, "commonli": 178, "fair": 178, "filter": 178, "atr1": 178, "atr2": 178, "placehold": 178, "parenthes": 178, "surround": 178, "statement": 178, "sai": 178, "r1": 178, "r2": 178, "stand": 178, "race": 178, "demograph": 178, "pariti": 178, "toler": 178, "ratio": 178, "dispar": 178, "impact": 178, "anoth": 178, "permit": 178, "belong": 178, "bundl": 178, "block": 178, "At": 178, "broad": 178, "scope": 178, "throught": 178, "now": 178, "happen": 178, "even": 178, "small": 178, "black": 178, "forc": 178, "toward": 178, "feasibl": 178, "cg": 178, "nelder": 178, "mead": 178, "bfg": 178, "cma": 178, "scipi": 178, "minim": 178, "solver": 178, "covari": 178, "matrix": 178, "adapt": 178, "strategi": 178, "kkt": 178, "situat": 178, "contraint": 178, "conflict": 178, "vanilla": 178, "oscil": 178, "boundari": 178, "dampen": 178, "momentum": 178, "our": 178, "mitig": 178, "far": 178, "hat": 178, "mathcal": 178, "ran": 178, "convent": 178, "candidate_selection_log": 178, "increas": 178, "overwritten": 178, "log_fil": 178, "candidate_selection_log0": 178, "cs_dict": 178, "produc": 178, "1500": 178, "red": 178, "area": 178, "middl": 178, "region": 178, "dot": 178, "multipl": 178, "its": 178, "subplot": 178, "repeat": 178, "deem": 178, "assembl": 178, "interact": 178}, "objects": {"": [[0, 0, 0, "-", "seldonian"]], "seldonian": [[1, 0, 0, "-", "RL"], [73, 0, 0, "-", "candidate_selection"], [76, 0, 0, "-", "dataset"], [82, 0, 0, "-", "models"], [121, 0, 0, "-", "optimizers"], [125, 0, 0, "-", "parse_tree"], [137, 0, 0, "-", "safety_test"], [140, 0, 0, "-", "seldonian_algorithm"], [142, 0, 0, "-", "spec"], [148, 0, 0, "-", "utils"], [172, 0, 0, "-", "warnings"]], "seldonian.RL": [[2, 0, 0, "-", "Agents"], [33, 0, 0, "-", "Env_Description"], [40, 0, 0, "-", "RL_generate_dataset_and_spec_file"], [46, 0, 0, "-", "RL_model"], [48, 0, 0, "-", "RL_runner"], [55, 0, 0, "-", "environments"], [66, 0, 0, "-", "generate_mountaincar_episodes"], [68, 0, 0, "-", "generate_simglucose_episodes"], [71, 0, 0, "-", "hyperparams_and_settings"]], "seldonian.RL.Agents": [[3, 0, 0, "-", "Agent"], [5, 0, 0, "-", "Bases"], [8, 0, 0, "-", "Discrete_Random_Agent"], [10, 0, 0, "-", "Function_Approximators"], [20, 0, 0, "-", "Parameterized_non_learning_softmax_agent"], [22, 0, 0, "-", "Policies"], [29, 0, 0, "-", "keyboard_gridworld"], [31, 0, 0, "-", "mountain_car_rough_solution"]], "seldonian.RL.Agents.Agent": [[4, 1, 1, "", "Agent"]], "seldonian.RL.Agents.Agent.Agent": [[4, 2, 1, "", "__init__"], [4, 2, 1, "", "__repr__"], [4, 2, 1, "", "choose_action"], [4, 2, 1, "", "get_prob_this_action"], [4, 2, 1, "", "update"]], "seldonian.RL.Agents.Bases": [[6, 0, 0, "-", "Fourier"]], "seldonian.RL.Agents.Bases.Fourier": [[7, 1, 1, "", "Fourier"]], "seldonian.RL.Agents.Bases.Fourier.Fourier": [[7, 2, 1, "", "__init__"], [7, 2, 1, "", "__repr__"]], "seldonian.RL.Agents.Discrete_Random_Agent": [[9, 1, 1, "", "Discrete_Random_Agent"]], "seldonian.RL.Agents.Discrete_Random_Agent.Discrete_Random_Agent": [[9, 2, 1, "", "__init__"], [9, 2, 1, "", "__repr__"], [9, 2, 1, "", "choose_action"], [9, 2, 1, "", "get_prob_this_action"], [9, 2, 1, "", "update"]], "seldonian.RL.Agents.Function_Approximators": [[11, 0, 0, "-", "Function_Approximator"], [13, 0, 0, "-", "Linear_FA"], [16, 0, 0, "-", "Table"]], "seldonian.RL.Agents.Function_Approximators.Function_Approximator": [[12, 1, 1, "", "Function_Approximator"]], "seldonian.RL.Agents.Function_Approximators.Function_Approximator.Function_Approximator": [[12, 2, 1, "", "__init__"], [12, 2, 1, "", "__repr__"], [12, 2, 1, "", "set_new_params"]], "seldonian.RL.Agents.Function_Approximators.Linear_FA": [[14, 1, 1, "", "Linear_FA"], [15, 1, 1, "", "Linear_state_action_value_FA"]], "seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_FA": [[14, 2, 1, "", "__init__"], [14, 2, 1, "", "__repr__"], [14, 2, 1, "", "set_new_params"]], "seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_state_action_value_FA": [[15, 2, 1, "", "__init__"], [15, 2, 1, "", "__repr__"], [15, 2, 1, "", "set_new_params"]], "seldonian.RL.Agents.Function_Approximators.Table": [[17, 1, 1, "", "Q_Table"], [18, 1, 1, "", "Table"], [19, 3, 1, "", "construct_Q_Table_From_Env_Description"]], "seldonian.RL.Agents.Function_Approximators.Table.Q_Table": [[17, 2, 1, "", "__init__"], [17, 2, 1, "", "__repr__"], [17, 2, 1, "", "from_environment_state_to_0_indexed_state"], [17, 2, 1, "", "get_action_values_given_state"], [17, 2, 1, "", "get_action_values_given_zero_indexed_state"], [17, 2, 1, "", "set_new_params"]], "seldonian.RL.Agents.Function_Approximators.Table.Table": [[18, 2, 1, "", "__init__"], [18, 2, 1, "", "__repr__"], [18, 2, 1, "", "from_environment_state_to_0_indexed_state"], [18, 2, 1, "", "set_new_params"]], "seldonian.RL.Agents.Parameterized_non_learning_softmax_agent": [[21, 1, 1, "", "Parameterized_non_learning_softmax_agent"]], "seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.Parameterized_non_learning_softmax_agent": [[21, 2, 1, "", "__init__"], [21, 2, 1, "", "__repr__"], [21, 2, 1, "", "choose_action"], [21, 2, 1, "", "get_action_values"], [21, 2, 1, "", "get_params"], [21, 2, 1, "", "get_prob_this_action"], [21, 2, 1, "", "set_new_params"], [21, 2, 1, "", "update"]], "seldonian.RL.Agents.Policies": [[23, 0, 0, "-", "Policy"], [26, 0, 0, "-", "Softmax"]], "seldonian.RL.Agents.Policies.Policy": [[24, 1, 1, "", "Discrete_Action_Policy"], [25, 1, 1, "", "Policy"]], "seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy": [[24, 2, 1, "", "__init__"], [24, 2, 1, "", "__repr__"], [24, 2, 1, "", "choose_action"], [24, 2, 1, "", "construct_basis_and_linear_FA"], [24, 2, 1, "", "from_0_indexed_action_to_environment_action"], [24, 2, 1, "", "from_environment_action_to_0_indexed_action"], [24, 2, 1, "", "get_action_values_given_state"], [24, 2, 1, "", "get_params"], [24, 2, 1, "", "get_prob_this_action"], [24, 2, 1, "", "make_state_action_FA"], [24, 2, 1, "", "set_new_params"]], "seldonian.RL.Agents.Policies.Policy.Policy": [[25, 2, 1, "", "__init__"], [25, 2, 1, "", "__repr__"], [25, 2, 1, "", "choose_action"], [25, 2, 1, "", "get_params"], [25, 2, 1, "", "get_prob_this_action"], [25, 2, 1, "", "set_new_params"]], "seldonian.RL.Agents.Policies.Softmax": [[27, 1, 1, "", "DiscreteSoftmax"], [28, 1, 1, "", "Softmax"]], "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax": [[27, 2, 1, "", "__init__"], [27, 2, 1, "", "__repr__"], [27, 2, 1, "", "_arg"], [27, 2, 1, "", "_denom"], [27, 2, 1, "", "choose_action"], [27, 2, 1, "", "choose_action_from_action_values"], [27, 2, 1, "", "construct_basis_and_linear_FA"], [27, 2, 1, "", "from_0_indexed_action_to_environment_action"], [27, 2, 1, "", "from_environment_action_to_0_indexed_action"], [27, 2, 1, "", "get_action_probs_from_action_values"], [27, 2, 1, "", "get_action_values_given_state"], [27, 2, 1, "", "get_e_to_the_something_terms"], [27, 2, 1, "", "get_params"], [27, 2, 1, "", "get_prob_this_action"], [27, 2, 1, "", "make_state_action_FA"], [27, 2, 1, "", "set_new_params"]], "seldonian.RL.Agents.Policies.Softmax.Softmax": [[28, 2, 1, "", "__init__"], [28, 2, 1, "", "__repr__"], [28, 2, 1, "", "choose_action"], [28, 2, 1, "", "choose_action_from_action_values"], [28, 2, 1, "", "construct_basis_and_linear_FA"], [28, 2, 1, "", "from_0_indexed_action_to_environment_action"], [28, 2, 1, "", "from_environment_action_to_0_indexed_action"], [28, 2, 1, "", "get_action_probs_from_action_values"], [28, 2, 1, "", "get_action_values_given_state"], [28, 2, 1, "", "get_e_to_the_something_terms"], [28, 2, 1, "", "get_params"], [28, 2, 1, "", "get_prob_this_action"], [28, 2, 1, "", "make_state_action_FA"], [28, 2, 1, "", "set_new_params"]], "seldonian.RL.Agents.keyboard_gridworld": [[30, 1, 1, "", "Keyboard_gridworld"]], "seldonian.RL.Agents.keyboard_gridworld.Keyboard_gridworld": [[30, 2, 1, "", "__init__"], [30, 2, 1, "", "__repr__"], [30, 2, 1, "", "choose_action"], [30, 2, 1, "", "get_prob_this_action"], [30, 2, 1, "", "update"]], "seldonian.RL.Agents.mountain_car_rough_solution": [[32, 1, 1, "", "Mountain_car_rough_solution"]], "seldonian.RL.Agents.mountain_car_rough_solution.Mountain_car_rough_solution": [[32, 2, 1, "", "__init__"], [32, 2, 1, "", "__repr__"], [32, 2, 1, "", "choose_action"], [32, 2, 1, "", "get_prob_this_action"], [32, 2, 1, "", "update"]], "seldonian.RL.Env_Description": [[34, 0, 0, "-", "Env_Description"], [37, 0, 0, "-", "Spaces"]], "seldonian.RL.Env_Description.Env_Description": [[35, 1, 1, "", "Env_Description"], [36, 3, 1, "", "check_space_type"]], "seldonian.RL.Env_Description.Env_Description.Env_Description": [[35, 2, 1, "", "__init__"], [35, 2, 1, "", "__repr__"], [35, 2, 1, "", "get_min_action"], [35, 2, 1, "", "get_min_state"], [35, 2, 1, "", "get_num_actions"], [35, 2, 1, "", "get_num_observation_dims"], [35, 2, 1, "", "get_num_states"]], "seldonian.RL.Env_Description.Spaces": [[38, 1, 1, "", "Continuous_Space"], [39, 1, 1, "", "Discrete_Space"]], "seldonian.RL.Env_Description.Spaces.Continuous_Space": [[38, 2, 1, "", "__init__"], [38, 2, 1, "", "__repr__"], [38, 2, 1, "", "check_bounds_valid"], [38, 2, 1, "", "get_num_dims"]], "seldonian.RL.Env_Description.Spaces.Discrete_Space": [[39, 2, 1, "", "__init__"], [39, 2, 1, "", "__repr__"], [39, 2, 1, "", "get_num_values"]], "seldonian.RL.RL_generate_dataset_and_spec_file": [[41, 3, 1, "", "get_constraint_string"], [42, 3, 1, "", "get_env_kwargs"], [43, 3, 1, "", "get_metadata_path"], [44, 3, 1, "", "main"], [45, 3, 1, "", "print_return_info"]], "seldonian.RL.RL_model": [[47, 1, 1, "", "RL_model"]], "seldonian.RL.RL_model.RL_model": [[47, 2, 1, "", "__init__"], [47, 2, 1, "", "__repr__"], [47, 2, 1, "", "get_prob_this_action"], [47, 2, 1, "", "get_probs_from_observations_and_actions"]], "seldonian.RL.RL_runner": [[49, 3, 1, "", "create_agent"], [50, 3, 1, "", "create_env"], [51, 3, 1, "", "run_all_trials"], [52, 3, 1, "", "run_episode"], [53, 3, 1, "", "run_trial"], [54, 3, 1, "", "run_trial_given_agent_and_env"]], "seldonian.RL.environments": [[56, 0, 0, "-", "Environment"], [58, 0, 0, "-", "gridworld"], [60, 0, 0, "-", "mountaincar"], [62, 0, 0, "-", "n_step_mountaincar"], [64, 0, 0, "-", "simglucose_env"]], "seldonian.RL.environments.Environment": [[57, 1, 1, "", "Environment"]], "seldonian.RL.environments.Environment.Environment": [[57, 2, 1, "", "__init__"], [57, 2, 1, "", "__repr__"], [57, 2, 1, "", "get_env_description"], [57, 2, 1, "", "get_observation"], [57, 2, 1, "", "reset"], [57, 2, 1, "", "start_visualizing"], [57, 2, 1, "", "stop_visualizing"], [57, 2, 1, "", "terminated"], [57, 2, 1, "", "transition"], [57, 2, 1, "", "visualize"]], "seldonian.RL.environments.gridworld": [[59, 1, 1, "", "Gridworld"]], "seldonian.RL.environments.gridworld.Gridworld": [[59, 2, 1, "", "__init__"], [59, 2, 1, "", "__repr__"], [59, 2, 1, "", "create_env_description"], [59, 2, 1, "", "get_env_description"], [59, 2, 1, "", "get_observation"], [59, 2, 1, "", "is_in_goal_state"], [59, 2, 1, "", "reset"], [59, 2, 1, "", "start_visualizing"], [59, 2, 1, "", "stop_visualizing"], [59, 2, 1, "", "terminated"], [59, 2, 1, "", "transition"], [59, 2, 1, "", "update_position"], [59, 2, 1, "", "visualize"]], "seldonian.RL.environments.mountaincar": [[61, 1, 1, "", "Mountaincar"]], "seldonian.RL.environments.mountaincar.Mountaincar": [[61, 2, 1, "", "__init__"], [61, 2, 1, "", "__repr__"], [61, 2, 1, "", "get_env_description"], [61, 2, 1, "", "get_observation"], [61, 2, 1, "", "reset"], [61, 2, 1, "", "start_visualizing"], [61, 2, 1, "", "stop_visualizing"], [61, 2, 1, "", "terminated"], [61, 2, 1, "", "transition"], [61, 2, 1, "", "visualize"]], "seldonian.RL.environments.n_step_mountaincar": [[63, 1, 1, "", "N_step_mountaincar"]], "seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar": [[63, 2, 1, "", "__init__"], [63, 2, 1, "", "__repr__"], [63, 2, 1, "", "get_env_description"], [63, 2, 1, "", "get_observation"], [63, 2, 1, "", "reset"], [63, 2, 1, "", "start_visualizing"], [63, 2, 1, "", "stop_visualizing"], [63, 2, 1, "", "terminated"], [63, 2, 1, "", "transition"], [63, 2, 1, "", "visualize"]], "seldonian.RL.environments.simglucose_env": [[65, 1, 1, "", "Simglucose"]], "seldonian.RL.environments.simglucose_env.Simglucose": [[65, 2, 1, "", "__init__"], [65, 2, 1, "", "__repr__"], [65, 2, 1, "", "get_env_description"], [65, 2, 1, "", "get_observation"], [65, 2, 1, "", "reset"], [65, 2, 1, "", "start_visualizing"], [65, 2, 1, "", "stop_visualizing"], [65, 2, 1, "", "terminated"], [65, 2, 1, "", "transition"], [65, 2, 1, "", "visualize"]], "seldonian.RL.generate_mountaincar_episodes": [[67, 3, 1, "", "main"]], "seldonian.RL.generate_simglucose_episodes": [[69, 3, 1, "", "get_max_obs"], [70, 3, 1, "", "main"]], "seldonian.RL.hyperparams_and_settings": [[72, 3, 1, "", "define_hyperparameter_and_setting_dict"]], "seldonian.candidate_selection": [[74, 0, 0, "-", "candidate_selection"]], "seldonian.candidate_selection.candidate_selection": [[75, 1, 1, "", "CandidateSelection"]], "seldonian.candidate_selection.candidate_selection.CandidateSelection": [[75, 2, 1, "", "__init__"], [75, 2, 1, "", "__repr__"], [75, 2, 1, "", "evaluate_primary_objective"], [75, 2, 1, "", "get_constraint_upper_bounds"], [75, 2, 1, "", "objective_with_barrier"], [75, 2, 1, "", "run"]], "seldonian.dataset": [[77, 1, 1, "", "DataSet"], [78, 1, 1, "", "DataSetLoader"], [79, 1, 1, "", "Episode"], [80, 1, 1, "", "RLDataSet"], [81, 1, 1, "", "SupervisedDataSet"]], "seldonian.dataset.DataSet": [[77, 2, 1, "", "__init__"], [77, 2, 1, "", "__repr__"]], "seldonian.dataset.DataSetLoader": [[78, 2, 1, "", "__init__"], [78, 2, 1, "", "__repr__"], [78, 2, 1, "", "load_RL_dataset_from_csv"], [78, 2, 1, "", "load_RL_dataset_from_episode_file"], [78, 2, 1, "", "load_supervised_dataset"]], "seldonian.dataset.Episode": [[79, 2, 1, "", "__init__"], [79, 2, 1, "", "__repr__"]], "seldonian.dataset.RLDataSet": [[80, 2, 1, "", "__init__"], [80, 2, 1, "", "__repr__"]], "seldonian.dataset.SupervisedDataSet": [[81, 2, 1, "", "__init__"], [81, 2, 1, "", "__repr__"]], "seldonian.models": [[83, 0, 0, "-", "models"], [93, 0, 0, "-", "objectives"]], "seldonian.models.models": [[84, 1, 1, "", "BoundedLinearRegressionModel"], [85, 1, 1, "", "ClassificationModel"], [86, 1, 1, "", "DummyClassifierModel"], [87, 1, 1, "", "LinearRegressionModel"], [88, 1, 1, "", "LogisticRegressionModel"], [89, 1, 1, "", "RandomClassifierModel"], [90, 1, 1, "", "RegressionModel"], [91, 1, 1, "", "SeldonianModel"], [92, 1, 1, "", "SupervisedModel"]], "seldonian.models.models.BoundedLinearRegressionModel": [[84, 2, 1, "", "__init__"], [84, 2, 1, "", "__repr__"], [84, 2, 1, "", "fit"], [84, 2, 1, "", "predict"]], "seldonian.models.models.ClassificationModel": [[85, 2, 1, "", "__init__"], [85, 2, 1, "", "__repr__"]], "seldonian.models.models.DummyClassifierModel": [[86, 2, 1, "", "__init__"], [86, 2, 1, "", "__repr__"], [86, 2, 1, "", "predict"]], "seldonian.models.models.LinearRegressionModel": [[87, 2, 1, "", "__init__"], [87, 2, 1, "", "__repr__"], [87, 2, 1, "", "fit"], [87, 2, 1, "", "predict"]], "seldonian.models.models.LogisticRegressionModel": [[88, 2, 1, "", "__init__"], [88, 2, 1, "", "__repr__"], [88, 2, 1, "", "fit"], [88, 2, 1, "", "predict"]], "seldonian.models.models.RandomClassifierModel": [[89, 2, 1, "", "__init__"], [89, 2, 1, "", "__repr__"], [89, 2, 1, "", "predict"]], "seldonian.models.models.RegressionModel": [[90, 2, 1, "", "__init__"], [90, 2, 1, "", "__repr__"]], "seldonian.models.models.SeldonianModel": [[91, 2, 1, "", "__init__"], [91, 2, 1, "", "__repr__"]], "seldonian.models.models.SupervisedModel": [[92, 2, 1, "", "__init__"], [92, 2, 1, "", "__repr__"]], "seldonian.models.objectives": [[94, 3, 1, "", "False_Negative_Rate"], [95, 3, 1, "", "False_Positive_Rate"], [96, 3, 1, "", "IS_estimate"], [97, 3, 1, "", "Mean_Error"], [98, 3, 1, "", "Mean_Squared_Error"], [99, 3, 1, "", "Negative_Rate"], [100, 3, 1, "", "Positive_Rate"], [101, 3, 1, "", "True_Negative_Rate"], [102, 3, 1, "", "True_Positive_Rate"], [103, 3, 1, "", "evaluate_statistic"], [104, 3, 1, "", "gradient_Bounded_Squared_Error"], [105, 3, 1, "", "gradient_Mean_Squared_Error"], [106, 3, 1, "", "gradient_logistic_loss"], [107, 3, 1, "", "logistic_loss"], [108, 3, 1, "", "sample_from_statistic"], [109, 3, 1, "", "vector_Error"], [110, 3, 1, "", "vector_False_Negative_Rate"], [111, 3, 1, "", "vector_False_Positive_Rate"], [112, 3, 1, "", "vector_IS_estimate"], [113, 3, 1, "", "vector_Negative_Rate"], [114, 3, 1, "", "vector_Positive_Rate"], [115, 3, 1, "", "vector_Squared_Error"], [116, 3, 1, "", "vector_True_Negative_Rate"], [117, 3, 1, "", "vector_True_Positive_Rate"], [118, 3, 1, "", "vector_logistic_loss"], [119, 3, 1, "", "vector_weighted_loss"], [120, 3, 1, "", "weighted_loss"]], "seldonian.optimizers": [[122, 0, 0, "-", "gradient_descent"]], "seldonian.optimizers.gradient_descent": [[123, 3, 1, "", "gradient_descent_adam"], [124, 3, 1, "", "setup_gradients"]], "seldonian.parse_tree": [[126, 0, 0, "-", "nodes"], [133, 0, 0, "-", "operators"], [134, 0, 0, "-", "parse_tree"]], "seldonian.parse_tree.nodes": [[127, 1, 1, "", "BaseNode"], [128, 1, 1, "", "CVaRSQeBaseNode"], [129, 1, 1, "", "ConstantNode"], [130, 1, 1, "", "InternalNode"], [131, 1, 1, "", "MEDCustomBaseNode"], [132, 1, 1, "", "Node"]], "seldonian.parse_tree.nodes.BaseNode": [[127, 2, 1, "", "__init__"], [127, 2, 1, "", "__repr__"], [127, 2, 1, "", "calculate_bounds"], [127, 2, 1, "", "calculate_data_forbound"], [127, 2, 1, "", "calculate_value"], [127, 2, 1, "", "compute_HC_lowerbound"], [127, 2, 1, "", "compute_HC_upper_and_lowerbound"], [127, 2, 1, "", "compute_HC_upperbound"], [127, 2, 1, "", "mask_dataframe"], [127, 2, 1, "", "predict_HC_lowerbound"], [127, 2, 1, "", "predict_HC_upper_and_lowerbound"], [127, 2, 1, "", "predict_HC_upperbound"], [127, 2, 1, "", "zhat"]], "seldonian.parse_tree.nodes.CVaRSQeBaseNode": [[128, 2, 1, "", "__init__"], [128, 2, 1, "", "__repr__"], [128, 2, 1, "", "calculate_bounds"], [128, 2, 1, "", "calculate_data_forbound"], [128, 2, 1, "", "calculate_value"], [128, 2, 1, "", "compute_HC_lowerbound"], [128, 2, 1, "", "compute_HC_upper_and_lowerbound"], [128, 2, 1, "", "compute_HC_upperbound"], [128, 2, 1, "", "mask_dataframe"], [128, 2, 1, "", "predict_HC_lowerbound"], [128, 2, 1, "", "predict_HC_upper_and_lowerbound"], [128, 2, 1, "", "predict_HC_upperbound"], [128, 2, 1, "", "zhat"]], "seldonian.parse_tree.nodes.ConstantNode": [[129, 2, 1, "", "__init__"], [129, 2, 1, "", "__repr__"]], "seldonian.parse_tree.nodes.InternalNode": [[130, 2, 1, "", "__init__"], [130, 2, 1, "", "__repr__"]], "seldonian.parse_tree.nodes.MEDCustomBaseNode": [[131, 2, 1, "", "__init__"], [131, 2, 1, "", "__repr__"], [131, 2, 1, "", "calculate_bounds"], [131, 2, 1, "", "calculate_data_forbound"], [131, 2, 1, "", "calculate_value"], [131, 2, 1, "", "compute_HC_lowerbound"], [131, 2, 1, "", "compute_HC_upper_and_lowerbound"], [131, 2, 1, "", "compute_HC_upperbound"], [131, 2, 1, "", "mask_dataframe"], [131, 2, 1, "", "precalculate_data"], [131, 2, 1, "", "predict_HC_lowerbound"], [131, 2, 1, "", "predict_HC_upper_and_lowerbound"], [131, 2, 1, "", "predict_HC_upperbound"], [131, 2, 1, "", "zhat"]], "seldonian.parse_tree.nodes.Node": [[132, 2, 1, "", "__init__"], [132, 2, 1, "", "__repr__"]], "seldonian.parse_tree.operators": [[133, 4, 1, "", "bounds_required_dict"], [133, 4, 1, "", "custom_base_node_dict"], [133, 4, 1, "", "measure_functions_dict"], [133, 4, 1, "", "not_supported_op_mapper"], [133, 4, 1, "", "op_mapper"]], "seldonian.parse_tree.parse_tree": [[135, 1, 1, "", "ParseTree"], [136, 3, 1, "", "make_parse_trees_from_constraints"]], "seldonian.parse_tree.parse_tree.ParseTree": [[135, 2, 1, "", "__init__"], [135, 2, 1, "", "__repr__"], [135, 2, 1, "", "_abs"], [135, 2, 1, "", "_add"], [135, 2, 1, "", "_assign_bounds_helper"], [135, 2, 1, "", "_assign_deltas_helper"], [135, 2, 1, "", "_ast2pt_node"], [135, 2, 1, "", "_ast_tree_helper"], [135, 2, 1, "", "_div"], [135, 2, 1, "", "_evaluator_helper"], [135, 2, 1, "", "_exp"], [135, 2, 1, "", "_max"], [135, 2, 1, "", "_min"], [135, 2, 1, "", "_mult"], [135, 2, 1, "", "_pow"], [135, 2, 1, "", "_preprocess_constraint_str"], [135, 2, 1, "", "_propagate_value"], [135, 2, 1, "", "_propagator_helper"], [135, 2, 1, "", "_protect_nan"], [135, 2, 1, "", "_sub"], [135, 2, 1, "", "assign_bounds_needed"], [135, 2, 1, "", "assign_deltas"], [135, 2, 1, "", "build_tree"], [135, 2, 1, "", "create_from_ast"], [135, 2, 1, "", "evaluate_constraint"], [135, 2, 1, "", "make_viz"], [135, 2, 1, "", "make_viz_helper"], [135, 2, 1, "", "propagate"], [135, 2, 1, "", "propagate_bounds"], [135, 2, 1, "", "reset_base_node_dict"]], "seldonian.safety_test": [[138, 0, 0, "-", "safety_test"]], "seldonian.safety_test.safety_test": [[139, 1, 1, "", "SafetyTest"]], "seldonian.safety_test.safety_test.SafetyTest": [[139, 2, 1, "", "__init__"], [139, 2, 1, "", "__repr__"], [139, 2, 1, "", "evaluate_primary_objective"], [139, 2, 1, "", "run"]], "seldonian.seldonian_algorithm": [[141, 1, 1, "", "SeldonianAlgorithm"]], "seldonian.seldonian_algorithm.SeldonianAlgorithm": [[141, 2, 1, "", "__init__"], [141, 2, 1, "", "__repr__"], [141, 2, 1, "", "candidate_selection"], [141, 2, 1, "", "evaluate_primary_objective"], [141, 2, 1, "", "run"], [141, 2, 1, "", "run_safety_test"], [141, 2, 1, "", "safety_test"]], "seldonian.spec": [[143, 1, 1, "", "RLSpec"], [144, 1, 1, "", "Spec"], [145, 1, 1, "", "SupervisedSpec"], [146, 3, 1, "", "createRLSpec"], [147, 3, 1, "", "createSupervisedSpec"]], "seldonian.spec.RLSpec": [[143, 2, 1, "", "__init__"], [143, 2, 1, "", "__repr__"]], "seldonian.spec.Spec": [[144, 2, 1, "", "__init__"], [144, 2, 1, "", "__repr__"]], "seldonian.spec.SupervisedSpec": [[145, 2, 1, "", "__init__"], [145, 2, 1, "", "__repr__"]], "seldonian.utils": [[149, 0, 0, "-", "RL_utils"], [153, 0, 0, "-", "io_utils"], [161, 0, 0, "-", "plot_utils"], [163, 0, 0, "-", "stats_utils"], [168, 0, 0, "-", "tutorial_utils"]], "seldonian.utils.RL_utils": [[150, 3, 1, "", "argmax_multi"], [151, 3, 1, "", "clamp"], [152, 3, 1, "", "error"]], "seldonian.utils.io_utils": [[154, 3, 1, "", "dir_path"], [155, 3, 1, "", "load_json"], [156, 3, 1, "", "load_pickle"], [157, 3, 1, "", "load_supervised_metadata"], [158, 3, 1, "", "save_json"], [159, 3, 1, "", "save_pickle"], [160, 3, 1, "", "yes_or_no_input"]], "seldonian.utils.plot_utils": [[162, 3, 1, "", "plot_gradient_descent"]], "seldonian.utils.stats_utils": [[164, 3, 1, "", "generate_data"], [165, 3, 1, "", "stddev"], [166, 3, 1, "", "tinv"], [167, 3, 1, "", "weighted_sum_gamma"]], "seldonian.utils.tutorial_utils": [[169, 3, 1, "", "generate_clipped_data"], [170, 3, 1, "", "generate_data"], [171, 3, 1, "", "make_synthetic_regression_dataset"]], "seldonian.warnings": [[173, 0, 0, "-", "custom_warnings"]], "seldonian.warnings.custom_warnings": [[174, 3, 1, "", "custom_formatwarning"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "data", "Python data"]}, "titleterms": {"seldonian": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 177], "rl": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72], "agent": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32], "base": [5, 6, 7], "fourier": [6, 7], "discrete_random_ag": [8, 9], "function_approxim": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "linear_fa": [13, 14, 15], "linear_state_action_value_fa": 15, "tabl": [16, 17, 18, 19, 177], "q_tabl": 17, "construct_q_table_from_env_descript": 19, "parameterized_non_learning_softmax_ag": [20, 21], "polici": [22, 23, 24, 25, 26, 27, 28], "discrete_action_polici": 24, "softmax": [26, 27, 28], "discretesoftmax": 27, "keyboard_gridworld": [29, 30], "mountain_car_rough_solut": [31, 32], "env_descript": [33, 34, 35, 36, 37, 38, 39], "check_space_typ": 36, "space": [37, 38, 39], "continuous_spac": 38, "discrete_spac": 39, "rl_generate_dataset_and_spec_fil": [40, 41, 42, 43, 44, 45], "get_constraint_str": 41, "get_env_kwarg": 42, "get_metadata_path": 43, "main": [44, 67, 70], "print_return_info": 45, "rl_model": [46, 47], "rl_runner": [48, 49, 50, 51, 52, 53, 54], "create_ag": 49, "create_env": 50, "run_all_tri": 51, "run_episod": 52, "run_trial": 53, "run_trial_given_agent_and_env": 54, "environ": [55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65], "gridworld": [58, 59], "mountaincar": [60, 61], "n_step_mountaincar": [62, 63], "simglucose_env": [64, 65], "simglucos": 65, "generate_mountaincar_episod": [66, 67], "generate_simglucose_episod": [68, 69, 70], "get_max_ob": 69, "hyperparams_and_set": [71, 72], "define_hyperparameter_and_setting_dict": 72, "candidate_select": [73, 74, 75], "candidateselect": 75, "dataset": [76, 77, 78, 79, 80, 81, 178], "datasetload": 78, "episod": 79, "rldataset": 80, "superviseddataset": 81, "model": [82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 178], "boundedlinearregressionmodel": 84, "classificationmodel": 85, "dummyclassifiermodel": 86, "linearregressionmodel": 87, "logisticregressionmodel": 88, "randomclassifiermodel": 89, "regressionmodel": 90, "seldonianmodel": 91, "supervisedmodel": 92, "object": [93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 178], "false_negative_r": 94, "false_positive_r": 95, "is_estim": 96, "mean_error": 97, "mean_squared_error": 98, "negative_r": 99, "positive_r": 100, "true_negative_r": 101, "true_positive_r": 102, "evaluate_statist": 103, "gradient_bounded_squared_error": 104, "gradient_mean_squared_error": 105, "gradient_logistic_loss": 106, "logistic_loss": 107, "sample_from_statist": 108, "vector_error": 109, "vector_false_negative_r": 110, "vector_false_positive_r": 111, "vector_is_estim": 112, "vector_negative_r": 113, "vector_positive_r": 114, "vector_squared_error": 115, "vector_true_negative_r": 116, "vector_true_positive_r": 117, "vector_logistic_loss": 118, "vector_weighted_loss": 119, "weighted_loss": 120, "optim": [121, 122, 123, 124], "gradient_desc": [122, 123, 124], "gradient_descent_adam": 123, "setup_gradi": 124, "parse_tre": [125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], "node": [126, 127, 128, 129, 130, 131, 132], "basenod": 127, "cvarsqebasenod": 128, "constantnod": 129, "internalnod": 130, "medcustombasenod": 131, "oper": 133, "parsetre": 135, "make_parse_trees_from_constraint": 136, "safety_test": [137, 138, 139], "safetytest": 139, "seldonian_algorithm": [140, 141], "seldonianalgorithm": 141, "spec": [142, 143, 144, 145, 146, 147, 178], "rlspec": 143, "supervisedspec": 145, "createrlspec": 146, "createsupervisedspec": 147, "util": [148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171], "rl_util": [149, 150, 151, 152], "argmax_multi": 150, "clamp": 151, "error": 152, "io_util": [153, 154, 155, 156, 157, 158, 159, 160], "dir_path": 154, "load_json": 155, "load_pickl": 156, "load_supervised_metadata": 157, "save_json": 158, "save_pickl": 159, "yes_or_no_input": 160, "plot_util": [161, 162], "plot_gradient_desc": 162, "stats_util": [163, 164, 165, 166, 167], "generate_data": [164, 170], "stddev": 165, "tinv": 166, "weighted_sum_gamma": 167, "tutorial_util": [168, 169, 170, 171], "generate_clipped_data": 169, "make_synthetic_regression_dataset": 171, "warn": [172, 173, 174], "custom_warn": [173, 174], "custom_formatwarn": 174, "api": 175, "get": 176, "start": 176, "instal": 176, "A": 176, "first": 176, "tutori": 176, "engin": 177, "document": 177, "content": 177, "overview": 178, "interfac": 178, "behavior": 178, "constraint": 178, "string": 178, "what": 178, "doe": 178, "sa": 178, "run": 178, "do": 178, "candid": 178, "select": 178, "safeti": 178, "test": 178}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 56}})